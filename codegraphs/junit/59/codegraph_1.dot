digraph "preferFast#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@preferFast" shape=ellipse]
2 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
3 [label="4:CtPackageReferenceImpl@" shape=ellipse]
4 [label="4:CtExecutableReferenceImpl@aClass(java.lang.Class)" shape=ellipse]
5 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@Class<TwoUnEqualTests>" shape=ellipse]
8 [label="4:CtVirtualElement@aClass" shape=ellipse]
9 [label="4:CtTypeAccessImpl@Request" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
11 [label="4:CtFieldReferenceImpl@MaxStarterTest.TwoUnEqualTests.class" shape=ellipse]
12 [label="4:CtTypeReferenceImpl@TwoUnEqualTests" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@Class" shape=ellipse]
14 [label="4:CtFieldReadImpl@TwoUnEqualTests.class" shape=ellipse]
15 [label="4:CtTypeAccessImpl@TwoUnEqualTests" shape=ellipse]
16 [label="4:CtInvocationImpl@Request.aClass(TwoUnEqualTests.class)" shape=ellipse]
17 [label="4:CtVirtualElement@request" shape=ellipse]
18 [label="4:CtLocalVariableImpl@Request request = Request.aClass(TwoUnEqualTests.class)" shape=ellipse]
19 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
20 [label="5:CtPackageReferenceImpl@" shape=ellipse]
21 [label="5:CtExecutableReferenceImpl@createFresh()" shape=ellipse]
22 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
24 [label="5:CtVirtualElement@createFresh" shape=ellipse]
25 [label="5:CtTypeAccessImpl@MaxCore" shape=ellipse]
26 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
27 [label="5:CtInvocationImpl@MaxCore.createFresh()" shape=ellipse]
28 [label="5:CtVirtualElement@max" shape=ellipse]
29 [label="5:CtLocalVariableImpl@MaxCore max = MaxCore.createFresh()" shape=ellipse]
30 [label="6:CtExecutableReferenceImpl@run(Request)" shape=ellipse]
31 [label="6:CtTypeReferenceImpl@MaxCore" shape=ellipse]
32 [label="6:CtTypeReferenceImpl@Request" shape=ellipse]
33 [label="6:CtVirtualElement@run" shape=ellipse]
34 [label="6:CtVariableReadImpl@max" shape=ellipse]
35 [label="6:CtLocalVariableReferenceImpl@max" shape=ellipse]
36 [label="6:CtVariableReadImpl@request" shape=ellipse]
37 [label="6:CtLocalVariableReferenceImpl@request" shape=ellipse]
38 [label="6:CtInvocationImpl@max.run(request)" shape=ellipse]
39 [label="7:CtTypeReferenceImpl@Description" shape=ellipse]
40 [label="7:CtPackageReferenceImpl@" shape=ellipse]
41 [label="7:CtExecutableReferenceImpl@get(int)" shape=ellipse]
42 [label="7:CtTypeReferenceImpl@Description" shape=ellipse]
43 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
44 [label="7:CtVirtualElement@get" shape=ellipse]
45 [label="7:CtExecutableReferenceImpl@sort(Request)" shape=ellipse]
46 [label="7:CtTypeReferenceImpl@MaxCore" shape=ellipse]
47 [label="7:CtTypeReferenceImpl@Request" shape=ellipse]
48 [label="7:CtVirtualElement@sort" shape=ellipse]
49 [label="7:CtVariableReadImpl@max" shape=ellipse]
50 [label="7:CtLocalVariableReferenceImpl@max" shape=ellipse]
51 [label="7:CtVariableReadImpl@request" shape=ellipse]
52 [label="7:CtLocalVariableReferenceImpl@request" shape=ellipse]
53 [label="7:CtInvocationImpl@max.sort(request)" shape=ellipse]
54 [label="7:CtLiteralImpl@1" shape=ellipse]
55 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
56 [label="7:CtInvocationImpl@max.sort(request).get(1)" shape=ellipse]
57 [label="7:CtVirtualElement@thing" shape=ellipse]
58 [label="7:CtLocalVariableImpl@Description thing = max.sort(request).get(1)" shape=ellipse]
59 [label="8:CtExecutableReferenceImpl@assertEquals(<unknown>,<unknown>)" shape=ellipse]
60 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
61 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
62 [label="8:CtVirtualElement@assertEquals" shape=ellipse]
63 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
64 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
65 [label="8:CtThisAccessImpl@" shape=ellipse]
66 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
67 [label="9:CtExecutableReferenceImpl@createTestDescription(java.lang.Class,java.lang.String)" shape=ellipse]
68 [label="9:CtTypeReferenceImpl@Description" shape=ellipse]
69 [label="9:CtTypeReferenceImpl@Class<TwoUnEqualTests>" shape=ellipse]
70 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
71 [label="9:CtVirtualElement@createTestDescription" shape=ellipse]
72 [label="9:CtTypeAccessImpl@Description" shape=ellipse]
73 [label="9:CtTypeReferenceImpl@Description" shape=ellipse]
74 [label="9:CtFieldReferenceImpl@MaxStarterTest.TwoUnEqualTests.class" shape=ellipse]
75 [label="9:CtTypeReferenceImpl@TwoUnEqualTests" shape=ellipse]
76 [label="9:CtTypeReferenceImpl@Class" shape=ellipse]
77 [label="9:CtFieldReadImpl@TwoUnEqualTests.class" shape=ellipse]
78 [label="9:CtTypeAccessImpl@TwoUnEqualTests" shape=ellipse]
79 [label="9:CtLiteralImpl@\"slow\"" shape=ellipse]
80 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
81 [label="9:CtInvocationImpl@Description.createTestDescription(TwoUnEqualTests.class, \"slow\")" shape=ellipse]
82 [label="9:CtVariableReadImpl@thing" shape=ellipse]
83 [label="9:CtLocalVariableReferenceImpl@thing" shape=ellipse]
84 [label="8:CtInvocationImpl@assertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing)" shape=ellipse]
85 [label="3:CtBlockImpl@\{
    Request request = Request.aClass(TwoUnEqualTests.class);
    MaxCore max = MaxCore.createFresh();
    max.run(request);
    Description thing = max.sort(request).get(1);
    assertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);
\}" shape=ellipse]
86 [label="3:CtMethodImpl@@Test
public void preferFast() \{
    Request request = Request.aClass(TwoUnEqualTests.class);
    MaxCore max = MaxCore.createFresh();
    max.run(request);
    Description thing = max.sort(request).get(1);
    assertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);
\}" shape=ellipse]
87 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
88 [label="7:Update@UPDATE" shape=ellipse]
89 [label="7:CtPackageReferenceImpl@" shape=ellipse]
90 [label="7:CtTypeReferenceImpl@MaxCore" shape=ellipse]
91 [label="7:CtLocalVariableReferenceImpl@max" shape=ellipse]
92 [label="7:CtVariableReadImpl@max" shape=ellipse]
93 [label="7:CtPackageReferenceImpl@" shape=ellipse]
94 [label="7:CtTypeReferenceImpl@MaxCore" shape=ellipse]
95 [label="7:CtPackageReferenceImpl@" shape=ellipse]
96 [label="7:CtTypeReferenceImpl@Request" shape=ellipse]
97 [label="7:CtExecutableReferenceImpl@sortedLeavesForTest(Request)" shape=ellipse]
98 [label="7:CtPackageReferenceImpl@" shape=ellipse]
99 [label="7:CtTypeReferenceImpl@Request" shape=ellipse]
100 [label="7:CtLocalVariableReferenceImpl@request" shape=ellipse]
101 [label="7:CtVariableReadImpl@request" shape=ellipse]
102 [label="7:CtInvocationImpl@max.sortedLeavesForTest(request)" shape=ellipse]
103 [label="7:CtVirtualElement@sortedLeavesForTest" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
4 -> 7 [label="AST"];
9 -> 10 [label="AST"];
11 -> 12 [label="AST"];
11 -> 13 [label="AST"];
14 -> 15 [label="AST"];
14 -> 11 [label="AST"];
14 -> 17 [label="Data Dep"];
16 -> 8 [label="AST"];
16 -> 9 [label="AST"];
16 -> 4 [label="AST"];
16 -> 14 [label="AST"];
17 -> 36 [label="Define-Use"];
17 -> 51 [label="Define-Use"];
18 -> 17 [label="AST"];
18 -> 2 [label="AST"];
18 -> 16 [label="AST"];
19 -> 20 [label="AST"];
21 -> 22 [label="AST"];
21 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 24 [label="AST"];
27 -> 25 [label="AST"];
27 -> 21 [label="AST"];
28 -> 34 [label="Define-Use"];
28 -> 49 [label="Define-Use"];
29 -> 28 [label="AST"];
29 -> 19 [label="AST"];
29 -> 27 [label="AST"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
38 -> 33 [label="AST"];
38 -> 34 [label="AST"];
38 -> 30 [label="AST"];
38 -> 36 [label="AST"];
39 -> 40 [label="AST"];
41 -> 42 [label="AST"];
41 -> 43 [label="AST"];
45 -> 46 [label="AST"];
45 -> 47 [label="AST"];
49 -> 50 [label="AST"];
49 -> 57 [label="Data Dep"];
51 -> 52 [label="AST"];
51 -> 57 [label="Data Dep"];
53 -> 48 [label="AST"];
53 -> 49 [label="AST"];
53 -> 45 [label="AST"];
53 -> 51 [label="AST"];
53 -> 88 [label="Action"];
54 -> 55 [label="AST"];
56 -> 44 [label="AST"];
56 -> 53 [label="AST"];
56 -> 41 [label="AST"];
56 -> 54 [label="AST"];
57 -> 82 [label="Define-Use"];
58 -> 57 [label="AST"];
58 -> 39 [label="AST"];
58 -> 56 [label="AST"];
59 -> 60 [label="AST"];
59 -> 61 [label="AST"];
63 -> 64 [label="AST"];
65 -> 66 [label="AST"];
65 -> 63 [label="AST"];
67 -> 68 [label="AST"];
67 -> 69 [label="AST"];
67 -> 70 [label="AST"];
72 -> 73 [label="AST"];
74 -> 75 [label="AST"];
74 -> 76 [label="AST"];
77 -> 78 [label="AST"];
77 -> 74 [label="AST"];
79 -> 80 [label="AST"];
81 -> 71 [label="AST"];
81 -> 72 [label="AST"];
81 -> 67 [label="AST"];
81 -> 77 [label="AST"];
81 -> 79 [label="AST"];
82 -> 83 [label="AST"];
84 -> 62 [label="AST"];
84 -> 65 [label="AST"];
84 -> 59 [label="AST"];
84 -> 81 [label="AST"];
84 -> 82 [label="AST"];
85 -> 18 [label="AST"];
85 -> 29 [label="AST"];
85 -> 38 [label="AST"];
85 -> 58 [label="AST"];
85 -> 84 [label="AST"];
86 -> 1 [label="AST"];
86 -> 87 [label="AST"];
86 -> 0 [label="AST"];
86 -> 85 [label="AST"];
88 -> 102 [label="Action"];
90 -> 89 [label="AST"];
91 -> 90 [label="AST"];
92 -> 91 [label="AST"];
94 -> 93 [label="AST"];
96 -> 95 [label="AST"];
97 -> 94 [label="AST"];
97 -> 96 [label="AST"];
99 -> 98 [label="AST"];
100 -> 99 [label="AST"];
101 -> 100 [label="AST"];
102 -> 103 [label="AST"];
102 -> 92 [label="AST"];
102 -> 97 [label="AST"];
102 -> 101 [label="AST"];
}