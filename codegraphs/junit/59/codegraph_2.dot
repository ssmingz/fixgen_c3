digraph "twoTestsNotRunComeBackInRandomOrder#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@twoTestsNotRunComeBackInRandomOrder" shape=ellipse]
2 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
3 [label="4:CtPackageReferenceImpl@" shape=ellipse]
4 [label="4:CtExecutableReferenceImpl@aClass(java.lang.Class)" shape=ellipse]
5 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@Class<TwoTests>" shape=ellipse]
8 [label="4:CtVirtualElement@aClass" shape=ellipse]
9 [label="4:CtTypeAccessImpl@Request" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@Request" shape=ellipse]
11 [label="4:CtFieldReferenceImpl@MaxStarterTest.TwoTests.class" shape=ellipse]
12 [label="4:CtTypeReferenceImpl@TwoTests" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@Class" shape=ellipse]
14 [label="4:CtFieldReadImpl@TwoTests.class" shape=ellipse]
15 [label="4:CtTypeAccessImpl@TwoTests" shape=ellipse]
16 [label="4:CtInvocationImpl@Request.aClass(TwoTests.class)" shape=ellipse]
17 [label="4:CtVirtualElement@request" shape=ellipse]
18 [label="4:CtLocalVariableImpl@Request request = Request.aClass(TwoTests.class)" shape=ellipse]
19 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
20 [label="5:CtPackageReferenceImpl@" shape=ellipse]
21 [label="5:CtExecutableReferenceImpl@createFresh()" shape=ellipse]
22 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
24 [label="5:CtVirtualElement@createFresh" shape=ellipse]
25 [label="5:CtTypeAccessImpl@MaxCore" shape=ellipse]
26 [label="5:CtTypeReferenceImpl@MaxCore" shape=ellipse]
27 [label="5:CtInvocationImpl@MaxCore.createFresh()" shape=ellipse]
28 [label="5:CtVirtualElement@max" shape=ellipse]
29 [label="5:CtLocalVariableImpl@MaxCore max = MaxCore.createFresh()" shape=ellipse]
30 [label="6:CtTypeReferenceImpl@List<Description>" shape=ellipse]
31 [label="6:CtPackageReferenceImpl@" shape=ellipse]
32 [label="6:CtTypeReferenceImpl@Description" shape=ellipse]
33 [label="6:CtExecutableReferenceImpl@sort(Request)" shape=ellipse]
34 [label="6:CtTypeReferenceImpl@MaxCore" shape=ellipse]
35 [label="6:CtTypeReferenceImpl@List<Description>" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@Request" shape=ellipse]
37 [label="6:CtVirtualElement@sort" shape=ellipse]
38 [label="6:CtVariableReadImpl@max" shape=ellipse]
39 [label="6:CtLocalVariableReferenceImpl@max" shape=ellipse]
40 [label="6:CtVariableReadImpl@request" shape=ellipse]
41 [label="6:CtLocalVariableReferenceImpl@request" shape=ellipse]
42 [label="6:CtInvocationImpl@max.sort(request)" shape=ellipse]
43 [label="6:CtVirtualElement@things" shape=ellipse]
44 [label="6:CtLocalVariableImpl@List<Description> things = max.sort(request)" shape=ellipse]
45 [label="7:CtTypeReferenceImpl@Description" shape=ellipse]
46 [label="7:CtPackageReferenceImpl@" shape=ellipse]
47 [label="8:CtExecutableReferenceImpl@createTestDescription(java.lang.Class,java.lang.String)" shape=ellipse]
48 [label="8:CtTypeReferenceImpl@Description" shape=ellipse]
49 [label="8:CtTypeReferenceImpl@Description" shape=ellipse]
50 [label="8:CtTypeReferenceImpl@Class<TwoTests>" shape=ellipse]
51 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
52 [label="8:CtVirtualElement@createTestDescription" shape=ellipse]
53 [label="8:CtTypeAccessImpl@Description" shape=ellipse]
54 [label="8:CtTypeReferenceImpl@Description" shape=ellipse]
55 [label="8:CtFieldReferenceImpl@MaxStarterTest.TwoTests.class" shape=ellipse]
56 [label="8:CtTypeReferenceImpl@TwoTests" shape=ellipse]
57 [label="8:CtTypeReferenceImpl@Class" shape=ellipse]
58 [label="8:CtFieldReadImpl@TwoTests.class" shape=ellipse]
59 [label="8:CtTypeAccessImpl@TwoTests" shape=ellipse]
60 [label="8:CtLiteralImpl@\"succeed\"" shape=ellipse]
61 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
62 [label="8:CtInvocationImpl@Description.createTestDescription(TwoTests.class, \"succeed\")" shape=ellipse]
63 [label="7:CtVirtualElement@succeed" shape=ellipse]
64 [label="7:CtLocalVariableImpl@Description succeed = Description.createTestDescription(TwoTests.class, \"succeed\")" shape=ellipse]
65 [label="9:CtTypeReferenceImpl@Description" shape=ellipse]
66 [label="9:CtPackageReferenceImpl@" shape=ellipse]
67 [label="10:CtExecutableReferenceImpl@createTestDescription(java.lang.Class,java.lang.String)" shape=ellipse]
68 [label="10:CtTypeReferenceImpl@Description" shape=ellipse]
69 [label="10:CtTypeReferenceImpl@Description" shape=ellipse]
70 [label="10:CtTypeReferenceImpl@Class<TwoTests>" shape=ellipse]
71 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
72 [label="10:CtVirtualElement@createTestDescription" shape=ellipse]
73 [label="10:CtTypeAccessImpl@Description" shape=ellipse]
74 [label="10:CtTypeReferenceImpl@Description" shape=ellipse]
75 [label="10:CtFieldReferenceImpl@MaxStarterTest.TwoTests.class" shape=ellipse]
76 [label="10:CtTypeReferenceImpl@TwoTests" shape=ellipse]
77 [label="10:CtTypeReferenceImpl@Class" shape=ellipse]
78 [label="10:CtFieldReadImpl@TwoTests.class" shape=ellipse]
79 [label="10:CtTypeAccessImpl@TwoTests" shape=ellipse]
80 [label="10:CtLiteralImpl@\"dontSucceed\"" shape=ellipse]
81 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
82 [label="10:CtInvocationImpl@Description.createTestDescription(TwoTests.class, \"dontSucceed\")" shape=ellipse]
83 [label="9:CtVirtualElement@dontSucceed" shape=ellipse]
84 [label="9:CtLocalVariableImpl@Description dontSucceed = Description.createTestDescription(TwoTests.class, \"dontSucceed\")" shape=ellipse]
85 [label="11:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
86 [label="11:CtTypeReferenceImpl@null" shape=ellipse]
87 [label="11:CtVirtualElement@assertTrue" shape=ellipse]
88 [label="11:CtTypeAccessImpl@PlaceHold" shape=ellipse]
89 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
90 [label="11:CtThisAccessImpl@" shape=ellipse]
91 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
92 [label="11:CtExecutableReferenceImpl@contains(Description)" shape=ellipse]
93 [label="11:CtTypeReferenceImpl@List<Description>" shape=ellipse]
94 [label="11:CtTypeReferenceImpl@Description" shape=ellipse]
95 [label="11:CtVirtualElement@contains" shape=ellipse]
96 [label="11:CtVariableReadImpl@things" shape=ellipse]
97 [label="11:CtLocalVariableReferenceImpl@things" shape=ellipse]
98 [label="11:CtVariableReadImpl@succeed" shape=ellipse]
99 [label="11:CtLocalVariableReferenceImpl@succeed" shape=ellipse]
100 [label="11:CtInvocationImpl@things.contains(succeed)" shape=ellipse]
101 [label="11:CtInvocationImpl@assertTrue(things.contains(succeed))" shape=ellipse]
102 [label="12:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
103 [label="12:CtTypeReferenceImpl@null" shape=ellipse]
104 [label="12:CtVirtualElement@assertTrue" shape=ellipse]
105 [label="12:CtTypeAccessImpl@PlaceHold" shape=ellipse]
106 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
107 [label="12:CtThisAccessImpl@" shape=ellipse]
108 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
109 [label="12:CtExecutableReferenceImpl@contains(Description)" shape=ellipse]
110 [label="12:CtTypeReferenceImpl@List<Description>" shape=ellipse]
111 [label="12:CtTypeReferenceImpl@Description" shape=ellipse]
112 [label="12:CtVirtualElement@contains" shape=ellipse]
113 [label="12:CtVariableReadImpl@things" shape=ellipse]
114 [label="12:CtLocalVariableReferenceImpl@things" shape=ellipse]
115 [label="12:CtVariableReadImpl@dontSucceed" shape=ellipse]
116 [label="12:CtLocalVariableReferenceImpl@dontSucceed" shape=ellipse]
117 [label="12:CtInvocationImpl@things.contains(dontSucceed)" shape=ellipse]
118 [label="12:CtInvocationImpl@assertTrue(things.contains(dontSucceed))" shape=ellipse]
119 [label="13:CtExecutableReferenceImpl@assertEquals(int,<unknown>)" shape=ellipse]
120 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
121 [label="13:CtTypeReferenceImpl@null" shape=ellipse]
122 [label="13:CtVirtualElement@assertEquals" shape=ellipse]
123 [label="13:CtTypeAccessImpl@PlaceHold" shape=ellipse]
124 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
125 [label="13:CtThisAccessImpl@" shape=ellipse]
126 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
127 [label="13:CtLiteralImpl@2" shape=ellipse]
128 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
129 [label="13:CtExecutableReferenceImpl@size()" shape=ellipse]
130 [label="13:CtTypeReferenceImpl@List<Description>" shape=ellipse]
131 [label="13:CtVirtualElement@size" shape=ellipse]
132 [label="13:CtVariableReadImpl@things" shape=ellipse]
133 [label="13:CtLocalVariableReferenceImpl@things" shape=ellipse]
134 [label="13:CtInvocationImpl@things.size()" shape=ellipse]
135 [label="13:CtInvocationImpl@assertEquals(2, things.size())" shape=ellipse]
136 [label="3:CtBlockImpl@\{
    Request request = Request.aClass(TwoTests.class);
    MaxCore max = MaxCore.createFresh();
    List<Description> things = max.sort(request);
    Description succeed = Description.createTestDescription(TwoTests.class, \"succeed\");
    Description dontSucceed = Description.createTestDescription(TwoTests.class, \"dontSucceed\");
    assertTrue(things.contains(succeed));
    assertTrue(things.contains(dontSucceed));
    assertEquals(2, things.size());
\}" shape=ellipse]
137 [label="3:CtMethodImpl@@Test
public void twoTestsNotRunComeBackInRandomOrder() \{
    Request request = Request.aClass(TwoTests.class);
    MaxCore max = MaxCore.createFresh();
    List<Description> things = max.sort(request);
    Description succeed = Description.createTestDescription(TwoTests.class, \"succeed\");
    Description dontSucceed = Description.createTestDescription(TwoTests.class, \"dontSucceed\");
    assertTrue(things.contains(succeed));
    assertTrue(things.contains(dontSucceed));
    assertEquals(2, things.size());
\}" shape=ellipse]
138 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
139 [label="6:Update@UPDATE" shape=ellipse]
140 [label="6:CtPackageReferenceImpl@" shape=ellipse]
141 [label="6:CtTypeReferenceImpl@MaxCore" shape=ellipse]
142 [label="6:CtLocalVariableReferenceImpl@max" shape=ellipse]
143 [label="6:CtVariableReadImpl@max" shape=ellipse]
144 [label="6:CtPackageReferenceImpl@" shape=ellipse]
145 [label="6:CtTypeReferenceImpl@MaxCore" shape=ellipse]
146 [label="6:CtPackageReferenceImpl@" shape=ellipse]
147 [label="6:CtPackageReferenceImpl@" shape=ellipse]
148 [label="6:CtTypeReferenceImpl@Description" shape=ellipse]
149 [label="6:CtTypeReferenceImpl@List<Description>" shape=ellipse]
150 [label="6:CtPackageReferenceImpl@" shape=ellipse]
151 [label="6:CtTypeReferenceImpl@Request" shape=ellipse]
152 [label="6:CtExecutableReferenceImpl@sortedLeavesForTest(Request)" shape=ellipse]
153 [label="6:CtPackageReferenceImpl@" shape=ellipse]
154 [label="6:CtTypeReferenceImpl@Request" shape=ellipse]
155 [label="6:CtLocalVariableReferenceImpl@request" shape=ellipse]
156 [label="6:CtVariableReadImpl@request" shape=ellipse]
157 [label="6:CtInvocationImpl@max.sortedLeavesForTest(request)" shape=ellipse]
158 [label="6:CtVirtualElement@sortedLeavesForTest" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
4 -> 7 [label="AST"];
9 -> 10 [label="AST"];
11 -> 12 [label="AST"];
11 -> 13 [label="AST"];
14 -> 15 [label="AST"];
14 -> 11 [label="AST"];
14 -> 17 [label="Data Dep"];
16 -> 8 [label="AST"];
16 -> 9 [label="AST"];
16 -> 4 [label="AST"];
16 -> 14 [label="AST"];
17 -> 40 [label="Define-Use"];
18 -> 17 [label="AST"];
18 -> 2 [label="AST"];
18 -> 16 [label="AST"];
19 -> 20 [label="AST"];
21 -> 22 [label="AST"];
21 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 24 [label="AST"];
27 -> 25 [label="AST"];
27 -> 21 [label="AST"];
28 -> 38 [label="Define-Use"];
29 -> 28 [label="AST"];
29 -> 19 [label="AST"];
29 -> 27 [label="AST"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
33 -> 34 [label="AST"];
33 -> 35 [label="AST"];
33 -> 36 [label="AST"];
38 -> 39 [label="AST"];
38 -> 43 [label="Data Dep"];
40 -> 41 [label="AST"];
40 -> 43 [label="Data Dep"];
42 -> 37 [label="AST"];
42 -> 38 [label="AST"];
42 -> 33 [label="AST"];
42 -> 40 [label="AST"];
42 -> 139 [label="Action"];
43 -> 96 [label="Define-Use"];
43 -> 113 [label="Define-Use"];
43 -> 132 [label="Define-Use"];
44 -> 43 [label="AST"];
44 -> 30 [label="AST"];
44 -> 42 [label="AST"];
45 -> 46 [label="AST"];
47 -> 48 [label="AST"];
47 -> 49 [label="AST"];
47 -> 50 [label="AST"];
47 -> 51 [label="AST"];
53 -> 54 [label="AST"];
55 -> 56 [label="AST"];
55 -> 57 [label="AST"];
58 -> 59 [label="AST"];
58 -> 55 [label="AST"];
58 -> 63 [label="Data Dep"];
60 -> 61 [label="AST"];
62 -> 52 [label="AST"];
62 -> 53 [label="AST"];
62 -> 47 [label="AST"];
62 -> 58 [label="AST"];
62 -> 60 [label="AST"];
63 -> 98 [label="Define-Use"];
64 -> 63 [label="AST"];
64 -> 45 [label="AST"];
64 -> 62 [label="AST"];
65 -> 66 [label="AST"];
67 -> 68 [label="AST"];
67 -> 69 [label="AST"];
67 -> 70 [label="AST"];
67 -> 71 [label="AST"];
73 -> 74 [label="AST"];
75 -> 76 [label="AST"];
75 -> 77 [label="AST"];
78 -> 79 [label="AST"];
78 -> 75 [label="AST"];
78 -> 83 [label="Data Dep"];
80 -> 81 [label="AST"];
82 -> 72 [label="AST"];
82 -> 73 [label="AST"];
82 -> 67 [label="AST"];
82 -> 78 [label="AST"];
82 -> 80 [label="AST"];
83 -> 115 [label="Define-Use"];
84 -> 83 [label="AST"];
84 -> 65 [label="AST"];
84 -> 82 [label="AST"];
85 -> 86 [label="AST"];
88 -> 89 [label="AST"];
90 -> 91 [label="AST"];
90 -> 88 [label="AST"];
92 -> 93 [label="AST"];
92 -> 94 [label="AST"];
96 -> 97 [label="AST"];
98 -> 99 [label="AST"];
100 -> 95 [label="AST"];
100 -> 96 [label="AST"];
100 -> 92 [label="AST"];
100 -> 98 [label="AST"];
101 -> 87 [label="AST"];
101 -> 90 [label="AST"];
101 -> 85 [label="AST"];
101 -> 100 [label="AST"];
102 -> 103 [label="AST"];
105 -> 106 [label="AST"];
107 -> 108 [label="AST"];
107 -> 105 [label="AST"];
109 -> 110 [label="AST"];
109 -> 111 [label="AST"];
113 -> 114 [label="AST"];
115 -> 116 [label="AST"];
117 -> 112 [label="AST"];
117 -> 113 [label="AST"];
117 -> 109 [label="AST"];
117 -> 115 [label="AST"];
118 -> 104 [label="AST"];
118 -> 107 [label="AST"];
118 -> 102 [label="AST"];
118 -> 117 [label="AST"];
119 -> 120 [label="AST"];
119 -> 121 [label="AST"];
123 -> 124 [label="AST"];
125 -> 126 [label="AST"];
125 -> 123 [label="AST"];
127 -> 128 [label="AST"];
129 -> 130 [label="AST"];
132 -> 133 [label="AST"];
134 -> 131 [label="AST"];
134 -> 132 [label="AST"];
134 -> 129 [label="AST"];
135 -> 122 [label="AST"];
135 -> 125 [label="AST"];
135 -> 119 [label="AST"];
135 -> 127 [label="AST"];
135 -> 134 [label="AST"];
136 -> 18 [label="AST"];
136 -> 29 [label="AST"];
136 -> 44 [label="AST"];
136 -> 64 [label="AST"];
136 -> 84 [label="AST"];
136 -> 101 [label="AST"];
136 -> 118 [label="AST"];
136 -> 135 [label="AST"];
137 -> 1 [label="AST"];
137 -> 138 [label="AST"];
137 -> 0 [label="AST"];
137 -> 136 [label="AST"];
139 -> 157 [label="Action"];
141 -> 140 [label="AST"];
142 -> 141 [label="AST"];
143 -> 142 [label="AST"];
145 -> 144 [label="AST"];
148 -> 147 [label="AST"];
149 -> 146 [label="AST"];
149 -> 148 [label="AST"];
151 -> 150 [label="AST"];
152 -> 145 [label="AST"];
152 -> 149 [label="AST"];
152 -> 151 [label="AST"];
154 -> 153 [label="AST"];
155 -> 154 [label="AST"];
156 -> 155 [label="AST"];
157 -> 158 [label="AST"];
157 -> 143 [label="AST"];
157 -> 152 [label="AST"];
157 -> 156 [label="AST"];
}