digraph "shouldThrowException#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@shouldThrowException" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@FilterFactoryParams(java.lang.String)" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
9 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
10 [label="4:CtLiteralImpl@\"NonExistentFilter\"" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
12 [label="4:CtConstructorCallImpl@new FilterFactoryParams(\"NonExistentFilter\")" shape=ellipse]
13 [label="4:CtVirtualElement@params" shape=ellipse]
14 [label="4:CtLocalVariableImpl@FilterFactoryParams params = new FilterFactoryParams(\"NonExistentFilter\")" shape=ellipse]
15 [label="5:CtExecutableReferenceImpl@expect(java.lang.Class)" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@expectedException" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@Class<FilterNotCreatedException>" shape=ellipse]
18 [label="5:CtVirtualElement@expect" shape=ellipse]
19 [label="5:CtFieldReferenceImpl@expectedException" shape=ellipse]
20 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
21 [label="5:CtFieldReadImpl@expectedException" shape=ellipse]
22 [label="5:CtFieldReferenceImpl@FilterNotCreatedException.class" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@FilterNotCreatedException" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@Class" shape=ellipse]
25 [label="5:CtFieldReadImpl@FilterNotCreatedException.class" shape=ellipse]
26 [label="5:CtTypeAccessImpl@FilterNotCreatedException" shape=ellipse]
27 [label="5:CtInvocationImpl@expectedException.expect(FilterNotCreatedException.class)" shape=ellipse]
28 [label="6:CtExecutableReferenceImpl@createFilter(FilterFactoryParams)" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@categoryFilterFactory" shape=ellipse]
30 [label="6:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
31 [label="6:CtVirtualElement@createFilter" shape=ellipse]
32 [label="6:CtFieldReferenceImpl@categoryFilterFactory" shape=ellipse]
33 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
34 [label="6:CtFieldReadImpl@categoryFilterFactory" shape=ellipse]
35 [label="6:CtVariableReadImpl@params" shape=ellipse]
36 [label="6:CtLocalVariableReferenceImpl@params" shape=ellipse]
37 [label="6:CtInvocationImpl@categoryFilterFactory.createFilter(params)" shape=ellipse]
38 [label="3:CtBlockImpl@\{
    FilterFactoryParams params = new FilterFactoryParams(\"NonExistentFilter\");
    expectedException.expect(FilterNotCreatedException.class);
    categoryFilterFactory.createFilter(params);
\}" shape=ellipse]
39 [label="3:CtMethodImpl@@Test
public void shouldThrowException() throws Exception \{
    FilterFactoryParams params = new FilterFactoryParams(\"NonExistentFilter\");
    expectedException.expect(FilterNotCreatedException.class);
    categoryFilterFactory.createFilter(params);
\}" shape=ellipse]
40 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
41 [label="4:Update@UPDATE" shape=ellipse]
42 [label="5:CtPackageReferenceImpl@" shape=ellipse]
43 [label="5:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
44 [label="5:CtPackageReferenceImpl@" shape=ellipse]
45 [label="5:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
46 [label="5:CtExecutableReferenceImpl@FilterFactoryParams()" shape=ellipse]
47 [label="6:CtPackageReferenceImpl@" shape=ellipse]
48 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
49 [label="6:CtPackageReferenceImpl@" shape=ellipse]
50 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
51 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
52 [label="6:CtThisAccessImpl@" shape=ellipse]
53 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
54 [label="6:CtExecutableReferenceImpl@createSuiteDescription(<unknown>)" shape=ellipse]
55 [label="6:CtPackageReferenceImpl@" shape=ellipse]
56 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
57 [label="6:CtFieldReferenceImpl@testName" shape=ellipse]
58 [label="6:CtFieldReadImpl@testName" shape=ellipse]
59 [label="6:CtPackageReferenceImpl@" shape=ellipse]
60 [label="6:CtTypeReferenceImpl@testName" shape=ellipse]
61 [label="6:CtExecutableReferenceImpl@getMethodName()" shape=ellipse]
62 [label="6:CtInvocationImpl@testName.getMethodName()" shape=ellipse]
63 [label="6:CtVirtualElement@getMethodName" shape=ellipse]
64 [label="6:CtInvocationImpl@createSuiteDescription(testName.getMethodName())" shape=ellipse]
65 [label="6:CtVirtualElement@createSuiteDescription" shape=ellipse]
66 [label="6:CtPackageReferenceImpl@java.lang" shape=ellipse]
67 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
68 [label="6:CtLiteralImpl@\"NonExistentFilter\"" shape=ellipse]
69 [label="5:CtConstructorCallImpl@new FilterFactoryParams(createSuiteDescription(testName.getMethodName()), \"NonExistentFilter\")" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
6 -> 9 [label="AST"];
10 -> 11 [label="AST"];
12 -> 6 [label="AST"];
12 -> 10 [label="AST"];
12 -> 41 [label="Action"];
13 -> 35 [label="Define-Use"];
14 -> 13 [label="AST"];
14 -> 4 [label="AST"];
14 -> 12 [label="AST"];
15 -> 16 [label="AST"];
15 -> 17 [label="AST"];
19 -> 20 [label="AST"];
21 -> 19 [label="AST"];
22 -> 23 [label="AST"];
22 -> 24 [label="AST"];
25 -> 26 [label="AST"];
25 -> 22 [label="AST"];
27 -> 18 [label="AST"];
27 -> 21 [label="AST"];
27 -> 15 [label="AST"];
27 -> 25 [label="AST"];
28 -> 29 [label="AST"];
28 -> 30 [label="AST"];
32 -> 33 [label="AST"];
34 -> 32 [label="AST"];
35 -> 36 [label="AST"];
37 -> 31 [label="AST"];
37 -> 34 [label="AST"];
37 -> 28 [label="AST"];
37 -> 35 [label="AST"];
38 -> 14 [label="AST"];
38 -> 27 [label="AST"];
38 -> 37 [label="AST"];
39 -> 1 [label="AST"];
39 -> 40 [label="AST"];
39 -> 0 [label="AST"];
39 -> 2 [label="AST"];
39 -> 38 [label="AST"];
41 -> 69 [label="Action"];
43 -> 42 [label="AST"];
45 -> 44 [label="AST"];
46 -> 43 [label="AST"];
46 -> 45 [label="AST"];
48 -> 47 [label="AST"];
50 -> 49 [label="AST"];
51 -> 50 [label="AST"];
52 -> 48 [label="AST"];
52 -> 51 [label="AST"];
54 -> 53 [label="AST"];
56 -> 55 [label="AST"];
57 -> 56 [label="AST"];
58 -> 57 [label="AST"];
60 -> 59 [label="AST"];
61 -> 60 [label="AST"];
62 -> 63 [label="AST"];
62 -> 58 [label="AST"];
62 -> 61 [label="AST"];
64 -> 65 [label="AST"];
64 -> 52 [label="AST"];
64 -> 54 [label="AST"];
64 -> 62 [label="AST"];
67 -> 66 [label="AST"];
68 -> 67 [label="AST"];
69 -> 46 [label="AST"];
69 -> 64 [label="AST"];
69 -> 68 [label="AST"];
}