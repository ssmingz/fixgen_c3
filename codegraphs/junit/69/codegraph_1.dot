digraph "shouldCreateFilter#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@shouldCreateFilter" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="5:CtExecutableReferenceImpl@FilterFactoryParams(java.lang.String)" shape=ellipse]
7 [label="5:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
8 [label="5:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
9 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
10 [label="6:CtExecutableReferenceImpl@getName()" shape=ellipse]
11 [label="6:CtTypeReferenceImpl@Class" shape=ellipse]
12 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
13 [label="6:CtVirtualElement@getName" shape=ellipse]
14 [label="6:CtFieldReferenceImpl@CategoryFilterFactoryTest.CategoryFilterFactoryStub.class" shape=ellipse]
15 [label="6:CtTypeReferenceImpl@CategoryFilterFactoryStub" shape=ellipse]
16 [label="6:CtTypeReferenceImpl@Class" shape=ellipse]
17 [label="6:CtFieldReadImpl@CategoryFilterFactoryStub.class" shape=ellipse]
18 [label="6:CtTypeAccessImpl@CategoryFilterFactoryStub" shape=ellipse]
19 [label="6:CtInvocationImpl@CategoryFilterFactoryStub.class.getName()" shape=ellipse]
20 [label="5:CtConstructorCallImpl@new FilterFactoryParams(CategoryFilterFactoryStub.class.getName())" shape=ellipse]
21 [label="4:CtVirtualElement@params" shape=ellipse]
22 [label="4:CtLocalVariableImpl@FilterFactoryParams params = new FilterFactoryParams(CategoryFilterFactoryStub.class.getName())" shape=ellipse]
23 [label="7:CtTypeReferenceImpl@Filter" shape=ellipse]
24 [label="7:CtPackageReferenceImpl@" shape=ellipse]
25 [label="7:CtExecutableReferenceImpl@createFilter(FilterFactoryParams)" shape=ellipse]
26 [label="7:CtTypeReferenceImpl@categoryFilterFactory" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@Filter" shape=ellipse]
28 [label="7:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
29 [label="7:CtVirtualElement@createFilter" shape=ellipse]
30 [label="7:CtFieldReferenceImpl@categoryFilterFactory" shape=ellipse]
31 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
32 [label="7:CtFieldReadImpl@categoryFilterFactory" shape=ellipse]
33 [label="7:CtVariableReadImpl@params" shape=ellipse]
34 [label="7:CtLocalVariableReferenceImpl@params" shape=ellipse]
35 [label="7:CtInvocationImpl@categoryFilterFactory.createFilter(params)" shape=ellipse]
36 [label="7:CtVirtualElement@filter" shape=ellipse]
37 [label="7:CtLocalVariableImpl@Filter filter = categoryFilterFactory.createFilter(params)" shape=ellipse]
38 [label="8:CtExecutableReferenceImpl@assertThat(<unknown>,<unknown>)" shape=ellipse]
39 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
40 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
41 [label="8:CtVirtualElement@assertThat" shape=ellipse]
42 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
43 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
44 [label="8:CtThisAccessImpl@" shape=ellipse]
45 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
46 [label="8:CtVariableReadImpl@filter" shape=ellipse]
47 [label="8:CtLocalVariableReferenceImpl@filter" shape=ellipse]
48 [label="8:CtExecutableReferenceImpl@instanceOf(java.lang.Class)" shape=ellipse]
49 [label="8:CtTypeReferenceImpl@Class<DummyFilter>" shape=ellipse]
50 [label="8:CtVirtualElement@instanceOf" shape=ellipse]
51 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
52 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
53 [label="8:CtThisAccessImpl@" shape=ellipse]
54 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
55 [label="8:CtFieldReferenceImpl@CategoryFilterFactoryTest.DummyFilter.class" shape=ellipse]
56 [label="8:CtTypeReferenceImpl@DummyFilter" shape=ellipse]
57 [label="8:CtTypeReferenceImpl@Class" shape=ellipse]
58 [label="8:CtFieldReadImpl@DummyFilter.class" shape=ellipse]
59 [label="8:CtTypeAccessImpl@DummyFilter" shape=ellipse]
60 [label="8:CtInvocationImpl@instanceOf(DummyFilter.class)" shape=ellipse]
61 [label="8:CtInvocationImpl@assertThat(filter, instanceOf(DummyFilter.class))" shape=ellipse]
62 [label="3:CtBlockImpl@\{
    FilterFactoryParams params = new FilterFactoryParams(CategoryFilterFactoryStub.class.getName());
    Filter filter = categoryFilterFactory.createFilter(params);
    assertThat(filter, instanceOf(DummyFilter.class));
\}" shape=ellipse]
63 [label="3:CtMethodImpl@@Test
public void shouldCreateFilter() throws Exception \{
    FilterFactoryParams params = new FilterFactoryParams(CategoryFilterFactoryStub.class.getName());
    Filter filter = categoryFilterFactory.createFilter(params);
    assertThat(filter, instanceOf(DummyFilter.class));
\}" shape=ellipse]
64 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
65 [label="5:Update@UPDATE" shape=ellipse]
66 [label="5:CtPackageReferenceImpl@" shape=ellipse]
67 [label="5:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
68 [label="5:CtPackageReferenceImpl@" shape=ellipse]
69 [label="5:CtTypeReferenceImpl@FilterFactoryParams" shape=ellipse]
70 [label="5:CtExecutableReferenceImpl@FilterFactoryParams()" shape=ellipse]
71 [label="6:CtPackageReferenceImpl@" shape=ellipse]
72 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
73 [label="6:CtPackageReferenceImpl@" shape=ellipse]
74 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
75 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
76 [label="6:CtThisAccessImpl@" shape=ellipse]
77 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
78 [label="6:CtExecutableReferenceImpl@createSuiteDescription(<unknown>)" shape=ellipse]
79 [label="6:CtPackageReferenceImpl@" shape=ellipse]
80 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
81 [label="6:CtFieldReferenceImpl@testName" shape=ellipse]
82 [label="6:CtFieldReadImpl@testName" shape=ellipse]
83 [label="6:CtPackageReferenceImpl@" shape=ellipse]
84 [label="6:CtTypeReferenceImpl@testName" shape=ellipse]
85 [label="6:CtExecutableReferenceImpl@getMethodName()" shape=ellipse]
86 [label="6:CtInvocationImpl@testName.getMethodName()" shape=ellipse]
87 [label="6:CtVirtualElement@getMethodName" shape=ellipse]
88 [label="6:CtInvocationImpl@createSuiteDescription(testName.getMethodName())" shape=ellipse]
89 [label="6:CtVirtualElement@createSuiteDescription" shape=ellipse]
90 [label="7:CtPackageReferenceImpl@CategoryFilterFactoryTest" shape=ellipse]
91 [label="7:CtTypeReferenceImpl@CategoryFilterFactoryStub" shape=ellipse]
92 [label="7:CtTypeAccessImpl@CategoryFilterFactoryStub" shape=ellipse]
93 [label="7:CtPackageReferenceImpl@CategoryFilterFactoryTest" shape=ellipse]
94 [label="7:CtTypeReferenceImpl@CategoryFilterFactoryStub" shape=ellipse]
95 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
96 [label="7:CtTypeReferenceImpl@Class" shape=ellipse]
97 [label="7:CtFieldReferenceImpl@CategoryFilterFactoryStub.class" shape=ellipse]
98 [label="7:CtFieldReadImpl@CategoryFilterFactoryStub.class" shape=ellipse]
99 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
100 [label="7:CtTypeReferenceImpl@Class" shape=ellipse]
101 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
102 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
103 [label="7:CtExecutableReferenceImpl@getName()" shape=ellipse]
104 [label="7:CtInvocationImpl@CategoryFilterFactoryStub.class.getName()" shape=ellipse]
105 [label="7:CtVirtualElement@getName" shape=ellipse]
106 [label="5:CtConstructorCallImpl@new FilterFactoryParams(createSuiteDescription(testName.getMethodName()), CategoryFilterFactoryStub.class.getName())" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
6 -> 9 [label="AST"];
10 -> 11 [label="AST"];
10 -> 12 [label="AST"];
14 -> 15 [label="AST"];
14 -> 16 [label="AST"];
17 -> 18 [label="AST"];
17 -> 14 [label="AST"];
17 -> 21 [label="Data Dep"];
19 -> 13 [label="AST"];
19 -> 17 [label="AST"];
19 -> 10 [label="AST"];
20 -> 6 [label="AST"];
20 -> 19 [label="AST"];
20 -> 65 [label="Action"];
21 -> 33 [label="Define-Use"];
22 -> 21 [label="AST"];
22 -> 4 [label="AST"];
22 -> 20 [label="AST"];
23 -> 24 [label="AST"];
25 -> 26 [label="AST"];
25 -> 27 [label="AST"];
25 -> 28 [label="AST"];
30 -> 31 [label="AST"];
32 -> 30 [label="AST"];
32 -> 36 [label="Data Dep"];
33 -> 34 [label="AST"];
33 -> 36 [label="Data Dep"];
35 -> 29 [label="AST"];
35 -> 32 [label="AST"];
35 -> 25 [label="AST"];
35 -> 33 [label="AST"];
36 -> 46 [label="Define-Use"];
37 -> 36 [label="AST"];
37 -> 23 [label="AST"];
37 -> 35 [label="AST"];
38 -> 39 [label="AST"];
38 -> 40 [label="AST"];
42 -> 43 [label="AST"];
44 -> 45 [label="AST"];
44 -> 42 [label="AST"];
46 -> 47 [label="AST"];
48 -> 49 [label="AST"];
51 -> 52 [label="AST"];
53 -> 54 [label="AST"];
53 -> 51 [label="AST"];
55 -> 56 [label="AST"];
55 -> 57 [label="AST"];
58 -> 59 [label="AST"];
58 -> 55 [label="AST"];
60 -> 50 [label="AST"];
60 -> 53 [label="AST"];
60 -> 48 [label="AST"];
60 -> 58 [label="AST"];
61 -> 41 [label="AST"];
61 -> 44 [label="AST"];
61 -> 38 [label="AST"];
61 -> 46 [label="AST"];
61 -> 60 [label="AST"];
62 -> 22 [label="AST"];
62 -> 37 [label="AST"];
62 -> 61 [label="AST"];
63 -> 1 [label="AST"];
63 -> 64 [label="AST"];
63 -> 0 [label="AST"];
63 -> 2 [label="AST"];
63 -> 62 [label="AST"];
65 -> 106 [label="Action"];
67 -> 66 [label="AST"];
69 -> 68 [label="AST"];
70 -> 67 [label="AST"];
70 -> 69 [label="AST"];
72 -> 71 [label="AST"];
74 -> 73 [label="AST"];
75 -> 74 [label="AST"];
76 -> 72 [label="AST"];
76 -> 75 [label="AST"];
78 -> 77 [label="AST"];
80 -> 79 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
84 -> 83 [label="AST"];
85 -> 84 [label="AST"];
86 -> 87 [label="AST"];
86 -> 82 [label="AST"];
86 -> 85 [label="AST"];
88 -> 89 [label="AST"];
88 -> 76 [label="AST"];
88 -> 78 [label="AST"];
88 -> 86 [label="AST"];
91 -> 90 [label="AST"];
92 -> 91 [label="AST"];
94 -> 93 [label="AST"];
96 -> 95 [label="AST"];
97 -> 94 [label="AST"];
97 -> 96 [label="AST"];
98 -> 92 [label="AST"];
98 -> 97 [label="AST"];
100 -> 99 [label="AST"];
102 -> 101 [label="AST"];
103 -> 100 [label="AST"];
103 -> 102 [label="AST"];
104 -> 105 [label="AST"];
104 -> 98 [label="AST"];
104 -> 103 [label="AST"];
106 -> 70 [label="AST"];
106 -> 88 [label="AST"];
106 -> 104 [label="AST"];
}