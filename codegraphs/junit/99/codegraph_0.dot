digraph "assertEquals#?,String,String,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@assertEquals" shape=ellipse]
2 [label="2:CtParameterImpl@String message" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="2:CtParameterImpl@String expected" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
6 [label="2:CtParameterImpl@String actual" shape=ellipse]
7 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="3:CtVariableReadImpl@expected" shape=ellipse]
9 [label="3:CtParameterReferenceImpl@expected" shape=ellipse]
10 [label="3:CtLiteralImpl@null" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
12 [label="3:CtBinaryOperatorImpl@(expected == null)" shape=ellipse]
13 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
14 [label="3:CtVariableReadImpl@actual" shape=ellipse]
15 [label="3:CtParameterReferenceImpl@actual" shape=ellipse]
16 [label="3:CtLiteralImpl@null" shape=ellipse]
17 [label="3:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
18 [label="3:CtBinaryOperatorImpl@(actual == null)" shape=ellipse]
19 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
20 [label="3:CtBinaryOperatorImpl@(expected == null) && (actual == null)" shape=ellipse]
21 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
22 [label="4:CtReturnImpl@return" shape=ellipse]
23 [label="3:CtBlockImpl@\{
    return;
\}" shape=ellipse]
24 [label="3:CtIfImpl@if ((expected == null) && (actual == null)) \{
    return;
\}" shape=ellipse]
25 [label="6:CtVariableReadImpl@expected" shape=ellipse]
26 [label="6:CtParameterReferenceImpl@expected" shape=ellipse]
27 [label="6:CtLiteralImpl@null" shape=ellipse]
28 [label="6:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
29 [label="6:CtBinaryOperatorImpl@(expected != null)" shape=ellipse]
30 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
31 [label="6:CtExecutableReferenceImpl@equals(java.lang.Object)" shape=ellipse]
32 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
33 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
34 [label="6:CtTypeReferenceImpl@Object" shape=ellipse]
35 [label="6:CtVirtualElement@equals" shape=ellipse]
36 [label="6:CtVariableReadImpl@expected" shape=ellipse]
37 [label="6:CtParameterReferenceImpl@expected" shape=ellipse]
38 [label="6:CtVariableReadImpl@actual" shape=ellipse]
39 [label="6:CtParameterReferenceImpl@actual" shape=ellipse]
40 [label="6:CtInvocationImpl@expected.equals(actual)" shape=ellipse]
41 [label="6:CtBinaryOperatorImpl@(expected != null) && expected.equals(actual)" shape=ellipse]
42 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
43 [label="7:CtReturnImpl@return" shape=ellipse]
44 [label="6:CtBlockImpl@\{
    return;
\}" shape=ellipse]
45 [label="6:CtIfImpl@if ((expected != null) && expected.equals(actual)) \{
    return;
\}" shape=ellipse]
46 [label="9:CtExecutableReferenceImpl@ComparisonFailure(java.lang.String,java.lang.String,java.lang.String)" shape=ellipse]
47 [label="9:CtTypeReferenceImpl@ComparisonFailure" shape=ellipse]
48 [label="9:CtTypeReferenceImpl@ComparisonFailure" shape=ellipse]
49 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
50 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
51 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
52 [label="9:CtVariableReadImpl@message" shape=ellipse]
53 [label="9:CtParameterReferenceImpl@message" shape=ellipse]
54 [label="9:CtVariableReadImpl@expected" shape=ellipse]
55 [label="9:CtParameterReferenceImpl@expected" shape=ellipse]
56 [label="9:CtVariableReadImpl@actual" shape=ellipse]
57 [label="9:CtParameterReferenceImpl@actual" shape=ellipse]
58 [label="9:CtConstructorCallImpl@new ComparisonFailure(message, expected, actual)" shape=ellipse]
59 [label="9:CtThrowImpl@throw new ComparisonFailure(message, expected, actual)" shape=ellipse]
60 [label="2:CtBlockImpl@\{
    if ((expected == null) && (actual == null)) \{
        return;
    \}
    if ((expected != null) && expected.equals(actual)) \{
        return;
    \}
    throw new ComparisonFailure(message, expected, actual);
\}" shape=ellipse]
61 [label="2:CtMethodImpl@public static void assertEquals(String message, String expected, String actual) \{
    if ((expected == null) && (actual == null)) \{
        return;
    \}
    if ((expected != null) && expected.equals(actual)) \{
        return;
    \}
    throw new ComparisonFailure(message, expected, actual);
\}" shape=ellipse]
62 [label="9:Update@UPDATE" shape=ellipse]
63 [label="10:CtPackageReferenceImpl@java.lang" shape=ellipse]
64 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
65 [label="10:CtLocalVariableReferenceImpl@cleanMessage" shape=ellipse]
66 [label="10:CtVariableReadImpl@cleanMessage" shape=ellipse]
67 [label="9:Insert@INSERT" shape=ellipse]
68 [label="9:CtPackageReferenceImpl@java.lang" shape=ellipse]
69 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
70 [label="9:CtPackageReferenceImpl@java.lang" shape=ellipse]
71 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
72 [label="9:CtTypeReferenceImpl@boolean" shape=ellipse]
73 [label="9:CtPackageReferenceImpl@java.lang" shape=ellipse]
74 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
75 [label="9:CtParameterReferenceImpl@message" shape=ellipse]
76 [label="9:CtVariableReadImpl@message" shape=ellipse]
77 [label="9:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
78 [label="9:CtLiteralImpl@null" shape=ellipse]
79 [label="9:CtBinaryOperatorImpl@message == null" shape=ellipse]
80 [label="9:CtPackageReferenceImpl@java.lang" shape=ellipse]
81 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
82 [label="9:CtLiteralImpl@\"\"" shape=ellipse]
83 [label="9:CtPackageReferenceImpl@java.lang" shape=ellipse]
84 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
85 [label="9:CtParameterReferenceImpl@message" shape=ellipse]
86 [label="9:CtVariableReadImpl@message" shape=ellipse]
87 [label="9:CtConditionalImpl@(message == null) ? \"\" : message" shape=ellipse]
88 [label="9:CtLocalVariableImpl@java.lang.String cleanMessage = (message == null) ? \"\" : message" shape=ellipse]
89 [label="9:CtVirtualElement@cleanMessage" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
10 -> 11 [label="AST"];
12 -> 13 [label="AST"];
12 -> 8 [label="AST"];
12 -> 10 [label="AST"];
14 -> 15 [label="AST"];
16 -> 17 [label="AST"];
18 -> 19 [label="AST"];
18 -> 14 [label="AST"];
18 -> 16 [label="AST"];
20 -> 21 [label="AST"];
20 -> 12 [label="AST"];
20 -> 18 [label="AST"];
20 -> 23 [label="Control Dep"];
20 -> 22 [label="Control Dep"];
23 -> 22 [label="AST"];
24 -> 20 [label="AST"];
24 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 28 [label="AST"];
29 -> 30 [label="AST"];
29 -> 25 [label="AST"];
29 -> 27 [label="AST"];
31 -> 32 [label="AST"];
31 -> 33 [label="AST"];
31 -> 34 [label="AST"];
36 -> 37 [label="AST"];
38 -> 39 [label="AST"];
40 -> 35 [label="AST"];
40 -> 36 [label="AST"];
40 -> 31 [label="AST"];
40 -> 38 [label="AST"];
41 -> 42 [label="AST"];
41 -> 29 [label="AST"];
41 -> 40 [label="AST"];
41 -> 44 [label="Control Dep"];
41 -> 43 [label="Control Dep"];
44 -> 43 [label="AST"];
45 -> 41 [label="AST"];
45 -> 44 [label="AST"];
46 -> 47 [label="AST"];
46 -> 48 [label="AST"];
46 -> 49 [label="AST"];
46 -> 50 [label="AST"];
46 -> 51 [label="AST"];
52 -> 53 [label="AST"];
52 -> 62 [label="Action"];
54 -> 55 [label="AST"];
56 -> 57 [label="AST"];
58 -> 46 [label="AST"];
58 -> 52 [label="AST"];
58 -> 54 [label="AST"];
58 -> 56 [label="AST"];
59 -> 58 [label="AST"];
60 -> 24 [label="AST"];
60 -> 45 [label="AST"];
60 -> 59 [label="AST"];
60 -> 67 [label="Action"];
61 -> 1 [label="AST"];
61 -> 0 [label="AST"];
61 -> 2 [label="AST"];
61 -> 4 [label="AST"];
61 -> 6 [label="AST"];
61 -> 60 [label="AST"];
62 -> 66 [label="Action"];
64 -> 63 [label="AST"];
65 -> 64 [label="AST"];
66 -> 65 [label="AST"];
67 -> 88 [label="Action"];
69 -> 68 [label="AST"];
71 -> 70 [label="AST"];
74 -> 73 [label="AST"];
75 -> 74 [label="AST"];
76 -> 75 [label="AST"];
76 -> 89 [label="Data Dep"];
78 -> 77 [label="AST"];
79 -> 72 [label="AST"];
79 -> 76 [label="AST"];
79 -> 78 [label="AST"];
79 -> 82 [label="Control Dep"];
79 -> 86 [label="Control Dep"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
84 -> 83 [label="AST"];
85 -> 84 [label="AST"];
86 -> 85 [label="AST"];
86 -> 89 [label="Data Dep"];
87 -> 71 [label="AST"];
87 -> 79 [label="AST"];
87 -> 82 [label="AST"];
87 -> 86 [label="AST"];
88 -> 89 [label="AST"];
88 -> 69 [label="AST"];
88 -> 87 [label="AST"];
89 -> 66 [label="Define-Use"];
89 -> 52 [label="Define-Use"];
89 -> 52 [label="Data Dep"];
89 -> 52 [label="Control Dep"];
}