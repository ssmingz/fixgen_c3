digraph "shouldCreateFailureUponUnknownOption#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@shouldCreateFailureUponUnknownOption" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@java.lang" shape=ellipse]
6 [label="4:CtLiteralImpl@\"--unknown-option\"" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="4:CtVirtualElement@unknownOption" shape=ellipse]
9 [label="4:CtLocalVariableImpl@String unknownOption = \"--unknown-option\"" shape=ellipse]
10 [label="5:CtExecutableReferenceImpl@parseOptions(java.lang.String[])" shape=ellipse]
11 [label="5:CtTypeReferenceImpl@jUnitCommandLineParser" shape=ellipse]
12 [label="5:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
13 [label="5:CtVirtualElement@parseOptions" shape=ellipse]
14 [label="5:CtFieldReferenceImpl@jUnitCommandLineParser" shape=ellipse]
15 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
16 [label="5:CtFieldReadImpl@jUnitCommandLineParser" shape=ellipse]
17 [label="5:CtNewArrayImpl@new String[]\{ unknownOption \}" shape=ellipse]
18 [label="5:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
19 [label="5:CtVariableReadImpl@unknownOption" shape=ellipse]
20 [label="5:CtInvocationImpl@jUnitCommandLineParser.parseOptions(new String[]\{ unknownOption \})" shape=ellipse]
21 [label="6:CtTypeReferenceImpl@Runner" shape=ellipse]
22 [label="6:CtPackageReferenceImpl@" shape=ellipse]
23 [label="6:CtExecutableReferenceImpl@getRunner()" shape=ellipse]
24 [label="6:CtTypeReferenceImpl@Runner" shape=ellipse]
25 [label="6:CtVirtualElement@getRunner" shape=ellipse]
26 [label="6:CtExecutableReferenceImpl@createRequest(Computer)" shape=ellipse]
27 [label="6:CtTypeReferenceImpl@jUnitCommandLineParser" shape=ellipse]
28 [label="6:CtTypeReferenceImpl@Computer" shape=ellipse]
29 [label="6:CtVirtualElement@createRequest" shape=ellipse]
30 [label="6:CtFieldReferenceImpl@jUnitCommandLineParser" shape=ellipse]
31 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
32 [label="6:CtFieldReadImpl@jUnitCommandLineParser" shape=ellipse]
33 [label="6:CtExecutableReferenceImpl@Computer()" shape=ellipse]
34 [label="6:CtTypeReferenceImpl@Computer" shape=ellipse]
35 [label="6:CtTypeReferenceImpl@Computer" shape=ellipse]
36 [label="6:CtConstructorCallImpl@new Computer()" shape=ellipse]
37 [label="6:CtInvocationImpl@jUnitCommandLineParser.createRequest(new Computer())" shape=ellipse]
38 [label="6:CtInvocationImpl@jUnitCommandLineParser.createRequest(new Computer()).getRunner()" shape=ellipse]
39 [label="6:CtVirtualElement@runner" shape=ellipse]
40 [label="6:CtLocalVariableImpl@Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner()" shape=ellipse]
41 [label="7:CtTypeReferenceImpl@Description" shape=ellipse]
42 [label="7:CtPackageReferenceImpl@" shape=ellipse]
43 [label="7:CtExecutableReferenceImpl@get(int)" shape=ellipse]
44 [label="7:CtTypeReferenceImpl@Description" shape=ellipse]
45 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
46 [label="7:CtVirtualElement@get" shape=ellipse]
47 [label="7:CtExecutableReferenceImpl@getChildren()" shape=ellipse]
48 [label="7:CtVirtualElement@getChildren" shape=ellipse]
49 [label="7:CtExecutableReferenceImpl@getDescription()" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@Runner" shape=ellipse]
51 [label="7:CtVirtualElement@getDescription" shape=ellipse]
52 [label="7:CtVariableReadImpl@runner" shape=ellipse]
53 [label="7:CtLocalVariableReferenceImpl@runner" shape=ellipse]
54 [label="7:CtInvocationImpl@runner.getDescription()" shape=ellipse]
55 [label="7:CtInvocationImpl@runner.getDescription().getChildren()" shape=ellipse]
56 [label="7:CtLiteralImpl@0" shape=ellipse]
57 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
58 [label="7:CtInvocationImpl@runner.getDescription().getChildren().get(0)" shape=ellipse]
59 [label="7:CtVirtualElement@description" shape=ellipse]
60 [label="7:CtLocalVariableImpl@Description description = runner.getDescription().getChildren().get(0)" shape=ellipse]
61 [label="8:CtExecutableReferenceImpl@assertThat(<unknown>,<unknown>)" shape=ellipse]
62 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
63 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
64 [label="8:CtVirtualElement@assertThat" shape=ellipse]
65 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
66 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
67 [label="8:CtThisAccessImpl@" shape=ellipse]
68 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
69 [label="9:CtExecutableReferenceImpl@toString()" shape=ellipse]
70 [label="9:CtTypeReferenceImpl@Description" shape=ellipse]
71 [label="9:CtVirtualElement@toString" shape=ellipse]
72 [label="9:CtVariableReadImpl@description" shape=ellipse]
73 [label="9:CtLocalVariableReferenceImpl@description" shape=ellipse]
74 [label="9:CtInvocationImpl@description.toString()" shape=ellipse]
75 [label="10:CtExecutableReferenceImpl@allOf(<unknown>,<unknown>,<unknown>)" shape=ellipse]
76 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
77 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
78 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
79 [label="10:CtVirtualElement@allOf" shape=ellipse]
80 [label="10:CtTypeAccessImpl@PlaceHold" shape=ellipse]
81 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
82 [label="10:CtThisAccessImpl@" shape=ellipse]
83 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
84 [label="11:CtExecutableReferenceImpl@containsString(java.lang.String)" shape=ellipse]
85 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
86 [label="11:CtVirtualElement@containsString" shape=ellipse]
87 [label="11:CtTypeAccessImpl@PlaceHold" shape=ellipse]
88 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
89 [label="11:CtThisAccessImpl@" shape=ellipse]
90 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
91 [label="11:CtLiteralImpl@\"initializationError: \"" shape=ellipse]
92 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
93 [label="11:CtInvocationImpl@containsString(\"initializationError: \")" shape=ellipse]
94 [label="12:CtExecutableReferenceImpl@containsString(java.lang.String)" shape=ellipse]
95 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
96 [label="12:CtVirtualElement@containsString" shape=ellipse]
97 [label="12:CtTypeAccessImpl@PlaceHold" shape=ellipse]
98 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
99 [label="12:CtThisAccessImpl@" shape=ellipse]
100 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
101 [label="12:CtExecutableReferenceImpl@getName()" shape=ellipse]
102 [label="12:CtTypeReferenceImpl@Class" shape=ellipse]
103 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
104 [label="12:CtVirtualElement@getName" shape=ellipse]
105 [label="12:CtFieldReferenceImpl@CommandLineParserError.class" shape=ellipse]
106 [label="12:CtTypeReferenceImpl@CommandLineParserError" shape=ellipse]
107 [label="12:CtTypeReferenceImpl@Class" shape=ellipse]
108 [label="12:CtFieldReadImpl@CommandLineParserError.class" shape=ellipse]
109 [label="12:CtTypeAccessImpl@CommandLineParserError" shape=ellipse]
110 [label="12:CtInvocationImpl@CommandLineParserError.class.getName()" shape=ellipse]
111 [label="12:CtInvocationImpl@containsString(CommandLineParserError.class.getName())" shape=ellipse]
112 [label="13:CtExecutableReferenceImpl@containsString(java.lang.String)" shape=ellipse]
113 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
114 [label="13:CtVirtualElement@containsString" shape=ellipse]
115 [label="13:CtTypeAccessImpl@PlaceHold" shape=ellipse]
116 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
117 [label="13:CtThisAccessImpl@" shape=ellipse]
118 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
119 [label="13:CtVariableReadImpl@unknownOption" shape=ellipse]
120 [label="13:CtLocalVariableReferenceImpl@unknownOption" shape=ellipse]
121 [label="13:CtInvocationImpl@containsString(unknownOption)" shape=ellipse]
122 [label="10:CtInvocationImpl@allOf(containsString(\"initializationError: \"), containsString(CommandLineParserError.class.getName()), containsString(unknownOption))" shape=ellipse]
123 [label="8:CtInvocationImpl@assertThat(description.toString(), allOf(containsString(\"initializationError: \"), containsString(CommandLineParserError.class.getName()), containsString(unknownOption)))" shape=ellipse]
124 [label="3:CtBlockImpl@\{
    String unknownOption = \"--unknown-option\";
    jUnitCommandLineParser.parseOptions(new String[]\{ unknownOption \});
    Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner();
    Description description = runner.getDescription().getChildren().get(0);
    assertThat(description.toString(), allOf(containsString(\"initializationError: \"), containsString(CommandLineParserError.class.getName()), containsString(unknownOption)));
\}" shape=ellipse]
125 [label="3:CtMethodImpl@@Test
public void shouldCreateFailureUponUnknownOption() throws Exception \{
    String unknownOption = \"--unknown-option\";
    jUnitCommandLineParser.parseOptions(new String[]\{ unknownOption \});
    Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner();
    Description description = runner.getDescription().getChildren().get(0);
    assertThat(description.toString(), allOf(containsString(\"initializationError: \"), containsString(CommandLineParserError.class.getName()), containsString(unknownOption)));
\}" shape=ellipse]
126 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
127 [label="11:Update@UPDATE" shape=ellipse]
128 [label="11:CtPackageReferenceImpl@java.lang" shape=ellipse]
129 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
130 [label="11:CtLiteralImpl@\"initializationError:\"" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 119 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 4 [label="AST"];
9 -> 6 [label="AST"];
10 -> 11 [label="AST"];
10 -> 12 [label="AST"];
14 -> 15 [label="AST"];
16 -> 14 [label="AST"];
17 -> 18 [label="AST"];
17 -> 19 [label="AST"];
20 -> 13 [label="AST"];
20 -> 16 [label="AST"];
20 -> 10 [label="AST"];
20 -> 17 [label="AST"];
21 -> 22 [label="AST"];
23 -> 24 [label="AST"];
26 -> 27 [label="AST"];
26 -> 28 [label="AST"];
30 -> 31 [label="AST"];
32 -> 30 [label="AST"];
32 -> 39 [label="Data Dep"];
33 -> 34 [label="AST"];
33 -> 35 [label="AST"];
36 -> 33 [label="AST"];
37 -> 29 [label="AST"];
37 -> 32 [label="AST"];
37 -> 26 [label="AST"];
37 -> 36 [label="AST"];
38 -> 25 [label="AST"];
38 -> 37 [label="AST"];
38 -> 23 [label="AST"];
39 -> 52 [label="Define-Use"];
40 -> 39 [label="AST"];
40 -> 21 [label="AST"];
40 -> 38 [label="AST"];
41 -> 42 [label="AST"];
43 -> 44 [label="AST"];
43 -> 45 [label="AST"];
49 -> 50 [label="AST"];
52 -> 53 [label="AST"];
52 -> 59 [label="Data Dep"];
54 -> 51 [label="AST"];
54 -> 52 [label="AST"];
54 -> 49 [label="AST"];
55 -> 48 [label="AST"];
55 -> 54 [label="AST"];
55 -> 47 [label="AST"];
56 -> 57 [label="AST"];
58 -> 46 [label="AST"];
58 -> 55 [label="AST"];
58 -> 43 [label="AST"];
58 -> 56 [label="AST"];
59 -> 72 [label="Define-Use"];
60 -> 59 [label="AST"];
60 -> 41 [label="AST"];
60 -> 58 [label="AST"];
61 -> 62 [label="AST"];
61 -> 63 [label="AST"];
65 -> 66 [label="AST"];
67 -> 68 [label="AST"];
67 -> 65 [label="AST"];
69 -> 70 [label="AST"];
72 -> 73 [label="AST"];
74 -> 71 [label="AST"];
74 -> 72 [label="AST"];
74 -> 69 [label="AST"];
75 -> 76 [label="AST"];
75 -> 77 [label="AST"];
75 -> 78 [label="AST"];
80 -> 81 [label="AST"];
82 -> 83 [label="AST"];
82 -> 80 [label="AST"];
84 -> 85 [label="AST"];
87 -> 88 [label="AST"];
89 -> 90 [label="AST"];
89 -> 87 [label="AST"];
91 -> 92 [label="AST"];
91 -> 127 [label="Action"];
93 -> 86 [label="AST"];
93 -> 89 [label="AST"];
93 -> 84 [label="AST"];
93 -> 91 [label="AST"];
94 -> 95 [label="AST"];
97 -> 98 [label="AST"];
99 -> 100 [label="AST"];
99 -> 97 [label="AST"];
101 -> 102 [label="AST"];
101 -> 103 [label="AST"];
105 -> 106 [label="AST"];
105 -> 107 [label="AST"];
108 -> 109 [label="AST"];
108 -> 105 [label="AST"];
110 -> 104 [label="AST"];
110 -> 108 [label="AST"];
110 -> 101 [label="AST"];
111 -> 96 [label="AST"];
111 -> 99 [label="AST"];
111 -> 94 [label="AST"];
111 -> 110 [label="AST"];
112 -> 113 [label="AST"];
115 -> 116 [label="AST"];
117 -> 118 [label="AST"];
117 -> 115 [label="AST"];
119 -> 120 [label="AST"];
121 -> 114 [label="AST"];
121 -> 117 [label="AST"];
121 -> 112 [label="AST"];
121 -> 119 [label="AST"];
122 -> 79 [label="AST"];
122 -> 82 [label="AST"];
122 -> 75 [label="AST"];
122 -> 93 [label="AST"];
122 -> 111 [label="AST"];
122 -> 121 [label="AST"];
123 -> 64 [label="AST"];
123 -> 67 [label="AST"];
123 -> 61 [label="AST"];
123 -> 74 [label="AST"];
123 -> 122 [label="AST"];
124 -> 9 [label="AST"];
124 -> 20 [label="AST"];
124 -> 40 [label="AST"];
124 -> 60 [label="AST"];
124 -> 123 [label="AST"];
125 -> 1 [label="AST"];
125 -> 126 [label="AST"];
125 -> 0 [label="AST"];
125 -> 2 [label="AST"];
125 -> 124 [label="AST"];
127 -> 130 [label="Action"];
129 -> 128 [label="AST"];
130 -> 129 [label="AST"];
}