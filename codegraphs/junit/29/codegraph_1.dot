digraph "createTest#?" {
0 [label="2:CtTypeReferenceImpl@Object" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
2 [label="2:CtVirtualElement@createTest" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
4 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@newInstance()" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@Object" shape=ellipse]
7 [label="3:CtVirtualElement@newInstance" shape=ellipse]
8 [label="3:CtExecutableReferenceImpl@getConstructor()" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@fTestClass" shape=ellipse]
10 [label="3:CtVirtualElement@getConstructor" shape=ellipse]
11 [label="3:CtFieldReferenceImpl@fTestClass" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
13 [label="3:CtFieldReadImpl@fTestClass" shape=ellipse]
14 [label="3:CtInvocationImpl@fTestClass.getConstructor()" shape=ellipse]
15 [label="3:CtInvocationImpl@fTestClass.getConstructor().newInstance()" shape=ellipse]
16 [label="3:CtReturnImpl@return fTestClass.getConstructor().newInstance()" shape=ellipse]
17 [label="2:CtBlockImpl@\{
    return fTestClass.getConstructor().newInstance();
\}" shape=ellipse]
18 [label="2:CtMethodImpl@public Object createTest() throws Exception \{
    return fTestClass.getConstructor().newInstance();
\}" shape=ellipse]
19 [label="3:Delete@DELETE" shape=ellipse]
20 [label="3:Insert@INSERT" shape=ellipse]
21 [label="3:CtPackageReferenceImpl@" shape=ellipse]
22 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
23 [label="3:CtPackageReferenceImpl@" shape=ellipse]
24 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
25 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
26 [label="3:CtThisAccessImpl@" shape=ellipse]
27 [label="3:CtExecutableReferenceImpl@getTestClass()" shape=ellipse]
28 [label="3:CtInvocationImpl@getTestClass()" shape=ellipse]
29 [label="3:CtVirtualElement@getTestClass" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
8 -> 9 [label="AST"];
11 -> 12 [label="AST"];
13 -> 11 [label="AST"];
13 -> 19 [label="Action"];
14 -> 10 [label="AST"];
14 -> 13 [label="AST"];
14 -> 8 [label="AST"];
14 -> 20 [label="Action"];
15 -> 7 [label="AST"];
15 -> 14 [label="AST"];
15 -> 5 [label="AST"];
16 -> 15 [label="AST"];
17 -> 16 [label="AST"];
18 -> 2 [label="AST"];
18 -> 0 [label="AST"];
18 -> 3 [label="AST"];
18 -> 17 [label="AST"];
20 -> 28 [label="Action"];
22 -> 21 [label="AST"];
24 -> 23 [label="AST"];
25 -> 24 [label="AST"];
26 -> 22 [label="AST"];
26 -> 25 [label="AST"];
28 -> 29 [label="AST"];
28 -> 26 [label="AST"];
28 -> 27 [label="AST"];
}