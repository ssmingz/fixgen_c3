digraph "withPotentialTimeout#?,FrameworkMethod,Object,Statement" {
0 [label="2:CtTypeReferenceImpl@Statement" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@" shape=ellipse]
2 [label="2:CtVirtualElement@withPotentialTimeout" shape=ellipse]
3 [label="2:CtParameterImpl@FrameworkMethod method" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@FrameworkMethod" shape=ellipse]
5 [label="2:CtParameterImpl@Object test" shape=ellipse]
6 [label="2:CtTypeReferenceImpl@Object" shape=ellipse]
7 [label="2:CtParameterImpl@Statement next" shape=ellipse]
8 [label="2:CtTypeReferenceImpl@Statement" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@long" shape=ellipse]
10 [label="3:CtExecutableReferenceImpl@getTimeout(<unknown>)" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@long" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@null" shape=ellipse]
13 [label="3:CtVirtualElement@getTimeout" shape=ellipse]
14 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
15 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
16 [label="3:CtThisAccessImpl@" shape=ellipse]
17 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
18 [label="3:CtExecutableReferenceImpl@getAnnotation(<unknown>)" shape=ellipse]
19 [label="3:CtTypeReferenceImpl@null" shape=ellipse]
20 [label="3:CtVirtualElement@getAnnotation" shape=ellipse]
21 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
22 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
23 [label="3:CtThisAccessImpl@" shape=ellipse]
24 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
25 [label="3:CtVariableReadImpl@method" shape=ellipse]
26 [label="3:CtParameterReferenceImpl@method" shape=ellipse]
27 [label="3:CtInvocationImpl@getAnnotation(method)" shape=ellipse]
28 [label="3:CtInvocationImpl@getTimeout(getAnnotation(method))" shape=ellipse]
29 [label="3:CtVirtualElement@timeout" shape=ellipse]
30 [label="3:CtLocalVariableImpl@long timeout = getTimeout(getAnnotation(method))" shape=ellipse]
31 [label="4:CtVariableReadImpl@timeout" shape=ellipse]
32 [label="4:CtLocalVariableReferenceImpl@timeout" shape=ellipse]
33 [label="4:CtLiteralImpl@0" shape=ellipse]
34 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
35 [label="4:CtBinaryOperatorImpl@timeout > 0" shape=ellipse]
36 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
37 [label="4:CtExecutableReferenceImpl@FailOnTimeout()" shape=ellipse]
38 [label="4:CtTypeReferenceImpl@FailOnTimeout" shape=ellipse]
39 [label="4:CtTypeReferenceImpl@FailOnTimeout" shape=ellipse]
40 [label="4:CtVariableReadImpl@next" shape=ellipse]
41 [label="4:CtParameterReferenceImpl@next" shape=ellipse]
42 [label="4:CtVariableReadImpl@timeout" shape=ellipse]
43 [label="4:CtLocalVariableReferenceImpl@timeout" shape=ellipse]
44 [label="4:CtConstructorCallImpl@new FailOnTimeout(next, timeout)" shape=ellipse]
45 [label="4:CtVariableReadImpl@next" shape=ellipse]
46 [label="4:CtParameterReferenceImpl@next" shape=ellipse]
47 [label="4:CtConditionalImpl@timeout > 0 ? new FailOnTimeout(next, timeout) : next" shape=ellipse]
48 [label="4:CtReturnImpl@return timeout > 0 ? new FailOnTimeout(next, timeout) : next" shape=ellipse]
49 [label="2:CtBlockImpl@\{
    long timeout = getTimeout(getAnnotation(method));
    return timeout > 0 ? new FailOnTimeout(next, timeout) : next;
\}" shape=ellipse]
50 [label="2:CtMethodImpl@protected Statement withPotentialTimeout(FrameworkMethod method, Object test, Statement next) \{
    long timeout = getTimeout(getAnnotation(method));
    return timeout > 0 ? new FailOnTimeout(next, timeout) : next;
\}" shape=ellipse]
51 [label="3:Delete@DELETE" shape=ellipse]
52 [label="3:Insert@INSERT" shape=ellipse]
53 [label="3:CtPackageReferenceImpl@" shape=ellipse]
54 [label="3:CtTypeReferenceImpl@Test" shape=ellipse]
55 [label="3:CtTypeAccessImpl@Test" shape=ellipse]
56 [label="3:CtPackageReferenceImpl@" shape=ellipse]
57 [label="3:CtTypeReferenceImpl@Test" shape=ellipse]
58 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
59 [label="3:CtTypeReferenceImpl@Class" shape=ellipse]
60 [label="3:CtFieldReferenceImpl@Test.class" shape=ellipse]
61 [label="3:CtFieldReadImpl@Test.class" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
10 -> 11 [label="AST"];
10 -> 12 [label="AST"];
14 -> 15 [label="AST"];
16 -> 17 [label="AST"];
16 -> 14 [label="AST"];
16 -> 29 [label="Data Dep"];
18 -> 19 [label="AST"];
21 -> 22 [label="AST"];
21 -> 51 [label="Action"];
23 -> 24 [label="AST"];
23 -> 21 [label="AST"];
23 -> 29 [label="Data Dep"];
25 -> 26 [label="AST"];
25 -> 29 [label="Data Dep"];
27 -> 20 [label="AST"];
27 -> 23 [label="AST"];
27 -> 18 [label="AST"];
27 -> 25 [label="AST"];
27 -> 52 [label="Action"];
28 -> 13 [label="AST"];
28 -> 16 [label="AST"];
28 -> 10 [label="AST"];
28 -> 27 [label="AST"];
29 -> 31 [label="Define-Use"];
29 -> 42 [label="Define-Use"];
30 -> 29 [label="AST"];
30 -> 9 [label="AST"];
30 -> 28 [label="AST"];
31 -> 32 [label="AST"];
33 -> 34 [label="AST"];
35 -> 36 [label="AST"];
35 -> 31 [label="AST"];
35 -> 33 [label="AST"];
35 -> 44 [label="Control Dep"];
35 -> 37 [label="Control Dep"];
35 -> 40 [label="Control Dep"];
35 -> 42 [label="Control Dep"];
35 -> 45 [label="Control Dep"];
37 -> 38 [label="AST"];
37 -> 39 [label="AST"];
40 -> 41 [label="AST"];
42 -> 43 [label="AST"];
44 -> 37 [label="AST"];
44 -> 40 [label="AST"];
44 -> 42 [label="AST"];
45 -> 46 [label="AST"];
47 -> 35 [label="AST"];
47 -> 44 [label="AST"];
47 -> 45 [label="AST"];
48 -> 47 [label="AST"];
49 -> 30 [label="AST"];
49 -> 48 [label="AST"];
50 -> 2 [label="AST"];
50 -> 0 [label="AST"];
50 -> 3 [label="AST"];
50 -> 5 [label="AST"];
50 -> 7 [label="AST"];
50 -> 49 [label="AST"];
52 -> 61 [label="Action"];
54 -> 53 [label="AST"];
55 -> 54 [label="AST"];
57 -> 56 [label="AST"];
59 -> 58 [label="AST"];
60 -> 57 [label="AST"];
60 -> 59 [label="AST"];
61 -> 55 [label="AST"];
61 -> 60 [label="AST"];
}