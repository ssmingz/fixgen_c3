digraph "Pattern" {
0 [label="assignNext#?,PotentialAssignment#6:INSERT
assignNext#?,PotentialAssignment#5:INSERT
assignNext#?,PotentialAssignment#10:INSERT" shape=ellipse]
1 [label="assignNext#?,PotentialAssignment#5:new Assignments(assigned, fUnassigned.subList(1, fUnassigned.size()), fClass)
assignNext#?,PotentialAssignment#5:new Assignments(fContext, assigned, fUnassigned.subList(1, fUnassigned.size()))
assignNext#?,PotentialAssignment#5:new Assignments(assigned, fUnassigned.subList(1, fUnassigned.size()), fClass, fConstructorParameterCount)" shape=ellipse]
2 [label="assignNext#?,PotentialAssignment#5:return new Assignments(assigned, fUnassigned.subList(1, fUnassigned.size()), fClass)
assignNext#?,PotentialAssignment#5:return new Assignments(fContext, assigned, fUnassigned.subList(1, fUnassigned.size()))
assignNext#?,PotentialAssignment#5:return new Assignments(assigned, fUnassigned.subList(1, fUnassigned.size()), fClass, fConstructorParameterCount)" shape=ellipse]
3 [label="assignNext#?,PotentialAssignment#2:\{
    List<PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(fAssigned);
    assigned.add(source);
    return new Assignments(assigned, fUnassigned.subList(1, fUnassigned.size()), fClass);
\}
assignNext#?,PotentialAssignment#2:\{
    List<PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(fAssigned);
    assigned.add(source);
    return new Assignments(fContext, assigned, fUnassigned.subList(1, fUnassigned.size()));
\}
assignNext#?,PotentialAssignment#2:\{
    List<PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(fAssigned);
    assigned.add(source);
    return new Assignments(assigned, fUnassigned.subList(1, fUnassigned.size()), fClass, fConstructorParameterCount);
\}" shape=ellipse]
4 [label="assignNext#?,PotentialAssignment#5:Assignments()
assignNext#?,PotentialAssignment#5:Assignments()
assignNext#?,PotentialAssignment#5:Assignments()" shape=ellipse]
5 [label="assignNext#?,PotentialAssignment#5:Assignments
assignNext#?,PotentialAssignment#5:Assignments
assignNext#?,PotentialAssignment#5:Assignments" shape=ellipse]
6 [label="assignNext#?,PotentialAssignment#5:Assignments
assignNext#?,PotentialAssignment#5:Assignments
assignNext#?,PotentialAssignment#5:Assignments" shape=ellipse]
7 [label="assignNext#?,PotentialAssignment#5:assigned
assignNext#?,PotentialAssignment#5:assigned
assignNext#?,PotentialAssignment#6:assigned" shape=ellipse]
8 [label="assignNext#?,PotentialAssignment#3:assigned
assignNext#?,PotentialAssignment#3:assigned
assignNext#?,PotentialAssignment#3:assigned" shape=ellipse]
9 [label="assignNext#?,PotentialAssignment#5:assigned
assignNext#?,PotentialAssignment#5:assigned
assignNext#?,PotentialAssignment#6:assigned" shape=ellipse]
10 [label="assignNext#?,PotentialAssignment#5:fUnassigned.subList(1, fUnassigned.size())
assignNext#?,PotentialAssignment#5:fUnassigned.subList(1, fUnassigned.size())
assignNext#?,PotentialAssignment#6:fUnassigned.subList(1, fUnassigned.size())" shape=ellipse]
11 [label="assignNext#?,PotentialAssignment#5:subList
assignNext#?,PotentialAssignment#5:subList
assignNext#?,PotentialAssignment#6:subList" shape=ellipse]
12 [label="assignNext#?,PotentialAssignment#5:fUnassigned
assignNext#?,PotentialAssignment#5:fUnassigned
assignNext#?,PotentialAssignment#6:fUnassigned" shape=ellipse]
13 [label="assignNext#?,PotentialAssignment#5:subList(int)
assignNext#?,PotentialAssignment#5:subList(int)
assignNext#?,PotentialAssignment#6:subList(int)" shape=ellipse]
14 [label="assignNext#?,PotentialAssignment#5:1
assignNext#?,PotentialAssignment#5:1
assignNext#?,PotentialAssignment#6:1" shape=ellipse]
15 [label="assignNext#?,PotentialAssignment#5:fUnassigned.size()
assignNext#?,PotentialAssignment#5:fUnassigned.size()
assignNext#?,PotentialAssignment#6:fUnassigned.size()" shape=ellipse]
16 [label="assignNext#?,PotentialAssignment#5:fClass
assignNext#?,PotentialAssignment#5:fContext
assignNext#?,PotentialAssignment#6:fClass" shape=ellipse]
17 [label="assignNext#?,PotentialAssignment#5:fClass
assignNext#?,PotentialAssignment#5:fContext
assignNext#?,PotentialAssignment#6:fClass" shape=ellipse]
18 [label="assignNext#?,PotentialAssignment#6:fConstructorParameterCount
assignNext#?,PotentialAssignment#5:fTarget
assignNext#?,PotentialAssignment#10:fNullsOk" shape=ellipse]
19 [label="assignNext#?,PotentialAssignment#6:fConstructorParameterCount
assignNext#?,PotentialAssignment#5:fTarget
assignNext#?,PotentialAssignment#10:fNullsOk" shape=ellipse]
20 [label="assignNext#?,PotentialAssignment#6:PlaceHold
assignNext#?,PotentialAssignment#5:PlaceHold
assignNext#?,PotentialAssignment#10:PlaceHold" shape=ellipse]
21 [label="assignNext#?,PotentialAssignment#6:
assignNext#?,PotentialAssignment#5:
assignNext#?,PotentialAssignment#10:" shape=ellipse]
22 [label="assignNext#?,PotentialAssignment#6:fConstructorParameterCount" shape=ellipse]
23 [label="assignNext#?,PotentialAssignment#6:fConstructorParameterCount" shape=ellipse]
0 -> 18 [label="Action:3"];
1 -> 0 [label="Action:3"];
1 -> 4 [label="AST:3"];
1 -> 7 [label="AST:3"];
1 -> 10 [label="AST:3"];
1 -> 16 [label="AST:3"];
1 -> 22 [label="AST:1"];
2 -> 1 [label="AST:3"];
3 -> 2 [label="AST:3"];
4 -> 5 [label="AST:3"];
4 -> 6 [label="AST:3"];
7 -> 9 [label="AST:3"];
8 -> 7 [label="Define Use:3"];
10 -> 11 [label="AST:3"];
10 -> 12 [label="AST:3"];
10 -> 13 [label="AST:3"];
10 -> 14 [label="AST:3"];
10 -> 15 [label="AST:3"];
16 -> 17 [label="AST:3"];
18 -> 19 [label="AST:3"];
19 -> 20 [label="AST:3"];
20 -> 21 [label="AST:3"];
22 -> 23 [label="AST:1"];
}