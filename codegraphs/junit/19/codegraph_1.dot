digraph "testExceptionSubclass#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testExceptionSubclass" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@ExceptionTestCase" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@ThrowExceptionTestCase(java.lang.String,java.lang.Class)" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@ThrowExceptionTestCase" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@ThrowExceptionTestCase" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@Class<IndexOutOfBoundsException>" shape=ellipse]
9 [label="3:CtLiteralImpl@\"test\"" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
11 [label="3:CtFieldReferenceImpl@java.lang.IndexOutOfBoundsException.class" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@IndexOutOfBoundsException" shape=ellipse]
13 [label="3:CtTypeReferenceImpl@Class" shape=ellipse]
14 [label="3:CtFieldReadImpl@IndexOutOfBoundsException.class" shape=ellipse]
15 [label="3:CtTypeAccessImpl@IndexOutOfBoundsException" shape=ellipse]
16 [label="3:CtConstructorCallImpl@new ThrowExceptionTestCase(\"test\", IndexOutOfBoundsException.class)" shape=ellipse]
17 [label="3:CtVirtualElement@test" shape=ellipse]
18 [label="3:CtLocalVariableImpl@ExceptionTestCase test = new ThrowExceptionTestCase(\"test\", IndexOutOfBoundsException.class)" shape=ellipse]
19 [label="4:CtTypeReferenceImpl@TestResult" shape=ellipse]
20 [label="4:CtPackageReferenceImpl@" shape=ellipse]
21 [label="4:CtExecutableReferenceImpl@run()" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@ExceptionTestCase" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@TestResult" shape=ellipse]
24 [label="4:CtVirtualElement@run" shape=ellipse]
25 [label="4:CtVariableReadImpl@test" shape=ellipse]
26 [label="4:CtLocalVariableReferenceImpl@test" shape=ellipse]
27 [label="4:CtInvocationImpl@test.run()" shape=ellipse]
28 [label="4:CtVirtualElement@result" shape=ellipse]
29 [label="4:CtLocalVariableImpl@TestResult result = test.run()" shape=ellipse]
30 [label="5:CtExecutableReferenceImpl@assertEquals(int,<unknown>)" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
32 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
33 [label="5:CtVirtualElement@assertEquals" shape=ellipse]
34 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
35 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
36 [label="5:CtThisAccessImpl@" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
38 [label="5:CtLiteralImpl@1" shape=ellipse]
39 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
40 [label="5:CtExecutableReferenceImpl@runCount()" shape=ellipse]
41 [label="5:CtTypeReferenceImpl@TestResult" shape=ellipse]
42 [label="5:CtVirtualElement@runCount" shape=ellipse]
43 [label="5:CtVariableReadImpl@result" shape=ellipse]
44 [label="5:CtLocalVariableReferenceImpl@result" shape=ellipse]
45 [label="5:CtInvocationImpl@result.runCount()" shape=ellipse]
46 [label="5:CtInvocationImpl@assertEquals(1, result.runCount())" shape=ellipse]
47 [label="6:CtExecutableReferenceImpl@wasSuccessful()" shape=ellipse]
48 [label="6:CtTypeReferenceImpl@TestResult" shape=ellipse]
49 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
50 [label="6:CtVirtualElement@wasSuccessful" shape=ellipse]
51 [label="6:CtVariableReadImpl@result" shape=ellipse]
52 [label="6:CtLocalVariableReferenceImpl@result" shape=ellipse]
53 [label="6:CtInvocationImpl@result.wasSuccessful()" shape=ellipse]
54 [label="6:CtAssertImpl@assert result.wasSuccessful()" shape=ellipse]
55 [label="2:CtBlockImpl@\{
    ExceptionTestCase test = new ThrowExceptionTestCase(\"test\", IndexOutOfBoundsException.class);
    TestResult result = test.run();
    assertEquals(1, result.runCount());
    assert result.wasSuccessful();
\}" shape=ellipse]
56 [label="2:CtMethodImpl@public void testExceptionSubclass() \{
    ExceptionTestCase test = new ThrowExceptionTestCase(\"test\", IndexOutOfBoundsException.class);
    TestResult result = test.run();
    assertEquals(1, result.runCount());
    assert result.wasSuccessful();
\}" shape=ellipse]
57 [label="6:Delete@DELETE" shape=ellipse]
58 [label="6:Insert@INSERT" shape=ellipse]
59 [label="6:CtPackageReferenceImpl@" shape=ellipse]
60 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
61 [label="6:CtPackageReferenceImpl@" shape=ellipse]
62 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
63 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
64 [label="6:CtThisAccessImpl@" shape=ellipse]
65 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
66 [label="6:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
67 [label="6:CtPackageReferenceImpl@" shape=ellipse]
68 [label="6:CtTypeReferenceImpl@TestResult" shape=ellipse]
69 [label="6:CtLocalVariableReferenceImpl@result" shape=ellipse]
70 [label="6:CtVariableReadImpl@result" shape=ellipse]
71 [label="6:CtPackageReferenceImpl@" shape=ellipse]
72 [label="6:CtTypeReferenceImpl@TestResult" shape=ellipse]
73 [label="6:CtExecutableReferenceImpl@wasSuccessful()" shape=ellipse]
74 [label="6:CtInvocationImpl@result.wasSuccessful()" shape=ellipse]
75 [label="6:CtVirtualElement@wasSuccessful" shape=ellipse]
76 [label="6:CtInvocationImpl@assertTrue()" shape=ellipse]
77 [label="6:CtVirtualElement@assertTrue" shape=ellipse]
78 [label="6:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
4 -> 7 [label="AST"];
4 -> 8 [label="AST"];
9 -> 10 [label="AST"];
11 -> 12 [label="AST"];
11 -> 13 [label="AST"];
14 -> 15 [label="AST"];
14 -> 11 [label="AST"];
14 -> 17 [label="Data Dep"];
16 -> 4 [label="AST"];
16 -> 9 [label="AST"];
16 -> 14 [label="AST"];
17 -> 25 [label="Define-Use"];
18 -> 17 [label="AST"];
18 -> 2 [label="AST"];
18 -> 16 [label="AST"];
19 -> 20 [label="AST"];
21 -> 22 [label="AST"];
21 -> 23 [label="AST"];
25 -> 26 [label="AST"];
25 -> 28 [label="Data Dep"];
27 -> 24 [label="AST"];
27 -> 25 [label="AST"];
27 -> 21 [label="AST"];
28 -> 43 [label="Define-Use"];
28 -> 51 [label="Define-Use"];
29 -> 28 [label="AST"];
29 -> 19 [label="AST"];
29 -> 27 [label="AST"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
36 -> 34 [label="AST"];
38 -> 39 [label="AST"];
40 -> 41 [label="AST"];
43 -> 44 [label="AST"];
45 -> 42 [label="AST"];
45 -> 43 [label="AST"];
45 -> 40 [label="AST"];
46 -> 33 [label="AST"];
46 -> 36 [label="AST"];
46 -> 30 [label="AST"];
46 -> 38 [label="AST"];
46 -> 45 [label="AST"];
47 -> 48 [label="AST"];
47 -> 49 [label="AST"];
51 -> 52 [label="AST"];
53 -> 50 [label="AST"];
53 -> 51 [label="AST"];
53 -> 47 [label="AST"];
53 -> 78 [label="Action"];
54 -> 53 [label="AST"];
54 -> 57 [label="Action"];
55 -> 18 [label="AST"];
55 -> 29 [label="AST"];
55 -> 46 [label="AST"];
55 -> 54 [label="AST"];
55 -> 58 [label="Action"];
56 -> 1 [label="AST"];
56 -> 0 [label="AST"];
56 -> 55 [label="AST"];
58 -> 76 [label="Action"];
60 -> 59 [label="AST"];
62 -> 61 [label="AST"];
63 -> 62 [label="AST"];
64 -> 60 [label="AST"];
64 -> 63 [label="AST"];
66 -> 65 [label="AST"];
68 -> 67 [label="AST"];
69 -> 68 [label="AST"];
70 -> 69 [label="AST"];
72 -> 71 [label="AST"];
73 -> 72 [label="AST"];
74 -> 75 [label="AST"];
74 -> 70 [label="AST"];
74 -> 73 [label="AST"];
76 -> 77 [label="AST"];
76 -> 64 [label="AST"];
76 -> 66 [label="AST"];
76 -> 74 [label="AST"];
78 -> 76 [label="Action"];
}