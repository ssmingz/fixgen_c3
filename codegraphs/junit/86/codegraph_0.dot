digraph "getFilteredTrace#?,Throwable" {
0 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
2 [label="2:CtVirtualElement@getFilteredTrace" shape=ellipse]
3 [label="2:CtParameterImpl@Throwable t" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@Throwable" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@StringWriter" shape=ellipse]
6 [label="3:CtPackageReferenceImpl@" shape=ellipse]
7 [label="3:CtExecutableReferenceImpl@StringWriter()" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@StringWriter" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@StringWriter" shape=ellipse]
10 [label="3:CtConstructorCallImpl@new StringWriter()" shape=ellipse]
11 [label="3:CtVirtualElement@stringWriter" shape=ellipse]
12 [label="3:CtLocalVariableImpl@StringWriter stringWriter = new StringWriter()" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
14 [label="4:CtPackageReferenceImpl@" shape=ellipse]
15 [label="4:CtExecutableReferenceImpl@PrintWriter()" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
17 [label="4:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
18 [label="4:CtVariableReadImpl@stringWriter" shape=ellipse]
19 [label="4:CtLocalVariableReferenceImpl@stringWriter" shape=ellipse]
20 [label="4:CtConstructorCallImpl@new PrintWriter(stringWriter)" shape=ellipse]
21 [label="4:CtVirtualElement@writer" shape=ellipse]
22 [label="4:CtLocalVariableImpl@PrintWriter writer = new PrintWriter(stringWriter)" shape=ellipse]
23 [label="5:CtExecutableReferenceImpl@printStackTrace(java.io.PrintStream)" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@Throwable" shape=ellipse]
25 [label="5:CtTypeReferenceImpl@void" shape=ellipse]
26 [label="5:CtTypeReferenceImpl@PrintStream" shape=ellipse]
27 [label="5:CtVirtualElement@printStackTrace" shape=ellipse]
28 [label="5:CtVariableReadImpl@t" shape=ellipse]
29 [label="5:CtParameterReferenceImpl@t" shape=ellipse]
30 [label="5:CtVariableReadImpl@writer" shape=ellipse]
31 [label="5:CtLocalVariableReferenceImpl@writer" shape=ellipse]
32 [label="5:CtInvocationImpl@t.printStackTrace(writer)" shape=ellipse]
33 [label="6:CtTypeReferenceImpl@StringBuffer" shape=ellipse]
34 [label="6:CtPackageReferenceImpl@java.lang" shape=ellipse]
35 [label="6:CtExecutableReferenceImpl@getBuffer()" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@StringWriter" shape=ellipse]
37 [label="6:CtTypeReferenceImpl@StringBuffer" shape=ellipse]
38 [label="6:CtVirtualElement@getBuffer" shape=ellipse]
39 [label="6:CtVariableReadImpl@stringWriter" shape=ellipse]
40 [label="6:CtLocalVariableReferenceImpl@stringWriter" shape=ellipse]
41 [label="6:CtInvocationImpl@stringWriter.getBuffer()" shape=ellipse]
42 [label="6:CtVirtualElement@buffer" shape=ellipse]
43 [label="6:CtLocalVariableImpl@StringBuffer buffer = stringWriter.getBuffer()" shape=ellipse]
44 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
45 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
46 [label="7:CtExecutableReferenceImpl@toString()" shape=ellipse]
47 [label="7:CtTypeReferenceImpl@StringBuffer" shape=ellipse]
48 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
49 [label="7:CtVirtualElement@toString" shape=ellipse]
50 [label="7:CtVariableReadImpl@buffer" shape=ellipse]
51 [label="7:CtLocalVariableReferenceImpl@buffer" shape=ellipse]
52 [label="7:CtInvocationImpl@buffer.toString()" shape=ellipse]
53 [label="7:CtVirtualElement@trace" shape=ellipse]
54 [label="7:CtLocalVariableImpl@String trace = buffer.toString()" shape=ellipse]
55 [label="8:CtExecutableReferenceImpl@filterStack(java.lang.String)" shape=ellipse]
56 [label="8:CtTypeReferenceImpl@BaseTestRunner" shape=ellipse]
57 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
58 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
59 [label="8:CtVirtualElement@filterStack" shape=ellipse]
60 [label="8:CtTypeAccessImpl@BaseTestRunner" shape=ellipse]
61 [label="8:CtTypeReferenceImpl@BaseTestRunner" shape=ellipse]
62 [label="8:CtVariableReadImpl@trace" shape=ellipse]
63 [label="8:CtLocalVariableReferenceImpl@trace" shape=ellipse]
64 [label="8:CtInvocationImpl@BaseTestRunner.filterStack(trace)" shape=ellipse]
65 [label="8:CtReturnImpl@return BaseTestRunner.filterStack(trace)" shape=ellipse]
66 [label="2:CtBlockImpl@\{
    StringWriter stringWriter = new StringWriter();
    PrintWriter writer = new PrintWriter(stringWriter);
    t.printStackTrace(writer);
    StringBuffer buffer = stringWriter.getBuffer();
    String trace = buffer.toString();
    return BaseTestRunner.filterStack(trace);
\}" shape=ellipse]
67 [label="2:CtMethodImpl@public static String getFilteredTrace(Throwable t) \{
    StringWriter stringWriter = new StringWriter();
    PrintWriter writer = new PrintWriter(stringWriter);
    t.printStackTrace(writer);
    StringBuffer buffer = stringWriter.getBuffer();
    String trace = buffer.toString();
    return BaseTestRunner.filterStack(trace);
\}" shape=ellipse]
68 [label="8:Update@UPDATE" shape=ellipse]
69 [label="8:CtPackageReferenceImpl@" shape=ellipse]
70 [label="8:CtTypeReferenceImpl@BaseTestRunner" shape=ellipse]
71 [label="8:CtTypeAccessImpl@BaseTestRunner" shape=ellipse]
72 [label="8:CtPackageReferenceImpl@" shape=ellipse]
73 [label="8:CtTypeReferenceImpl@BaseTestRunner" shape=ellipse]
74 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
75 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
76 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
77 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
78 [label="8:CtExecutableReferenceImpl@getFilteredTrace(java.lang.String)" shape=ellipse]
79 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
80 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
81 [label="8:CtLocalVariableReferenceImpl@trace" shape=ellipse]
82 [label="8:CtVariableReadImpl@trace" shape=ellipse]
83 [label="8:CtInvocationImpl@BaseTestRunner.getFilteredTrace(trace)" shape=ellipse]
84 [label="8:CtVirtualElement@getFilteredTrace" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
7 -> 9 [label="AST"];
10 -> 7 [label="AST"];
11 -> 18 [label="Define-Use"];
11 -> 39 [label="Define-Use"];
12 -> 11 [label="AST"];
12 -> 5 [label="AST"];
12 -> 10 [label="AST"];
13 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 17 [label="AST"];
18 -> 19 [label="AST"];
18 -> 21 [label="Data Dep"];
20 -> 15 [label="AST"];
20 -> 18 [label="AST"];
21 -> 30 [label="Define-Use"];
22 -> 21 [label="AST"];
22 -> 13 [label="AST"];
22 -> 20 [label="AST"];
23 -> 24 [label="AST"];
23 -> 25 [label="AST"];
23 -> 26 [label="AST"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
32 -> 27 [label="AST"];
32 -> 28 [label="AST"];
32 -> 23 [label="AST"];
32 -> 30 [label="AST"];
33 -> 34 [label="AST"];
35 -> 36 [label="AST"];
35 -> 37 [label="AST"];
39 -> 40 [label="AST"];
39 -> 42 [label="Data Dep"];
41 -> 38 [label="AST"];
41 -> 39 [label="AST"];
41 -> 35 [label="AST"];
42 -> 50 [label="Define-Use"];
43 -> 42 [label="AST"];
43 -> 33 [label="AST"];
43 -> 41 [label="AST"];
44 -> 45 [label="AST"];
46 -> 47 [label="AST"];
46 -> 48 [label="AST"];
50 -> 51 [label="AST"];
50 -> 53 [label="Data Dep"];
52 -> 49 [label="AST"];
52 -> 50 [label="AST"];
52 -> 46 [label="AST"];
53 -> 62 [label="Define-Use"];
54 -> 53 [label="AST"];
54 -> 44 [label="AST"];
54 -> 52 [label="AST"];
55 -> 56 [label="AST"];
55 -> 57 [label="AST"];
55 -> 58 [label="AST"];
60 -> 61 [label="AST"];
62 -> 63 [label="AST"];
64 -> 59 [label="AST"];
64 -> 60 [label="AST"];
64 -> 55 [label="AST"];
64 -> 62 [label="AST"];
64 -> 68 [label="Action"];
65 -> 64 [label="AST"];
66 -> 12 [label="AST"];
66 -> 22 [label="AST"];
66 -> 32 [label="AST"];
66 -> 43 [label="AST"];
66 -> 54 [label="AST"];
66 -> 65 [label="AST"];
67 -> 2 [label="AST"];
67 -> 0 [label="AST"];
67 -> 3 [label="AST"];
67 -> 66 [label="AST"];
68 -> 83 [label="Action"];
70 -> 69 [label="AST"];
71 -> 70 [label="AST"];
73 -> 72 [label="AST"];
75 -> 74 [label="AST"];
77 -> 76 [label="AST"];
78 -> 73 [label="AST"];
78 -> 75 [label="AST"];
78 -> 77 [label="AST"];
80 -> 79 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
83 -> 84 [label="AST"];
83 -> 71 [label="AST"];
83 -> 78 [label="AST"];
83 -> 82 [label="AST"];
}