digraph "getTimeout#?" {
0 [label="2:CtTypeReferenceImpl@long" shape=ellipse]
1 [label="2:CtVirtualElement@getTimeout" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Test" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@getAnnotation(java.lang.Class)" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@fMethod" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@Test" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@Class<Test>" shape=ellipse]
8 [label="3:CtVirtualElement@getAnnotation" shape=ellipse]
9 [label="3:CtFieldReferenceImpl@fMethod" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
11 [label="3:CtFieldReadImpl@fMethod" shape=ellipse]
12 [label="3:CtFieldReferenceImpl@Test.class" shape=ellipse]
13 [label="3:CtTypeReferenceImpl@Test" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@Class" shape=ellipse]
15 [label="3:CtFieldReadImpl@Test.class" shape=ellipse]
16 [label="3:CtTypeAccessImpl@Test" shape=ellipse]
17 [label="3:CtInvocationImpl@fMethod.getAnnotation(Test.class)" shape=ellipse]
18 [label="3:CtVirtualElement@annotation" shape=ellipse]
19 [label="3:CtLocalVariableImpl@Test annotation = fMethod.getAnnotation(Test.class)" shape=ellipse]
20 [label="4:CtVariableReadImpl@annotation" shape=ellipse]
21 [label="4:CtLocalVariableReferenceImpl@annotation" shape=ellipse]
22 [label="4:CtLiteralImpl@null" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
24 [label="4:CtBinaryOperatorImpl@annotation == null" shape=ellipse]
25 [label="5:CtLiteralImpl@0" shape=ellipse]
26 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
27 [label="5:CtReturnImpl@return 0" shape=ellipse]
28 [label="4:CtBlockImpl@\{
    return 0;
\}" shape=ellipse]
29 [label="4:CtIfImpl@if (annotation == null) \{
    return 0;
\}" shape=ellipse]
30 [label="7:CtTypeReferenceImpl@long" shape=ellipse]
31 [label="7:CtExecutableReferenceImpl@timeout()" shape=ellipse]
32 [label="7:CtTypeReferenceImpl@Test" shape=ellipse]
33 [label="7:CtTypeReferenceImpl@long" shape=ellipse]
34 [label="7:CtVirtualElement@timeout" shape=ellipse]
35 [label="7:CtVariableReadImpl@annotation" shape=ellipse]
36 [label="7:CtLocalVariableReferenceImpl@annotation" shape=ellipse]
37 [label="7:CtInvocationImpl@annotation.timeout()" shape=ellipse]
38 [label="7:CtVirtualElement@timeout" shape=ellipse]
39 [label="7:CtLocalVariableImpl@long timeout = annotation.timeout()" shape=ellipse]
40 [label="8:CtVariableReadImpl@timeout" shape=ellipse]
41 [label="8:CtLocalVariableReferenceImpl@timeout" shape=ellipse]
42 [label="8:CtReturnImpl@return timeout" shape=ellipse]
43 [label="2:CtBlockImpl@\{
    Test annotation = fMethod.getAnnotation(Test.class);
    if (annotation == null) \{
        return 0;
    \}
    long timeout = annotation.timeout();
    return timeout;
\}" shape=ellipse]
44 [label="2:CtMethodImpl@public long getTimeout() \{
    Test annotation = fMethod.getAnnotation(Test.class);
    if (annotation == null) \{
        return 0;
    \}
    long timeout = annotation.timeout();
    return timeout;
\}" shape=ellipse]
45 [label="3:Delete@DELETE" shape=ellipse]
46 [label="3:Insert@INSERT" shape=ellipse]
47 [label="3:CtPackageReferenceImpl@" shape=ellipse]
48 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
49 [label="3:CtPackageReferenceImpl@" shape=ellipse]
50 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
51 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
52 [label="3:CtThisAccessImpl@" shape=ellipse]
53 [label="3:CtExecutableReferenceImpl@getMethod()" shape=ellipse]
54 [label="3:CtInvocationImpl@getMethod()" shape=ellipse]
55 [label="3:CtVirtualElement@getMethod" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
4 -> 7 [label="AST"];
9 -> 10 [label="AST"];
11 -> 9 [label="AST"];
11 -> 18 [label="Data Dep"];
11 -> 45 [label="Action"];
12 -> 13 [label="AST"];
12 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 12 [label="AST"];
15 -> 18 [label="Data Dep"];
17 -> 8 [label="AST"];
17 -> 11 [label="AST"];
17 -> 4 [label="AST"];
17 -> 15 [label="AST"];
17 -> 46 [label="Action"];
18 -> 20 [label="Define-Use"];
18 -> 35 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 2 [label="AST"];
19 -> 17 [label="AST"];
20 -> 21 [label="AST"];
22 -> 23 [label="AST"];
24 -> 20 [label="AST"];
24 -> 22 [label="AST"];
24 -> 28 [label="Control Dep"];
24 -> 27 [label="Control Dep"];
24 -> 25 [label="Control Dep"];
25 -> 26 [label="AST"];
27 -> 25 [label="AST"];
28 -> 27 [label="AST"];
29 -> 24 [label="AST"];
29 -> 28 [label="AST"];
31 -> 32 [label="AST"];
31 -> 33 [label="AST"];
35 -> 36 [label="AST"];
35 -> 38 [label="Data Dep"];
37 -> 34 [label="AST"];
37 -> 35 [label="AST"];
37 -> 31 [label="AST"];
38 -> 40 [label="Define-Use"];
39 -> 38 [label="AST"];
39 -> 30 [label="AST"];
39 -> 37 [label="AST"];
40 -> 41 [label="AST"];
42 -> 40 [label="AST"];
43 -> 19 [label="AST"];
43 -> 29 [label="AST"];
43 -> 39 [label="AST"];
43 -> 42 [label="AST"];
44 -> 1 [label="AST"];
44 -> 0 [label="AST"];
44 -> 43 [label="AST"];
46 -> 54 [label="Action"];
48 -> 47 [label="AST"];
50 -> 49 [label="AST"];
51 -> 50 [label="AST"];
52 -> 48 [label="AST"];
52 -> 51 [label="AST"];
54 -> 55 [label="AST"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
}