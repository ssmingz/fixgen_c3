digraph "visitToken#?,DetailAST" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@visitToken" shape=ellipse]
2 [label="3:CtParameterImpl@DetailAST ast" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="4:CtExecutableReferenceImpl@getType()" shape=ellipse]
5 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
6 [label="4:CtVirtualElement@getType" shape=ellipse]
7 [label="4:CtVariableReadImpl@ast" shape=ellipse]
8 [label="4:CtParameterReferenceImpl@ast" shape=ellipse]
9 [label="4:CtInvocationImpl@ast.getType()" shape=ellipse]
10 [label="5:CtFieldReferenceImpl@TokenTypes.LITERAL_THROWS" shape=ellipse]
11 [label="5:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
12 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
13 [label="5:CtFieldReadImpl@TokenTypes.LITERAL_THROWS" shape=ellipse]
14 [label="5:CtTypeAccessImpl@TokenTypes" shape=ellipse]
15 [label="6:CtExecutableReferenceImpl@visitLiteralThrows(<unknown>)" shape=ellipse]
16 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
17 [label="6:CtVirtualElement@visitLiteralThrows" shape=ellipse]
18 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
19 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
20 [label="6:CtThisAccessImpl@" shape=ellipse]
21 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
22 [label="6:CtVariableReadImpl@ast" shape=ellipse]
23 [label="6:CtParameterReferenceImpl@ast" shape=ellipse]
24 [label="6:CtInvocationImpl@visitLiteralThrows(ast)" shape=ellipse]
25 [label="7:CtBreakImpl@break" shape=ellipse]
26 [label="5:CtCaseImpl@case TokenTypes.LITERAL_THROWS :
    visitLiteralThrows(ast);
    break;" shape=ellipse]
27 [label="9:CtExecutableReferenceImpl@java.lang.IllegalStateException(java.lang.String)" shape=ellipse]
28 [label="9:CtTypeReferenceImpl@IllegalStateException" shape=ellipse]
29 [label="9:CtTypeReferenceImpl@IllegalStateException" shape=ellipse]
30 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
31 [label="9:CtExecutableReferenceImpl@toString()" shape=ellipse]
32 [label="9:CtTypeReferenceImpl@DetailAST" shape=ellipse]
33 [label="9:CtVirtualElement@toString" shape=ellipse]
34 [label="9:CtVariableReadImpl@ast" shape=ellipse]
35 [label="9:CtParameterReferenceImpl@ast" shape=ellipse]
36 [label="9:CtInvocationImpl@ast.toString()" shape=ellipse]
37 [label="9:CtConstructorCallImpl@new IllegalStateException(ast.toString())" shape=ellipse]
38 [label="9:CtThrowImpl@throw new IllegalStateException(ast.toString())" shape=ellipse]
39 [label="8:CtCaseImpl@default :
    throw new IllegalStateException(ast.toString());" shape=ellipse]
40 [label="4:CtSwitchImpl@switch (ast.getType()) \{
    case TokenTypes.LITERAL_THROWS :
        visitLiteralThrows(ast);
        break;
    default :
        throw new IllegalStateException(ast.toString());
\}" shape=ellipse]
41 [label="3:CtBlockImpl@\{
    switch (ast.getType()) \{
        case TokenTypes.LITERAL_THROWS :
            visitLiteralThrows(ast);
            break;
        default :
            throw new IllegalStateException(ast.toString());
    \}
\}" shape=ellipse]
42 [label="3:CtMethodImpl@@Override
public void visitToken(DetailAST ast) \{
    switch (ast.getType()) \{
        case TokenTypes.LITERAL_THROWS :
            visitLiteralThrows(ast);
            break;
        default :
            throw new IllegalStateException(ast.toString());
    \}
\}" shape=ellipse]
43 [label="2:CtAnnotationImpl@@Override" shape=ellipse]
44 [label="4:Delete@DELETE" shape=ellipse]
45 [label="4:Insert@INSERT" shape=ellipse]
46 [label="4:CtPackageReferenceImpl@" shape=ellipse]
47 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
48 [label="4:CtParameterReferenceImpl@ast" shape=ellipse]
49 [label="4:CtVariableReadImpl@ast" shape=ellipse]
50 [label="4:CtPackageReferenceImpl@" shape=ellipse]
51 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
52 [label="4:CtExecutableReferenceImpl@getType()" shape=ellipse]
53 [label="4:CtInvocationImpl@ast.getType()" shape=ellipse]
54 [label="4:CtVirtualElement@getType" shape=ellipse]
55 [label="4:CtPackageReferenceImpl@" shape=ellipse]
56 [label="4:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
57 [label="4:CtTypeAccessImpl@TokenTypes" shape=ellipse]
58 [label="4:CtPackageReferenceImpl@" shape=ellipse]
59 [label="4:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
60 [label="4:CtPackageReferenceImpl@" shape=ellipse]
61 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
62 [label="4:CtFieldReferenceImpl@TokenTypes.LITERAL_THROWS" shape=ellipse]
63 [label="4:CtFieldReadImpl@TokenTypes.LITERAL_THROWS" shape=ellipse]
64 [label="4:CtBinaryOperatorImpl@ast.getType() == TokenTypes.LITERAL_THROWS" shape=ellipse]
65 [label="5:CtPackageReferenceImpl@" shape=ellipse]
66 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
67 [label="5:CtPackageReferenceImpl@" shape=ellipse]
68 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
69 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
70 [label="5:CtThisAccessImpl@" shape=ellipse]
71 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
72 [label="5:CtExecutableReferenceImpl@visitLiteralThrows(<unknown>)" shape=ellipse]
73 [label="5:CtPackageReferenceImpl@" shape=ellipse]
74 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
75 [label="5:CtParameterReferenceImpl@ast" shape=ellipse]
76 [label="5:CtVariableReadImpl@ast" shape=ellipse]
77 [label="5:CtInvocationImpl@visitLiteralThrows(ast)" shape=ellipse]
78 [label="5:CtVirtualElement@visitLiteralThrows" shape=ellipse]
79 [label="4:CtBlockImpl@\{
    visitLiteralThrows(ast);
\}" shape=ellipse]
80 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
81 [label="7:CtTypeReferenceImpl@IllegalStateException" shape=ellipse]
82 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
83 [label="7:CtTypeReferenceImpl@IllegalStateException" shape=ellipse]
84 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
85 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
86 [label="7:CtExecutableReferenceImpl@java.lang.IllegalStateException(java.lang.String)" shape=ellipse]
87 [label="7:CtPackageReferenceImpl@" shape=ellipse]
88 [label="7:CtTypeReferenceImpl@DetailAST" shape=ellipse]
89 [label="7:CtParameterReferenceImpl@ast" shape=ellipse]
90 [label="7:CtVariableReadImpl@ast" shape=ellipse]
91 [label="7:CtPackageReferenceImpl@" shape=ellipse]
92 [label="7:CtTypeReferenceImpl@DetailAST" shape=ellipse]
93 [label="7:CtExecutableReferenceImpl@toString()" shape=ellipse]
94 [label="7:CtInvocationImpl@ast.toString()" shape=ellipse]
95 [label="7:CtVirtualElement@toString" shape=ellipse]
96 [label="7:CtConstructorCallImpl@new IllegalStateException(ast.toString())" shape=ellipse]
97 [label="7:CtThrowImpl@throw new IllegalStateException(ast.toString())" shape=ellipse]
98 [label="6:CtBlockImpl@\{
    throw new IllegalStateException(ast.toString());
\}" shape=ellipse]
99 [label="4:CtIfImpl@if ( == ) \{

\} else \{

\}" shape=ellipse]
100 [label="4:Move@MOVE" shape=ellipse]
101 [label="5:Move@MOVE" shape=ellipse]
102 [label="6:Move@MOVE" shape=ellipse]
103 [label="9:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
7 -> 8 [label="AST"];
9 -> 6 [label="AST"];
9 -> 7 [label="AST"];
9 -> 4 [label="AST"];
9 -> 26 [label="Control Dep"];
9 -> 13 [label="Control Dep"];
9 -> 24 [label="Control Dep"];
9 -> 15 [label="Control Dep"];
9 -> 20 [label="Control Dep"];
9 -> 18 [label="Control Dep"];
9 -> 22 [label="Control Dep"];
9 -> 25 [label="Control Dep"];
9 -> 39 [label="Control Dep"];
9 -> 38 [label="Control Dep"];
9 -> 37 [label="Control Dep"];
9 -> 27 [label="Control Dep"];
9 -> 36 [label="Control Dep"];
9 -> 31 [label="Control Dep"];
9 -> 34 [label="Control Dep"];
9 -> 100 [label="Action"];
10 -> 11 [label="AST"];
10 -> 12 [label="AST"];
13 -> 14 [label="AST"];
13 -> 10 [label="AST"];
13 -> 101 [label="Action"];
15 -> 16 [label="AST"];
18 -> 19 [label="AST"];
20 -> 21 [label="AST"];
20 -> 18 [label="AST"];
22 -> 23 [label="AST"];
24 -> 17 [label="AST"];
24 -> 20 [label="AST"];
24 -> 15 [label="AST"];
24 -> 22 [label="AST"];
24 -> 102 [label="Action"];
26 -> 13 [label="AST"];
26 -> 24 [label="AST"];
26 -> 25 [label="AST"];
27 -> 28 [label="AST"];
27 -> 29 [label="AST"];
27 -> 30 [label="AST"];
31 -> 32 [label="AST"];
34 -> 35 [label="AST"];
36 -> 33 [label="AST"];
36 -> 34 [label="AST"];
36 -> 31 [label="AST"];
37 -> 27 [label="AST"];
37 -> 36 [label="AST"];
38 -> 37 [label="AST"];
38 -> 103 [label="Action"];
39 -> 38 [label="AST"];
40 -> 9 [label="AST"];
40 -> 26 [label="AST"];
40 -> 39 [label="AST"];
40 -> 44 [label="Action"];
41 -> 40 [label="AST"];
41 -> 45 [label="Action"];
42 -> 1 [label="AST"];
42 -> 43 [label="AST"];
42 -> 0 [label="AST"];
42 -> 2 [label="AST"];
42 -> 41 [label="AST"];
45 -> 99 [label="Action"];
47 -> 46 [label="AST"];
48 -> 47 [label="AST"];
49 -> 48 [label="AST"];
51 -> 50 [label="AST"];
52 -> 51 [label="AST"];
53 -> 54 [label="AST"];
53 -> 49 [label="AST"];
53 -> 52 [label="AST"];
56 -> 55 [label="AST"];
57 -> 56 [label="AST"];
59 -> 58 [label="AST"];
61 -> 60 [label="AST"];
62 -> 59 [label="AST"];
62 -> 61 [label="AST"];
63 -> 57 [label="AST"];
63 -> 62 [label="AST"];
64 -> 53 [label="AST"];
64 -> 63 [label="AST"];
64 -> 79 [label="Control Dep"];
64 -> 77 [label="Control Dep"];
64 -> 72 [label="Control Dep"];
64 -> 70 [label="Control Dep"];
64 -> 69 [label="Control Dep"];
64 -> 76 [label="Control Dep"];
64 -> 98 [label="Control Dep"];
64 -> 97 [label="Control Dep"];
64 -> 96 [label="Control Dep"];
64 -> 86 [label="Control Dep"];
64 -> 94 [label="Control Dep"];
64 -> 93 [label="Control Dep"];
64 -> 90 [label="Control Dep"];
64 -> 24 [label="Control Dep"];
64 -> 15 [label="Control Dep"];
64 -> 20 [label="Control Dep"];
64 -> 18 [label="Control Dep"];
64 -> 22 [label="Control Dep"];
64 -> 38 [label="Control Dep"];
64 -> 37 [label="Control Dep"];
64 -> 27 [label="Control Dep"];
64 -> 36 [label="Control Dep"];
64 -> 31 [label="Control Dep"];
64 -> 34 [label="Control Dep"];
66 -> 65 [label="AST"];
68 -> 67 [label="AST"];
69 -> 68 [label="AST"];
70 -> 66 [label="AST"];
70 -> 69 [label="AST"];
72 -> 71 [label="AST"];
74 -> 73 [label="AST"];
75 -> 74 [label="AST"];
76 -> 75 [label="AST"];
77 -> 78 [label="AST"];
77 -> 70 [label="AST"];
77 -> 72 [label="AST"];
77 -> 76 [label="AST"];
79 -> 77 [label="AST"];
81 -> 80 [label="AST"];
83 -> 82 [label="AST"];
85 -> 84 [label="AST"];
86 -> 81 [label="AST"];
86 -> 83 [label="AST"];
86 -> 85 [label="AST"];
88 -> 87 [label="AST"];
89 -> 88 [label="AST"];
90 -> 89 [label="AST"];
92 -> 91 [label="AST"];
93 -> 92 [label="AST"];
94 -> 95 [label="AST"];
94 -> 90 [label="AST"];
94 -> 93 [label="AST"];
96 -> 86 [label="AST"];
96 -> 94 [label="AST"];
97 -> 96 [label="AST"];
98 -> 97 [label="AST"];
99 -> 64 [label="AST"];
99 -> 79 [label="AST"];
99 -> 98 [label="AST"];
100 -> 64 [label="Action"];
101 -> 64 [label="Action"];
102 -> 79 [label="Action"];
103 -> 98 [label="Action"];
}