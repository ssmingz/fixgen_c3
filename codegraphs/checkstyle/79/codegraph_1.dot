digraph "method#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@method" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
3 [label="3:CtLiteralImpl@0" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="3:CtVirtualElement@x" shape=ellipse]
6 [label="3:CtLocalVariableImpl@int x = 0" shape=ellipse]
7 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
8 [label="5:CtLiteralImpl@1" shape=ellipse]
9 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
10 [label="5:CtVirtualElement@z" shape=ellipse]
11 [label="5:CtLocalVariableImpl@int z = 1" shape=ellipse]
12 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
13 [label="6:CtVariableReadImpl@z" shape=ellipse]
14 [label="6:CtLocalVariableReferenceImpl@z" shape=ellipse]
15 [label="6:CtVirtualElement@y" shape=ellipse]
16 [label="6:CtLocalVariableImpl@int y = z" shape=ellipse]
17 [label="4:CtBlockImpl@\{
    int z = 1;
    int y = z;
\}" shape=ellipse]
18 [label="8:CtVariableReadImpl@x" shape=ellipse]
19 [label="8:CtLocalVariableReferenceImpl@x" shape=ellipse]
20 [label="8:CtLiteralImpl@1" shape=ellipse]
21 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
22 [label="8:CtBinaryOperatorImpl@x == 1" shape=ellipse]
23 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
24 [label="9:CtVariableWriteImpl@x" shape=ellipse]
25 [label="9:CtLocalVariableReferenceImpl@x" shape=ellipse]
26 [label="9:CtLiteralImpl@2" shape=ellipse]
27 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
28 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
29 [label="9:CtAssignmentImpl@x = 2" shape=ellipse]
30 [label="8:CtBlockImpl@\{
    x = 2;
\}" shape=ellipse]
31 [label="8:CtIfImpl@if (x == 1) \{
    x = 2;
\}" shape=ellipse]
32 [label="11:CtVariableReadImpl@x" shape=ellipse]
33 [label="11:CtLocalVariableReferenceImpl@x" shape=ellipse]
34 [label="12:CtLiteralImpl@0" shape=ellipse]
35 [label="12:CtTypeReferenceImpl@int" shape=ellipse]
36 [label="13:CtVariableWriteImpl@x" shape=ellipse]
37 [label="13:CtLocalVariableReferenceImpl@x" shape=ellipse]
38 [label="13:CtLiteralImpl@3" shape=ellipse]
39 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
40 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
41 [label="13:CtAssignmentImpl@x = 3" shape=ellipse]
42 [label="14:CtBreakImpl@break" shape=ellipse]
43 [label="12:CtCaseImpl@case 0 :
    x = 3;
    break;" shape=ellipse]
44 [label="15:CtLiteralImpl@1" shape=ellipse]
45 [label="15:CtTypeReferenceImpl@int" shape=ellipse]
46 [label="17:CtVariableWriteImpl@x" shape=ellipse]
47 [label="17:CtLocalVariableReferenceImpl@x" shape=ellipse]
48 [label="17:CtLiteralImpl@1" shape=ellipse]
49 [label="17:CtTypeReferenceImpl@int" shape=ellipse]
50 [label="17:CtTypeReferenceImpl@int" shape=ellipse]
51 [label="17:CtAssignmentImpl@x = 1" shape=ellipse]
52 [label="16:CtBlockImpl@\{
    x = 1;
\}" shape=ellipse]
53 [label="19:CtBreakImpl@break" shape=ellipse]
54 [label="15:CtCaseImpl@case 1 :
    \{
        x = 1;
    \}
    break;" shape=ellipse]
55 [label="20:CtLiteralImpl@2" shape=ellipse]
56 [label="20:CtTypeReferenceImpl@int" shape=ellipse]
57 [label="22:CtVariableWriteImpl@x" shape=ellipse]
58 [label="22:CtLocalVariableReferenceImpl@x" shape=ellipse]
59 [label="22:CtLiteralImpl@1" shape=ellipse]
60 [label="22:CtTypeReferenceImpl@int" shape=ellipse]
61 [label="22:CtTypeReferenceImpl@int" shape=ellipse]
62 [label="22:CtAssignmentImpl@x = 1" shape=ellipse]
63 [label="23:CtBreakImpl@break" shape=ellipse]
64 [label="21:CtBlockImpl@\{
    x = 1;
    break;
\}" shape=ellipse]
65 [label="20:CtCaseImpl@case 2 :
    \{
        x = 1;
        break;
    \}" shape=ellipse]
66 [label="25:CtLiteralImpl@3" shape=ellipse]
67 [label="25:CtTypeReferenceImpl@int" shape=ellipse]
68 [label="25:CtCaseImpl@case 3 :" shape=ellipse]
69 [label="27:CtExecutableReferenceImpl@println(java.lang.String)" shape=ellipse]
70 [label="27:CtTypeReferenceImpl@PrintStream" shape=ellipse]
71 [label="27:CtTypeReferenceImpl@void" shape=ellipse]
72 [label="27:CtTypeReferenceImpl@String" shape=ellipse]
73 [label="27:CtVirtualElement@println" shape=ellipse]
74 [label="27:CtFieldReferenceImpl@java.lang.System.out" shape=ellipse]
75 [label="27:CtTypeReferenceImpl@System" shape=ellipse]
76 [label="27:CtTypeReferenceImpl@PrintStream" shape=ellipse]
77 [label="27:CtFieldReadImpl@System.out" shape=ellipse]
78 [label="27:CtTypeAccessImpl@System" shape=ellipse]
79 [label="27:CtLiteralImpl@\"Hello\"" shape=ellipse]
80 [label="27:CtTypeReferenceImpl@String" shape=ellipse]
81 [label="27:CtInvocationImpl@System.out.println(\"Hello\")" shape=ellipse]
82 [label="29:CtVariableWriteImpl@x" shape=ellipse]
83 [label="29:CtLocalVariableReferenceImpl@x" shape=ellipse]
84 [label="29:CtLiteralImpl@2" shape=ellipse]
85 [label="29:CtTypeReferenceImpl@int" shape=ellipse]
86 [label="29:CtTypeReferenceImpl@int" shape=ellipse]
87 [label="29:CtAssignmentImpl@x = 2" shape=ellipse]
88 [label="28:CtBlockImpl@\{
    x = 2;
\}" shape=ellipse]
89 [label="26:CtCaseImpl@default :
    System.out.println(\"Hello\");
    \{
        x = 2;
    \}" shape=ellipse]
90 [label="11:CtSwitchImpl@switch (x) \{
    case 0 :
        x = 3;
        break;
    case 1 :
        \{
            x = 1;
        \}
        break;
    case 2 :
        \{
            x = 1;
            break;
        \}
    case 3 :
    default :
        System.out.println(\"Hello\");
        \{
            x = 2;
        \}
\}" shape=ellipse]
91 [label="2:CtBlockImpl@\{
    int x = 0;
    \{
        int z = 1;
        int y = z;
    \}
    if (x == 1) \{
        x = 2;
    \}
    switch (x) \{
        case 0 :
            x = 3;
            break;
        case 1 :
            \{
                x = 1;
            \}
            break;
        case 2 :
            \{
                x = 1;
                break;
            \}
        case 3 :
        default :
            System.out.println(\"Hello\");
            \{
                x = 2;
            \}
    \}
\}" shape=ellipse]
92 [label="2:CtMethodImpl@public void method() \{
    int x = 0;
    \{
        int z = 1;
        int y = z;
    \}
    if (x == 1) \{
        x = 2;
    \}
    switch (x) \{
        case 0 :
            x = 3;
            break;
        case 1 :
            \{
                x = 1;
            \}
            break;
        case 2 :
            \{
                x = 1;
                break;
            \}
        case 3 :
        default :
            System.out.println(\"Hello\");
            \{
                x = 2;
            \}
    \}
\}" shape=ellipse]
93 [label="27:Update@UPDATE" shape=ellipse]
94 [label="27:CtPackageReferenceImpl@java.lang" shape=ellipse]
95 [label="27:CtTypeReferenceImpl@System" shape=ellipse]
96 [label="27:CtTypeAccessImpl@System" shape=ellipse]
97 [label="27:CtPackageReferenceImpl@java.lang" shape=ellipse]
98 [label="27:CtTypeReferenceImpl@System" shape=ellipse]
99 [label="27:CtTypeReferenceImpl@int" shape=ellipse]
100 [label="27:CtPackageReferenceImpl@java.lang" shape=ellipse]
101 [label="27:CtTypeReferenceImpl@Object" shape=ellipse]
102 [label="27:CtExecutableReferenceImpl@identityHashCode(java.lang.Object)" shape=ellipse]
103 [label="27:CtPackageReferenceImpl@java.lang" shape=ellipse]
104 [label="27:CtTypeReferenceImpl@String" shape=ellipse]
105 [label="27:CtLiteralImpl@\"Hello\"" shape=ellipse]
106 [label="27:CtInvocationImpl@System.identityHashCode(\"Hello\")" shape=ellipse]
107 [label="27:CtVirtualElement@identityHashCode" shape=ellipse]
108 [label="27:Move@MOVE" shape=ellipse]
3 -> 4 [label="AST"];
5 -> 18 [label="Define-Use"];
5 -> 32 [label="Define-Use"];
6 -> 5 [label="AST"];
6 -> 2 [label="AST"];
6 -> 3 [label="AST"];
8 -> 9 [label="AST"];
10 -> 13 [label="Define-Use"];
11 -> 10 [label="AST"];
11 -> 7 [label="AST"];
11 -> 8 [label="AST"];
13 -> 14 [label="AST"];
13 -> 15 [label="Data Dep"];
16 -> 15 [label="AST"];
16 -> 12 [label="AST"];
16 -> 13 [label="AST"];
17 -> 11 [label="AST"];
17 -> 16 [label="AST"];
18 -> 19 [label="AST"];
20 -> 21 [label="AST"];
22 -> 23 [label="AST"];
22 -> 18 [label="AST"];
22 -> 20 [label="AST"];
22 -> 30 [label="Control Dep"];
22 -> 29 [label="Control Dep"];
22 -> 24 [label="Control Dep"];
22 -> 26 [label="Control Dep"];
24 -> 25 [label="AST"];
24 -> 32 [label="Define-Use"];
25 -> 32 [label="Define-Use"];
26 -> 27 [label="AST"];
29 -> 28 [label="AST"];
29 -> 24 [label="AST"];
29 -> 26 [label="AST"];
30 -> 29 [label="AST"];
31 -> 22 [label="AST"];
31 -> 30 [label="AST"];
32 -> 33 [label="AST"];
32 -> 43 [label="Control Dep"];
32 -> 34 [label="Control Dep"];
32 -> 41 [label="Control Dep"];
32 -> 36 [label="Control Dep"];
32 -> 38 [label="Control Dep"];
32 -> 42 [label="Control Dep"];
32 -> 54 [label="Control Dep"];
32 -> 44 [label="Control Dep"];
32 -> 52 [label="Control Dep"];
32 -> 51 [label="Control Dep"];
32 -> 46 [label="Control Dep"];
32 -> 48 [label="Control Dep"];
32 -> 53 [label="Control Dep"];
32 -> 65 [label="Control Dep"];
32 -> 55 [label="Control Dep"];
32 -> 64 [label="Control Dep"];
32 -> 62 [label="Control Dep"];
32 -> 57 [label="Control Dep"];
32 -> 59 [label="Control Dep"];
32 -> 63 [label="Control Dep"];
32 -> 68 [label="Control Dep"];
32 -> 66 [label="Control Dep"];
32 -> 89 [label="Control Dep"];
32 -> 81 [label="Control Dep"];
32 -> 69 [label="Control Dep"];
32 -> 77 [label="Control Dep"];
32 -> 79 [label="Control Dep"];
32 -> 88 [label="Control Dep"];
32 -> 87 [label="Control Dep"];
32 -> 82 [label="Control Dep"];
32 -> 84 [label="Control Dep"];
32 -> 96 [label="Control Dep"];
32 -> 102 [label="Control Dep"];
32 -> 105 [label="Control Dep"];
32 -> 106 [label="Control Dep"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
38 -> 39 [label="AST"];
41 -> 40 [label="AST"];
41 -> 36 [label="AST"];
41 -> 38 [label="AST"];
43 -> 34 [label="AST"];
43 -> 41 [label="AST"];
43 -> 42 [label="AST"];
44 -> 45 [label="AST"];
46 -> 47 [label="AST"];
48 -> 49 [label="AST"];
51 -> 50 [label="AST"];
51 -> 46 [label="AST"];
51 -> 48 [label="AST"];
52 -> 51 [label="AST"];
54 -> 44 [label="AST"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
55 -> 56 [label="AST"];
57 -> 58 [label="AST"];
59 -> 60 [label="AST"];
62 -> 61 [label="AST"];
62 -> 57 [label="AST"];
62 -> 59 [label="AST"];
64 -> 62 [label="AST"];
64 -> 63 [label="AST"];
65 -> 55 [label="AST"];
65 -> 64 [label="AST"];
66 -> 67 [label="AST"];
68 -> 66 [label="AST"];
69 -> 70 [label="AST"];
69 -> 71 [label="AST"];
69 -> 72 [label="AST"];
74 -> 75 [label="AST"];
74 -> 76 [label="AST"];
77 -> 78 [label="AST"];
77 -> 74 [label="AST"];
78 -> 108 [label="Action"];
79 -> 80 [label="AST"];
81 -> 73 [label="AST"];
81 -> 77 [label="AST"];
81 -> 69 [label="AST"];
81 -> 79 [label="AST"];
81 -> 93 [label="Action"];
82 -> 83 [label="AST"];
84 -> 85 [label="AST"];
87 -> 86 [label="AST"];
87 -> 82 [label="AST"];
87 -> 84 [label="AST"];
88 -> 87 [label="AST"];
89 -> 81 [label="AST"];
89 -> 88 [label="AST"];
90 -> 32 [label="AST"];
90 -> 43 [label="AST"];
90 -> 54 [label="AST"];
90 -> 65 [label="AST"];
90 -> 68 [label="AST"];
90 -> 89 [label="AST"];
91 -> 6 [label="AST"];
91 -> 17 [label="AST"];
91 -> 31 [label="AST"];
91 -> 90 [label="AST"];
92 -> 1 [label="AST"];
92 -> 0 [label="AST"];
92 -> 91 [label="AST"];
93 -> 106 [label="Action"];
95 -> 94 [label="AST"];
96 -> 95 [label="AST"];
98 -> 97 [label="AST"];
101 -> 100 [label="AST"];
102 -> 98 [label="AST"];
102 -> 99 [label="AST"];
102 -> 101 [label="AST"];
104 -> 103 [label="AST"];
105 -> 104 [label="AST"];
106 -> 107 [label="AST"];
106 -> 96 [label="AST"];
106 -> 102 [label="AST"];
106 -> 105 [label="AST"];
108 -> 81 [label="Action"];
}