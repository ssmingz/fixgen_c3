digraph "Pattern" {
0 [label="testScopes#?#43:DELETE
test_generics_3#?#13:DELETE
test_1168408_2#?#5:DELETE
testTypeParamsTags#?#8:DELETE
testSetterGetterOff#?#16:DELETE
testTags#?#36:DELETE
test_1168408_1#?#5:DELETE
testStrictJavadoc#?#20:DELETE" shape=ellipse]
1 [label="testScopes#?#43:checkConfig
test_generics_3#?#13:checkConfig
test_1168408_2#?#5:checkConfig
testTypeParamsTags#?#8:checkConfig
testSetterGetterOff#?#16:checkConfig
testTags#?#36:checkConfig
test_1168408_1#?#5:checkConfig
testStrictJavadoc#?#20:checkConfig" shape=ellipse]
2 [label="testScopes#?#3:checkConfig
test_generics_3#?#3:checkConfig
test_1168408_2#?#3:checkConfig
testTypeParamsTags#?#3:checkConfig
testSetterGetterOff#?#3:checkConfig
testTags#?#3:checkConfig
test_1168408_1#?#3:checkConfig
testStrictJavadoc#?#3:checkConfig" shape=ellipse]
3 [label="testScopes#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
test_generics_3#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
test_1168408_2#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
testTypeParamsTags#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
testSetterGetterOff#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
testTags#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
test_1168408_1#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)
testStrictJavadoc#?#3:final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class)" shape=ellipse]
4 [label="testScopes#?#3:
test_generics_3#?#3:
test_1168408_2#?#3:
testTypeParamsTags#?#3:
testSetterGetterOff#?#3:
testTags#?#3:
test_1168408_1#?#3:
testStrictJavadoc#?#3:" shape=ellipse]
5 [label="testScopes#?#3:JavadocMethodCheck.class
test_generics_3#?#3:JavadocMethodCheck.class
test_1168408_2#?#3:JavadocMethodCheck.class
testTypeParamsTags#?#3:JavadocMethodCheck.class
testSetterGetterOff#?#3:JavadocMethodCheck.class
testTags#?#3:JavadocMethodCheck.class
test_1168408_1#?#3:JavadocMethodCheck.class
testStrictJavadoc#?#3:JavadocMethodCheck.class" shape=ellipse]
6 [label="testScopes#?#43:verify(checkConfig, getPath((\"javadoc\" + File.separator) + \"InputNoJavadoc.java\"), expected)
test_generics_3#?#13:verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected)
test_1168408_2#?#5:verify(checkConfig, getPath(\"javadoc/Test2.java\"), expected)
testTypeParamsTags#?#8:verify(checkConfig, getPath(\"InputTypeParamsTags.java\"), expected)
testSetterGetterOff#?#16:verify(checkConfig, getPath((\"javadoc\" + File.separator) + \"InputSetterGetter.java\"), expected)
testTags#?#36:verify(checkConfig, getPath(\"InputTags.java\"), expected)
test_1168408_1#?#5:verify(checkConfig, getPath(\"javadoc/Test1.java\"), expected)
testStrictJavadoc#?#20:verify(checkConfig, getPath(\"InputPublicOnly.java\"), expected)" shape=ellipse]
7 [label="testScopes#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{ \"8:5: Missing a Javadoc comment.\", \"9:5: Missing a Javadoc comment.\", \"10:5: Missing a Javadoc comment.\", \"11:5: Missing a Javadoc comment.\", \"19:9: Missing a Javadoc comment.\", \"20:9: Missing a Javadoc comment.\", \"21:9: Missing a Javadoc comment.\", \"22:9: Missing a Javadoc comment.\", \"31:9: Missing a Javadoc comment.\", \"32:9: Missing a Javadoc comment.\", \"33:9: Missing a Javadoc comment.\", \"34:9: Missing a Javadoc comment.\", \"43:9: Missing a Javadoc comment.\", \"44:9: Missing a Javadoc comment.\", \"45:9: Missing a Javadoc comment.\", \"46:9: Missing a Javadoc comment.\", \"56:5: Missing a Javadoc comment.\", \"57:5: Missing a Javadoc comment.\", \"58:5: Missing a Javadoc comment.\", \"59:5: Missing a Javadoc comment.\", \"67:9: Missing a Javadoc comment.\", \"68:9: Missing a Javadoc comment.\", \"69:9: Missing a Javadoc comment.\", \"70:9: Missing a Javadoc comment.\", \"79:9: Missing a Javadoc comment.\", \"80:9: Missing a Javadoc comment.\", \"81:9: Missing a Javadoc comment.\", \"82:9: Missing a Javadoc comment.\", \"91:9: Missing a Javadoc comment.\", \"92:9: Missing a Javadoc comment.\", \"93:9: Missing a Javadoc comment.\", \"94:9: Missing a Javadoc comment.\", \"103:9: Missing a Javadoc comment.\", \"104:9: Missing a Javadoc comment.\", \"105:9: Missing a Javadoc comment.\", \"106:9: Missing a Javadoc comment.\" \};
    verify(checkConfig, getPath((\"javadoc\" + File.separator) + \"InputNoJavadoc.java\"), expected);
\}
test_generics_3#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{ \"6:8: Unused @throws tag for 'RE'.\", \"15:34: Expected @throws tag for 'RE'.\", \"31:13: Expected @param tag for '<NPE>'.\", \"38:12: Unused @throws tag for 'E'.\", \"41:38: Expected @throws tag for 'RuntimeException'.\", \"42:13: Expected @throws tag for 'java.lang.RuntimeException'.\" \};
    verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);
\}
test_1168408_2#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{  \};
    verify(checkConfig, getPath(\"javadoc/Test2.java\"), expected);
\}
testTypeParamsTags#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{ \"26:8: Unused @param tag for '<BB>'.\", \"28:13: Expected @param tag for '<Z>'.\" \};
    verify(checkConfig, getPath(\"InputTypeParamsTags.java\"), expected);
\}
testSetterGetterOff#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{ \"5:5: Missing a Javadoc comment.\", \"10:5: Missing a Javadoc comment.\", \"15:5: Missing a Javadoc comment.\", \"20:5: Missing a Javadoc comment.\", \"26:5: Missing a Javadoc comment.\", \"30:5: Missing a Javadoc comment.\", \"35:5: Missing a Javadoc comment.\", \"41:5: Missing a Javadoc comment.\", \"46:5: Missing a Javadoc comment.\" \};
    verify(checkConfig, getPath((\"javadoc\" + File.separator) + \"InputSetterGetter.java\"), expected);
\}
testTags#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{ \"14:5: Missing a Javadoc comment.\", \"18:9: Unused @param tag for 'unused'.\", \"24: Expected an @return tag.\", \"33: Expected an @return tag.\", \"40:16: Expected @throws tag for 'Exception'.\", \"49:16: Expected @throws tag for 'Exception'.\", \"53:9: Unused @throws tag for 'WrongException'.\", \"55:16: Expected @throws tag for 'Exception'.\", \"55:27: Expected @throws tag for 'NullPointerException'.\", \"60:22: Expected @param tag for 'aOne'.\", \"68:22: Expected @param tag for 'aOne'.\", \"72:9: Unused @param tag for 'WrongParam'.\", \"73:23: Expected @param tag for 'aOne'.\", \"73:33: Expected @param tag for 'aTwo'.\", \"78:8: Unused @param tag for 'Unneeded'.\", \"79: Unused Javadoc tag.\", \"87:8: Duplicate @return tag.\", \"109:23: Expected @param tag for 'aOne'.\", \"109:55: Expected @param tag for 'aFour'.\", \"109:66: Expected @param tag for 'aFive'.\", \"178:8: Unused @throws tag for 'ThreadDeath'.\", \"179:8: Unused @throws tag for 'ArrayStoreException'.\", \"236:8: Unused @throws tag for 'java.io.FileNotFoundException'.\", \"254:8: Unused @throws tag for 'java.io.FileNotFoundException'.\", \"256:28: Expected @throws tag for 'IOException'.\", \"262:8: Unused @param tag for 'aParam'.\", \"320:9: Missing a Javadoc comment.\", \"329:5: Missing a Javadoc comment.\", \"333: Unused Javadoc tag.\" \};
    verify(checkConfig, getPath(\"InputTags.java\"), expected);
\}
test_1168408_1#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{  \};
    verify(checkConfig, getPath(\"javadoc/Test1.java\"), expected);
\}
testStrictJavadoc#?#2:\{
    final DefaultConfiguration checkConfig = createCheckConfig(JavadocMethodCheck.class);
    final String[] expected = new String[]\{ \"12:9: Missing a Javadoc comment.\", \"18:13: Missing a Javadoc comment.\", \"25:13: Missing a Javadoc comment.\", \"38:9: Missing a Javadoc comment.\", \"49:5: Missing a Javadoc comment.\", \"54:5: Missing a Javadoc comment.\", \"59:5: Missing a Javadoc comment.\", \"64:5: Missing a Javadoc comment.\", \"69:5: Missing a Javadoc comment.\", \"74:5: Missing a Javadoc comment.\", \"79:5: Missing a Javadoc comment.\", \"84:5: Missing a Javadoc comment.\", \"94:32: Expected @param tag for 'aA'.\" \};
    verify(checkConfig, getPath(\"InputPublicOnly.java\"), expected);
\}" shape=ellipse]
8 [label="testScopes#?#43:verify
test_generics_3#?#13:verify
test_1168408_2#?#5:verify
testTypeParamsTags#?#8:verify
testSetterGetterOff#?#16:verify
testTags#?#36:verify
test_1168408_1#?#5:verify
testStrictJavadoc#?#20:verify" shape=ellipse]
9 [label="testScopes#?#43:
test_generics_3#?#13:
test_1168408_2#?#5:
testTypeParamsTags#?#8:
testSetterGetterOff#?#16:
testTags#?#36:
test_1168408_1#?#5:
testStrictJavadoc#?#20:" shape=ellipse]
10 [label="testScopes#?#43:verify(<unknown>,<unknown>,java.lang.String[])
test_generics_3#?#13:verify(<unknown>,<unknown>,java.lang.String[])
test_1168408_2#?#5:verify(<unknown>,<unknown>,java.lang.String[])
testTypeParamsTags#?#8:verify(<unknown>,<unknown>,java.lang.String[])
testSetterGetterOff#?#16:verify(<unknown>,<unknown>,java.lang.String[])
testTags#?#36:verify(<unknown>,<unknown>,java.lang.String[])
test_1168408_1#?#5:verify(<unknown>,<unknown>,java.lang.String[])
testStrictJavadoc#?#20:verify(<unknown>,<unknown>,java.lang.String[])" shape=ellipse]
11 [label="testScopes#?#43:getPath((\"javadoc\" + File.separator) + \"InputNoJavadoc.java\")
test_generics_3#?#13:getPath(\"javadoc/TestGenerics.java\")
test_1168408_2#?#5:getPath(\"javadoc/Test2.java\")
testTypeParamsTags#?#8:getPath(\"InputTypeParamsTags.java\")
testSetterGetterOff#?#16:getPath((\"javadoc\" + File.separator) + \"InputSetterGetter.java\")
testTags#?#36:getPath(\"InputTags.java\")
test_1168408_1#?#5:getPath(\"javadoc/Test1.java\")
testStrictJavadoc#?#20:getPath(\"InputPublicOnly.java\")" shape=ellipse]
12 [label="testScopes#?#43:expected
test_generics_3#?#13:expected
test_1168408_2#?#5:expected
testTypeParamsTags#?#8:expected
testSetterGetterOff#?#16:expected
testTags#?#36:expected
test_1168408_1#?#5:expected
testStrictJavadoc#?#20:expected" shape=ellipse]
13 [label="testScopes#?#42:INSERT
test_generics_3#?#12:INSERT
test_1168408_2#?#4:INSERT
testTypeParamsTags#?#7:INSERT
testSetterGetterOff#?#16:INSERT
testTags#?#35:INSERT
test_1168408_1#?#4:INSERT
testStrictJavadoc#?#19:INSERT" shape=ellipse]
14 [label="testScopes#?#42:mCheckConfig
test_generics_3#?#12:mCheckConfig
test_1168408_2#?#4:mCheckConfig
testTypeParamsTags#?#7:mCheckConfig
testSetterGetterOff#?#16:mCheckConfig
testTags#?#35:mCheckConfig
test_1168408_1#?#4:mCheckConfig
testStrictJavadoc#?#19:mCheckConfig" shape=ellipse]
15 [label="testScopes#?#42:mCheckConfig
test_generics_3#?#12:mCheckConfig
test_1168408_2#?#4:mCheckConfig
testTypeParamsTags#?#7:mCheckConfig
testSetterGetterOff#?#16:mCheckConfig
testTags#?#35:mCheckConfig
test_1168408_1#?#4:mCheckConfig
testStrictJavadoc#?#19:mCheckConfig" shape=ellipse]
16 [label="testScopes#?#42:PlaceHold
test_generics_3#?#12:PlaceHold
test_1168408_2#?#4:PlaceHold
testTypeParamsTags#?#7:PlaceHold
testSetterGetterOff#?#16:PlaceHold
testTags#?#35:PlaceHold
test_1168408_1#?#4:PlaceHold
testStrictJavadoc#?#19:PlaceHold" shape=ellipse]
17 [label="testScopes#?#42:
test_generics_3#?#12:
test_1168408_2#?#4:
testTypeParamsTags#?#7:
testSetterGetterOff#?#16:
testTags#?#35:
test_1168408_1#?#4:
testStrictJavadoc#?#19:" shape=ellipse]
18 [label="testScopes#?#43:checkConfig
test_generics_3#?#13:checkConfig
test_1168408_2#?#5:checkConfig
testTypeParamsTags#?#8:checkConfig
testSetterGetterOff#?#16:checkConfig
testTags#?#36:checkConfig
test_1168408_1#?#5:checkConfig
testStrictJavadoc#?#20:checkConfig" shape=ellipse]
1 -> 0 [label="Action:8"];
1 -> 18 [label="AST:8"];
2 -> 1 [label="Define Use:8"];
3 -> 2 [label="AST:8"];
4 -> 2 [label="Data Dep:8"];
5 -> 2 [label="Data Dep:8"];
6 -> 1 [label="AST:8"];
6 -> 8 [label="AST:8"];
6 -> 9 [label="AST:8"];
6 -> 10 [label="AST:8"];
6 -> 11 [label="AST:8"];
6 -> 12 [label="AST:8"];
6 -> 13 [label="Action:8"];
7 -> 3 [label="AST:8"];
7 -> 6 [label="AST:8"];
13 -> 14 [label="Action:8"];
14 -> 15 [label="AST:8"];
15 -> 16 [label="AST:8"];
16 -> 17 [label="AST:8"];
}