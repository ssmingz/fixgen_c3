digraph "Pattern" {
0 [label="testValidIfWithChecker#?#13:UPDATE
testValidTryWithChecker#?#13:UPDATE
testValidDotWithChecker#?#13:UPDATE
testValidForWithChecker#?#13:UPDATE" shape=ellipse]
1 [label="testValidIfWithChecker#?#13:final String fname = getPath(\"InputValidIfIndent.java\")
testValidTryWithChecker#?#13:final String fname = getPath(\"InputValidTryIndent.java\")
testValidDotWithChecker#?#13:final String fname = getPath(\"InputValidDotIndent.java\")
testValidForWithChecker#?#13:final String fname = getPath(\"InputValidForIndent.java\")" shape=ellipse]
2 [label="testValidIfWithChecker#?#3:\{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidIfIndent.java\");
    final String[] expected = new String[]\{ \"231: \" + getCheckMessage(MSG_ERROR, \"(\", 8, 12) \};
    verifyWarns(checkConfig, fname, expected);
\}
testValidTryWithChecker#?#3:\{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidTryIndent.java\");
    final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
    verifyWarns(checkConfig, fname, expected);
\}
testValidDotWithChecker#?#3:\{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidDotIndent.java\");
    final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
    verifyWarns(checkConfig, fname, expected);
\}
testValidForWithChecker#?#3:\{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidForIndent.java\");
    final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
    verifyWarns(checkConfig, fname, expected);
\}" shape=ellipse]
3 [label="testValidIfWithChecker#?#3:@Test
public void testValidIfWithChecker() throws Exception \{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidIfIndent.java\");
    final String[] expected = new String[]\{ \"231: \" + getCheckMessage(MSG_ERROR, \"(\", 8, 12) \};
    verifyWarns(checkConfig, fname, expected);
\}
testValidTryWithChecker#?#3:@Test
public void testValidTryWithChecker() throws Exception \{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidTryIndent.java\");
    final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
    verifyWarns(checkConfig, fname, expected);
\}
testValidDotWithChecker#?#3:@Test
public void testValidDotWithChecker() throws Exception \{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidDotIndent.java\");
    final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
    verifyWarns(checkConfig, fname, expected);
\}
testValidForWithChecker#?#3:@Test
public void testValidForWithChecker() throws Exception \{
    final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
    checkConfig.addAttribute(\"arrayInitIndent\", \"4\");
    checkConfig.addAttribute(\"basicOffset\", \"4\");
    checkConfig.addAttribute(\"braceAdjustment\", \"0\");
    checkConfig.addAttribute(\"caseIndent\", \"4\");
    checkConfig.addAttribute(\"forceStrictCondition\", \"false\");
    checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");
    checkConfig.addAttribute(\"tabWidth\", \"4\");
    checkConfig.addAttribute(\"throwsIndent\", \"4\");
    final String fname = getPath(\"InputValidForIndent.java\");
    final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
    verifyWarns(checkConfig, fname, expected);
\}" shape=ellipse]
4 [label="testValidIfWithChecker#?#4:final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class)
testValidTryWithChecker#?#4:final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class)
testValidDotWithChecker#?#4:final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class)
testValidForWithChecker#?#4:final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class)" shape=ellipse]
5 [label="testValidIfWithChecker#?#5:checkConfig.addAttribute(\"arrayInitIndent\", \"4\")
testValidTryWithChecker#?#5:checkConfig.addAttribute(\"arrayInitIndent\", \"4\")
testValidDotWithChecker#?#5:checkConfig.addAttribute(\"arrayInitIndent\", \"4\")
testValidForWithChecker#?#5:checkConfig.addAttribute(\"arrayInitIndent\", \"4\")" shape=ellipse]
6 [label="testValidIfWithChecker#?#6:checkConfig.addAttribute(\"basicOffset\", \"4\")
testValidTryWithChecker#?#6:checkConfig.addAttribute(\"basicOffset\", \"4\")
testValidDotWithChecker#?#6:checkConfig.addAttribute(\"basicOffset\", \"4\")
testValidForWithChecker#?#6:checkConfig.addAttribute(\"basicOffset\", \"4\")" shape=ellipse]
7 [label="testValidIfWithChecker#?#7:checkConfig.addAttribute(\"braceAdjustment\", \"0\")
testValidTryWithChecker#?#7:checkConfig.addAttribute(\"braceAdjustment\", \"0\")
testValidDotWithChecker#?#7:checkConfig.addAttribute(\"braceAdjustment\", \"0\")
testValidForWithChecker#?#7:checkConfig.addAttribute(\"braceAdjustment\", \"0\")" shape=ellipse]
8 [label="testValidIfWithChecker#?#8:checkConfig.addAttribute(\"caseIndent\", \"4\")
testValidTryWithChecker#?#8:checkConfig.addAttribute(\"caseIndent\", \"4\")
testValidDotWithChecker#?#8:checkConfig.addAttribute(\"caseIndent\", \"4\")
testValidForWithChecker#?#8:checkConfig.addAttribute(\"caseIndent\", \"4\")" shape=ellipse]
9 [label="testValidIfWithChecker#?#9:checkConfig.addAttribute(\"forceStrictCondition\", \"false\")
testValidTryWithChecker#?#9:checkConfig.addAttribute(\"forceStrictCondition\", \"false\")
testValidDotWithChecker#?#9:checkConfig.addAttribute(\"forceStrictCondition\", \"false\")
testValidForWithChecker#?#9:checkConfig.addAttribute(\"forceStrictCondition\", \"false\")" shape=ellipse]
10 [label="testValidIfWithChecker#?#10:checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\")
testValidTryWithChecker#?#10:checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\")
testValidDotWithChecker#?#10:checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\")
testValidForWithChecker#?#10:checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\")" shape=ellipse]
11 [label="testValidIfWithChecker#?#11:checkConfig.addAttribute(\"tabWidth\", \"4\")
testValidTryWithChecker#?#11:checkConfig.addAttribute(\"tabWidth\", \"4\")
testValidDotWithChecker#?#11:checkConfig.addAttribute(\"tabWidth\", \"4\")
testValidForWithChecker#?#11:checkConfig.addAttribute(\"tabWidth\", \"4\")" shape=ellipse]
12 [label="testValidIfWithChecker#?#12:checkConfig.addAttribute(\"throwsIndent\", \"4\")
testValidTryWithChecker#?#12:checkConfig.addAttribute(\"throwsIndent\", \"4\")
testValidDotWithChecker#?#12:checkConfig.addAttribute(\"throwsIndent\", \"4\")
testValidForWithChecker#?#12:checkConfig.addAttribute(\"throwsIndent\", \"4\")" shape=ellipse]
13 [label="testValidIfWithChecker#?#14:final String[] expected = new String[]\{ \"231: \" + getCheckMessage(MSG_ERROR, \"(\", 8, 12) \}
testValidTryWithChecker#?#14:final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY
testValidDotWithChecker#?#14:final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY
testValidForWithChecker#?#14:final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY" shape=ellipse]
14 [label="testValidIfWithChecker#?#15:verifyWarns(checkConfig, fname, expected)
testValidTryWithChecker#?#15:verifyWarns(checkConfig, fname, expected)
testValidDotWithChecker#?#15:verifyWarns(checkConfig, fname, expected)
testValidForWithChecker#?#15:verifyWarns(checkConfig, fname, expected)" shape=ellipse]
15 [label="testValidIfWithChecker#?#13:fname
testValidTryWithChecker#?#13:fname
testValidDotWithChecker#?#13:fname
testValidForWithChecker#?#13:fname" shape=ellipse]
16 [label="testValidIfWithChecker#?#13:
testValidTryWithChecker#?#13:
testValidDotWithChecker#?#13:
testValidForWithChecker#?#13:" shape=ellipse]
17 [label="testValidIfWithChecker#?#15:fname
testValidTryWithChecker#?#15:fname
testValidDotWithChecker#?#15:fname
testValidForWithChecker#?#15:fname" shape=ellipse]
18 [label="testValidIfWithChecker#?#13:String
testValidTryWithChecker#?#13:String
testValidDotWithChecker#?#13:String
testValidForWithChecker#?#13:String" shape=ellipse]
19 [label="testValidIfWithChecker#?#13:java.lang
testValidTryWithChecker#?#13:java.lang
testValidDotWithChecker#?#13:java.lang
testValidForWithChecker#?#13:java.lang" shape=ellipse]
20 [label="testValidIfWithChecker#?#13:getPath(\"InputValidIfIndent.java\")
testValidTryWithChecker#?#13:getPath(\"InputValidTryIndent.java\")
testValidDotWithChecker#?#13:getPath(\"InputValidDotIndent.java\")
testValidForWithChecker#?#13:getPath(\"InputValidForIndent.java\")" shape=ellipse]
21 [label="testValidIfWithChecker#?#13:getPath
testValidTryWithChecker#?#13:getPath
testValidDotWithChecker#?#13:getPath
testValidForWithChecker#?#13:getPath" shape=ellipse]
22 [label="testValidIfWithChecker#?#13:getPath(java.lang.String)
testValidTryWithChecker#?#13:getPath(java.lang.String)
testValidDotWithChecker#?#13:getPath(java.lang.String)
testValidForWithChecker#?#13:getPath(java.lang.String)" shape=ellipse]
23 [label="testValidIfWithChecker#?#13:\"InputValidIfIndent.java\"
testValidTryWithChecker#?#13:\"InputValidTryIndent.java\"
testValidDotWithChecker#?#13:\"InputValidDotIndent.java\"
testValidForWithChecker#?#13:\"InputValidForIndent.java\"" shape=ellipse]
24 [label="testValidIfWithChecker#?#13:fileName
testValidTryWithChecker#?#13:fileName
testValidDotWithChecker#?#13:fileName
testValidForWithChecker#?#13:fileName" shape=ellipse]
25 [label="testValidIfWithChecker#?#15:fileName
testValidTryWithChecker#?#15:fileName
testValidDotWithChecker#?#15:fileName
testValidForWithChecker#?#15:fileName" shape=ellipse]
26 [label="testValidIfWithChecker#?#15:String
testValidTryWithChecker#?#15:String
testValidDotWithChecker#?#15:String
testValidForWithChecker#?#15:String" shape=ellipse]
27 [label="testValidIfWithChecker#?#15:java.lang
testValidTryWithChecker#?#15:java.lang
testValidDotWithChecker#?#15:java.lang
testValidForWithChecker#?#15:java.lang" shape=ellipse]
1 -> 0 [label="Action:4"];
1 -> 15 [label="AST:4"];
1 -> 18 [label="AST:4"];
1 -> 20 [label="AST:4"];
2 -> 1 [label="AST:4"];
2 -> 4 [label="AST:4"];
2 -> 5 [label="AST:4"];
2 -> 6 [label="AST:4"];
2 -> 7 [label="AST:4"];
2 -> 8 [label="AST:4"];
2 -> 9 [label="AST:4"];
2 -> 10 [label="AST:4"];
2 -> 11 [label="AST:4"];
2 -> 12 [label="AST:4"];
2 -> 13 [label="AST:4"];
2 -> 14 [label="AST:4"];
3 -> 2 [label="AST:4"];
14 -> 17 [label="AST:4"];
15 -> 17 [label="Define Use:4"];
16 -> 15 [label="Data Dep:4"];
18 -> 19 [label="AST:4"];
20 -> 16 [label="AST:4"];
20 -> 21 [label="AST:4"];
20 -> 22 [label="AST:4"];
20 -> 23 [label="AST:4"];
24 -> 17 [label="Define Use:4"];
24 -> 17 [label="Data Dep:4"];
24 -> 17 [label="Control Dep:4"];
25 -> 26 [label="AST:4"];
26 -> 27 [label="AST:4"];
}