digraph "destroy#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@destroy" shape=ellipse]
2 [label="4:CtTypeReferenceImpl@Check" shape=ellipse]
3 [label="4:CtPackageReferenceImpl@" shape=ellipse]
4 [label="4:CtVirtualElement@check" shape=ellipse]
5 [label="4:CtLocalVariableImpl@Check check" shape=ellipse]
6 [label="4:CtFieldReferenceImpl@ordinaryChecks" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
8 [label="4:CtFieldReadImpl@ordinaryChecks" shape=ellipse]
9 [label="5:CtExecutableReferenceImpl@destroy()" shape=ellipse]
10 [label="5:CtTypeReferenceImpl@Check" shape=ellipse]
11 [label="5:CtVirtualElement@destroy" shape=ellipse]
12 [label="5:CtVariableReadImpl@check" shape=ellipse]
13 [label="5:CtLocalVariableReferenceImpl@check" shape=ellipse]
14 [label="5:CtInvocationImpl@check.destroy()" shape=ellipse]
15 [label="4:CtBlockImpl@\{
    check.destroy();
\}" shape=ellipse]
16 [label="4:CtForEachImpl@for (Check check : ordinaryChecks) \{
    check.destroy();
\}" shape=ellipse]
17 [label="7:CtTypeReferenceImpl@Check" shape=ellipse]
18 [label="7:CtPackageReferenceImpl@" shape=ellipse]
19 [label="7:CtVirtualElement@check" shape=ellipse]
20 [label="7:CtLocalVariableImpl@Check check" shape=ellipse]
21 [label="7:CtFieldReferenceImpl@commentChecks" shape=ellipse]
22 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
23 [label="7:CtFieldReadImpl@commentChecks" shape=ellipse]
24 [label="8:CtExecutableReferenceImpl@destroy()" shape=ellipse]
25 [label="8:CtTypeReferenceImpl@Check" shape=ellipse]
26 [label="8:CtVirtualElement@destroy" shape=ellipse]
27 [label="8:CtVariableReadImpl@check" shape=ellipse]
28 [label="8:CtLocalVariableReferenceImpl@check" shape=ellipse]
29 [label="8:CtInvocationImpl@check.destroy()" shape=ellipse]
30 [label="7:CtBlockImpl@\{
    check.destroy();
\}" shape=ellipse]
31 [label="7:CtForEachImpl@for (Check check : commentChecks) \{
    check.destroy();
\}" shape=ellipse]
32 [label="10:CtFieldReferenceImpl@cache" shape=ellipse]
33 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
34 [label="10:CtFieldReadImpl@cache" shape=ellipse]
35 [label="10:CtLiteralImpl@null" shape=ellipse]
36 [label="10:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
37 [label="10:CtBinaryOperatorImpl@cache != null" shape=ellipse]
38 [label="12:CtExecutableReferenceImpl@persist()" shape=ellipse]
39 [label="12:CtTypeReferenceImpl@cache" shape=ellipse]
40 [label="12:CtVirtualElement@persist" shape=ellipse]
41 [label="12:CtFieldReferenceImpl@cache" shape=ellipse]
42 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
43 [label="12:CtFieldReadImpl@cache" shape=ellipse]
44 [label="12:CtInvocationImpl@cache.persist()" shape=ellipse]
45 [label="11:CtBlockImpl@\{
    cache.persist();
\}" shape=ellipse]
46 [label="13:CtVirtualElement@e" shape=ellipse]
47 [label="13:CtTypeReferenceImpl@IOException" shape=ellipse]
48 [label="13:CtPackageReferenceImpl@" shape=ellipse]
49 [label="13:CtCatchVariableImpl@IOException e" shape=ellipse]
50 [label="14:CtExecutableReferenceImpl@java.lang.IllegalStateException(java.lang.String,java.lang.Throwable)" shape=ellipse]
51 [label="14:CtTypeReferenceImpl@IllegalStateException" shape=ellipse]
52 [label="14:CtTypeReferenceImpl@IllegalStateException" shape=ellipse]
53 [label="14:CtTypeReferenceImpl@String" shape=ellipse]
54 [label="14:CtTypeReferenceImpl@Throwable" shape=ellipse]
55 [label="14:CtLiteralImpl@\"Unable to persist cache file\"" shape=ellipse]
56 [label="14:CtTypeReferenceImpl@String" shape=ellipse]
57 [label="14:CtVariableReadImpl@e" shape=ellipse]
58 [label="14:CtCatchVariableReferenceImpl@e" shape=ellipse]
59 [label="14:CtConstructorCallImpl@new IllegalStateException(\"Unable to persist cache file\", e)" shape=ellipse]
60 [label="14:CtThrowImpl@throw new IllegalStateException(\"Unable to persist cache file\", e)" shape=ellipse]
61 [label="13:CtBlockImpl@\{
    throw new IllegalStateException(\"Unable to persist cache file\", e);
\}" shape=ellipse]
62 [label="13:CtCatchImpl@ catch (IOException e) \{
    throw new IllegalStateException(\"Unable to persist cache file\", e);
\}" shape=ellipse]
63 [label="11:CtTryImpl@try \{
    cache.persist();
\} catch (IOException e) \{
    throw new IllegalStateException(\"Unable to persist cache file\", e);
\}" shape=ellipse]
64 [label="10:CtBlockImpl@\{
    try \{
        cache.persist();
    \} catch (IOException e) \{
        throw new IllegalStateException(\"Unable to persist cache file\", e);
    \}
\}" shape=ellipse]
65 [label="10:CtIfImpl@if (cache != null) \{
    try \{
        cache.persist();
    \} catch (IOException e) \{
        throw new IllegalStateException(\"Unable to persist cache file\", e);
    \}
\}" shape=ellipse]
66 [label="17:CtExecutableReferenceImpl@destroy()" shape=ellipse]
67 [label="17:CtVirtualElement@destroy" shape=ellipse]
68 [label="17:CtSuperAccessImpl@super" shape=ellipse]
69 [label="17:CtLocalVariableReferenceImpl@" shape=ellipse]
70 [label="17:CtInvocationImpl@super.destroy()" shape=ellipse]
71 [label="3:CtBlockImpl@\{
    for (Check check : ordinaryChecks) \{
        check.destroy();
    \}
    for (Check check : commentChecks) \{
        check.destroy();
    \}
    if (cache != null) \{
        try \{
            cache.persist();
        \} catch (IOException e) \{
            throw new IllegalStateException(\"Unable to persist cache file\", e);
        \}
    \}
    super.destroy();
\}" shape=ellipse]
72 [label="3:CtMethodImpl@@Override
public void destroy() \{
    for (Check check : ordinaryChecks) \{
        check.destroy();
    \}
    for (Check check : commentChecks) \{
        check.destroy();
    \}
    if (cache != null) \{
        try \{
            cache.persist();
        \} catch (IOException e) \{
            throw new IllegalStateException(\"Unable to persist cache file\", e);
        \}
    \}
    super.destroy();
\}" shape=ellipse]
73 [label="2:CtAnnotationImpl@@Override" shape=ellipse]
74 [label="13:Update@UPDATE" shape=ellipse]
75 [label="13:CtPackageReferenceImpl@" shape=ellipse]
76 [label="13:CtTypeReferenceImpl@IOException" shape=ellipse]
77 [label="13:CtCatchVariableImpl@IOException ex" shape=ellipse]
78 [label="13:CtVirtualElement@ex" shape=ellipse]
79 [label="14:Update@UPDATE" shape=ellipse]
80 [label="14:CtPackageReferenceImpl@" shape=ellipse]
81 [label="14:CtTypeReferenceImpl@IOException" shape=ellipse]
82 [label="14:CtCatchVariableReferenceImpl@ex" shape=ellipse]
83 [label="14:CtVariableReadImpl@ex" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 12 [label="Define-Use"];
5 -> 4 [label="AST"];
5 -> 2 [label="AST"];
6 -> 7 [label="AST"];
8 -> 6 [label="AST"];
8 -> 15 [label="Control Dep"];
8 -> 14 [label="Control Dep"];
8 -> 9 [label="Control Dep"];
8 -> 12 [label="Control Dep"];
9 -> 10 [label="AST"];
12 -> 13 [label="AST"];
14 -> 11 [label="AST"];
14 -> 12 [label="AST"];
14 -> 9 [label="AST"];
15 -> 14 [label="AST"];
16 -> 5 [label="AST"];
16 -> 8 [label="AST"];
16 -> 15 [label="AST"];
17 -> 18 [label="AST"];
19 -> 27 [label="Define-Use"];
20 -> 19 [label="AST"];
20 -> 17 [label="AST"];
21 -> 22 [label="AST"];
23 -> 21 [label="AST"];
23 -> 30 [label="Control Dep"];
23 -> 29 [label="Control Dep"];
23 -> 24 [label="Control Dep"];
23 -> 27 [label="Control Dep"];
24 -> 25 [label="AST"];
27 -> 28 [label="AST"];
29 -> 26 [label="AST"];
29 -> 27 [label="AST"];
29 -> 24 [label="AST"];
30 -> 29 [label="AST"];
31 -> 20 [label="AST"];
31 -> 23 [label="AST"];
31 -> 30 [label="AST"];
32 -> 33 [label="AST"];
34 -> 32 [label="AST"];
35 -> 36 [label="AST"];
37 -> 34 [label="AST"];
37 -> 35 [label="AST"];
37 -> 64 [label="Control Dep"];
37 -> 63 [label="Control Dep"];
37 -> 45 [label="Control Dep"];
37 -> 44 [label="Control Dep"];
37 -> 38 [label="Control Dep"];
37 -> 43 [label="Control Dep"];
37 -> 62 [label="Control Dep"];
37 -> 49 [label="Control Dep"];
37 -> 77 [label="Control Dep"];
38 -> 39 [label="AST"];
41 -> 42 [label="AST"];
43 -> 41 [label="AST"];
44 -> 40 [label="AST"];
44 -> 43 [label="AST"];
44 -> 38 [label="AST"];
45 -> 44 [label="AST"];
46 -> 57 [label="Define-Use"];
47 -> 48 [label="AST"];
49 -> 46 [label="AST"];
49 -> 47 [label="AST"];
49 -> 61 [label="Control Dep"];
49 -> 60 [label="Control Dep"];
49 -> 59 [label="Control Dep"];
49 -> 50 [label="Control Dep"];
49 -> 55 [label="Control Dep"];
49 -> 57 [label="Control Dep"];
49 -> 74 [label="Action"];
49 -> 83 [label="Control Dep"];
50 -> 51 [label="AST"];
50 -> 52 [label="AST"];
50 -> 53 [label="AST"];
50 -> 54 [label="AST"];
55 -> 56 [label="AST"];
57 -> 58 [label="AST"];
57 -> 79 [label="Action"];
59 -> 50 [label="AST"];
59 -> 55 [label="AST"];
59 -> 57 [label="AST"];
60 -> 59 [label="AST"];
61 -> 60 [label="AST"];
62 -> 49 [label="AST"];
62 -> 61 [label="AST"];
63 -> 45 [label="AST"];
63 -> 62 [label="AST"];
64 -> 63 [label="AST"];
65 -> 37 [label="AST"];
65 -> 64 [label="AST"];
68 -> 69 [label="AST"];
70 -> 67 [label="AST"];
70 -> 68 [label="AST"];
70 -> 66 [label="AST"];
71 -> 16 [label="AST"];
71 -> 31 [label="AST"];
71 -> 65 [label="AST"];
71 -> 70 [label="AST"];
72 -> 1 [label="AST"];
72 -> 73 [label="AST"];
72 -> 0 [label="AST"];
72 -> 71 [label="AST"];
74 -> 77 [label="Action"];
76 -> 75 [label="AST"];
77 -> 78 [label="AST"];
77 -> 76 [label="AST"];
77 -> 83 [label="Control Dep"];
77 -> 61 [label="Control Dep"];
77 -> 60 [label="Control Dep"];
77 -> 59 [label="Control Dep"];
77 -> 50 [label="Control Dep"];
77 -> 55 [label="Control Dep"];
77 -> 57 [label="Control Dep"];
78 -> 83 [label="Define-Use"];
78 -> 57 [label="Define-Use"];
78 -> 57 [label="Data Dep"];
78 -> 57 [label="Control Dep"];
79 -> 83 [label="Action"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
83 -> 82 [label="AST"];
}