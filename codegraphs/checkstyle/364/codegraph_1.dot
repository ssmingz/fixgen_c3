digraph "createChecker#?,Configuration" {
0 [label="2:CtTypeReferenceImpl@Checker" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@" shape=ellipse]
2 [label="2:CtVirtualElement@createChecker" shape=ellipse]
3 [label="2:CtParameterImpl@Configuration aCheckConfig" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@Configuration" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
6 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
8 [label="3:CtPackageReferenceImpl@" shape=ellipse]
9 [label="3:CtExecutableReferenceImpl@createCheckerConfig(<unknown>)" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@null" shape=ellipse]
12 [label="3:CtVirtualElement@createCheckerConfig" shape=ellipse]
13 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
15 [label="3:CtThisAccessImpl@" shape=ellipse]
16 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
17 [label="3:CtVariableReadImpl@aCheckConfig" shape=ellipse]
18 [label="3:CtParameterReferenceImpl@aCheckConfig" shape=ellipse]
19 [label="3:CtInvocationImpl@createCheckerConfig(aCheckConfig)" shape=ellipse]
20 [label="3:CtVirtualElement@dc" shape=ellipse]
21 [label="3:CtLocalVariableImpl@final DefaultConfiguration dc = createCheckerConfig(aCheckConfig)" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@Checker" shape=ellipse]
23 [label="4:CtPackageReferenceImpl@" shape=ellipse]
24 [label="4:CtExecutableReferenceImpl@Checker()" shape=ellipse]
25 [label="4:CtTypeReferenceImpl@Checker" shape=ellipse]
26 [label="4:CtTypeReferenceImpl@Checker" shape=ellipse]
27 [label="4:CtConstructorCallImpl@new Checker()" shape=ellipse]
28 [label="4:CtVirtualElement@c" shape=ellipse]
29 [label="4:CtLocalVariableImpl@final Checker c = new Checker()" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@Locale" shape=ellipse]
31 [label="5:CtPackageReferenceImpl@" shape=ellipse]
32 [label="5:CtFieldReferenceImpl@Locale.ENGLISH" shape=ellipse]
33 [label="5:CtTypeReferenceImpl@Locale" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
35 [label="5:CtFieldReadImpl@Locale.ENGLISH" shape=ellipse]
36 [label="5:CtTypeAccessImpl@Locale" shape=ellipse]
37 [label="5:CtVirtualElement@locale" shape=ellipse]
38 [label="5:CtLocalVariableImpl@final Locale locale = Locale.ENGLISH" shape=ellipse]
39 [label="6:CtExecutableReferenceImpl@setLocaleCountry()" shape=ellipse]
40 [label="6:CtTypeReferenceImpl@Checker" shape=ellipse]
41 [label="6:CtVirtualElement@setLocaleCountry" shape=ellipse]
42 [label="6:CtVariableReadImpl@c" shape=ellipse]
43 [label="6:CtLocalVariableReferenceImpl@c" shape=ellipse]
44 [label="6:CtExecutableReferenceImpl@getCountry()" shape=ellipse]
45 [label="6:CtTypeReferenceImpl@Locale" shape=ellipse]
46 [label="6:CtVirtualElement@getCountry" shape=ellipse]
47 [label="6:CtVariableReadImpl@locale" shape=ellipse]
48 [label="6:CtLocalVariableReferenceImpl@locale" shape=ellipse]
49 [label="6:CtInvocationImpl@locale.getCountry()" shape=ellipse]
50 [label="6:CtInvocationImpl@c.setLocaleCountry(locale.getCountry())" shape=ellipse]
51 [label="7:CtExecutableReferenceImpl@setLocaleLanguage()" shape=ellipse]
52 [label="7:CtTypeReferenceImpl@Checker" shape=ellipse]
53 [label="7:CtVirtualElement@setLocaleLanguage" shape=ellipse]
54 [label="7:CtVariableReadImpl@c" shape=ellipse]
55 [label="7:CtLocalVariableReferenceImpl@c" shape=ellipse]
56 [label="7:CtExecutableReferenceImpl@getLanguage()" shape=ellipse]
57 [label="7:CtTypeReferenceImpl@Locale" shape=ellipse]
58 [label="7:CtVirtualElement@getLanguage" shape=ellipse]
59 [label="7:CtVariableReadImpl@locale" shape=ellipse]
60 [label="7:CtLocalVariableReferenceImpl@locale" shape=ellipse]
61 [label="7:CtInvocationImpl@locale.getLanguage()" shape=ellipse]
62 [label="7:CtInvocationImpl@c.setLocaleLanguage(locale.getLanguage())" shape=ellipse]
63 [label="8:CtExecutableReferenceImpl@configure(DefaultConfiguration)" shape=ellipse]
64 [label="8:CtTypeReferenceImpl@Checker" shape=ellipse]
65 [label="8:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
66 [label="8:CtVirtualElement@configure" shape=ellipse]
67 [label="8:CtVariableReadImpl@c" shape=ellipse]
68 [label="8:CtLocalVariableReferenceImpl@c" shape=ellipse]
69 [label="8:CtVariableReadImpl@dc" shape=ellipse]
70 [label="8:CtLocalVariableReferenceImpl@dc" shape=ellipse]
71 [label="8:CtInvocationImpl@c.configure(dc)" shape=ellipse]
72 [label="9:CtExecutableReferenceImpl@addListener(BriefLogger)" shape=ellipse]
73 [label="9:CtTypeReferenceImpl@Checker" shape=ellipse]
74 [label="9:CtTypeReferenceImpl@BriefLogger" shape=ellipse]
75 [label="9:CtVirtualElement@addListener" shape=ellipse]
76 [label="9:CtVariableReadImpl@c" shape=ellipse]
77 [label="9:CtLocalVariableReferenceImpl@c" shape=ellipse]
78 [label="9:CtExecutableReferenceImpl@BriefLogger()" shape=ellipse]
79 [label="9:CtTypeReferenceImpl@BriefLogger" shape=ellipse]
80 [label="9:CtTypeReferenceImpl@BriefLogger" shape=ellipse]
81 [label="9:CtFieldReferenceImpl@mStream" shape=ellipse]
82 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
83 [label="9:CtFieldReadImpl@mStream" shape=ellipse]
84 [label="9:CtConstructorCallImpl@new BriefLogger(mStream)" shape=ellipse]
85 [label="9:CtInvocationImpl@c.addListener(new BriefLogger(mStream))" shape=ellipse]
86 [label="10:CtVariableReadImpl@c" shape=ellipse]
87 [label="10:CtLocalVariableReferenceImpl@c" shape=ellipse]
88 [label="10:CtReturnImpl@return c" shape=ellipse]
89 [label="2:CtBlockImpl@\{
    final DefaultConfiguration dc = createCheckerConfig(aCheckConfig);
    final Checker c = new Checker();
    final Locale locale = Locale.ENGLISH;
    c.setLocaleCountry(locale.getCountry());
    c.setLocaleLanguage(locale.getLanguage());
    c.configure(dc);
    c.addListener(new BriefLogger(mStream));
    return c;
\}" shape=ellipse]
90 [label="2:CtMethodImpl@protected Checker createChecker(Configuration aCheckConfig) throws Exception \{
    final DefaultConfiguration dc = createCheckerConfig(aCheckConfig);
    final Checker c = new Checker();
    final Locale locale = Locale.ENGLISH;
    c.setLocaleCountry(locale.getCountry());
    c.setLocaleLanguage(locale.getLanguage());
    c.configure(dc);
    c.addListener(new BriefLogger(mStream));
    return c;
\}" shape=ellipse]
91 [label="8:Insert@INSERT" shape=ellipse]
92 [label="8:CtPackageReferenceImpl@" shape=ellipse]
93 [label="8:CtTypeReferenceImpl@Checker" shape=ellipse]
94 [label="8:CtLocalVariableReferenceImpl@c" shape=ellipse]
95 [label="8:CtVariableReadImpl@c" shape=ellipse]
96 [label="8:CtPackageReferenceImpl@" shape=ellipse]
97 [label="8:CtTypeReferenceImpl@Checker" shape=ellipse]
98 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
99 [label="8:CtTypeReferenceImpl@ClassLoader" shape=ellipse]
100 [label="8:CtExecutableReferenceImpl@setModuleClassLoader(java.lang.ClassLoader)" shape=ellipse]
101 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
102 [label="8:CtTypeReferenceImpl@Thread" shape=ellipse]
103 [label="8:CtTypeAccessImpl@Thread" shape=ellipse]
104 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
105 [label="8:CtTypeReferenceImpl@Thread" shape=ellipse]
106 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
107 [label="8:CtTypeReferenceImpl@Thread" shape=ellipse]
108 [label="8:CtExecutableReferenceImpl@currentThread()" shape=ellipse]
109 [label="8:CtInvocationImpl@Thread.currentThread()" shape=ellipse]
110 [label="8:CtVirtualElement@currentThread" shape=ellipse]
111 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
112 [label="8:CtTypeReferenceImpl@Thread" shape=ellipse]
113 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
114 [label="8:CtTypeReferenceImpl@ClassLoader" shape=ellipse]
115 [label="8:CtExecutableReferenceImpl@getContextClassLoader()" shape=ellipse]
116 [label="8:CtInvocationImpl@Thread.currentThread().getContextClassLoader()" shape=ellipse]
117 [label="8:CtVirtualElement@getContextClassLoader" shape=ellipse]
118 [label="8:CtInvocationImpl@c.setModuleClassLoader(java.lang.Thread.currentThread().getContextClassLoader())" shape=ellipse]
119 [label="8:CtVirtualElement@setModuleClassLoader" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
9 -> 10 [label="AST"];
9 -> 11 [label="AST"];
13 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 13 [label="AST"];
15 -> 20 [label="Data Dep"];
17 -> 18 [label="AST"];
17 -> 20 [label="Data Dep"];
19 -> 12 [label="AST"];
19 -> 15 [label="AST"];
19 -> 9 [label="AST"];
19 -> 17 [label="AST"];
20 -> 69 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 7 [label="AST"];
21 -> 19 [label="AST"];
22 -> 23 [label="AST"];
24 -> 25 [label="AST"];
24 -> 26 [label="AST"];
27 -> 24 [label="AST"];
28 -> 42 [label="Define-Use"];
28 -> 54 [label="Define-Use"];
28 -> 67 [label="Define-Use"];
28 -> 76 [label="Define-Use"];
28 -> 86 [label="Define-Use"];
29 -> 28 [label="AST"];
29 -> 22 [label="AST"];
29 -> 27 [label="AST"];
30 -> 31 [label="AST"];
32 -> 33 [label="AST"];
32 -> 34 [label="AST"];
35 -> 36 [label="AST"];
35 -> 32 [label="AST"];
35 -> 37 [label="Data Dep"];
37 -> 47 [label="Define-Use"];
37 -> 59 [label="Define-Use"];
38 -> 37 [label="AST"];
38 -> 30 [label="AST"];
38 -> 35 [label="AST"];
39 -> 40 [label="AST"];
42 -> 43 [label="AST"];
44 -> 45 [label="AST"];
47 -> 48 [label="AST"];
49 -> 46 [label="AST"];
49 -> 47 [label="AST"];
49 -> 44 [label="AST"];
50 -> 41 [label="AST"];
50 -> 42 [label="AST"];
50 -> 39 [label="AST"];
50 -> 49 [label="AST"];
51 -> 52 [label="AST"];
54 -> 55 [label="AST"];
56 -> 57 [label="AST"];
59 -> 60 [label="AST"];
61 -> 58 [label="AST"];
61 -> 59 [label="AST"];
61 -> 56 [label="AST"];
62 -> 53 [label="AST"];
62 -> 54 [label="AST"];
62 -> 51 [label="AST"];
62 -> 61 [label="AST"];
63 -> 64 [label="AST"];
63 -> 65 [label="AST"];
67 -> 68 [label="AST"];
69 -> 70 [label="AST"];
71 -> 66 [label="AST"];
71 -> 67 [label="AST"];
71 -> 63 [label="AST"];
71 -> 69 [label="AST"];
72 -> 73 [label="AST"];
72 -> 74 [label="AST"];
76 -> 77 [label="AST"];
78 -> 79 [label="AST"];
78 -> 80 [label="AST"];
81 -> 82 [label="AST"];
83 -> 81 [label="AST"];
84 -> 78 [label="AST"];
84 -> 83 [label="AST"];
85 -> 75 [label="AST"];
85 -> 76 [label="AST"];
85 -> 72 [label="AST"];
85 -> 84 [label="AST"];
86 -> 87 [label="AST"];
88 -> 86 [label="AST"];
89 -> 21 [label="AST"];
89 -> 29 [label="AST"];
89 -> 38 [label="AST"];
89 -> 50 [label="AST"];
89 -> 62 [label="AST"];
89 -> 71 [label="AST"];
89 -> 85 [label="AST"];
89 -> 88 [label="AST"];
89 -> 91 [label="Action"];
90 -> 2 [label="AST"];
90 -> 0 [label="AST"];
90 -> 3 [label="AST"];
90 -> 5 [label="AST"];
90 -> 89 [label="AST"];
91 -> 118 [label="Action"];
93 -> 92 [label="AST"];
94 -> 93 [label="AST"];
95 -> 94 [label="AST"];
97 -> 96 [label="AST"];
99 -> 98 [label="AST"];
100 -> 97 [label="AST"];
100 -> 99 [label="AST"];
102 -> 101 [label="AST"];
103 -> 102 [label="AST"];
105 -> 104 [label="AST"];
107 -> 106 [label="AST"];
108 -> 105 [label="AST"];
108 -> 107 [label="AST"];
109 -> 110 [label="AST"];
109 -> 103 [label="AST"];
109 -> 108 [label="AST"];
112 -> 111 [label="AST"];
114 -> 113 [label="AST"];
115 -> 112 [label="AST"];
115 -> 114 [label="AST"];
116 -> 117 [label="AST"];
116 -> 109 [label="AST"];
116 -> 115 [label="AST"];
118 -> 119 [label="AST"];
118 -> 95 [label="AST"];
118 -> 100 [label="AST"];
118 -> 116 [label="AST"];
}