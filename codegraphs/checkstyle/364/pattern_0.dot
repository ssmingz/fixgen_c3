digraph "Pattern" {
0 [label="createChecker#?,Configuration#18:INSERT
createChecker#?,Configuration#8:INSERT" shape=ellipse]
1 [label="createChecker#?,Configuration#3:\{
    final DefaultConfiguration checkerConfig = new DefaultConfiguration(\"configuration\");
    final DefaultConfiguration checksConfig = createCheckConfig(TreeWalker.class);
    checksConfig.addChild(createCheckConfig(FileContentsHolder.class));
    checksConfig.addChild(createCheckConfig(MemberNameCheck.class));
    checksConfig.addChild(createCheckConfig(ConstantNameCheck.class));
    checksConfig.addChild(createCheckConfig(IllegalCatchCheck.class));
    checkerConfig.addChild(checksConfig);
    if (aFilterConfig != null) \{
        checkerConfig.addChild(aFilterConfig);
    \}
    final Checker checker = new Checker();
    final Locale locale = Locale.ENGLISH;
    checker.setLocaleCountry(locale.getCountry());
    checker.setLocaleLanguage(locale.getLanguage());
    checker.configure(checkerConfig);
    checker.addListener(new BriefLogger(mStream));
    return checker;
\}
createChecker#?,Configuration#2:\{
    final DefaultConfiguration dc = createCheckerConfig(aCheckConfig);
    final Checker c = new Checker();
    final Locale locale = Locale.ENGLISH;
    c.setLocaleCountry(locale.getCountry());
    c.setLocaleLanguage(locale.getLanguage());
    c.configure(dc);
    c.addListener(new BriefLogger(mStream));
    return c;
\}" shape=ellipse]
2 [label="createChecker#?,Configuration#3:@Override
protected Checker createChecker(Configuration aFilterConfig) throws CheckstyleException \{
    final DefaultConfiguration checkerConfig = new DefaultConfiguration(\"configuration\");
    final DefaultConfiguration checksConfig = createCheckConfig(TreeWalker.class);
    checksConfig.addChild(createCheckConfig(FileContentsHolder.class));
    checksConfig.addChild(createCheckConfig(MemberNameCheck.class));
    checksConfig.addChild(createCheckConfig(ConstantNameCheck.class));
    checksConfig.addChild(createCheckConfig(IllegalCatchCheck.class));
    checkerConfig.addChild(checksConfig);
    if (aFilterConfig != null) \{
        checkerConfig.addChild(aFilterConfig);
    \}
    final Checker checker = new Checker();
    final Locale locale = Locale.ENGLISH;
    checker.setLocaleCountry(locale.getCountry());
    checker.setLocaleLanguage(locale.getLanguage());
    checker.configure(checkerConfig);
    checker.addListener(new BriefLogger(mStream));
    return checker;
\}
createChecker#?,Configuration#2:protected Checker createChecker(Configuration aCheckConfig) throws Exception \{
    final DefaultConfiguration dc = createCheckerConfig(aCheckConfig);
    final Checker c = new Checker();
    final Locale locale = Locale.ENGLISH;
    c.setLocaleCountry(locale.getCountry());
    c.setLocaleLanguage(locale.getLanguage());
    c.configure(dc);
    c.addListener(new BriefLogger(mStream));
    return c;
\}" shape=ellipse]
3 [label="createChecker#?,Configuration#3:createChecker
createChecker#?,Configuration#2:createChecker" shape=ellipse]
4 [label="createChecker#?,Configuration#2:@Override" shape=ellipse]
5 [label="createChecker#?,Configuration#3:Checker
createChecker#?,Configuration#2:Checker" shape=ellipse]
6 [label="createChecker#?,Configuration#3:Configuration aFilterConfig
createChecker#?,Configuration#2:Configuration aCheckConfig" shape=ellipse]
7 [label="createChecker#?,Configuration#3:CheckstyleException
createChecker#?,Configuration#2:Exception" shape=ellipse]
8 [label="createChecker#?,Configuration#4:final DefaultConfiguration checkerConfig = new DefaultConfiguration(\"configuration\")
createChecker#?,Configuration#3:final DefaultConfiguration dc = createCheckerConfig(aCheckConfig)" shape=ellipse]
9 [label="createChecker#?,Configuration#4:checkerConfig
createChecker#?,Configuration#3:dc" shape=ellipse]
10 [label="createChecker#?,Configuration#4:DefaultConfiguration
createChecker#?,Configuration#3:DefaultConfiguration" shape=ellipse]
11 [label="createChecker#?,Configuration#4:new DefaultConfiguration(\"configuration\")" shape=ellipse]
12 [label="createChecker#?,Configuration#5:final DefaultConfiguration checksConfig = createCheckConfig(TreeWalker.class)
createChecker#?,Configuration#4:final Checker c = new Checker()" shape=ellipse]
13 [label="createChecker#?,Configuration#5:checksConfig
createChecker#?,Configuration#4:c" shape=ellipse]
14 [label="createChecker#?,Configuration#5:DefaultConfiguration
createChecker#?,Configuration#4:Checker" shape=ellipse]
15 [label="createChecker#?,Configuration#5:createCheckConfig(TreeWalker.class)" shape=ellipse]
16 [label="createChecker#?,Configuration#6:checksConfig.addChild(createCheckConfig(FileContentsHolder.class))
createChecker#?,Configuration#6:c.setLocaleCountry(locale.getCountry())" shape=ellipse]
17 [label="createChecker#?,Configuration#6:addChild
createChecker#?,Configuration#6:setLocaleCountry" shape=ellipse]
18 [label="createChecker#?,Configuration#6:checksConfig
createChecker#?,Configuration#6:c" shape=ellipse]
19 [label="createChecker#?,Configuration#6:addChild()
createChecker#?,Configuration#6:setLocaleCountry()" shape=ellipse]
20 [label="createChecker#?,Configuration#6:createCheckConfig(FileContentsHolder.class)
createChecker#?,Configuration#6:locale.getCountry()" shape=ellipse]
21 [label="createChecker#?,Configuration#7:checksConfig.addChild(createCheckConfig(MemberNameCheck.class))
createChecker#?,Configuration#9:c.addListener(new BriefLogger(mStream))" shape=ellipse]
22 [label="createChecker#?,Configuration#7:addChild
createChecker#?,Configuration#9:addListener" shape=ellipse]
23 [label="createChecker#?,Configuration#7:checksConfig
createChecker#?,Configuration#9:c" shape=ellipse]
24 [label="createChecker#?,Configuration#7:addChild()
createChecker#?,Configuration#9:addListener(BriefLogger)" shape=ellipse]
25 [label="createChecker#?,Configuration#7:createCheckConfig(MemberNameCheck.class)" shape=ellipse]
26 [label="createChecker#?,Configuration#8:checksConfig.addChild(createCheckConfig(ConstantNameCheck.class))
createChecker#?,Configuration#8:c.configure(dc)" shape=ellipse]
27 [label="createChecker#?,Configuration#8:addChild
createChecker#?,Configuration#8:configure" shape=ellipse]
28 [label="createChecker#?,Configuration#8:checksConfig
createChecker#?,Configuration#8:c" shape=ellipse]
29 [label="createChecker#?,Configuration#8:addChild()
createChecker#?,Configuration#8:configure(DefaultConfiguration)" shape=ellipse]
30 [label="createChecker#?,Configuration#8:createCheckConfig(ConstantNameCheck.class)" shape=ellipse]
31 [label="createChecker#?,Configuration#9:checksConfig.addChild(createCheckConfig(IllegalCatchCheck.class))
createChecker#?,Configuration#7:c.setLocaleLanguage(locale.getLanguage())" shape=ellipse]
32 [label="createChecker#?,Configuration#9:addChild
createChecker#?,Configuration#7:setLocaleLanguage" shape=ellipse]
33 [label="createChecker#?,Configuration#9:checksConfig
createChecker#?,Configuration#7:c" shape=ellipse]
34 [label="createChecker#?,Configuration#9:addChild()
createChecker#?,Configuration#7:setLocaleLanguage()" shape=ellipse]
35 [label="createChecker#?,Configuration#9:createCheckConfig(IllegalCatchCheck.class)
createChecker#?,Configuration#7:locale.getLanguage()" shape=ellipse]
36 [label="createChecker#?,Configuration#10:checkerConfig.addChild(checksConfig)" shape=ellipse]
37 [label="createChecker#?,Configuration#10:addChild
createChecker#?,Configuration#8:setModuleClassLoader" shape=ellipse]
38 [label="createChecker#?,Configuration#10:checkerConfig" shape=ellipse]
39 [label="createChecker#?,Configuration#10:addChild(DefaultConfiguration)
createChecker#?,Configuration#8:getContextClassLoader()" shape=ellipse]
40 [label="createChecker#?,Configuration#10:checksConfig
createChecker#?,Configuration#10:c" shape=ellipse]
41 [label="createChecker#?,Configuration#11:if (aFilterConfig != null) \{
    checkerConfig.addChild(aFilterConfig);
\}
createChecker#?,Configuration#5:final Locale locale = Locale.ENGLISH" shape=ellipse]
42 [label="createChecker#?,Configuration#11:aFilterConfig != null
createChecker#?,Configuration#5:Locale.ENGLISH" shape=ellipse]
43 [label="createChecker#?,Configuration#11:\{
    checkerConfig.addChild(aFilterConfig);
\}" shape=ellipse]
44 [label="createChecker#?,Configuration#14:final Checker checker = new Checker()" shape=ellipse]
45 [label="createChecker#?,Configuration#14:checker
createChecker#?,Configuration#8:c" shape=ellipse]
46 [label="createChecker#?,Configuration#14:Checker
createChecker#?,Configuration#8:Checker" shape=ellipse]
47 [label="createChecker#?,Configuration#14:new Checker()" shape=ellipse]
48 [label="createChecker#?,Configuration#15:final Locale locale = Locale.ENGLISH" shape=ellipse]
49 [label="createChecker#?,Configuration#15:locale" shape=ellipse]
50 [label="createChecker#?,Configuration#15:Locale
createChecker#?,Configuration#8:ClassLoader" shape=ellipse]
51 [label="createChecker#?,Configuration#15:Locale.ENGLISH
createChecker#?,Configuration#8:Thread" shape=ellipse]
52 [label="createChecker#?,Configuration#16:checker.setLocaleCountry(locale.getCountry())" shape=ellipse]
53 [label="createChecker#?,Configuration#16:setLocaleCountry
createChecker#?,Configuration#8:getContextClassLoader" shape=ellipse]
54 [label="createChecker#?,Configuration#16:checker" shape=ellipse]
55 [label="createChecker#?,Configuration#16:setLocaleCountry()
createChecker#?,Configuration#8:currentThread()" shape=ellipse]
56 [label="createChecker#?,Configuration#16:locale.getCountry()" shape=ellipse]
57 [label="createChecker#?,Configuration#17:checker.setLocaleLanguage(locale.getLanguage())" shape=ellipse]
58 [label="createChecker#?,Configuration#17:setLocaleLanguage
createChecker#?,Configuration#8:currentThread" shape=ellipse]
59 [label="createChecker#?,Configuration#17:checker" shape=ellipse]
60 [label="createChecker#?,Configuration#17:setLocaleLanguage()
createChecker#?,Configuration#8:java.lang" shape=ellipse]
61 [label="createChecker#?,Configuration#17:locale.getLanguage()" shape=ellipse]
62 [label="createChecker#?,Configuration#18:checker.configure(checkerConfig)" shape=ellipse]
63 [label="createChecker#?,Configuration#18:configure" shape=ellipse]
64 [label="createChecker#?,Configuration#18:checker" shape=ellipse]
65 [label="createChecker#?,Configuration#18:configure(DefaultConfiguration)
createChecker#?,Configuration#8:java.lang" shape=ellipse]
66 [label="createChecker#?,Configuration#18:checkerConfig" shape=ellipse]
67 [label="createChecker#?,Configuration#19:checker.addListener(new BriefLogger(mStream))" shape=ellipse]
68 [label="createChecker#?,Configuration#19:addListener" shape=ellipse]
69 [label="createChecker#?,Configuration#19:checker" shape=ellipse]
70 [label="createChecker#?,Configuration#19:addListener(BriefLogger)
createChecker#?,Configuration#8:java.lang" shape=ellipse]
71 [label="createChecker#?,Configuration#19:new BriefLogger(mStream)" shape=ellipse]
72 [label="createChecker#?,Configuration#20:return checker" shape=ellipse]
73 [label="createChecker#?,Configuration#20:checker" shape=ellipse]
74 [label="createChecker#?,Configuration#18:checker.setModuleClassLoader(java.lang.Thread.currentThread().getContextClassLoader())" shape=ellipse]
75 [label="createChecker#?,Configuration#18:setModuleClassLoader" shape=ellipse]
76 [label="createChecker#?,Configuration#18:checker" shape=ellipse]
77 [label="createChecker#?,Configuration#18:checker" shape=ellipse]
78 [label="createChecker#?,Configuration#18:Checker
createChecker#?,Configuration#8:" shape=ellipse]
79 [label="createChecker#?,Configuration#18:" shape=ellipse]
80 [label="createChecker#?,Configuration#18:setModuleClassLoader(java.lang.ClassLoader)
createChecker#?,Configuration#8:java.lang" shape=ellipse]
81 [label="createChecker#?,Configuration#18:Checker" shape=ellipse]
82 [label="createChecker#?,Configuration#18:
createChecker#?,Configuration#8:java.lang" shape=ellipse]
83 [label="createChecker#?,Configuration#18:ClassLoader" shape=ellipse]
84 [label="createChecker#?,Configuration#18:java.lang" shape=ellipse]
85 [label="createChecker#?,Configuration#18:Thread.currentThread().getContextClassLoader()" shape=ellipse]
86 [label="createChecker#?,Configuration#18:getContextClassLoader" shape=ellipse]
87 [label="createChecker#?,Configuration#18:Thread.currentThread()" shape=ellipse]
88 [label="createChecker#?,Configuration#18:currentThread" shape=ellipse]
89 [label="createChecker#?,Configuration#18:Thread" shape=ellipse]
90 [label="createChecker#?,Configuration#18:Thread" shape=ellipse]
91 [label="createChecker#?,Configuration#18:java.lang" shape=ellipse]
92 [label="createChecker#?,Configuration#18:currentThread()" shape=ellipse]
93 [label="createChecker#?,Configuration#18:Thread" shape=ellipse]
94 [label="createChecker#?,Configuration#18:java.lang" shape=ellipse]
95 [label="createChecker#?,Configuration#18:Thread" shape=ellipse]
96 [label="createChecker#?,Configuration#18:java.lang" shape=ellipse]
97 [label="createChecker#?,Configuration#18:getContextClassLoader()" shape=ellipse]
98 [label="createChecker#?,Configuration#18:Thread" shape=ellipse]
99 [label="createChecker#?,Configuration#18:java.lang" shape=ellipse]
100 [label="createChecker#?,Configuration#18:ClassLoader" shape=ellipse]
101 [label="createChecker#?,Configuration#18:java.lang" shape=ellipse]
102 [label="createChecker#?,Configuration#3:createCheckerConfig(aCheckConfig)" shape=ellipse]
103 [label="createChecker#?,Configuration#4:new Checker()" shape=ellipse]
104 [label="createChecker#?,Configuration#5:Locale" shape=ellipse]
105 [label="createChecker#?,Configuration#8:Thread.currentThread().getContextClassLoader()" shape=ellipse]
106 [label="createChecker#?,Configuration#8:dc" shape=ellipse]
107 [label="createChecker#?,Configuration#9:new BriefLogger(mStream)" shape=ellipse]
108 [label="createChecker#?,Configuration#10:return c" shape=ellipse]
109 [label="createChecker#?,Configuration#8:c.setModuleClassLoader(java.lang.Thread.currentThread().getContextClassLoader())" shape=ellipse]
110 [label="createChecker#?,Configuration#8:Thread.currentThread()" shape=ellipse]
111 [label="createChecker#?,Configuration#8:c" shape=ellipse]
112 [label="createChecker#?,Configuration#8:setModuleClassLoader(java.lang.ClassLoader)" shape=ellipse]
113 [label="createChecker#?,Configuration#8:" shape=ellipse]
114 [label="createChecker#?,Configuration#5:locale" shape=ellipse]
115 [label="createChecker#?,Configuration#8:ClassLoader" shape=ellipse]
116 [label="createChecker#?,Configuration#8:Checker" shape=ellipse]
117 [label="createChecker#?,Configuration#8:Thread" shape=ellipse]
118 [label="createChecker#?,Configuration#8:Thread" shape=ellipse]
119 [label="createChecker#?,Configuration#8:Thread" shape=ellipse]
120 [label="createChecker#?,Configuration#8:Thread" shape=ellipse]
121 [label="createChecker#?,Configuration#8:java.lang" shape=ellipse]
0 -> 74 [label="Action:1"];
0 -> 109 [label="Action:1"];
1 -> 0 [label="Action:2"];
1 -> 8 [label="AST:2"];
1 -> 12 [label="AST:2"];
1 -> 16 [label="AST:2"];
1 -> 21 [label="AST:2"];
1 -> 26 [label="AST:2"];
1 -> 31 [label="AST:2"];
1 -> 36 [label="AST:1"];
1 -> 41 [label="AST:2"];
1 -> 44 [label="AST:1"];
1 -> 48 [label="AST:1"];
1 -> 52 [label="AST:1"];
1 -> 57 [label="AST:1"];
1 -> 62 [label="AST:1"];
1 -> 67 [label="AST:1"];
1 -> 72 [label="AST:1"];
1 -> 108 [label="AST:1"];
2 -> 1 [label="AST:2"];
2 -> 3 [label="AST:2"];
2 -> 4 [label="AST:1"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 10 [label="AST:2"];
8 -> 11 [label="AST:1"];
8 -> 102 [label="AST:1"];
9 -> 38 [label="Define Use:1"];
9 -> 66 [label="Define Use:1"];
9 -> 106 [label="Define Use:1"];
12 -> 13 [label="AST:2"];
12 -> 14 [label="AST:2"];
12 -> 15 [label="AST:1"];
12 -> 103 [label="AST:1"];
13 -> 18 [label="Define Use:2"];
13 -> 23 [label="Define Use:2"];
13 -> 28 [label="Define Use:2"];
13 -> 33 [label="Define Use:2"];
13 -> 40 [label="Define Use:2"];
16 -> 17 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 19 [label="AST:2"];
16 -> 20 [label="AST:2"];
21 -> 22 [label="AST:2"];
21 -> 23 [label="AST:2"];
21 -> 24 [label="AST:2"];
21 -> 25 [label="AST:1"];
21 -> 107 [label="AST:1"];
26 -> 27 [label="AST:2"];
26 -> 28 [label="AST:2"];
26 -> 29 [label="AST:2"];
26 -> 30 [label="AST:1"];
26 -> 106 [label="AST:1"];
31 -> 32 [label="AST:2"];
31 -> 33 [label="AST:2"];
31 -> 34 [label="AST:2"];
31 -> 35 [label="AST:2"];
36 -> 37 [label="AST:1"];
36 -> 38 [label="AST:1"];
36 -> 39 [label="AST:1"];
36 -> 40 [label="AST:1"];
39 -> 115 [label="AST:1"];
39 -> 120 [label="AST:1"];
41 -> 42 [label="AST:2"];
41 -> 43 [label="AST:1"];
41 -> 104 [label="AST:1"];
41 -> 114 [label="AST:1"];
42 -> 43 [label="Control Dep:1"];
42 -> 114 [label="Data Dep:1"];
44 -> 45 [label="AST:1"];
44 -> 46 [label="AST:1"];
44 -> 47 [label="AST:1"];
45 -> 54 [label="Define Use:1"];
45 -> 59 [label="Define Use:1"];
45 -> 64 [label="Define Use:1"];
45 -> 69 [label="Define Use:1"];
45 -> 73 [label="Define Use:1"];
45 -> 116 [label="AST:1"];
46 -> 113 [label="AST:1"];
48 -> 49 [label="AST:1"];
48 -> 50 [label="AST:1"];
48 -> 51 [label="AST:1"];
50 -> 121 [label="AST:1"];
51 -> 49 [label="Data Dep:1"];
51 -> 117 [label="AST:1"];
52 -> 53 [label="AST:1"];
52 -> 54 [label="AST:1"];
52 -> 55 [label="AST:1"];
52 -> 56 [label="AST:1"];
55 -> 118 [label="AST:1"];
55 -> 119 [label="AST:1"];
57 -> 58 [label="AST:1"];
57 -> 59 [label="AST:1"];
57 -> 60 [label="AST:1"];
57 -> 61 [label="AST:1"];
62 -> 63 [label="AST:1"];
62 -> 64 [label="AST:1"];
62 -> 65 [label="AST:1"];
62 -> 66 [label="AST:1"];
67 -> 68 [label="AST:1"];
67 -> 69 [label="AST:1"];
67 -> 70 [label="AST:1"];
67 -> 71 [label="AST:1"];
72 -> 73 [label="AST:1"];
74 -> 75 [label="AST:1"];
74 -> 76 [label="AST:1"];
74 -> 80 [label="AST:1"];
74 -> 85 [label="AST:1"];
76 -> 77 [label="AST:1"];
77 -> 78 [label="AST:1"];
78 -> 79 [label="AST:1"];
80 -> 81 [label="AST:1"];
80 -> 83 [label="AST:1"];
81 -> 82 [label="AST:1"];
83 -> 84 [label="AST:1"];
85 -> 86 [label="AST:1"];
85 -> 87 [label="AST:1"];
85 -> 97 [label="AST:1"];
87 -> 88 [label="AST:1"];
87 -> 89 [label="AST:1"];
87 -> 92 [label="AST:1"];
89 -> 90 [label="AST:1"];
90 -> 91 [label="AST:1"];
92 -> 93 [label="AST:1"];
92 -> 95 [label="AST:1"];
93 -> 94 [label="AST:1"];
95 -> 96 [label="AST:1"];
97 -> 98 [label="AST:1"];
97 -> 100 [label="AST:1"];
98 -> 99 [label="AST:1"];
100 -> 101 [label="AST:1"];
105 -> 53 [label="AST:1"];
105 -> 110 [label="AST:1"];
105 -> 39 [label="AST:1"];
108 -> 40 [label="AST:1"];
109 -> 105 [label="AST:1"];
109 -> 37 [label="AST:1"];
109 -> 111 [label="AST:1"];
109 -> 112 [label="AST:1"];
110 -> 58 [label="AST:1"];
110 -> 51 [label="AST:1"];
110 -> 55 [label="AST:1"];
111 -> 45 [label="AST:1"];
112 -> 46 [label="AST:1"];
112 -> 50 [label="AST:1"];
115 -> 82 [label="AST:1"];
116 -> 78 [label="AST:1"];
117 -> 60 [label="AST:1"];
118 -> 65 [label="AST:1"];
119 -> 70 [label="AST:1"];
120 -> 80 [label="AST:1"];
}