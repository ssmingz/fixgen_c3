digraph "testOpWrapOff#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testOpWrapOff" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@setJavadocScope()" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@mConfig" shape=ellipse]
6 [label="3:CtVirtualElement@setJavadocScope" shape=ellipse]
7 [label="3:CtFieldReferenceImpl@mConfig" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
9 [label="3:CtFieldReadImpl@mConfig" shape=ellipse]
10 [label="3:CtTypeAccessImpl@NOTHING" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@NOTHING" shape=ellipse]
12 [label="3:CtInvocationImpl@mConfig.setJavadocScope(NOTHING)" shape=ellipse]
13 [label="4:CtExecutableReferenceImpl@setBooleanFlag(boolean)" shape=ellipse]
14 [label="4:CtTypeReferenceImpl@mConfig" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
16 [label="4:CtVirtualElement@setBooleanFlag" shape=ellipse]
17 [label="4:CtFieldReferenceImpl@mConfig" shape=ellipse]
18 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
19 [label="4:CtFieldReadImpl@mConfig" shape=ellipse]
20 [label="4:CtTypeAccessImpl@IGNORE_OP_WRAP_PROP" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@IGNORE_OP_WRAP_PROP" shape=ellipse]
22 [label="4:CtLiteralImpl@true" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
24 [label="4:CtInvocationImpl@mConfig.setBooleanFlag(IGNORE_OP_WRAP_PROP, true)" shape=ellipse]
25 [label="5:CtTypeReferenceImpl@Checker" shape=ellipse]
26 [label="5:CtPackageReferenceImpl@" shape=ellipse]
27 [label="5:CtExecutableReferenceImpl@createChecker()" shape=ellipse]
28 [label="5:CtTypeReferenceImpl@Checker" shape=ellipse]
29 [label="5:CtVirtualElement@createChecker" shape=ellipse]
30 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
32 [label="5:CtThisAccessImpl@" shape=ellipse]
33 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
34 [label="5:CtInvocationImpl@createChecker()" shape=ellipse]
35 [label="5:CtVirtualElement@c" shape=ellipse]
36 [label="5:CtLocalVariableImpl@final Checker c = createChecker()" shape=ellipse]
37 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
38 [label="6:CtPackageReferenceImpl@java.lang" shape=ellipse]
39 [label="6:CtExecutableReferenceImpl@getPath(java.lang.String)" shape=ellipse]
40 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
41 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
42 [label="6:CtVirtualElement@getPath" shape=ellipse]
43 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
44 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
45 [label="6:CtThisAccessImpl@" shape=ellipse]
46 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
47 [label="6:CtLiteralImpl@\"InputOpWrap.java\"" shape=ellipse]
48 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
49 [label="6:CtInvocationImpl@getPath(\"InputOpWrap.java\")" shape=ellipse]
50 [label="6:CtVirtualElement@filepath" shape=ellipse]
51 [label="6:CtLocalVariableImpl@final String filepath = getPath(\"InputOpWrap.java\")" shape=ellipse]
52 [label="7:CtExecutableReferenceImpl@assertNotNull(<unknown>)" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
54 [label="7:CtVirtualElement@assertNotNull" shape=ellipse]
55 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
56 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
57 [label="7:CtThisAccessImpl@" shape=ellipse]
58 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
59 [label="7:CtVariableReadImpl@c" shape=ellipse]
60 [label="7:CtLocalVariableReferenceImpl@c" shape=ellipse]
61 [label="7:CtInvocationImpl@assertNotNull(c)" shape=ellipse]
62 [label="8:CtVirtualElement@String[]" shape=ellipse]
63 [label="8:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
64 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
65 [label="8:CtNewArrayImpl@new String[]\{  \}" shape=ellipse]
66 [label="8:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
67 [label="8:CtVirtualElement@expected" shape=ellipse]
68 [label="8:CtLocalVariableImpl@final String[] expected = new String[]\{  \}" shape=ellipse]
69 [label="9:CtExecutableReferenceImpl@verify(<unknown>,java.lang.String,java.lang.String[])" shape=ellipse]
70 [label="9:CtTypeReferenceImpl@null" shape=ellipse]
71 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
72 [label="9:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
73 [label="9:CtVirtualElement@verify" shape=ellipse]
74 [label="9:CtTypeAccessImpl@PlaceHold" shape=ellipse]
75 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
76 [label="9:CtThisAccessImpl@" shape=ellipse]
77 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
78 [label="9:CtVariableReadImpl@c" shape=ellipse]
79 [label="9:CtLocalVariableReferenceImpl@c" shape=ellipse]
80 [label="9:CtVariableReadImpl@filepath" shape=ellipse]
81 [label="9:CtLocalVariableReferenceImpl@filepath" shape=ellipse]
82 [label="9:CtVariableReadImpl@expected" shape=ellipse]
83 [label="9:CtLocalVariableReferenceImpl@expected" shape=ellipse]
84 [label="9:CtInvocationImpl@verify(c, filepath, expected)" shape=ellipse]
85 [label="2:CtBlockImpl@\{
    mConfig.setJavadocScope(NOTHING);
    mConfig.setBooleanFlag(IGNORE_OP_WRAP_PROP, true);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputOpWrap.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{  \};
    verify(c, filepath, expected);
\}" shape=ellipse]
86 [label="2:CtMethodImpl@public void testOpWrapOff() throws Exception \{
    mConfig.setJavadocScope(NOTHING);
    mConfig.setBooleanFlag(IGNORE_OP_WRAP_PROP, true);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputOpWrap.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{  \};
    verify(c, filepath, expected);
\}" shape=ellipse]
87 [label="4:Update@UPDATE" shape=ellipse]
88 [label="4:CtPackageReferenceImpl@" shape=ellipse]
89 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
90 [label="4:CtFieldReferenceImpl@mConfig" shape=ellipse]
91 [label="4:CtFieldReadImpl@mConfig" shape=ellipse]
92 [label="4:CtPackageReferenceImpl@" shape=ellipse]
93 [label="4:CtTypeReferenceImpl@mConfig" shape=ellipse]
94 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
95 [label="4:CtExecutableReferenceImpl@setBooleanProperty(boolean)" shape=ellipse]
96 [label="4:CtPackageReferenceImpl@" shape=ellipse]
97 [label="4:CtTypeReferenceImpl@IGNORE_OP_WRAP_PROP" shape=ellipse]
98 [label="4:CtTypeAccessImpl@IGNORE_OP_WRAP_PROP" shape=ellipse]
99 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
100 [label="4:CtLiteralImpl@true" shape=ellipse]
101 [label="4:CtInvocationImpl@mConfig.setBooleanProperty(IGNORE_OP_WRAP_PROP, true)" shape=ellipse]
102 [label="4:CtVirtualElement@setBooleanProperty" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
7 -> 8 [label="AST"];
9 -> 7 [label="AST"];
10 -> 11 [label="AST"];
12 -> 6 [label="AST"];
12 -> 9 [label="AST"];
12 -> 4 [label="AST"];
12 -> 10 [label="AST"];
13 -> 14 [label="AST"];
13 -> 15 [label="AST"];
17 -> 18 [label="AST"];
19 -> 17 [label="AST"];
20 -> 21 [label="AST"];
22 -> 23 [label="AST"];
24 -> 16 [label="AST"];
24 -> 19 [label="AST"];
24 -> 13 [label="AST"];
24 -> 20 [label="AST"];
24 -> 22 [label="AST"];
24 -> 87 [label="Action"];
25 -> 26 [label="AST"];
27 -> 28 [label="AST"];
30 -> 31 [label="AST"];
32 -> 33 [label="AST"];
32 -> 30 [label="AST"];
32 -> 35 [label="Data Dep"];
34 -> 29 [label="AST"];
34 -> 32 [label="AST"];
34 -> 27 [label="AST"];
35 -> 59 [label="Define-Use"];
35 -> 78 [label="Define-Use"];
36 -> 35 [label="AST"];
36 -> 25 [label="AST"];
36 -> 34 [label="AST"];
37 -> 38 [label="AST"];
39 -> 40 [label="AST"];
39 -> 41 [label="AST"];
43 -> 44 [label="AST"];
45 -> 46 [label="AST"];
45 -> 43 [label="AST"];
45 -> 50 [label="Data Dep"];
47 -> 48 [label="AST"];
49 -> 42 [label="AST"];
49 -> 45 [label="AST"];
49 -> 39 [label="AST"];
49 -> 47 [label="AST"];
50 -> 80 [label="Define-Use"];
51 -> 50 [label="AST"];
51 -> 37 [label="AST"];
51 -> 49 [label="AST"];
52 -> 53 [label="AST"];
55 -> 56 [label="AST"];
57 -> 58 [label="AST"];
57 -> 55 [label="AST"];
59 -> 60 [label="AST"];
61 -> 54 [label="AST"];
61 -> 57 [label="AST"];
61 -> 52 [label="AST"];
61 -> 59 [label="AST"];
63 -> 62 [label="AST"];
63 -> 64 [label="AST"];
65 -> 66 [label="AST"];
67 -> 82 [label="Define-Use"];
68 -> 67 [label="AST"];
68 -> 63 [label="AST"];
68 -> 65 [label="AST"];
69 -> 70 [label="AST"];
69 -> 71 [label="AST"];
69 -> 72 [label="AST"];
74 -> 75 [label="AST"];
76 -> 77 [label="AST"];
76 -> 74 [label="AST"];
78 -> 79 [label="AST"];
80 -> 81 [label="AST"];
82 -> 83 [label="AST"];
84 -> 73 [label="AST"];
84 -> 76 [label="AST"];
84 -> 69 [label="AST"];
84 -> 78 [label="AST"];
84 -> 80 [label="AST"];
84 -> 82 [label="AST"];
85 -> 12 [label="AST"];
85 -> 24 [label="AST"];
85 -> 36 [label="AST"];
85 -> 51 [label="AST"];
85 -> 61 [label="AST"];
85 -> 68 [label="AST"];
85 -> 84 [label="AST"];
86 -> 1 [label="AST"];
86 -> 0 [label="AST"];
86 -> 2 [label="AST"];
86 -> 85 [label="AST"];
87 -> 101 [label="Action"];
89 -> 88 [label="AST"];
90 -> 89 [label="AST"];
91 -> 90 [label="AST"];
93 -> 92 [label="AST"];
95 -> 93 [label="AST"];
95 -> 94 [label="AST"];
97 -> 96 [label="AST"];
98 -> 97 [label="AST"];
100 -> 99 [label="AST"];
101 -> 102 [label="AST"];
101 -> 91 [label="AST"];
101 -> 95 [label="AST"];
101 -> 98 [label="AST"];
101 -> 100 [label="AST"];
}