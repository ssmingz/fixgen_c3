digraph "Pattern" {
0 [label="getListeners#?#9:DELETE" shape=ellipse]
1 [label="getListeners#?#9:true
getListeners#?#9:true" shape=ellipse]
2 [label="getListeners#?#6:formatters.isEmpty()
getListeners#?#6:formatters.isEmpty()" shape=ellipse]
3 [label="getListeners#?#6:if (formatters.isEmpty()) \{
    final OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);
    final OutputStream err = new LogOutputStream(this, Project.MSG_ERR);
    listeners[0] = new DefaultLogger(debug, true, err, true, true);
\} else \{
    for (int i = 0; i < formatterCount; i++) \{
        final Formatter formatter = formatters.get(i);
        listeners[i] = formatter.createListener(this);
    \}
\}
getListeners#?#6:if (formatters.isEmpty()) \{
    final OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);
    final OutputStream err = new LogOutputStream(this, Project.MSG_ERR);
    listeners[0] = new DefaultLogger(debug, true, err, true);
\} else \{
    for (int i = 0; i < formatterCount; i++) \{
        final Formatter formatter = formatters.get(i);
        listeners[i] = formatter.createListener(this);
    \}
\}" shape=ellipse]
4 [label="getListeners#?#6:isEmpty
getListeners#?#6:isEmpty" shape=ellipse]
5 [label="getListeners#?#6:formatters
getListeners#?#6:formatters" shape=ellipse]
6 [label="getListeners#?#6:isEmpty()
getListeners#?#6:isEmpty()" shape=ellipse]
7 [label="getListeners#?#6:\{
    final OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);
    final OutputStream err = new LogOutputStream(this, Project.MSG_ERR);
    listeners[0] = new DefaultLogger(debug, true, err, true, true);
\}
getListeners#?#6:\{
    final OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);
    final OutputStream err = new LogOutputStream(this, Project.MSG_ERR);
    listeners[0] = new DefaultLogger(debug, true, err, true);
\}" shape=ellipse]
8 [label="getListeners#?#7:final OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG)
getListeners#?#7:final OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG)" shape=ellipse]
9 [label="getListeners#?#7:new LogOutputStream(this, Project.MSG_DEBUG)
getListeners#?#7:new LogOutputStream(this, Project.MSG_DEBUG)" shape=ellipse]
10 [label="getListeners#?#7:LogOutputStream()
getListeners#?#7:LogOutputStream()" shape=ellipse]
11 [label="getListeners#?#7:this
getListeners#?#7:this" shape=ellipse]
12 [label="getListeners#?#7:PlaceHold
getListeners#?#7:PlaceHold" shape=ellipse]
13 [label="getListeners#?#7:Project.MSG_DEBUG
getListeners#?#7:Project.MSG_DEBUG" shape=ellipse]
14 [label="getListeners#?#8:final OutputStream err = new LogOutputStream(this, Project.MSG_ERR)
getListeners#?#8:final OutputStream err = new LogOutputStream(this, Project.MSG_ERR)" shape=ellipse]
15 [label="getListeners#?#8:new LogOutputStream(this, Project.MSG_ERR)
getListeners#?#8:new LogOutputStream(this, Project.MSG_ERR)" shape=ellipse]
16 [label="getListeners#?#8:LogOutputStream()
getListeners#?#8:LogOutputStream()" shape=ellipse]
17 [label="getListeners#?#8:this
getListeners#?#8:this" shape=ellipse]
18 [label="getListeners#?#8:PlaceHold
getListeners#?#8:PlaceHold" shape=ellipse]
19 [label="getListeners#?#8:Project.MSG_ERR
getListeners#?#8:Project.MSG_ERR" shape=ellipse]
20 [label="getListeners#?#9:listeners[0] = new DefaultLogger(debug, true, err, true, true)
getListeners#?#9:listeners[0] = new DefaultLogger(debug, true, err, true)" shape=ellipse]
21 [label="getListeners#?#9:listeners[0]
getListeners#?#9:listeners[0]" shape=ellipse]
22 [label="getListeners#?#9:listeners
getListeners#?#9:listeners" shape=ellipse]
23 [label="getListeners#?#9:0
getListeners#?#9:0" shape=ellipse]
24 [label="getListeners#?#9:new DefaultLogger(debug, true, err, true, true)
getListeners#?#9:new DefaultLogger(debug, true, err, true)" shape=ellipse]
25 [label="getListeners#?#9:DefaultLogger()
getListeners#?#9:DefaultLogger()" shape=ellipse]
26 [label="getListeners#?#9:debug
getListeners#?#9:debug" shape=ellipse]
27 [label="getListeners#?#9:true
getListeners#?#9:true" shape=ellipse]
28 [label="getListeners#?#9:err
getListeners#?#9:err" shape=ellipse]
29 [label="getListeners#?#9:true" shape=ellipse]
30 [label="getListeners#?#10:\{
    for (int i = 0; i < formatterCount; i++) \{
        final Formatter formatter = formatters.get(i);
        listeners[i] = formatter.createListener(this);
    \}
\}
getListeners#?#10:\{
    for (int i = 0; i < formatterCount; i++) \{
        final Formatter formatter = formatters.get(i);
        listeners[i] = formatter.createListener(this);
    \}
\}" shape=ellipse]
31 [label="getListeners#?#11:for (int i = 0; i < formatterCount; i++) \{
    final Formatter formatter = formatters.get(i);
    listeners[i] = formatter.createListener(this);
\}
getListeners#?#11:for (int i = 0; i < formatterCount; i++) \{
    final Formatter formatter = formatters.get(i);
    listeners[i] = formatter.createListener(this);
\}" shape=ellipse]
32 [label="getListeners#?#11:int i = 0
getListeners#?#11:int i = 0" shape=ellipse]
33 [label="getListeners#?#11:0
getListeners#?#11:0" shape=ellipse]
34 [label="getListeners#?#11:i < formatterCount
getListeners#?#11:i < formatterCount" shape=ellipse]
35 [label="getListeners#?#11:i
getListeners#?#11:i" shape=ellipse]
36 [label="getListeners#?#11:formatterCount
getListeners#?#11:formatterCount" shape=ellipse]
37 [label="getListeners#?#11:i++
getListeners#?#11:i++" shape=ellipse]
38 [label="getListeners#?#11:i
getListeners#?#11:i" shape=ellipse]
39 [label="getListeners#?#9:boolean" shape=ellipse]
40 [label="getListeners#?#9:INSERT" shape=ellipse]
41 [label="getListeners#?#9:true" shape=ellipse]
42 [label="getListeners#?#9:boolean" shape=ellipse]
1 -> 0 [label="Action:1"];
1 -> 39 [label="AST:1"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:2"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:2"];
2 -> 26 [label="Control Dep:2"];
2 -> 27 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:2"];
2 -> 29 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:2"];
2 -> 31 [label="Control Dep:2"];
2 -> 32 [label="Control Dep:2"];
2 -> 33 [label="Control Dep:2"];
2 -> 34 [label="Control Dep:2"];
2 -> 35 [label="Control Dep:2"];
2 -> 36 [label="Control Dep:2"];
2 -> 37 [label="Control Dep:2"];
2 -> 38 [label="Control Dep:2"];
2 -> 41 [label="Control Dep:1"];
3 -> 2 [label="AST:2"];
3 -> 7 [label="AST:2"];
3 -> 30 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 14 [label="AST:2"];
7 -> 20 [label="AST:2"];
8 -> 9 [label="AST:2"];
9 -> 10 [label="AST:2"];
9 -> 11 [label="AST:2"];
9 -> 13 [label="AST:2"];
11 -> 12 [label="AST:2"];
14 -> 15 [label="AST:2"];
15 -> 16 [label="AST:2"];
15 -> 17 [label="AST:2"];
15 -> 19 [label="AST:2"];
17 -> 18 [label="AST:2"];
20 -> 21 [label="AST:2"];
20 -> 24 [label="AST:2"];
21 -> 22 [label="AST:2"];
21 -> 23 [label="AST:2"];
24 -> 1 [label="AST:2"];
24 -> 25 [label="AST:2"];
24 -> 26 [label="AST:2"];
24 -> 27 [label="AST:2"];
24 -> 28 [label="AST:2"];
24 -> 29 [label="AST:1"];
24 -> 40 [label="Action:1"];
26 -> 21 [label="Data Dep:2"];
28 -> 21 [label="Data Dep:2"];
30 -> 31 [label="AST:2"];
31 -> 32 [label="AST:2"];
31 -> 34 [label="AST:2"];
31 -> 37 [label="AST:2"];
32 -> 33 [label="AST:2"];
34 -> 35 [label="AST:2"];
34 -> 36 [label="AST:2"];
37 -> 38 [label="AST:2"];
40 -> 41 [label="Action:1"];
41 -> 42 [label="AST:1"];
}