digraph "testPackageHtml#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testPackageHtml" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@setRequirePackageHtml(boolean)" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@mConfig" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
7 [label="3:CtVirtualElement@setRequirePackageHtml" shape=ellipse]
8 [label="3:CtFieldReferenceImpl@mConfig" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
10 [label="3:CtFieldReadImpl@mConfig" shape=ellipse]
11 [label="3:CtLiteralImpl@true" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
13 [label="3:CtInvocationImpl@mConfig.setRequirePackageHtml(true)" shape=ellipse]
14 [label="4:CtExecutableReferenceImpl@setJavadocScope()" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@mConfig" shape=ellipse]
16 [label="4:CtVirtualElement@setJavadocScope" shape=ellipse]
17 [label="4:CtFieldReferenceImpl@mConfig" shape=ellipse]
18 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
19 [label="4:CtFieldReadImpl@mConfig" shape=ellipse]
20 [label="4:CtTypeAccessImpl@PRIVATE" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@PRIVATE" shape=ellipse]
22 [label="4:CtInvocationImpl@mConfig.setJavadocScope(PRIVATE)" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@Checker" shape=ellipse]
24 [label="5:CtPackageReferenceImpl@" shape=ellipse]
25 [label="5:CtExecutableReferenceImpl@createChecker()" shape=ellipse]
26 [label="5:CtTypeReferenceImpl@Checker" shape=ellipse]
27 [label="5:CtVirtualElement@createChecker" shape=ellipse]
28 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
29 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
30 [label="5:CtThisAccessImpl@" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
32 [label="5:CtInvocationImpl@createChecker()" shape=ellipse]
33 [label="5:CtVirtualElement@c" shape=ellipse]
34 [label="5:CtLocalVariableImpl@final Checker c = createChecker()" shape=ellipse]
35 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
36 [label="6:CtPackageReferenceImpl@java.lang" shape=ellipse]
37 [label="6:CtExecutableReferenceImpl@getPath(java.lang.String)" shape=ellipse]
38 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
39 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
40 [label="6:CtVirtualElement@getPath" shape=ellipse]
41 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
42 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
43 [label="6:CtThisAccessImpl@" shape=ellipse]
44 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
45 [label="6:CtLiteralImpl@\"package.html\"" shape=ellipse]
46 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
47 [label="6:CtInvocationImpl@getPath(\"package.html\")" shape=ellipse]
48 [label="6:CtVirtualElement@packageHtmlPath" shape=ellipse]
49 [label="6:CtLocalVariableImpl@final String packageHtmlPath = getPath(\"package.html\")" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
51 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
52 [label="7:CtExecutableReferenceImpl@getPath(java.lang.String)" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
54 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
55 [label="7:CtVirtualElement@getPath" shape=ellipse]
56 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
57 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
58 [label="7:CtThisAccessImpl@" shape=ellipse]
59 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
60 [label="7:CtLiteralImpl@\"InputScopeAnonInner.java\"" shape=ellipse]
61 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
62 [label="7:CtInvocationImpl@getPath(\"InputScopeAnonInner.java\")" shape=ellipse]
63 [label="7:CtVirtualElement@filepath" shape=ellipse]
64 [label="7:CtLocalVariableImpl@final String filepath = getPath(\"InputScopeAnonInner.java\")" shape=ellipse]
65 [label="8:CtExecutableReferenceImpl@assertNotNull(<unknown>)" shape=ellipse]
66 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
67 [label="8:CtVirtualElement@assertNotNull" shape=ellipse]
68 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
69 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
70 [label="8:CtThisAccessImpl@" shape=ellipse]
71 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
72 [label="8:CtVariableReadImpl@c" shape=ellipse]
73 [label="8:CtLocalVariableReferenceImpl@c" shape=ellipse]
74 [label="8:CtInvocationImpl@assertNotNull(c)" shape=ellipse]
75 [label="9:CtVirtualElement@String[]" shape=ellipse]
76 [label="9:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
77 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
78 [label="10:CtNewArrayImpl@new String[]\{ packageHtmlPath + \":0: missing package documentation file.\", filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded by whitespace.\", filepath + \":43:14: ')' is preceeded by whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded by whitespace.\", filepath + \":57:14: ')' is preceeded by whitespace.\" \}" shape=ellipse]
79 [label="10:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
80 [label="11:CtBinaryOperatorImpl@packageHtmlPath + \":0: missing package documentation file.\"" shape=ellipse]
81 [label="12:CtBinaryOperatorImpl@filepath + \":37:34: '(' is followed by whitespace.\"" shape=ellipse]
82 [label="13:CtBinaryOperatorImpl@filepath + \":39:42: '(' is followed by whitespace.\"" shape=ellipse]
83 [label="14:CtBinaryOperatorImpl@filepath + \":39:57: ')' is preceeded by whitespace.\"" shape=ellipse]
84 [label="15:CtBinaryOperatorImpl@filepath + \":43:14: ')' is preceeded by whitespace.\"" shape=ellipse]
85 [label="16:CtBinaryOperatorImpl@filepath + \":51:34: '(' is followed by whitespace.\"" shape=ellipse]
86 [label="17:CtBinaryOperatorImpl@filepath + \":53:42: '(' is followed by whitespace.\"" shape=ellipse]
87 [label="18:CtBinaryOperatorImpl@filepath + \":53:57: ')' is preceeded by whitespace.\"" shape=ellipse]
88 [label="19:CtBinaryOperatorImpl@filepath + \":57:14: ')' is preceeded by whitespace.\"" shape=ellipse]
89 [label="9:CtVirtualElement@expected" shape=ellipse]
90 [label="9:CtLocalVariableImpl@final String[] expected = new String[]\{ packageHtmlPath + \":0: missing package documentation file.\", filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded by whitespace.\", filepath + \":43:14: ')' is preceeded by whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded by whitespace.\", filepath + \":57:14: ')' is preceeded by whitespace.\" \}" shape=ellipse]
91 [label="21:CtExecutableReferenceImpl@verify(<unknown>,java.lang.String,java.lang.String[])" shape=ellipse]
92 [label="21:CtTypeReferenceImpl@null" shape=ellipse]
93 [label="21:CtTypeReferenceImpl@String" shape=ellipse]
94 [label="21:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
95 [label="21:CtVirtualElement@verify" shape=ellipse]
96 [label="21:CtTypeAccessImpl@PlaceHold" shape=ellipse]
97 [label="21:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
98 [label="21:CtThisAccessImpl@" shape=ellipse]
99 [label="21:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
100 [label="21:CtVariableReadImpl@c" shape=ellipse]
101 [label="21:CtLocalVariableReferenceImpl@c" shape=ellipse]
102 [label="21:CtVariableReadImpl@filepath" shape=ellipse]
103 [label="21:CtLocalVariableReferenceImpl@filepath" shape=ellipse]
104 [label="21:CtVariableReadImpl@expected" shape=ellipse]
105 [label="21:CtLocalVariableReferenceImpl@expected" shape=ellipse]
106 [label="21:CtInvocationImpl@verify(c, filepath, expected)" shape=ellipse]
107 [label="2:CtBlockImpl@\{
    mConfig.setRequirePackageHtml(true);
    mConfig.setJavadocScope(PRIVATE);
    final Checker c = createChecker();
    final String packageHtmlPath = getPath(\"package.html\");
    final String filepath = getPath(\"InputScopeAnonInner.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ packageHtmlPath + \":0: missing package documentation file.\", filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded by whitespace.\", filepath + \":43:14: ')' is preceeded by whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded by whitespace.\", filepath + \":57:14: ')' is preceeded by whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
108 [label="2:CtMethodImpl@public void testPackageHtml() throws Exception \{
    mConfig.setRequirePackageHtml(true);
    mConfig.setJavadocScope(PRIVATE);
    final Checker c = createChecker();
    final String packageHtmlPath = getPath(\"package.html\");
    final String filepath = getPath(\"InputScopeAnonInner.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ packageHtmlPath + \":0: missing package documentation file.\", filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded by whitespace.\", filepath + \":43:14: ')' is preceeded by whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded by whitespace.\", filepath + \":57:14: ')' is preceeded by whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
109 [label="3:Update@UPDATE" shape=ellipse]
110 [label="3:CtPackageReferenceImpl@" shape=ellipse]
111 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
112 [label="3:CtFieldReferenceImpl@mConfig" shape=ellipse]
113 [label="3:CtFieldReadImpl@mConfig" shape=ellipse]
114 [label="3:CtPackageReferenceImpl@" shape=ellipse]
115 [label="3:CtTypeReferenceImpl@mConfig" shape=ellipse]
116 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
117 [label="3:CtExecutableReferenceImpl@setBooleanFlag(boolean)" shape=ellipse]
118 [label="3:CtPackageReferenceImpl@" shape=ellipse]
119 [label="3:CtTypeReferenceImpl@REQUIRE_PACKAGE_HTML_PROP" shape=ellipse]
120 [label="3:CtTypeAccessImpl@REQUIRE_PACKAGE_HTML_PROP" shape=ellipse]
121 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
122 [label="3:CtLiteralImpl@true" shape=ellipse]
123 [label="3:CtInvocationImpl@mConfig.setBooleanFlag(REQUIRE_PACKAGE_HTML_PROP, true)" shape=ellipse]
124 [label="3:CtVirtualElement@setBooleanFlag" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
8 -> 9 [label="AST"];
10 -> 8 [label="AST"];
11 -> 12 [label="AST"];
13 -> 7 [label="AST"];
13 -> 10 [label="AST"];
13 -> 4 [label="AST"];
13 -> 11 [label="AST"];
13 -> 109 [label="Action"];
14 -> 15 [label="AST"];
17 -> 18 [label="AST"];
19 -> 17 [label="AST"];
20 -> 21 [label="AST"];
22 -> 16 [label="AST"];
22 -> 19 [label="AST"];
22 -> 14 [label="AST"];
22 -> 20 [label="AST"];
23 -> 24 [label="AST"];
25 -> 26 [label="AST"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
30 -> 28 [label="AST"];
30 -> 33 [label="Data Dep"];
32 -> 27 [label="AST"];
32 -> 30 [label="AST"];
32 -> 25 [label="AST"];
33 -> 72 [label="Define-Use"];
33 -> 100 [label="Define-Use"];
34 -> 33 [label="AST"];
34 -> 23 [label="AST"];
34 -> 32 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 39 [label="AST"];
41 -> 42 [label="AST"];
43 -> 44 [label="AST"];
43 -> 41 [label="AST"];
43 -> 48 [label="Data Dep"];
45 -> 46 [label="AST"];
47 -> 40 [label="AST"];
47 -> 43 [label="AST"];
47 -> 37 [label="AST"];
47 -> 45 [label="AST"];
49 -> 48 [label="AST"];
49 -> 35 [label="AST"];
49 -> 47 [label="AST"];
50 -> 51 [label="AST"];
52 -> 53 [label="AST"];
52 -> 54 [label="AST"];
56 -> 57 [label="AST"];
58 -> 59 [label="AST"];
58 -> 56 [label="AST"];
58 -> 63 [label="Data Dep"];
60 -> 61 [label="AST"];
62 -> 55 [label="AST"];
62 -> 58 [label="AST"];
62 -> 52 [label="AST"];
62 -> 60 [label="AST"];
63 -> 102 [label="Define-Use"];
64 -> 63 [label="AST"];
64 -> 50 [label="AST"];
64 -> 62 [label="AST"];
65 -> 66 [label="AST"];
68 -> 69 [label="AST"];
70 -> 71 [label="AST"];
70 -> 68 [label="AST"];
72 -> 73 [label="AST"];
74 -> 67 [label="AST"];
74 -> 70 [label="AST"];
74 -> 65 [label="AST"];
74 -> 72 [label="AST"];
76 -> 75 [label="AST"];
76 -> 77 [label="AST"];
78 -> 79 [label="AST"];
78 -> 80 [label="AST"];
78 -> 81 [label="AST"];
78 -> 82 [label="AST"];
78 -> 83 [label="AST"];
78 -> 84 [label="AST"];
78 -> 85 [label="AST"];
78 -> 86 [label="AST"];
78 -> 87 [label="AST"];
78 -> 88 [label="AST"];
89 -> 104 [label="Define-Use"];
90 -> 89 [label="AST"];
90 -> 76 [label="AST"];
90 -> 78 [label="AST"];
91 -> 92 [label="AST"];
91 -> 93 [label="AST"];
91 -> 94 [label="AST"];
96 -> 97 [label="AST"];
98 -> 99 [label="AST"];
98 -> 96 [label="AST"];
100 -> 101 [label="AST"];
102 -> 103 [label="AST"];
104 -> 105 [label="AST"];
106 -> 95 [label="AST"];
106 -> 98 [label="AST"];
106 -> 91 [label="AST"];
106 -> 100 [label="AST"];
106 -> 102 [label="AST"];
106 -> 104 [label="AST"];
107 -> 13 [label="AST"];
107 -> 22 [label="AST"];
107 -> 34 [label="AST"];
107 -> 49 [label="AST"];
107 -> 64 [label="AST"];
107 -> 74 [label="AST"];
107 -> 90 [label="AST"];
107 -> 106 [label="AST"];
108 -> 1 [label="AST"];
108 -> 0 [label="AST"];
108 -> 2 [label="AST"];
108 -> 107 [label="AST"];
109 -> 123 [label="Action"];
111 -> 110 [label="AST"];
112 -> 111 [label="AST"];
113 -> 112 [label="AST"];
115 -> 114 [label="AST"];
117 -> 115 [label="AST"];
117 -> 116 [label="AST"];
119 -> 118 [label="AST"];
120 -> 119 [label="AST"];
122 -> 121 [label="AST"];
123 -> 124 [label="AST"];
123 -> 113 [label="AST"];
123 -> 117 [label="AST"];
123 -> 120 [label="AST"];
123 -> 122 [label="AST"];
}