digraph "checkIndentation#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@checkIndentation" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
3 [label="3:CtExecutableReferenceImpl@expandedTabsColumnNo(<unknown>)" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@null" shape=ellipse]
6 [label="3:CtVirtualElement@expandedTabsColumnNo" shape=ellipse]
7 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
9 [label="3:CtThisAccessImpl@" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
11 [label="3:CtExecutableReferenceImpl@getMainAst()" shape=ellipse]
12 [label="3:CtVirtualElement@getMainAst" shape=ellipse]
13 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
15 [label="3:CtThisAccessImpl@" shape=ellipse]
16 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
17 [label="3:CtInvocationImpl@getMainAst()" shape=ellipse]
18 [label="3:CtInvocationImpl@expandedTabsColumnNo(getMainAst())" shape=ellipse]
19 [label="3:CtVirtualElement@columnNo" shape=ellipse]
20 [label="3:CtLocalVariableImpl@int columnNo = expandedTabsColumnNo(getMainAst())" shape=ellipse]
21 [label="4:CtVariableReadImpl@columnNo" shape=ellipse]
22 [label="4:CtLocalVariableReferenceImpl@columnNo" shape=ellipse]
23 [label="4:CtExecutableReferenceImpl@getLevel()" shape=ellipse]
24 [label="4:CtVirtualElement@getLevel" shape=ellipse]
25 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
26 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
27 [label="4:CtThisAccessImpl@" shape=ellipse]
28 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
29 [label="4:CtInvocationImpl@getLevel()" shape=ellipse]
30 [label="4:CtBinaryOperatorImpl@columnNo != getLevel()" shape=ellipse]
31 [label="5:CtExecutableReferenceImpl@logError(<unknown>,java.lang.String,int)" shape=ellipse]
32 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
33 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
35 [label="5:CtVirtualElement@logError" shape=ellipse]
36 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
38 [label="5:CtThisAccessImpl@" shape=ellipse]
39 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
40 [label="5:CtExecutableReferenceImpl@getMainAst()" shape=ellipse]
41 [label="5:CtVirtualElement@getMainAst" shape=ellipse]
42 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
43 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
44 [label="5:CtThisAccessImpl@" shape=ellipse]
45 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
46 [label="5:CtInvocationImpl@getMainAst()" shape=ellipse]
47 [label="5:CtLiteralImpl@\"\"" shape=ellipse]
48 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
49 [label="5:CtVariableReadImpl@columnNo" shape=ellipse]
50 [label="5:CtLocalVariableReferenceImpl@columnNo" shape=ellipse]
51 [label="5:CtInvocationImpl@logError(getMainAst(), \"\", columnNo)" shape=ellipse]
52 [label="4:CtBlockImpl@\{
    logError(getMainAst(), \"\", columnNo);
\}" shape=ellipse]
53 [label="4:CtIfImpl@if (columnNo != getLevel()) \{
    logError(getMainAst(), \"\", columnNo);
\}" shape=ellipse]
54 [label="7:CtExecutableReferenceImpl@checkLinesIndent(<unknown>,<unknown>,<unknown>)" shape=ellipse]
55 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
56 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
57 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
58 [label="7:CtVirtualElement@checkLinesIndent" shape=ellipse]
59 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
60 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
61 [label="7:CtThisAccessImpl@" shape=ellipse]
62 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
63 [label="8:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
64 [label="8:CtVirtualElement@getLineNo" shape=ellipse]
65 [label="8:CtExecutableReferenceImpl@getMainAst()" shape=ellipse]
66 [label="8:CtVirtualElement@getMainAst" shape=ellipse]
67 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
68 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
69 [label="8:CtThisAccessImpl@" shape=ellipse]
70 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
71 [label="8:CtInvocationImpl@getMainAst()" shape=ellipse]
72 [label="8:CtInvocationImpl@getMainAst().getLineNo()" shape=ellipse]
73 [label="8:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
74 [label="8:CtVirtualElement@getLineNo" shape=ellipse]
75 [label="8:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
76 [label="8:CtVirtualElement@findFirstToken" shape=ellipse]
77 [label="8:CtExecutableReferenceImpl@getMainAst()" shape=ellipse]
78 [label="8:CtVirtualElement@getMainAst" shape=ellipse]
79 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
80 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
81 [label="8:CtThisAccessImpl@" shape=ellipse]
82 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
83 [label="8:CtInvocationImpl@getMainAst()" shape=ellipse]
84 [label="8:CtTypeAccessImpl@SEMI" shape=ellipse]
85 [label="8:CtTypeReferenceImpl@SEMI" shape=ellipse]
86 [label="8:CtInvocationImpl@getMainAst().findFirstToken(SEMI)" shape=ellipse]
87 [label="8:CtInvocationImpl@getMainAst().findFirstToken(SEMI).getLineNo()" shape=ellipse]
88 [label="8:CtExecutableReferenceImpl@getLevel()" shape=ellipse]
89 [label="8:CtVirtualElement@getLevel" shape=ellipse]
90 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
91 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
92 [label="8:CtThisAccessImpl@" shape=ellipse]
93 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
94 [label="8:CtInvocationImpl@getLevel()" shape=ellipse]
95 [label="7:CtInvocationImpl@checkLinesIndent(getMainAst().getLineNo(), getMainAst().findFirstToken(SEMI).getLineNo(), getLevel())" shape=ellipse]
96 [label="2:CtBlockImpl@\{
    int columnNo = expandedTabsColumnNo(getMainAst());
    if (columnNo != getLevel()) \{
        logError(getMainAst(), \"\", columnNo);
    \}
    checkLinesIndent(getMainAst().getLineNo(), getMainAst().findFirstToken(SEMI).getLineNo(), getLevel());
\}" shape=ellipse]
97 [label="2:CtMethodImpl@public void checkIndentation() \{
    int columnNo = expandedTabsColumnNo(getMainAst());
    if (columnNo != getLevel()) \{
        logError(getMainAst(), \"\", columnNo);
    \}
    checkLinesIndent(getMainAst().getLineNo(), getMainAst().findFirstToken(SEMI).getLineNo(), getLevel());
\}" shape=ellipse]
98 [label="4:Delete@DELETE" shape=ellipse]
99 [label="4:Insert@INSERT" shape=ellipse]
100 [label="4:CtPackageReferenceImpl@" shape=ellipse]
101 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
102 [label="4:CtPackageReferenceImpl@" shape=ellipse]
103 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
104 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
105 [label="4:CtThisAccessImpl@" shape=ellipse]
106 [label="4:CtExecutableReferenceImpl@getLevel()" shape=ellipse]
107 [label="4:CtInvocationImpl@getLevel()" shape=ellipse]
108 [label="4:CtVirtualElement@getLevel" shape=ellipse]
109 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
110 [label="4:CtExecutableReferenceImpl@accept(int)" shape=ellipse]
111 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
112 [label="4:CtLocalVariableReferenceImpl@columnNo" shape=ellipse]
113 [label="4:CtVariableReadImpl@columnNo" shape=ellipse]
114 [label="4:CtInvocationImpl@getLevel().accept(columnNo)" shape=ellipse]
115 [label="4:CtVirtualElement@accept" shape=ellipse]
116 [label="4:CtUnaryOperatorImpl@!.accept(columnNo)" shape=ellipse]
117 [label="4:Move@MOVE" shape=ellipse]
3 -> 4 [label="AST"];
3 -> 5 [label="AST"];
7 -> 8 [label="AST"];
9 -> 10 [label="AST"];
9 -> 7 [label="AST"];
9 -> 19 [label="Data Dep"];
13 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 13 [label="AST"];
15 -> 19 [label="Data Dep"];
17 -> 12 [label="AST"];
17 -> 15 [label="AST"];
17 -> 11 [label="AST"];
18 -> 6 [label="AST"];
18 -> 9 [label="AST"];
18 -> 3 [label="AST"];
18 -> 17 [label="AST"];
19 -> 21 [label="Define-Use"];
19 -> 49 [label="Define-Use"];
20 -> 19 [label="AST"];
20 -> 2 [label="AST"];
20 -> 18 [label="AST"];
21 -> 22 [label="AST"];
25 -> 26 [label="AST"];
27 -> 28 [label="AST"];
27 -> 25 [label="AST"];
29 -> 24 [label="AST"];
29 -> 27 [label="AST"];
29 -> 23 [label="AST"];
29 -> 117 [label="Action"];
30 -> 21 [label="AST"];
30 -> 29 [label="AST"];
30 -> 52 [label="Control Dep"];
30 -> 51 [label="Control Dep"];
30 -> 31 [label="Control Dep"];
30 -> 38 [label="Control Dep"];
30 -> 36 [label="Control Dep"];
30 -> 46 [label="Control Dep"];
30 -> 40 [label="Control Dep"];
30 -> 44 [label="Control Dep"];
30 -> 42 [label="Control Dep"];
30 -> 47 [label="Control Dep"];
30 -> 49 [label="Control Dep"];
30 -> 98 [label="Action"];
31 -> 32 [label="AST"];
31 -> 33 [label="AST"];
31 -> 34 [label="AST"];
36 -> 37 [label="AST"];
38 -> 39 [label="AST"];
38 -> 36 [label="AST"];
42 -> 43 [label="AST"];
44 -> 45 [label="AST"];
44 -> 42 [label="AST"];
46 -> 41 [label="AST"];
46 -> 44 [label="AST"];
46 -> 40 [label="AST"];
47 -> 48 [label="AST"];
49 -> 50 [label="AST"];
51 -> 35 [label="AST"];
51 -> 38 [label="AST"];
51 -> 31 [label="AST"];
51 -> 46 [label="AST"];
51 -> 47 [label="AST"];
51 -> 49 [label="AST"];
52 -> 51 [label="AST"];
53 -> 30 [label="AST"];
53 -> 52 [label="AST"];
53 -> 99 [label="Action"];
54 -> 55 [label="AST"];
54 -> 56 [label="AST"];
54 -> 57 [label="AST"];
59 -> 60 [label="AST"];
61 -> 62 [label="AST"];
61 -> 59 [label="AST"];
67 -> 68 [label="AST"];
69 -> 70 [label="AST"];
69 -> 67 [label="AST"];
71 -> 66 [label="AST"];
71 -> 69 [label="AST"];
71 -> 65 [label="AST"];
72 -> 64 [label="AST"];
72 -> 71 [label="AST"];
72 -> 63 [label="AST"];
79 -> 80 [label="AST"];
81 -> 82 [label="AST"];
81 -> 79 [label="AST"];
83 -> 78 [label="AST"];
83 -> 81 [label="AST"];
83 -> 77 [label="AST"];
84 -> 85 [label="AST"];
86 -> 76 [label="AST"];
86 -> 83 [label="AST"];
86 -> 75 [label="AST"];
86 -> 84 [label="AST"];
87 -> 74 [label="AST"];
87 -> 86 [label="AST"];
87 -> 73 [label="AST"];
90 -> 91 [label="AST"];
92 -> 93 [label="AST"];
92 -> 90 [label="AST"];
94 -> 89 [label="AST"];
94 -> 92 [label="AST"];
94 -> 88 [label="AST"];
95 -> 58 [label="AST"];
95 -> 61 [label="AST"];
95 -> 54 [label="AST"];
95 -> 72 [label="AST"];
95 -> 87 [label="AST"];
95 -> 94 [label="AST"];
96 -> 20 [label="AST"];
96 -> 53 [label="AST"];
96 -> 95 [label="AST"];
97 -> 1 [label="AST"];
97 -> 0 [label="AST"];
97 -> 96 [label="AST"];
99 -> 116 [label="Action"];
101 -> 100 [label="AST"];
103 -> 102 [label="AST"];
104 -> 103 [label="AST"];
105 -> 101 [label="AST"];
105 -> 104 [label="AST"];
107 -> 108 [label="AST"];
107 -> 105 [label="AST"];
107 -> 106 [label="AST"];
110 -> 109 [label="AST"];
112 -> 111 [label="AST"];
113 -> 112 [label="AST"];
114 -> 115 [label="AST"];
114 -> 107 [label="AST"];
114 -> 110 [label="AST"];
114 -> 113 [label="AST"];
116 -> 114 [label="AST"];
116 -> 52 [label="Control Dep"];
116 -> 51 [label="Control Dep"];
116 -> 31 [label="Control Dep"];
116 -> 38 [label="Control Dep"];
116 -> 36 [label="Control Dep"];
116 -> 46 [label="Control Dep"];
116 -> 40 [label="Control Dep"];
116 -> 44 [label="Control Dep"];
116 -> 42 [label="Control Dep"];
116 -> 47 [label="Control Dep"];
116 -> 49 [label="Control Dep"];
117 -> 114 [label="Action"];
}