digraph "testClassSpecific#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@testClassSpecific" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@createCheckConfig(java.lang.Class)" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@Class<TypeNameCheck>" shape=ellipse]
9 [label="4:CtVirtualElement@createCheckConfig" shape=ellipse]
10 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
12 [label="4:CtThisAccessImpl@" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
14 [label="4:CtFieldReferenceImpl@TypeNameCheck.class" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@TypeNameCheck" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@Class" shape=ellipse]
17 [label="4:CtFieldReadImpl@TypeNameCheck.class" shape=ellipse]
18 [label="4:CtTypeAccessImpl@TypeNameCheck" shape=ellipse]
19 [label="4:CtInvocationImpl@createCheckConfig(TypeNameCheck.class)" shape=ellipse]
20 [label="4:CtVirtualElement@checkConfig" shape=ellipse]
21 [label="4:CtLocalVariableImpl@final DefaultConfiguration checkConfig = createCheckConfig(TypeNameCheck.class)" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@addAttribute(java.lang.String)" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
25 [label="5:CtVirtualElement@addAttribute" shape=ellipse]
26 [label="5:CtVariableReadImpl@checkConfig" shape=ellipse]
27 [label="5:CtLocalVariableReferenceImpl@checkConfig" shape=ellipse]
28 [label="5:CtLiteralImpl@\"tokens\"" shape=ellipse]
29 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
30 [label="5:CtExecutableReferenceImpl@getTokenName()" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
32 [label="5:CtVirtualElement@getTokenName" shape=ellipse]
33 [label="5:CtTypeAccessImpl@TokenTypes" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
35 [label="5:CtTypeAccessImpl@CLASS_DEF" shape=ellipse]
36 [label="5:CtTypeReferenceImpl@CLASS_DEF" shape=ellipse]
37 [label="5:CtInvocationImpl@TokenTypes.getTokenName(CLASS_DEF)" shape=ellipse]
38 [label="5:CtInvocationImpl@checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(CLASS_DEF))" shape=ellipse]
39 [label="6:CtVirtualElement@String[]" shape=ellipse]
40 [label="6:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
41 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
42 [label="7:CtNewArrayImpl@new String[]\{ \"3:7: \" + getCheckMessage(MSG_INVALID_PATTERN, \"inputHeaderClass\", DEFAULT_PATTERN) \}" shape=ellipse]
43 [label="7:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
44 [label="8:CtBinaryOperatorImpl@\"3:7: \" + getCheckMessage(MSG_INVALID_PATTERN, \"inputHeaderClass\", DEFAULT_PATTERN)" shape=ellipse]
45 [label="6:CtVirtualElement@expected" shape=ellipse]
46 [label="6:CtLocalVariableImpl@final String[] expected = new String[]\{ \"3:7: \" + getCheckMessage(MSG_INVALID_PATTERN, \"inputHeaderClass\", DEFAULT_PATTERN) \}" shape=ellipse]
47 [label="10:CtExecutableReferenceImpl@verify(<unknown>,<unknown>,java.lang.String[])" shape=ellipse]
48 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
49 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
50 [label="10:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
51 [label="10:CtVirtualElement@verify" shape=ellipse]
52 [label="10:CtTypeAccessImpl@PlaceHold" shape=ellipse]
53 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
54 [label="10:CtThisAccessImpl@" shape=ellipse]
55 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
56 [label="10:CtVariableReadImpl@checkConfig" shape=ellipse]
57 [label="10:CtLocalVariableReferenceImpl@checkConfig" shape=ellipse]
58 [label="10:CtFieldReferenceImpl@inputFilename" shape=ellipse]
59 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
60 [label="10:CtFieldReadImpl@inputFilename" shape=ellipse]
61 [label="10:CtVariableReadImpl@expected" shape=ellipse]
62 [label="10:CtLocalVariableReferenceImpl@expected" shape=ellipse]
63 [label="10:CtInvocationImpl@verify(checkConfig, inputFilename, expected)" shape=ellipse]
64 [label="3:CtBlockImpl@\{
    final DefaultConfiguration checkConfig = createCheckConfig(TypeNameCheck.class);
    checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(CLASS_DEF));
    final String[] expected = new String[]\{ \"3:7: \" + getCheckMessage(MSG_INVALID_PATTERN, \"inputHeaderClass\", DEFAULT_PATTERN) \};
    verify(checkConfig, inputFilename, expected);
\}" shape=ellipse]
65 [label="3:CtMethodImpl@@Test
public void testClassSpecific() throws Exception \{
    final DefaultConfiguration checkConfig = createCheckConfig(TypeNameCheck.class);
    checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(CLASS_DEF));
    final String[] expected = new String[]\{ \"3:7: \" + getCheckMessage(MSG_INVALID_PATTERN, \"inputHeaderClass\", DEFAULT_PATTERN) \};
    verify(checkConfig, inputFilename, expected);
\}" shape=ellipse]
66 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
67 [label="5:Update@UPDATE" shape=ellipse]
68 [label="5:CtPackageReferenceImpl@" shape=ellipse]
69 [label="5:CtTypeReferenceImpl@Utils" shape=ellipse]
70 [label="5:CtTypeAccessImpl@Utils" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
10 -> 11 [label="AST"];
12 -> 13 [label="AST"];
12 -> 10 [label="AST"];
12 -> 20 [label="Data Dep"];
14 -> 15 [label="AST"];
14 -> 16 [label="AST"];
17 -> 18 [label="AST"];
17 -> 14 [label="AST"];
17 -> 20 [label="Data Dep"];
19 -> 9 [label="AST"];
19 -> 12 [label="AST"];
19 -> 6 [label="AST"];
19 -> 17 [label="AST"];
20 -> 26 [label="Define-Use"];
20 -> 56 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 4 [label="AST"];
21 -> 19 [label="AST"];
22 -> 23 [label="AST"];
22 -> 24 [label="AST"];
26 -> 27 [label="AST"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
33 -> 34 [label="AST"];
33 -> 67 [label="Action"];
35 -> 36 [label="AST"];
37 -> 32 [label="AST"];
37 -> 33 [label="AST"];
37 -> 30 [label="AST"];
37 -> 35 [label="AST"];
38 -> 25 [label="AST"];
38 -> 26 [label="AST"];
38 -> 22 [label="AST"];
38 -> 28 [label="AST"];
38 -> 37 [label="AST"];
40 -> 39 [label="AST"];
40 -> 41 [label="AST"];
42 -> 43 [label="AST"];
42 -> 44 [label="AST"];
45 -> 61 [label="Define-Use"];
46 -> 45 [label="AST"];
46 -> 40 [label="AST"];
46 -> 42 [label="AST"];
47 -> 48 [label="AST"];
47 -> 49 [label="AST"];
47 -> 50 [label="AST"];
52 -> 53 [label="AST"];
54 -> 55 [label="AST"];
54 -> 52 [label="AST"];
56 -> 57 [label="AST"];
58 -> 59 [label="AST"];
60 -> 58 [label="AST"];
61 -> 62 [label="AST"];
63 -> 51 [label="AST"];
63 -> 54 [label="AST"];
63 -> 47 [label="AST"];
63 -> 56 [label="AST"];
63 -> 60 [label="AST"];
63 -> 61 [label="AST"];
64 -> 21 [label="AST"];
64 -> 38 [label="AST"];
64 -> 46 [label="AST"];
64 -> 63 [label="AST"];
65 -> 1 [label="AST"];
65 -> 66 [label="AST"];
65 -> 0 [label="AST"];
65 -> 2 [label="AST"];
65 -> 64 [label="AST"];
67 -> 70 [label="Action"];
69 -> 68 [label="AST"];
70 -> 69 [label="AST"];
}