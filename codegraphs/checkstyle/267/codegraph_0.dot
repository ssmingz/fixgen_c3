digraph "getValueAt#?,Object,int" {
0 [label="3:CtTypeReferenceImpl@Object" shape=ellipse]
1 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
2 [label="3:CtVirtualElement@getValueAt" shape=ellipse]
3 [label="3:CtParameterImpl@Object node" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@Object" shape=ellipse]
5 [label="3:CtParameterImpl@int column" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
8 [label="4:CtPackageReferenceImpl@" shape=ellipse]
9 [label="4:CtVariableReadImpl@((DetailAST) (node))" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
11 [label="4:CtParameterReferenceImpl@node" shape=ellipse]
12 [label="4:CtVirtualElement@ast" shape=ellipse]
13 [label="4:CtLocalVariableImpl@final DetailAST ast = ((DetailAST) (node))" shape=ellipse]
14 [label="5:CtVariableReadImpl@column" shape=ellipse]
15 [label="5:CtParameterReferenceImpl@column" shape=ellipse]
16 [label="6:CtLiteralImpl@0" shape=ellipse]
17 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
18 [label="7:CtLiteralImpl@null" shape=ellipse]
19 [label="7:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
20 [label="7:CtReturnImpl@return null" shape=ellipse]
21 [label="6:CtCaseImpl@case 0 :
    return null;" shape=ellipse]
22 [label="8:CtLiteralImpl@1" shape=ellipse]
23 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
24 [label="9:CtExecutableReferenceImpl@getTokenName()" shape=ellipse]
25 [label="9:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
26 [label="9:CtTypeReferenceImpl@Object" shape=ellipse]
27 [label="9:CtVirtualElement@getTokenName" shape=ellipse]
28 [label="9:CtTypeAccessImpl@TokenTypes" shape=ellipse]
29 [label="9:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
30 [label="9:CtExecutableReferenceImpl@getType()" shape=ellipse]
31 [label="9:CtTypeReferenceImpl@DetailAST" shape=ellipse]
32 [label="9:CtVirtualElement@getType" shape=ellipse]
33 [label="9:CtVariableReadImpl@ast" shape=ellipse]
34 [label="9:CtLocalVariableReferenceImpl@ast" shape=ellipse]
35 [label="9:CtInvocationImpl@ast.getType()" shape=ellipse]
36 [label="9:CtInvocationImpl@TokenTypes.getTokenName(ast.getType())" shape=ellipse]
37 [label="9:CtReturnImpl@return TokenTypes.getTokenName(ast.getType())" shape=ellipse]
38 [label="8:CtCaseImpl@case 1 :
    return TokenTypes.getTokenName(ast.getType());" shape=ellipse]
39 [label="10:CtLiteralImpl@2" shape=ellipse]
40 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
41 [label="11:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
42 [label="11:CtTypeReferenceImpl@DetailAST" shape=ellipse]
43 [label="11:CtTypeReferenceImpl@Object" shape=ellipse]
44 [label="11:CtVirtualElement@getLineNo" shape=ellipse]
45 [label="11:CtVariableReadImpl@ast" shape=ellipse]
46 [label="11:CtLocalVariableReferenceImpl@ast" shape=ellipse]
47 [label="11:CtInvocationImpl@ast.getLineNo()" shape=ellipse]
48 [label="11:CtReturnImpl@return ast.getLineNo()" shape=ellipse]
49 [label="10:CtCaseImpl@case 2 :
    return ast.getLineNo();" shape=ellipse]
50 [label="12:CtLiteralImpl@3" shape=ellipse]
51 [label="12:CtTypeReferenceImpl@int" shape=ellipse]
52 [label="13:CtExecutableReferenceImpl@getColumnNo()" shape=ellipse]
53 [label="13:CtTypeReferenceImpl@DetailAST" shape=ellipse]
54 [label="13:CtTypeReferenceImpl@Object" shape=ellipse]
55 [label="13:CtVirtualElement@getColumnNo" shape=ellipse]
56 [label="13:CtVariableReadImpl@ast" shape=ellipse]
57 [label="13:CtLocalVariableReferenceImpl@ast" shape=ellipse]
58 [label="13:CtInvocationImpl@ast.getColumnNo()" shape=ellipse]
59 [label="13:CtReturnImpl@return ast.getColumnNo()" shape=ellipse]
60 [label="12:CtCaseImpl@case 3 :
    return ast.getColumnNo();" shape=ellipse]
61 [label="14:CtLiteralImpl@4" shape=ellipse]
62 [label="14:CtTypeReferenceImpl@int" shape=ellipse]
63 [label="15:CtExecutableReferenceImpl@getText()" shape=ellipse]
64 [label="15:CtTypeReferenceImpl@DetailAST" shape=ellipse]
65 [label="15:CtTypeReferenceImpl@Object" shape=ellipse]
66 [label="15:CtVirtualElement@getText" shape=ellipse]
67 [label="15:CtVariableReadImpl@ast" shape=ellipse]
68 [label="15:CtLocalVariableReferenceImpl@ast" shape=ellipse]
69 [label="15:CtInvocationImpl@ast.getText()" shape=ellipse]
70 [label="15:CtReturnImpl@return ast.getText()" shape=ellipse]
71 [label="14:CtCaseImpl@case 4 :
    return ast.getText();" shape=ellipse]
72 [label="17:CtLiteralImpl@null" shape=ellipse]
73 [label="17:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
74 [label="17:CtReturnImpl@return null" shape=ellipse]
75 [label="16:CtCaseImpl@default :
    return null;" shape=ellipse]
76 [label="5:CtSwitchImpl@switch (column) \{
    case 0 :
        return null;
    case 1 :
        return TokenTypes.getTokenName(ast.getType());
    case 2 :
        return ast.getLineNo();
    case 3 :
        return ast.getColumnNo();
    case 4 :
        return ast.getText();
    default :
        return null;
\}" shape=ellipse]
77 [label="3:CtBlockImpl@\{
    final DetailAST ast = ((DetailAST) (node));
    switch (column) \{
        case 0 :
            return null;
        case 1 :
            return TokenTypes.getTokenName(ast.getType());
        case 2 :
            return ast.getLineNo();
        case 3 :
            return ast.getColumnNo();
        case 4 :
            return ast.getText();
        default :
            return null;
    \}
\}" shape=ellipse]
78 [label="3:CtMethodImpl@@Override
public Object getValueAt(Object node, int column) \{
    final DetailAST ast = ((DetailAST) (node));
    switch (column) \{
        case 0 :
            return null;
        case 1 :
            return TokenTypes.getTokenName(ast.getType());
        case 2 :
            return ast.getLineNo();
        case 3 :
            return ast.getColumnNo();
        case 4 :
            return ast.getText();
        default :
            return null;
    \}
\}" shape=ellipse]
79 [label="2:CtAnnotationImpl@@Override" shape=ellipse]
80 [label="9:Update@UPDATE" shape=ellipse]
81 [label="9:CtPackageReferenceImpl@" shape=ellipse]
82 [label="9:CtTypeReferenceImpl@Utils" shape=ellipse]
83 [label="9:CtTypeAccessImpl@Utils" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
9 -> 10 [label="AST"];
9 -> 11 [label="AST"];
9 -> 12 [label="Data Dep"];
12 -> 33 [label="Define-Use"];
12 -> 45 [label="Define-Use"];
12 -> 56 [label="Define-Use"];
12 -> 67 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 7 [label="AST"];
13 -> 9 [label="AST"];
14 -> 15 [label="AST"];
14 -> 21 [label="Control Dep"];
14 -> 16 [label="Control Dep"];
14 -> 20 [label="Control Dep"];
14 -> 18 [label="Control Dep"];
14 -> 38 [label="Control Dep"];
14 -> 22 [label="Control Dep"];
14 -> 37 [label="Control Dep"];
14 -> 36 [label="Control Dep"];
14 -> 24 [label="Control Dep"];
14 -> 28 [label="Control Dep"];
14 -> 35 [label="Control Dep"];
14 -> 30 [label="Control Dep"];
14 -> 33 [label="Control Dep"];
14 -> 49 [label="Control Dep"];
14 -> 39 [label="Control Dep"];
14 -> 48 [label="Control Dep"];
14 -> 47 [label="Control Dep"];
14 -> 41 [label="Control Dep"];
14 -> 45 [label="Control Dep"];
14 -> 60 [label="Control Dep"];
14 -> 50 [label="Control Dep"];
14 -> 59 [label="Control Dep"];
14 -> 58 [label="Control Dep"];
14 -> 52 [label="Control Dep"];
14 -> 56 [label="Control Dep"];
14 -> 71 [label="Control Dep"];
14 -> 61 [label="Control Dep"];
14 -> 70 [label="Control Dep"];
14 -> 69 [label="Control Dep"];
14 -> 63 [label="Control Dep"];
14 -> 67 [label="Control Dep"];
14 -> 75 [label="Control Dep"];
14 -> 74 [label="Control Dep"];
14 -> 72 [label="Control Dep"];
14 -> 83 [label="Control Dep"];
16 -> 17 [label="AST"];
18 -> 19 [label="AST"];
20 -> 18 [label="AST"];
21 -> 16 [label="AST"];
21 -> 20 [label="AST"];
22 -> 23 [label="AST"];
24 -> 25 [label="AST"];
24 -> 26 [label="AST"];
28 -> 29 [label="AST"];
28 -> 80 [label="Action"];
30 -> 31 [label="AST"];
33 -> 34 [label="AST"];
35 -> 32 [label="AST"];
35 -> 33 [label="AST"];
35 -> 30 [label="AST"];
36 -> 27 [label="AST"];
36 -> 28 [label="AST"];
36 -> 24 [label="AST"];
36 -> 35 [label="AST"];
37 -> 36 [label="AST"];
38 -> 22 [label="AST"];
38 -> 37 [label="AST"];
39 -> 40 [label="AST"];
41 -> 42 [label="AST"];
41 -> 43 [label="AST"];
45 -> 46 [label="AST"];
47 -> 44 [label="AST"];
47 -> 45 [label="AST"];
47 -> 41 [label="AST"];
48 -> 47 [label="AST"];
49 -> 39 [label="AST"];
49 -> 48 [label="AST"];
50 -> 51 [label="AST"];
52 -> 53 [label="AST"];
52 -> 54 [label="AST"];
56 -> 57 [label="AST"];
58 -> 55 [label="AST"];
58 -> 56 [label="AST"];
58 -> 52 [label="AST"];
59 -> 58 [label="AST"];
60 -> 50 [label="AST"];
60 -> 59 [label="AST"];
61 -> 62 [label="AST"];
63 -> 64 [label="AST"];
63 -> 65 [label="AST"];
67 -> 68 [label="AST"];
69 -> 66 [label="AST"];
69 -> 67 [label="AST"];
69 -> 63 [label="AST"];
70 -> 69 [label="AST"];
71 -> 61 [label="AST"];
71 -> 70 [label="AST"];
72 -> 73 [label="AST"];
74 -> 72 [label="AST"];
75 -> 74 [label="AST"];
76 -> 14 [label="AST"];
76 -> 21 [label="AST"];
76 -> 38 [label="AST"];
76 -> 49 [label="AST"];
76 -> 60 [label="AST"];
76 -> 71 [label="AST"];
76 -> 75 [label="AST"];
77 -> 13 [label="AST"];
77 -> 76 [label="AST"];
78 -> 2 [label="AST"];
78 -> 79 [label="AST"];
78 -> 0 [label="AST"];
78 -> 3 [label="AST"];
78 -> 5 [label="AST"];
78 -> 77 [label="AST"];
80 -> 83 [label="Action"];
82 -> 81 [label="AST"];
83 -> 82 [label="AST"];
}