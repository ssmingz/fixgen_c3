digraph "Pattern" {
0 [label="testWhitespace#?#3:UPDATE
testWhitespaceCastParenOff#?#3:UPDATE" shape=ellipse]
1 [label="testWhitespace#?#3:mConfig.setIgnoreCastWhitespace(false)
testWhitespaceCastParenOff#?#3:mConfig.setIgnoreCastWhitespace(true)" shape=ellipse]
2 [label="testWhitespace#?#2:\{
    mConfig.setIgnoreCastWhitespace(false);
    mConfig.setParenPadOption(NOSPACE);
    mConfig.setTryBlock(IGNORE);
    mConfig.setCatchBlock(IGNORE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputWhitespace.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":58:12: '(' is followed by whitespace.\", filepath + \":58:36: ')' is preceeded by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":74:13: '(' is followed by whitespace.\", filepath + \":74:18: ')' is preceeded by whitespace.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":88:21: cast needs to be followed by whitespace.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \};
    verify(c, filepath, expected);
    c.destroy();
\}
testWhitespaceCastParenOff#?#2:\{
    mConfig.setIgnoreCastWhitespace(true);
    mConfig.setParenPadOption(IGNORE);
    mConfig.setTryBlock(IGNORE);
    mConfig.setCatchBlock(IGNORE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputWhitespace.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
3 [label="testWhitespace#?#2:public void testWhitespace() throws Exception \{
    mConfig.setIgnoreCastWhitespace(false);
    mConfig.setParenPadOption(NOSPACE);
    mConfig.setTryBlock(IGNORE);
    mConfig.setCatchBlock(IGNORE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputWhitespace.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":58:12: '(' is followed by whitespace.\", filepath + \":58:36: ')' is preceeded by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":74:13: '(' is followed by whitespace.\", filepath + \":74:18: ')' is preceeded by whitespace.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":88:21: cast needs to be followed by whitespace.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \};
    verify(c, filepath, expected);
    c.destroy();
\}
testWhitespaceCastParenOff#?#2:public void testWhitespaceCastParenOff() throws Exception \{
    mConfig.setIgnoreCastWhitespace(true);
    mConfig.setParenPadOption(IGNORE);
    mConfig.setTryBlock(IGNORE);
    mConfig.setCatchBlock(IGNORE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputWhitespace.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
4 [label="testWhitespace#?#4:mConfig.setParenPadOption(NOSPACE)
testWhitespaceCastParenOff#?#4:mConfig.setParenPadOption(IGNORE)" shape=ellipse]
5 [label="testWhitespace#?#5:mConfig.setTryBlock(IGNORE)
testWhitespaceCastParenOff#?#5:mConfig.setTryBlock(IGNORE)" shape=ellipse]
6 [label="testWhitespace#?#6:mConfig.setCatchBlock(IGNORE)
testWhitespaceCastParenOff#?#6:mConfig.setCatchBlock(IGNORE)" shape=ellipse]
7 [label="testWhitespace#?#7:final Checker c = createChecker()
testWhitespaceCastParenOff#?#7:final Checker c = createChecker()" shape=ellipse]
8 [label="testWhitespace#?#8:final String filepath = getPath(\"InputWhitespace.java\")
testWhitespaceCastParenOff#?#8:final String filepath = getPath(\"InputWhitespace.java\")" shape=ellipse]
9 [label="testWhitespace#?#9:assertNotNull(c)
testWhitespaceCastParenOff#?#9:assertNotNull(c)" shape=ellipse]
10 [label="testWhitespace#?#10:final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":58:12: '(' is followed by whitespace.\", filepath + \":58:36: ')' is preceeded by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":74:13: '(' is followed by whitespace.\", filepath + \":74:18: ')' is preceeded by whitespace.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":88:21: cast needs to be followed by whitespace.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \}
testWhitespaceCastParenOff#?#10:final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \}" shape=ellipse]
11 [label="testWhitespace#?#70:verify(c, filepath, expected)
testWhitespaceCastParenOff#?#65:verify(c, filepath, expected)" shape=ellipse]
12 [label="testWhitespace#?#71:c.destroy()" shape=ellipse]
13 [label="testWhitespace#?#3:setIgnoreCastWhitespace
testWhitespaceCastParenOff#?#3:setIgnoreCastWhitespace" shape=ellipse]
14 [label="testWhitespace#?#3:mConfig
testWhitespaceCastParenOff#?#3:mConfig" shape=ellipse]
15 [label="testWhitespace#?#3:mConfig
testWhitespaceCastParenOff#?#3:mConfig" shape=ellipse]
16 [label="testWhitespace#?#3:setIgnoreCastWhitespace(boolean)
testWhitespaceCastParenOff#?#3:setIgnoreCastWhitespace(boolean)" shape=ellipse]
17 [label="testWhitespace#?#3:mConfig
testWhitespaceCastParenOff#?#3:mConfig" shape=ellipse]
18 [label="testWhitespace#?#3:boolean
testWhitespaceCastParenOff#?#3:boolean" shape=ellipse]
19 [label="testWhitespace#?#3:false
testWhitespaceCastParenOff#?#3:true" shape=ellipse]
20 [label="testWhitespace#?#3:boolean
testWhitespaceCastParenOff#?#3:boolean" shape=ellipse]
21 [label="testWhitespace#?#3:setBooleanFlag
testWhitespaceCastParenOff#?#3:setBooleanFlag" shape=ellipse]
22 [label="testWhitespace#?#3:setBooleanFlag(boolean)
testWhitespaceCastParenOff#?#3:setBooleanFlag(boolean)" shape=ellipse]
23 [label="testWhitespace#?#3:mConfig
testWhitespaceCastParenOff#?#3:mConfig" shape=ellipse]
24 [label="testWhitespace#?#3:
testWhitespaceCastParenOff#?#3:" shape=ellipse]
25 [label="testWhitespace#?#3:boolean
testWhitespaceCastParenOff#?#3:boolean" shape=ellipse]
26 [label="testWhitespace#?#3:IGNORE_CAST_WHITESPACE_PROP
testWhitespaceCastParenOff#?#3:IGNORE_CAST_WHITESPACE_PROP" shape=ellipse]
27 [label="testWhitespace#?#3:IGNORE_CAST_WHITESPACE_PROP
testWhitespaceCastParenOff#?#3:IGNORE_CAST_WHITESPACE_PROP" shape=ellipse]
28 [label="testWhitespace#?#3:
testWhitespaceCastParenOff#?#3:" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 13 [label="AST:2"];
1 -> 14 [label="AST:2"];
1 -> 16 [label="AST:2"];
1 -> 19 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
2 -> 8 [label="AST:2"];
2 -> 9 [label="AST:2"];
2 -> 10 [label="AST:2"];
2 -> 11 [label="AST:2"];
2 -> 12 [label="AST:1"];
3 -> 2 [label="AST:2"];
14 -> 15 [label="AST:2"];
16 -> 17 [label="AST:2"];
16 -> 18 [label="AST:2"];
19 -> 20 [label="AST:2"];
22 -> 23 [label="AST:2"];
22 -> 25 [label="AST:2"];
23 -> 24 [label="AST:2"];
26 -> 27 [label="AST:2"];
27 -> 28 [label="AST:2"];
}