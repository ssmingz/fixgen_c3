digraph "testWhitespaceCastParenOff#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testWhitespaceCastParenOff" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="2:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@setIgnoreCastWhitespace(boolean)" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@mConfig" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
7 [label="3:CtVirtualElement@setIgnoreCastWhitespace" shape=ellipse]
8 [label="3:CtFieldReferenceImpl@mConfig" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
10 [label="3:CtFieldReadImpl@mConfig" shape=ellipse]
11 [label="3:CtLiteralImpl@true" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
13 [label="3:CtInvocationImpl@mConfig.setIgnoreCastWhitespace(true)" shape=ellipse]
14 [label="4:CtExecutableReferenceImpl@setParenPadOption()" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@mConfig" shape=ellipse]
16 [label="4:CtVirtualElement@setParenPadOption" shape=ellipse]
17 [label="4:CtFieldReferenceImpl@mConfig" shape=ellipse]
18 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
19 [label="4:CtFieldReadImpl@mConfig" shape=ellipse]
20 [label="4:CtTypeAccessImpl@IGNORE" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@IGNORE" shape=ellipse]
22 [label="4:CtInvocationImpl@mConfig.setParenPadOption(IGNORE)" shape=ellipse]
23 [label="5:CtExecutableReferenceImpl@setTryBlock()" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@mConfig" shape=ellipse]
25 [label="5:CtVirtualElement@setTryBlock" shape=ellipse]
26 [label="5:CtFieldReferenceImpl@mConfig" shape=ellipse]
27 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
28 [label="5:CtFieldReadImpl@mConfig" shape=ellipse]
29 [label="5:CtTypeAccessImpl@IGNORE" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@IGNORE" shape=ellipse]
31 [label="5:CtInvocationImpl@mConfig.setTryBlock(IGNORE)" shape=ellipse]
32 [label="6:CtExecutableReferenceImpl@setCatchBlock()" shape=ellipse]
33 [label="6:CtTypeReferenceImpl@mConfig" shape=ellipse]
34 [label="6:CtVirtualElement@setCatchBlock" shape=ellipse]
35 [label="6:CtFieldReferenceImpl@mConfig" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
37 [label="6:CtFieldReadImpl@mConfig" shape=ellipse]
38 [label="6:CtTypeAccessImpl@IGNORE" shape=ellipse]
39 [label="6:CtTypeReferenceImpl@IGNORE" shape=ellipse]
40 [label="6:CtInvocationImpl@mConfig.setCatchBlock(IGNORE)" shape=ellipse]
41 [label="7:CtTypeReferenceImpl@Checker" shape=ellipse]
42 [label="7:CtPackageReferenceImpl@" shape=ellipse]
43 [label="7:CtExecutableReferenceImpl@createChecker()" shape=ellipse]
44 [label="7:CtTypeReferenceImpl@Checker" shape=ellipse]
45 [label="7:CtVirtualElement@createChecker" shape=ellipse]
46 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
47 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
48 [label="7:CtThisAccessImpl@" shape=ellipse]
49 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
50 [label="7:CtInvocationImpl@createChecker()" shape=ellipse]
51 [label="7:CtVirtualElement@c" shape=ellipse]
52 [label="7:CtLocalVariableImpl@final Checker c = createChecker()" shape=ellipse]
53 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
54 [label="8:CtPackageReferenceImpl@java.lang" shape=ellipse]
55 [label="8:CtExecutableReferenceImpl@getPath(java.lang.String)" shape=ellipse]
56 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
57 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
58 [label="8:CtVirtualElement@getPath" shape=ellipse]
59 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
60 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
61 [label="8:CtThisAccessImpl@" shape=ellipse]
62 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
63 [label="8:CtLiteralImpl@\"InputWhitespace.java\"" shape=ellipse]
64 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
65 [label="8:CtInvocationImpl@getPath(\"InputWhitespace.java\")" shape=ellipse]
66 [label="8:CtVirtualElement@filepath" shape=ellipse]
67 [label="8:CtLocalVariableImpl@final String filepath = getPath(\"InputWhitespace.java\")" shape=ellipse]
68 [label="9:CtExecutableReferenceImpl@assertNotNull(<unknown>)" shape=ellipse]
69 [label="9:CtTypeReferenceImpl@null" shape=ellipse]
70 [label="9:CtVirtualElement@assertNotNull" shape=ellipse]
71 [label="9:CtTypeAccessImpl@PlaceHold" shape=ellipse]
72 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
73 [label="9:CtThisAccessImpl@" shape=ellipse]
74 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
75 [label="9:CtVariableReadImpl@c" shape=ellipse]
76 [label="9:CtLocalVariableReferenceImpl@c" shape=ellipse]
77 [label="9:CtInvocationImpl@assertNotNull(c)" shape=ellipse]
78 [label="10:CtVirtualElement@String[]" shape=ellipse]
79 [label="10:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
80 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
81 [label="11:CtNewArrayImpl@new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \}" shape=ellipse]
82 [label="11:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
83 [label="12:CtBinaryOperatorImpl@filepath + \":5:12: '.' is preceeded with whitespace.\"" shape=ellipse]
84 [label="13:CtBinaryOperatorImpl@filepath + \":5:14: '.' is followed by whitespace.\"" shape=ellipse]
85 [label="14:CtBinaryOperatorImpl@filepath + \":13: type Javadoc comment is missing an @author tag.\"" shape=ellipse]
86 [label="15:CtBinaryOperatorImpl@filepath + \":16:22: '=' is not preceeded with whitespace.\"" shape=ellipse]
87 [label="16:CtBinaryOperatorImpl@filepath + \":16:23: '=' is not followed by whitespace.\"" shape=ellipse]
88 [label="17:CtBinaryOperatorImpl@filepath + \":18:24: '=' is not followed by whitespace.\"" shape=ellipse]
89 [label="18:CtBinaryOperatorImpl@filepath + \":26:14: '=' is not preceeded with whitespace.\"" shape=ellipse]
90 [label="19:CtBinaryOperatorImpl@filepath + \":27:10: '=' is not preceeded with whitespace.\"" shape=ellipse]
91 [label="20:CtBinaryOperatorImpl@filepath + \":27:11: '=' is not followed by whitespace.\"" shape=ellipse]
92 [label="21:CtBinaryOperatorImpl@filepath + \":28:10: '+=' is not preceeded with whitespace.\"" shape=ellipse]
93 [label="22:CtBinaryOperatorImpl@filepath + \":28:12: '+=' is not followed by whitespace.\"" shape=ellipse]
94 [label="23:CtBinaryOperatorImpl@filepath + \":29:13: '-=' is not followed by whitespace.\"" shape=ellipse]
95 [label="24:CtBinaryOperatorImpl@filepath + \":29:14: '-' is followed by whitespace.\"" shape=ellipse]
96 [label="25:CtBinaryOperatorImpl@filepath + \":29:21: '+' is followed by whitespace.\"" shape=ellipse]
97 [label="26:CtBinaryOperatorImpl@filepath + \":30:14: '++' is preceeded with whitespace.\"" shape=ellipse]
98 [label="27:CtBinaryOperatorImpl@filepath + \":30:21: '--' is preceeded with whitespace.\"" shape=ellipse]
99 [label="28:CtBinaryOperatorImpl@filepath + \":31:15: '++' is followed by whitespace.\"" shape=ellipse]
100 [label="29:CtBinaryOperatorImpl@filepath + \":31:22: '--' is followed by whitespace.\"" shape=ellipse]
101 [label="30:CtBinaryOperatorImpl@filepath + \":37:21: 'synchronized' is not followed by whitespace.\"" shape=ellipse]
102 [label="31:CtBinaryOperatorImpl@filepath + \":39:12: 'try' is not followed by whitespace.\"" shape=ellipse]
103 [label="32:CtBinaryOperatorImpl@filepath + \":41:14: 'catch' is not followed by whitespace.\"" shape=ellipse]
104 [label="33:CtBinaryOperatorImpl@filepath + \":58:11: 'if' is not followed by whitespace.\"" shape=ellipse]
105 [label="34:CtBinaryOperatorImpl@filepath + \":59:9: '\{' should be on the previous line.\"" shape=ellipse]
106 [label="35:CtBinaryOperatorImpl@filepath + \":63:9: '\{' should be on the previous line.\"" shape=ellipse]
107 [label="36:CtBinaryOperatorImpl@filepath + \":75:9: '\{' should be on the previous line.\"" shape=ellipse]
108 [label="37:CtBinaryOperatorImpl@filepath + \":76:19: 'return' is not followed by whitespace.\"" shape=ellipse]
109 [label="38:CtBinaryOperatorImpl@filepath + \":79:9: '\{' should be on the previous line.\"" shape=ellipse]
110 [label="39:CtBinaryOperatorImpl@filepath + \":97:29: '?' is not preceeded with whitespace.\"" shape=ellipse]
111 [label="40:CtBinaryOperatorImpl@filepath + \":97:30: '?' is not followed by whitespace.\"" shape=ellipse]
112 [label="41:CtBinaryOperatorImpl@filepath + \":97:34: ':' is not preceeded with whitespace.\"" shape=ellipse]
113 [label="42:CtBinaryOperatorImpl@filepath + \":97:35: ':' is not followed by whitespace.\"" shape=ellipse]
114 [label="43:CtBinaryOperatorImpl@filepath + \":98:15: '==' is not preceeded with whitespace.\"" shape=ellipse]
115 [label="44:CtBinaryOperatorImpl@filepath + \":98:17: '==' is not followed by whitespace.\"" shape=ellipse]
116 [label="45:CtBinaryOperatorImpl@filepath + \":104:20: '*' is not followed by whitespace.\"" shape=ellipse]
117 [label="46:CtBinaryOperatorImpl@filepath + \":104:21: '*' is not preceeded with whitespace.\"" shape=ellipse]
118 [label="47:CtBinaryOperatorImpl@filepath + \":111:22: '!' is followed by whitespace.\"" shape=ellipse]
119 [label="48:CtBinaryOperatorImpl@filepath + \":112:23: '~' is followed by whitespace.\"" shape=ellipse]
120 [label="49:CtBinaryOperatorImpl@filepath + \":119:18: '%' is not preceeded with whitespace.\"" shape=ellipse]
121 [label="50:CtBinaryOperatorImpl@filepath + \":120:20: '%' is not followed by whitespace.\"" shape=ellipse]
122 [label="51:CtBinaryOperatorImpl@filepath + \":121:18: '%' is not preceeded with whitespace.\"" shape=ellipse]
123 [label="52:CtBinaryOperatorImpl@filepath + \":121:19: '%' is not followed by whitespace.\"" shape=ellipse]
124 [label="53:CtBinaryOperatorImpl@filepath + \":123:18: '/' is not preceeded with whitespace.\"" shape=ellipse]
125 [label="54:CtBinaryOperatorImpl@filepath + \":124:20: '/' is not followed by whitespace.\"" shape=ellipse]
126 [label="55:CtBinaryOperatorImpl@filepath + \":125:18: '/' is not preceeded with whitespace.\"" shape=ellipse]
127 [label="56:CtBinaryOperatorImpl@filepath + \":125:19: '/' is not followed by whitespace.\"" shape=ellipse]
128 [label="57:CtBinaryOperatorImpl@filepath + \":129:17: '.' is preceeded with whitespace.\"" shape=ellipse]
129 [label="58:CtBinaryOperatorImpl@filepath + \":129:24: '.' is followed by whitespace.\"" shape=ellipse]
130 [label="59:CtBinaryOperatorImpl@filepath + \":136:10: '.' is preceeded with whitespace.\"" shape=ellipse]
131 [label="60:CtBinaryOperatorImpl@filepath + \":136:12: '.' is followed by whitespace.\"" shape=ellipse]
132 [label="61:CtBinaryOperatorImpl@filepath + \":153:15: 'assert' is not followed by whitespace.\"" shape=ellipse]
133 [label="62:CtBinaryOperatorImpl@filepath + \":156:20: ':' is not preceeded with whitespace.\"" shape=ellipse]
134 [label="63:CtBinaryOperatorImpl@filepath + \":156:21: ':' is not followed by whitespace.\"" shape=ellipse]
135 [label="10:CtVirtualElement@expected" shape=ellipse]
136 [label="10:CtLocalVariableImpl@final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \}" shape=ellipse]
137 [label="65:CtExecutableReferenceImpl@verify(<unknown>,java.lang.String,java.lang.String[])" shape=ellipse]
138 [label="65:CtTypeReferenceImpl@null" shape=ellipse]
139 [label="65:CtTypeReferenceImpl@String" shape=ellipse]
140 [label="65:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
141 [label="65:CtVirtualElement@verify" shape=ellipse]
142 [label="65:CtTypeAccessImpl@PlaceHold" shape=ellipse]
143 [label="65:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
144 [label="65:CtThisAccessImpl@" shape=ellipse]
145 [label="65:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
146 [label="65:CtVariableReadImpl@c" shape=ellipse]
147 [label="65:CtLocalVariableReferenceImpl@c" shape=ellipse]
148 [label="65:CtVariableReadImpl@filepath" shape=ellipse]
149 [label="65:CtLocalVariableReferenceImpl@filepath" shape=ellipse]
150 [label="65:CtVariableReadImpl@expected" shape=ellipse]
151 [label="65:CtLocalVariableReferenceImpl@expected" shape=ellipse]
152 [label="65:CtInvocationImpl@verify(c, filepath, expected)" shape=ellipse]
153 [label="2:CtBlockImpl@\{
    mConfig.setIgnoreCastWhitespace(true);
    mConfig.setParenPadOption(IGNORE);
    mConfig.setTryBlock(IGNORE);
    mConfig.setCatchBlock(IGNORE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputWhitespace.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
154 [label="2:CtMethodImpl@public void testWhitespaceCastParenOff() throws Exception \{
    mConfig.setIgnoreCastWhitespace(true);
    mConfig.setParenPadOption(IGNORE);
    mConfig.setTryBlock(IGNORE);
    mConfig.setCatchBlock(IGNORE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputWhitespace.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":5:12: '.' is preceeded with whitespace.\", filepath + \":5:14: '.' is followed by whitespace.\", filepath + \":13: type Javadoc comment is missing an @author tag.\", filepath + \":16:22: '=' is not preceeded with whitespace.\", filepath + \":16:23: '=' is not followed by whitespace.\", filepath + \":18:24: '=' is not followed by whitespace.\", filepath + \":26:14: '=' is not preceeded with whitespace.\", filepath + \":27:10: '=' is not preceeded with whitespace.\", filepath + \":27:11: '=' is not followed by whitespace.\", filepath + \":28:10: '+=' is not preceeded with whitespace.\", filepath + \":28:12: '+=' is not followed by whitespace.\", filepath + \":29:13: '-=' is not followed by whitespace.\", filepath + \":29:14: '-' is followed by whitespace.\", filepath + \":29:21: '+' is followed by whitespace.\", filepath + \":30:14: '++' is preceeded with whitespace.\", filepath + \":30:21: '--' is preceeded with whitespace.\", filepath + \":31:15: '++' is followed by whitespace.\", filepath + \":31:22: '--' is followed by whitespace.\", filepath + \":37:21: 'synchronized' is not followed by whitespace.\", filepath + \":39:12: 'try' is not followed by whitespace.\", filepath + \":41:14: 'catch' is not followed by whitespace.\", filepath + \":58:11: 'if' is not followed by whitespace.\", filepath + \":59:9: '\{' should be on the previous line.\", filepath + \":63:9: '\{' should be on the previous line.\", filepath + \":75:9: '\{' should be on the previous line.\", filepath + \":76:19: 'return' is not followed by whitespace.\", filepath + \":79:9: '\{' should be on the previous line.\", filepath + \":97:29: '?' is not preceeded with whitespace.\", filepath + \":97:30: '?' is not followed by whitespace.\", filepath + \":97:34: ':' is not preceeded with whitespace.\", filepath + \":97:35: ':' is not followed by whitespace.\", filepath + \":98:15: '==' is not preceeded with whitespace.\", filepath + \":98:17: '==' is not followed by whitespace.\", filepath + \":104:20: '*' is not followed by whitespace.\", filepath + \":104:21: '*' is not preceeded with whitespace.\", filepath + \":111:22: '!' is followed by whitespace.\", filepath + \":112:23: '~' is followed by whitespace.\", filepath + \":119:18: '%' is not preceeded with whitespace.\", filepath + \":120:20: '%' is not followed by whitespace.\", filepath + \":121:18: '%' is not preceeded with whitespace.\", filepath + \":121:19: '%' is not followed by whitespace.\", filepath + \":123:18: '/' is not preceeded with whitespace.\", filepath + \":124:20: '/' is not followed by whitespace.\", filepath + \":125:18: '/' is not preceeded with whitespace.\", filepath + \":125:19: '/' is not followed by whitespace.\", filepath + \":129:17: '.' is preceeded with whitespace.\", filepath + \":129:24: '.' is followed by whitespace.\", filepath + \":136:10: '.' is preceeded with whitespace.\", filepath + \":136:12: '.' is followed by whitespace.\", filepath + \":153:15: 'assert' is not followed by whitespace.\", filepath + \":156:20: ':' is not preceeded with whitespace.\", filepath + \":156:21: ':' is not followed by whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
155 [label="3:Update@UPDATE" shape=ellipse]
156 [label="3:CtPackageReferenceImpl@" shape=ellipse]
157 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
158 [label="3:CtFieldReferenceImpl@mConfig" shape=ellipse]
159 [label="3:CtFieldReadImpl@mConfig" shape=ellipse]
160 [label="3:CtPackageReferenceImpl@" shape=ellipse]
161 [label="3:CtTypeReferenceImpl@mConfig" shape=ellipse]
162 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
163 [label="3:CtExecutableReferenceImpl@setBooleanFlag(boolean)" shape=ellipse]
164 [label="3:CtPackageReferenceImpl@" shape=ellipse]
165 [label="3:CtTypeReferenceImpl@IGNORE_CAST_WHITESPACE_PROP" shape=ellipse]
166 [label="3:CtTypeAccessImpl@IGNORE_CAST_WHITESPACE_PROP" shape=ellipse]
167 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
168 [label="3:CtLiteralImpl@true" shape=ellipse]
169 [label="3:CtInvocationImpl@mConfig.setBooleanFlag(IGNORE_CAST_WHITESPACE_PROP, true)" shape=ellipse]
170 [label="3:CtVirtualElement@setBooleanFlag" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
8 -> 9 [label="AST"];
10 -> 8 [label="AST"];
11 -> 12 [label="AST"];
13 -> 7 [label="AST"];
13 -> 10 [label="AST"];
13 -> 4 [label="AST"];
13 -> 11 [label="AST"];
13 -> 155 [label="Action"];
14 -> 15 [label="AST"];
17 -> 18 [label="AST"];
19 -> 17 [label="AST"];
20 -> 21 [label="AST"];
22 -> 16 [label="AST"];
22 -> 19 [label="AST"];
22 -> 14 [label="AST"];
22 -> 20 [label="AST"];
23 -> 24 [label="AST"];
26 -> 27 [label="AST"];
28 -> 26 [label="AST"];
29 -> 30 [label="AST"];
31 -> 25 [label="AST"];
31 -> 28 [label="AST"];
31 -> 23 [label="AST"];
31 -> 29 [label="AST"];
32 -> 33 [label="AST"];
35 -> 36 [label="AST"];
37 -> 35 [label="AST"];
38 -> 39 [label="AST"];
40 -> 34 [label="AST"];
40 -> 37 [label="AST"];
40 -> 32 [label="AST"];
40 -> 38 [label="AST"];
41 -> 42 [label="AST"];
43 -> 44 [label="AST"];
46 -> 47 [label="AST"];
48 -> 49 [label="AST"];
48 -> 46 [label="AST"];
48 -> 51 [label="Data Dep"];
50 -> 45 [label="AST"];
50 -> 48 [label="AST"];
50 -> 43 [label="AST"];
51 -> 75 [label="Define-Use"];
51 -> 146 [label="Define-Use"];
52 -> 51 [label="AST"];
52 -> 41 [label="AST"];
52 -> 50 [label="AST"];
53 -> 54 [label="AST"];
55 -> 56 [label="AST"];
55 -> 57 [label="AST"];
59 -> 60 [label="AST"];
61 -> 62 [label="AST"];
61 -> 59 [label="AST"];
61 -> 66 [label="Data Dep"];
63 -> 64 [label="AST"];
65 -> 58 [label="AST"];
65 -> 61 [label="AST"];
65 -> 55 [label="AST"];
65 -> 63 [label="AST"];
66 -> 148 [label="Define-Use"];
67 -> 66 [label="AST"];
67 -> 53 [label="AST"];
67 -> 65 [label="AST"];
68 -> 69 [label="AST"];
71 -> 72 [label="AST"];
73 -> 74 [label="AST"];
73 -> 71 [label="AST"];
75 -> 76 [label="AST"];
77 -> 70 [label="AST"];
77 -> 73 [label="AST"];
77 -> 68 [label="AST"];
77 -> 75 [label="AST"];
79 -> 78 [label="AST"];
79 -> 80 [label="AST"];
81 -> 82 [label="AST"];
81 -> 83 [label="AST"];
81 -> 84 [label="AST"];
81 -> 85 [label="AST"];
81 -> 86 [label="AST"];
81 -> 87 [label="AST"];
81 -> 88 [label="AST"];
81 -> 89 [label="AST"];
81 -> 90 [label="AST"];
81 -> 91 [label="AST"];
81 -> 92 [label="AST"];
81 -> 93 [label="AST"];
81 -> 94 [label="AST"];
81 -> 95 [label="AST"];
81 -> 96 [label="AST"];
81 -> 97 [label="AST"];
81 -> 98 [label="AST"];
81 -> 99 [label="AST"];
81 -> 100 [label="AST"];
81 -> 101 [label="AST"];
81 -> 102 [label="AST"];
81 -> 103 [label="AST"];
81 -> 104 [label="AST"];
81 -> 105 [label="AST"];
81 -> 106 [label="AST"];
81 -> 107 [label="AST"];
81 -> 108 [label="AST"];
81 -> 109 [label="AST"];
81 -> 110 [label="AST"];
81 -> 111 [label="AST"];
81 -> 112 [label="AST"];
81 -> 113 [label="AST"];
81 -> 114 [label="AST"];
81 -> 115 [label="AST"];
81 -> 116 [label="AST"];
81 -> 117 [label="AST"];
81 -> 118 [label="AST"];
81 -> 119 [label="AST"];
81 -> 120 [label="AST"];
81 -> 121 [label="AST"];
81 -> 122 [label="AST"];
81 -> 123 [label="AST"];
81 -> 124 [label="AST"];
81 -> 125 [label="AST"];
81 -> 126 [label="AST"];
81 -> 127 [label="AST"];
81 -> 128 [label="AST"];
81 -> 129 [label="AST"];
81 -> 130 [label="AST"];
81 -> 131 [label="AST"];
81 -> 132 [label="AST"];
81 -> 133 [label="AST"];
81 -> 134 [label="AST"];
135 -> 150 [label="Define-Use"];
136 -> 135 [label="AST"];
136 -> 79 [label="AST"];
136 -> 81 [label="AST"];
137 -> 138 [label="AST"];
137 -> 139 [label="AST"];
137 -> 140 [label="AST"];
142 -> 143 [label="AST"];
144 -> 145 [label="AST"];
144 -> 142 [label="AST"];
146 -> 147 [label="AST"];
148 -> 149 [label="AST"];
150 -> 151 [label="AST"];
152 -> 141 [label="AST"];
152 -> 144 [label="AST"];
152 -> 137 [label="AST"];
152 -> 146 [label="AST"];
152 -> 148 [label="AST"];
152 -> 150 [label="AST"];
153 -> 13 [label="AST"];
153 -> 22 [label="AST"];
153 -> 31 [label="AST"];
153 -> 40 [label="AST"];
153 -> 52 [label="AST"];
153 -> 67 [label="AST"];
153 -> 77 [label="AST"];
153 -> 136 [label="AST"];
153 -> 152 [label="AST"];
154 -> 1 [label="AST"];
154 -> 0 [label="AST"];
154 -> 2 [label="AST"];
154 -> 153 [label="AST"];
155 -> 169 [label="Action"];
157 -> 156 [label="AST"];
158 -> 157 [label="AST"];
159 -> 158 [label="AST"];
161 -> 160 [label="AST"];
163 -> 161 [label="AST"];
163 -> 162 [label="AST"];
165 -> 164 [label="AST"];
166 -> 165 [label="AST"];
168 -> 167 [label="AST"];
169 -> 170 [label="AST"];
169 -> 159 [label="AST"];
169 -> 163 [label="AST"];
169 -> 166 [label="AST"];
169 -> 168 [label="AST"];
}