digraph "getParameters#?,DetailAST" {
0 [label="2:CtTypeReferenceImpl@List<DetailAST>" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@DetailAST" shape=ellipse]
3 [label="2:CtVirtualElement@getParameters" shape=ellipse]
4 [label="2:CtParameterImpl@DetailAST aAST" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@DetailAST" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
7 [label="3:CtPackageReferenceImpl@" shape=ellipse]
8 [label="3:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
11 [label="3:CtVirtualElement@findFirstToken" shape=ellipse]
12 [label="3:CtVariableReadImpl@aAST" shape=ellipse]
13 [label="3:CtParameterReferenceImpl@aAST" shape=ellipse]
14 [label="3:CtTypeAccessImpl@PARAMETERS" shape=ellipse]
15 [label="3:CtTypeReferenceImpl@PARAMETERS" shape=ellipse]
16 [label="3:CtInvocationImpl@aAST.findFirstToken(PARAMETERS)" shape=ellipse]
17 [label="3:CtVirtualElement@params" shape=ellipse]
18 [label="3:CtLocalVariableImpl@final DetailAST params = aAST.findFirstToken(PARAMETERS)" shape=ellipse]
19 [label="4:CtTypeReferenceImpl@List<DetailAST>" shape=ellipse]
20 [label="4:CtPackageReferenceImpl@" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
22 [label="4:CtExecutableReferenceImpl@ArrayList()" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@ArrayList<DetailAST>" shape=ellipse]
24 [label="4:CtTypeReferenceImpl@ArrayList<DetailAST>" shape=ellipse]
25 [label="4:CtConstructorCallImpl@new ArrayList<DetailAST>()" shape=ellipse]
26 [label="4:CtVirtualElement@retVal" shape=ellipse]
27 [label="4:CtLocalVariableImpl@final List<DetailAST> retVal = new ArrayList<DetailAST>()" shape=ellipse]
28 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
29 [label="5:CtPackageReferenceImpl@" shape=ellipse]
30 [label="5:CtExecutableReferenceImpl@getFirstChild()" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
32 [label="5:CtVirtualElement@getFirstChild" shape=ellipse]
33 [label="5:CtVariableReadImpl@params" shape=ellipse]
34 [label="5:CtLocalVariableReferenceImpl@params" shape=ellipse]
35 [label="5:CtInvocationImpl@((DetailAST) (params.getFirstChild()))" shape=ellipse]
36 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
37 [label="5:CtVirtualElement@child" shape=ellipse]
38 [label="5:CtLocalVariableImpl@DetailAST child = ((DetailAST) (params.getFirstChild()))" shape=ellipse]
39 [label="6:CtVariableReadImpl@child" shape=ellipse]
40 [label="6:CtLocalVariableReferenceImpl@child" shape=ellipse]
41 [label="6:CtLiteralImpl@null" shape=ellipse]
42 [label="6:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
43 [label="6:CtBinaryOperatorImpl@child != null" shape=ellipse]
44 [label="7:CtExecutableReferenceImpl@getType()" shape=ellipse]
45 [label="7:CtTypeReferenceImpl@DetailAST" shape=ellipse]
46 [label="7:CtVirtualElement@getType" shape=ellipse]
47 [label="7:CtVariableReadImpl@child" shape=ellipse]
48 [label="7:CtLocalVariableReferenceImpl@child" shape=ellipse]
49 [label="7:CtInvocationImpl@child.getType()" shape=ellipse]
50 [label="7:CtFieldReferenceImpl@TokenTypes.PARAMETER_DEF" shape=ellipse]
51 [label="7:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
52 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
53 [label="7:CtFieldReadImpl@TokenTypes.PARAMETER_DEF" shape=ellipse]
54 [label="7:CtTypeAccessImpl@TokenTypes" shape=ellipse]
55 [label="7:CtBinaryOperatorImpl@child.getType() == TokenTypes.PARAMETER_DEF" shape=ellipse]
56 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
57 [label="8:CtPackageReferenceImpl@" shape=ellipse]
58 [label="8:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
59 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
60 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
61 [label="8:CtVirtualElement@findFirstToken" shape=ellipse]
62 [label="8:CtVariableReadImpl@child" shape=ellipse]
63 [label="8:CtLocalVariableReferenceImpl@child" shape=ellipse]
64 [label="8:CtTypeAccessImpl@IDENT" shape=ellipse]
65 [label="8:CtTypeReferenceImpl@IDENT" shape=ellipse]
66 [label="8:CtInvocationImpl@child.findFirstToken(IDENT)" shape=ellipse]
67 [label="8:CtVirtualElement@ident" shape=ellipse]
68 [label="8:CtLocalVariableImpl@final DetailAST ident = child.findFirstToken(IDENT)" shape=ellipse]
69 [label="9:CtExecutableReferenceImpl@add(DetailAST)" shape=ellipse]
70 [label="9:CtTypeReferenceImpl@List<DetailAST>" shape=ellipse]
71 [label="9:CtTypeReferenceImpl@DetailAST" shape=ellipse]
72 [label="9:CtVirtualElement@add" shape=ellipse]
73 [label="9:CtVariableReadImpl@retVal" shape=ellipse]
74 [label="9:CtLocalVariableReferenceImpl@retVal" shape=ellipse]
75 [label="9:CtVariableReadImpl@ident" shape=ellipse]
76 [label="9:CtLocalVariableReferenceImpl@ident" shape=ellipse]
77 [label="9:CtInvocationImpl@retVal.add(ident)" shape=ellipse]
78 [label="7:CtBlockImpl@\{
    final DetailAST ident = child.findFirstToken(IDENT);
    retVal.add(ident);
\}" shape=ellipse]
79 [label="7:CtIfImpl@if (child.getType() == TokenTypes.PARAMETER_DEF) \{
    final DetailAST ident = child.findFirstToken(IDENT);
    retVal.add(ident);
\}" shape=ellipse]
80 [label="11:CtVariableWriteImpl@child" shape=ellipse]
81 [label="11:CtLocalVariableReferenceImpl@child" shape=ellipse]
82 [label="11:CtExecutableReferenceImpl@getNextSibling()" shape=ellipse]
83 [label="11:CtTypeReferenceImpl@DetailAST" shape=ellipse]
84 [label="11:CtVirtualElement@getNextSibling" shape=ellipse]
85 [label="11:CtVariableReadImpl@child" shape=ellipse]
86 [label="11:CtLocalVariableReferenceImpl@child" shape=ellipse]
87 [label="11:CtInvocationImpl@((DetailAST) (child.getNextSibling()))" shape=ellipse]
88 [label="11:CtTypeReferenceImpl@DetailAST" shape=ellipse]
89 [label="11:CtAssignmentImpl@child = ((DetailAST) (child.getNextSibling()))" shape=ellipse]
90 [label="6:CtBlockImpl@\{
    if (child.getType() == TokenTypes.PARAMETER_DEF) \{
        final DetailAST ident = child.findFirstToken(IDENT);
        retVal.add(ident);
    \}
    child = ((DetailAST) (child.getNextSibling()));
\}" shape=ellipse]
91 [label="6:CtWhileImpl@while (child != null) \{
    if (child.getType() == TokenTypes.PARAMETER_DEF) \{
        final DetailAST ident = child.findFirstToken(IDENT);
        retVal.add(ident);
    \}
    child = ((DetailAST) (child.getNextSibling()));
\} " shape=ellipse]
92 [label="13:CtVariableReadImpl@retVal" shape=ellipse]
93 [label="13:CtLocalVariableReferenceImpl@retVal" shape=ellipse]
94 [label="13:CtReturnImpl@return retVal" shape=ellipse]
95 [label="2:CtBlockImpl@\{
    final DetailAST params = aAST.findFirstToken(PARAMETERS);
    final List<DetailAST> retVal = new ArrayList<DetailAST>();
    DetailAST child = ((DetailAST) (params.getFirstChild()));
    while (child != null) \{
        if (child.getType() == TokenTypes.PARAMETER_DEF) \{
            final DetailAST ident = child.findFirstToken(IDENT);
            retVal.add(ident);
        \}
        child = ((DetailAST) (child.getNextSibling()));
    \} 
    return retVal;
\}" shape=ellipse]
96 [label="2:CtMethodImpl@private List<DetailAST> getParameters(DetailAST aAST) \{
    final DetailAST params = aAST.findFirstToken(PARAMETERS);
    final List<DetailAST> retVal = new ArrayList<DetailAST>();
    DetailAST child = ((DetailAST) (params.getFirstChild()));
    while (child != null) \{
        if (child.getType() == TokenTypes.PARAMETER_DEF) \{
            final DetailAST ident = child.findFirstToken(IDENT);
            retVal.add(ident);
        \}
        child = ((DetailAST) (child.getNextSibling()));
    \} 
    return retVal;
\}" shape=ellipse]
97 [label="4:Delete@DELETE" shape=ellipse]
98 [label="4:Insert@INSERT" shape=ellipse]
99 [label="4:CtPackageReferenceImpl@" shape=ellipse]
100 [label="4:CtTypeReferenceImpl@Lists" shape=ellipse]
101 [label="4:CtTypeAccessImpl@Lists" shape=ellipse]
102 [label="4:CtPackageReferenceImpl@" shape=ellipse]
103 [label="4:CtTypeReferenceImpl@Lists" shape=ellipse]
104 [label="4:CtPackageReferenceImpl@" shape=ellipse]
105 [label="4:CtPackageReferenceImpl@" shape=ellipse]
106 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
107 [label="4:CtTypeReferenceImpl@List<DetailAST>" shape=ellipse]
108 [label="4:CtExecutableReferenceImpl@newArrayList()" shape=ellipse]
109 [label="4:CtInvocationImpl@Lists.newArrayList()" shape=ellipse]
110 [label="4:CtVirtualElement@newArrayList" shape=ellipse]
0 -> 1 [label="AST"];
0 -> 2 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
8 -> 10 [label="AST"];
12 -> 13 [label="AST"];
12 -> 17 [label="Data Dep"];
14 -> 15 [label="AST"];
16 -> 11 [label="AST"];
16 -> 12 [label="AST"];
16 -> 8 [label="AST"];
16 -> 14 [label="AST"];
17 -> 33 [label="Define-Use"];
18 -> 17 [label="AST"];
18 -> 6 [label="AST"];
18 -> 16 [label="AST"];
19 -> 20 [label="AST"];
19 -> 21 [label="AST"];
22 -> 23 [label="AST"];
22 -> 24 [label="AST"];
25 -> 22 [label="AST"];
25 -> 97 [label="Action"];
26 -> 73 [label="Define-Use"];
26 -> 92 [label="Define-Use"];
27 -> 26 [label="AST"];
27 -> 19 [label="AST"];
27 -> 25 [label="AST"];
27 -> 98 [label="Action"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
33 -> 34 [label="AST"];
33 -> 37 [label="Data Dep"];
35 -> 32 [label="AST"];
35 -> 36 [label="AST"];
35 -> 33 [label="AST"];
35 -> 30 [label="AST"];
37 -> 39 [label="Define-Use"];
37 -> 47 [label="Define-Use"];
37 -> 62 [label="Define-Use"];
38 -> 37 [label="AST"];
38 -> 28 [label="AST"];
38 -> 35 [label="AST"];
39 -> 40 [label="AST"];
41 -> 42 [label="AST"];
43 -> 39 [label="AST"];
43 -> 41 [label="AST"];
43 -> 90 [label="Control Dep"];
43 -> 79 [label="Control Dep"];
43 -> 55 [label="Control Dep"];
43 -> 49 [label="Control Dep"];
43 -> 44 [label="Control Dep"];
43 -> 47 [label="Control Dep"];
43 -> 53 [label="Control Dep"];
43 -> 89 [label="Control Dep"];
43 -> 80 [label="Control Dep"];
43 -> 87 [label="Control Dep"];
43 -> 82 [label="Control Dep"];
43 -> 85 [label="Control Dep"];
44 -> 45 [label="AST"];
47 -> 48 [label="AST"];
49 -> 46 [label="AST"];
49 -> 47 [label="AST"];
49 -> 44 [label="AST"];
50 -> 51 [label="AST"];
50 -> 52 [label="AST"];
53 -> 54 [label="AST"];
53 -> 50 [label="AST"];
55 -> 49 [label="AST"];
55 -> 53 [label="AST"];
55 -> 78 [label="Control Dep"];
55 -> 68 [label="Control Dep"];
55 -> 66 [label="Control Dep"];
55 -> 58 [label="Control Dep"];
55 -> 62 [label="Control Dep"];
55 -> 64 [label="Control Dep"];
55 -> 77 [label="Control Dep"];
55 -> 69 [label="Control Dep"];
55 -> 73 [label="Control Dep"];
55 -> 75 [label="Control Dep"];
56 -> 57 [label="AST"];
58 -> 59 [label="AST"];
58 -> 60 [label="AST"];
62 -> 63 [label="AST"];
62 -> 67 [label="Data Dep"];
64 -> 65 [label="AST"];
66 -> 61 [label="AST"];
66 -> 62 [label="AST"];
66 -> 58 [label="AST"];
66 -> 64 [label="AST"];
67 -> 75 [label="Define-Use"];
68 -> 67 [label="AST"];
68 -> 56 [label="AST"];
68 -> 66 [label="AST"];
69 -> 70 [label="AST"];
69 -> 71 [label="AST"];
73 -> 74 [label="AST"];
75 -> 76 [label="AST"];
77 -> 72 [label="AST"];
77 -> 73 [label="AST"];
77 -> 69 [label="AST"];
77 -> 75 [label="AST"];
78 -> 68 [label="AST"];
78 -> 77 [label="AST"];
79 -> 55 [label="AST"];
79 -> 78 [label="AST"];
80 -> 81 [label="AST"];
81 -> 85 [label="Define-Use"];
82 -> 83 [label="AST"];
85 -> 86 [label="AST"];
85 -> 80 [label="Data Dep"];
87 -> 84 [label="AST"];
87 -> 88 [label="AST"];
87 -> 85 [label="AST"];
87 -> 82 [label="AST"];
89 -> 80 [label="AST"];
89 -> 87 [label="AST"];
90 -> 79 [label="AST"];
90 -> 89 [label="AST"];
91 -> 43 [label="AST"];
91 -> 90 [label="AST"];
92 -> 93 [label="AST"];
94 -> 92 [label="AST"];
95 -> 18 [label="AST"];
95 -> 27 [label="AST"];
95 -> 38 [label="AST"];
95 -> 91 [label="AST"];
95 -> 94 [label="AST"];
96 -> 3 [label="AST"];
96 -> 0 [label="AST"];
96 -> 4 [label="AST"];
96 -> 95 [label="AST"];
98 -> 109 [label="Action"];
100 -> 99 [label="AST"];
101 -> 100 [label="AST"];
103 -> 102 [label="AST"];
106 -> 105 [label="AST"];
107 -> 104 [label="AST"];
107 -> 106 [label="AST"];
108 -> 103 [label="AST"];
108 -> 107 [label="AST"];
109 -> 110 [label="AST"];
109 -> 101 [label="AST"];
109 -> 108 [label="AST"];
}