digraph "Pattern" {
0 [label="testScopeInnerClassesPublic#?#3:UPDATE
testAssertIdentifier#?#3:UPDATE
testScopeAnonInnerPrivate#?#3:UPDATE" shape=ellipse]
1 [label="testScopeInnerClassesPublic#?#3:mConfig.setJavadocScope(PUBLIC)
testAssertIdentifier#?#3:mConfig.setJavadocScope(NOTHING)
testScopeAnonInnerPrivate#?#3:mConfig.setJavadocScope(PRIVATE)" shape=ellipse]
2 [label="testScopeInnerClassesPublic#?#2:\{
    mConfig.setJavadocScope(PUBLIC);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputScopeInnerClasses.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":18: Missing a Javadoc comment.\" \};
    verify(c, filepath, expected);
\}
testAssertIdentifier#?#2:\{
    mConfig.setJavadocScope(NOTHING);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputAssertIdentifier.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{  \};
    verify(c, filepath, expected);
\}
testScopeAnonInnerPrivate#?#2:\{
    mConfig.setJavadocScope(PRIVATE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputScopeAnonInner.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded with whitespace.\", filepath + \":43:14: ')' is preceeded with whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded with whitespace.\", filepath + \":57:14: ')' is preceeded with whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
3 [label="testScopeInnerClassesPublic#?#2:public void testScopeInnerClassesPublic() throws Exception \{
    mConfig.setJavadocScope(PUBLIC);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputScopeInnerClasses.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":18: Missing a Javadoc comment.\" \};
    verify(c, filepath, expected);
\}
testAssertIdentifier#?#2:public void testAssertIdentifier() throws Exception \{
    mConfig.setJavadocScope(NOTHING);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputAssertIdentifier.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{  \};
    verify(c, filepath, expected);
\}
testScopeAnonInnerPrivate#?#2:public void testScopeAnonInnerPrivate() throws Exception \{
    mConfig.setJavadocScope(PRIVATE);
    final Checker c = createChecker();
    final String filepath = getPath(\"InputScopeAnonInner.java\");
    assertNotNull(c);
    final String[] expected = new String[]\{ filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded with whitespace.\", filepath + \":43:14: ')' is preceeded with whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded with whitespace.\", filepath + \":57:14: ')' is preceeded with whitespace.\" \};
    verify(c, filepath, expected);
\}" shape=ellipse]
4 [label="testScopeInnerClassesPublic#?#4:final Checker c = createChecker()
testAssertIdentifier#?#4:final Checker c = createChecker()
testScopeAnonInnerPrivate#?#4:final Checker c = createChecker()" shape=ellipse]
5 [label="testScopeInnerClassesPublic#?#5:final String filepath = getPath(\"InputScopeInnerClasses.java\")
testAssertIdentifier#?#5:final String filepath = getPath(\"InputAssertIdentifier.java\")
testScopeAnonInnerPrivate#?#5:final String filepath = getPath(\"InputScopeAnonInner.java\")" shape=ellipse]
6 [label="testScopeInnerClassesPublic#?#6:assertNotNull(c)
testAssertIdentifier#?#6:assertNotNull(c)
testScopeAnonInnerPrivate#?#6:assertNotNull(c)" shape=ellipse]
7 [label="testScopeInnerClassesPublic#?#7:final String[] expected = new String[]\{ filepath + \":18: Missing a Javadoc comment.\" \}
testAssertIdentifier#?#7:final String[] expected = new String[]\{  \}
testScopeAnonInnerPrivate#?#7:final String[] expected = new String[]\{ filepath + \":37:34: '(' is followed by whitespace.\", filepath + \":39:42: '(' is followed by whitespace.\", filepath + \":39:57: ')' is preceeded with whitespace.\", filepath + \":43:14: ')' is preceeded with whitespace.\", filepath + \":51:34: '(' is followed by whitespace.\", filepath + \":53:42: '(' is followed by whitespace.\", filepath + \":53:57: ')' is preceeded with whitespace.\", filepath + \":57:14: ')' is preceeded with whitespace.\" \}" shape=ellipse]
8 [label="testScopeInnerClassesPublic#?#8:verify(c, filepath, expected)
testAssertIdentifier#?#8:verify(c, filepath, expected)
testScopeAnonInnerPrivate#?#18:verify(c, filepath, expected)" shape=ellipse]
9 [label="testScopeInnerClassesPublic#?#3:setJavadocScope
testAssertIdentifier#?#3:setJavadocScope
testScopeAnonInnerPrivate#?#3:setJavadocScope" shape=ellipse]
10 [label="testScopeInnerClassesPublic#?#3:mConfig
testAssertIdentifier#?#3:mConfig
testScopeAnonInnerPrivate#?#3:mConfig" shape=ellipse]
11 [label="testScopeInnerClassesPublic#?#3:mConfig
testAssertIdentifier#?#3:mConfig
testScopeAnonInnerPrivate#?#3:mConfig" shape=ellipse]
12 [label="testScopeInnerClassesPublic#?#3:UPDATE
testAssertIdentifier#?#3:UPDATE
testScopeAnonInnerPrivate#?#3:UPDATE" shape=ellipse]
13 [label="testScopeInnerClassesPublic#?#3:mProps
testAssertIdentifier#?#3:mProps
testScopeAnonInnerPrivate#?#3:mProps" shape=ellipse]
14 [label="testScopeInnerClassesPublic#?#3:PlaceHold
testAssertIdentifier#?#3:PlaceHold
testScopeAnonInnerPrivate#?#3:PlaceHold" shape=ellipse]
15 [label="testScopeInnerClassesPublic#?#3:
testAssertIdentifier#?#3:
testScopeAnonInnerPrivate#?#3:" shape=ellipse]
16 [label="testScopeInnerClassesPublic#?#3:setJavadocScope()
testAssertIdentifier#?#3:setJavadocScope()
testScopeAnonInnerPrivate#?#3:setJavadocScope()" shape=ellipse]
17 [label="testScopeInnerClassesPublic#?#3:mConfig
testAssertIdentifier#?#3:mConfig
testScopeAnonInnerPrivate#?#3:mConfig" shape=ellipse]
18 [label="testScopeInnerClassesPublic#?#3:PUBLIC
testAssertIdentifier#?#3:NOTHING
testScopeAnonInnerPrivate#?#3:PRIVATE" shape=ellipse]
19 [label="testScopeInnerClassesPublic#?#3:PUBLIC
testAssertIdentifier#?#3:NOTHING
testScopeAnonInnerPrivate#?#3:PRIVATE" shape=ellipse]
20 [label="testScopeInnerClassesPublic#?#3:MOVE
testAssertIdentifier#?#3:MOVE
testScopeAnonInnerPrivate#?#3:MOVE" shape=ellipse]
21 [label="testScopeInnerClassesPublic#?#3:PUBLIC.getName()
testAssertIdentifier#?#3:NOTHING.getName()
testScopeAnonInnerPrivate#?#3:PRIVATE.getName()" shape=ellipse]
22 [label="testScopeInnerClassesPublic#?#3:getName
testAssertIdentifier#?#3:getName
testScopeAnonInnerPrivate#?#3:getName" shape=ellipse]
23 [label="testScopeInnerClassesPublic#?#3:getName()
testAssertIdentifier#?#3:getName()
testScopeAnonInnerPrivate#?#3:getName()" shape=ellipse]
24 [label="testScopeInnerClassesPublic#?#3:PUBLIC
testAssertIdentifier#?#3:NOTHING
testScopeAnonInnerPrivate#?#3:PRIVATE" shape=ellipse]
25 [label="testScopeInnerClassesPublic#?#3:
testAssertIdentifier#?#3:
testScopeAnonInnerPrivate#?#3:" shape=ellipse]
26 [label="testScopeInnerClassesPublic#?#3:setProperty
testAssertIdentifier#?#3:setProperty
testScopeAnonInnerPrivate#?#3:setProperty" shape=ellipse]
27 [label="testScopeInnerClassesPublic#?#3:setProperty()
testAssertIdentifier#?#3:setProperty()
testScopeAnonInnerPrivate#?#3:setProperty()" shape=ellipse]
28 [label="testScopeInnerClassesPublic#?#3:mProps
testAssertIdentifier#?#3:mProps
testScopeAnonInnerPrivate#?#3:mProps" shape=ellipse]
29 [label="testScopeInnerClassesPublic#?#3:
testAssertIdentifier#?#3:
testScopeAnonInnerPrivate#?#3:" shape=ellipse]
30 [label="testScopeInnerClassesPublic#?#3:JAVADOC_CHECKSCOPE_PROP
testAssertIdentifier#?#3:JAVADOC_CHECKSCOPE_PROP
testScopeAnonInnerPrivate#?#3:JAVADOC_CHECKSCOPE_PROP" shape=ellipse]
31 [label="testScopeInnerClassesPublic#?#3:JAVADOC_CHECKSCOPE_PROP
testAssertIdentifier#?#3:JAVADOC_CHECKSCOPE_PROP
testScopeAnonInnerPrivate#?#3:JAVADOC_CHECKSCOPE_PROP" shape=ellipse]
32 [label="testScopeInnerClassesPublic#?#3:
testAssertIdentifier#?#3:
testScopeAnonInnerPrivate#?#3:" shape=ellipse]
1 -> 0 [label="Action:3"];
1 -> 9 [label="AST:3"];
1 -> 10 [label="AST:3"];
1 -> 16 [label="AST:3"];
1 -> 18 [label="AST:3"];
2 -> 1 [label="AST:3"];
2 -> 4 [label="AST:3"];
2 -> 5 [label="AST:3"];
2 -> 6 [label="AST:3"];
2 -> 7 [label="AST:3"];
2 -> 8 [label="AST:3"];
3 -> 2 [label="AST:3"];
10 -> 11 [label="AST:3"];
10 -> 12 [label="Action:3"];
13 -> 14 [label="AST:3"];
14 -> 15 [label="AST:3"];
16 -> 17 [label="AST:3"];
18 -> 19 [label="AST:3"];
18 -> 20 [label="Action:3"];
20 -> 21 [label="Action:3"];
21 -> 22 [label="AST:3"];
21 -> 23 [label="AST:3"];
23 -> 24 [label="AST:3"];
24 -> 25 [label="AST:3"];
27 -> 28 [label="AST:3"];
28 -> 29 [label="AST:3"];
30 -> 31 [label="AST:3"];
31 -> 32 [label="AST:3"];
}