digraph "Pattern" {
0 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:INSERT
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:INSERT" shape=ellipse]
1 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#12:String.format(\"%s's default tokens must be a subset\" + \" of acceptable tokens.\", check.getName())
testRequiredTokensAreSubsetOfAcceptableTokens#?#12:String.format(\"%s's required tokens must be a subset\" + \" of acceptable tokens.\", check.getName())" shape=ellipse]
2 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#10:!isSubset(defaultTokens, acceptableTokens)
testRequiredTokensAreSubsetOfAcceptableTokens#?#10:!isSubset(requiredTokens, acceptableTokens)" shape=ellipse]
3 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#6:Check.class.isAssignableFrom(check)
testRequiredTokensAreSubsetOfAcceptableTokens#?#6:Check.class.isAssignableFrom(check)" shape=ellipse]
4 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#10:if (!isSubset(defaultTokens, acceptableTokens)) \{
    String errorMessage = String.format(\"%s's default tokens must be a subset\" + \" of acceptable tokens.\", check.getName());
    Assert.fail(errorMessage);
\}
testRequiredTokensAreSubsetOfAcceptableTokens#?#10:if (!isSubset(requiredTokens, acceptableTokens)) \{
    String errorMessage = String.format(\"%s's required tokens must be a subset\" + \" of acceptable tokens.\", check.getName());
    Assert.fail(errorMessage);
\}" shape=ellipse]
5 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#10:isSubset(defaultTokens, acceptableTokens)
testRequiredTokensAreSubsetOfAcceptableTokens#?#10:isSubset(requiredTokens, acceptableTokens)" shape=ellipse]
6 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#10:\{
    String errorMessage = String.format(\"%s's default tokens must be a subset\" + \" of acceptable tokens.\", check.getName());
    Assert.fail(errorMessage);
\}
testRequiredTokensAreSubsetOfAcceptableTokens#?#10:\{
    String errorMessage = String.format(\"%s's required tokens must be a subset\" + \" of acceptable tokens.\", check.getName());
    Assert.fail(errorMessage);
\}" shape=ellipse]
7 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#11:String errorMessage = String.format(\"%s's default tokens must be a subset\" + \" of acceptable tokens.\", check.getName())
testRequiredTokensAreSubsetOfAcceptableTokens#?#11:String errorMessage = String.format(\"%s's required tokens must be a subset\" + \" of acceptable tokens.\", check.getName())" shape=ellipse]
8 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#12:format(java.lang.String,java.lang.Object[])
testRequiredTokensAreSubsetOfAcceptableTokens#?#12:format(java.lang.String,java.lang.Object[])" shape=ellipse]
9 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#12:String
testRequiredTokensAreSubsetOfAcceptableTokens#?#12:String" shape=ellipse]
10 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:\"%s's default tokens must be a subset\" + \" of acceptable tokens.\"
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:\"%s's required tokens must be a subset\" + \" of acceptable tokens.\"" shape=ellipse]
11 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:\"%s's default tokens must be a subset\"
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:\"%s's required tokens must be a subset\"" shape=ellipse]
12 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:\" of acceptable tokens.\"
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:\" of acceptable tokens.\"" shape=ellipse]
13 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#14:check.getName()
testRequiredTokensAreSubsetOfAcceptableTokens#?#14:check.getName()" shape=ellipse]
14 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#14:getName()
testRequiredTokensAreSubsetOfAcceptableTokens#?#14:getName()" shape=ellipse]
15 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#14:check
testRequiredTokensAreSubsetOfAcceptableTokens#?#14:check" shape=ellipse]
16 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#15:Assert.fail(errorMessage)
testRequiredTokensAreSubsetOfAcceptableTokens#?#15:Assert.fail(errorMessage)" shape=ellipse]
17 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#15:fail(java.lang.String)
testRequiredTokensAreSubsetOfAcceptableTokens#?#15:fail(java.lang.String)" shape=ellipse]
18 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#15:Assert
testRequiredTokensAreSubsetOfAcceptableTokens#?#15:Assert" shape=ellipse]
19 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#15:errorMessage
testRequiredTokensAreSubsetOfAcceptableTokens#?#15:errorMessage" shape=ellipse]
20 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:Locale.ROOT
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:Locale.ROOT" shape=ellipse]
21 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:ROOT
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:ROOT" shape=ellipse]
22 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#13:Locale
testRequiredTokensAreSubsetOfAcceptableTokens#?#13:Locale" shape=ellipse]
23 [label="testDefaultTokensAreSubsetOfAcceptableTokens#?#12:format
testRequiredTokensAreSubsetOfAcceptableTokens#?#12:format" shape=ellipse]
0 -> 20 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 23 [label="AST:2"];
1 -> 9 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 10 [label="AST:2"];
1 -> 13 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="Control Dep:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 5 [label="Control Dep:2"];
4 -> 2 [label="AST:2"];
4 -> 6 [label="AST:2"];
6 -> 7 [label="AST:2"];
6 -> 16 [label="AST:2"];
7 -> 1 [label="AST:2"];
10 -> 11 [label="AST:2"];
10 -> 12 [label="AST:2"];
13 -> 15 [label="AST:2"];
13 -> 14 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 17 [label="AST:2"];
16 -> 19 [label="AST:2"];
20 -> 21 [label="AST:2"];
21 -> 22 [label="AST:2"];
}