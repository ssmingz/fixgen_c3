digraph "Pattern" {
0 [label="testScopeAnonInnerPrivate#?#5:UPDATE
testRelaxedJavadoc#?#5:UPDATE" shape=ellipse]
1 [label="testScopeAnonInnerPrivate#?#5:checkConfig.addProperty(\"scope\", PRIVATE.getName())
testRelaxedJavadoc#?#5:checkConfig.addProperty(\"scope\", PROTECTED.getName())" shape=ellipse]
2 [label="testScopeAnonInnerPrivate#?#2:\{
    final CheckConfiguration checkConfig = new CheckConfiguration();
    checkConfig.setClassname(JavadocMethodCheck.class.getName());
    checkConfig.addProperty(\"scope\", PRIVATE.getName());
    final Checker c = createChecker(checkConfig);
    final String fname = getPath(\"InputScopeAnonInner.java\");
    final String[] expected = new String[]\{  \};
    verify(c, fname, expected);
\}
testRelaxedJavadoc#?#2:\{
    final CheckConfiguration checkConfig = new CheckConfiguration();
    checkConfig.setClassname(JavadocMethodCheck.class.getName());
    checkConfig.addProperty(\"scope\", PROTECTED.getName());
    final Checker c = createChecker(checkConfig);
    final String fname = getPath(\"InputPublicOnly.java\");
    final String[] expected = new String[]\{ \"59:5: Missing a Javadoc comment.\", \"64:5: Missing a Javadoc comment.\", \"79:5: Missing a Javadoc comment.\", \"84:5: Missing a Javadoc comment.\" \};
    verify(c, fname, expected);
\}" shape=ellipse]
3 [label="testScopeAnonInnerPrivate#?#2:public void testScopeAnonInnerPrivate() throws Exception \{
    final CheckConfiguration checkConfig = new CheckConfiguration();
    checkConfig.setClassname(JavadocMethodCheck.class.getName());
    checkConfig.addProperty(\"scope\", PRIVATE.getName());
    final Checker c = createChecker(checkConfig);
    final String fname = getPath(\"InputScopeAnonInner.java\");
    final String[] expected = new String[]\{  \};
    verify(c, fname, expected);
\}
testRelaxedJavadoc#?#2:public void testRelaxedJavadoc() throws Exception \{
    final CheckConfiguration checkConfig = new CheckConfiguration();
    checkConfig.setClassname(JavadocMethodCheck.class.getName());
    checkConfig.addProperty(\"scope\", PROTECTED.getName());
    final Checker c = createChecker(checkConfig);
    final String fname = getPath(\"InputPublicOnly.java\");
    final String[] expected = new String[]\{ \"59:5: Missing a Javadoc comment.\", \"64:5: Missing a Javadoc comment.\", \"79:5: Missing a Javadoc comment.\", \"84:5: Missing a Javadoc comment.\" \};
    verify(c, fname, expected);
\}" shape=ellipse]
4 [label="testScopeAnonInnerPrivate#?#3:final CheckConfiguration checkConfig = new CheckConfiguration()
testRelaxedJavadoc#?#3:final CheckConfiguration checkConfig = new CheckConfiguration()" shape=ellipse]
5 [label="testScopeAnonInnerPrivate#?#4:checkConfig.setClassname(JavadocMethodCheck.class.getName())
testRelaxedJavadoc#?#4:checkConfig.setClassname(JavadocMethodCheck.class.getName())" shape=ellipse]
6 [label="testScopeAnonInnerPrivate#?#6:final Checker c = createChecker(checkConfig)
testRelaxedJavadoc#?#6:final Checker c = createChecker(checkConfig)" shape=ellipse]
7 [label="testScopeAnonInnerPrivate#?#7:final String fname = getPath(\"InputScopeAnonInner.java\")
testRelaxedJavadoc#?#7:final String fname = getPath(\"InputPublicOnly.java\")" shape=ellipse]
8 [label="testScopeAnonInnerPrivate#?#8:final String[] expected = new String[]\{  \}
testRelaxedJavadoc#?#8:final String[] expected = new String[]\{ \"59:5: Missing a Javadoc comment.\", \"64:5: Missing a Javadoc comment.\", \"79:5: Missing a Javadoc comment.\", \"84:5: Missing a Javadoc comment.\" \}" shape=ellipse]
9 [label="testScopeAnonInnerPrivate#?#9:verify(c, fname, expected)
testRelaxedJavadoc#?#15:verify(c, fname, expected)" shape=ellipse]
10 [label="testScopeAnonInnerPrivate#?#3:INSERT
testRelaxedJavadoc#?#3:INSERT" shape=ellipse]
11 [label="testScopeAnonInnerPrivate#?#3:final  checkConfig = 
testRelaxedJavadoc#?#3:final  checkConfig = " shape=ellipse]
12 [label="testScopeAnonInnerPrivate#?#3:checkConfig
testRelaxedJavadoc#?#3:checkConfig" shape=ellipse]
13 [label="testScopeAnonInnerPrivate#?#5:checkConfig
testRelaxedJavadoc#?#5:checkConfig" shape=ellipse]
14 [label="testScopeAnonInnerPrivate#?#4:checkConfig
testRelaxedJavadoc#?#4:checkConfig" shape=ellipse]
15 [label="testScopeAnonInnerPrivate#?#4:DefaultConfiguration
testRelaxedJavadoc#?#4:DefaultConfiguration" shape=ellipse]
16 [label="testScopeAnonInnerPrivate#?#4:
testRelaxedJavadoc#?#4:" shape=ellipse]
17 [label="testScopeAnonInnerPrivate#?#6:checkConfig
testRelaxedJavadoc#?#6:checkConfig" shape=ellipse]
18 [label="testScopeAnonInnerPrivate#?#6:checkConfig
testRelaxedJavadoc#?#6:checkConfig" shape=ellipse]
19 [label="testScopeAnonInnerPrivate#?#9:c
testRelaxedJavadoc#?#15:c" shape=ellipse]
20 [label="testScopeAnonInnerPrivate#?#9:c
testRelaxedJavadoc#?#15:c" shape=ellipse]
21 [label="testScopeAnonInnerPrivate#?#5:checkConfig
testRelaxedJavadoc#?#5:checkConfig" shape=ellipse]
22 [label="testScopeAnonInnerPrivate#?#6:c
testRelaxedJavadoc#?#6:c" shape=ellipse]
23 [label="testScopeAnonInnerPrivate#?#3:CheckConfiguration
testRelaxedJavadoc#?#3:CheckConfiguration" shape=ellipse]
24 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
25 [label="testScopeAnonInnerPrivate#?#4:JavadocMethodCheck.class.getName()
testRelaxedJavadoc#?#4:JavadocMethodCheck.class.getName()" shape=ellipse]
26 [label="testScopeAnonInnerPrivate#?#3:createCheckConfig
testRelaxedJavadoc#?#3:createCheckConfig" shape=ellipse]
27 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
28 [label="testScopeAnonInnerPrivate#?#3:PlaceHold
testRelaxedJavadoc#?#3:PlaceHold" shape=ellipse]
29 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
30 [label="testScopeAnonInnerPrivate#?#3:PlaceHold
testRelaxedJavadoc#?#3:PlaceHold" shape=ellipse]
31 [label="testScopeAnonInnerPrivate#?#3:PlaceHold
testRelaxedJavadoc#?#3:PlaceHold" shape=ellipse]
32 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
33 [label="testScopeAnonInnerPrivate#?#3:createCheckConfig(java.lang.Class)
testRelaxedJavadoc#?#3:createCheckConfig(java.lang.Class)" shape=ellipse]
34 [label="testScopeAnonInnerPrivate#?#3:DefaultConfiguration
testRelaxedJavadoc#?#3:DefaultConfiguration" shape=ellipse]
35 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
36 [label="testScopeAnonInnerPrivate#?#3:Class<JavadocMethodCheck>
testRelaxedJavadoc#?#3:Class<JavadocMethodCheck>" shape=ellipse]
37 [label="testScopeAnonInnerPrivate#?#3:java.lang
testRelaxedJavadoc#?#3:java.lang" shape=ellipse]
38 [label="testScopeAnonInnerPrivate#?#3:JavadocMethodCheck
testRelaxedJavadoc#?#3:JavadocMethodCheck" shape=ellipse]
39 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
40 [label="testScopeAnonInnerPrivate#?#3:JavadocMethodCheck.class
testRelaxedJavadoc#?#3:JavadocMethodCheck.class" shape=ellipse]
41 [label="testScopeAnonInnerPrivate#?#3:JavadocMethodCheck
testRelaxedJavadoc#?#3:JavadocMethodCheck" shape=ellipse]
42 [label="testScopeAnonInnerPrivate#?#3:JavadocMethodCheck
testRelaxedJavadoc#?#3:JavadocMethodCheck" shape=ellipse]
43 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
44 [label="testScopeAnonInnerPrivate#?#3:JavadocMethodCheck.class
testRelaxedJavadoc#?#3:JavadocMethodCheck.class" shape=ellipse]
45 [label="testScopeAnonInnerPrivate#?#3:JavadocMethodCheck
testRelaxedJavadoc#?#3:JavadocMethodCheck" shape=ellipse]
46 [label="testScopeAnonInnerPrivate#?#3:
testRelaxedJavadoc#?#3:" shape=ellipse]
47 [label="testScopeAnonInnerPrivate#?#3:Class
testRelaxedJavadoc#?#3:Class" shape=ellipse]
48 [label="testScopeAnonInnerPrivate#?#3:java.lang
testRelaxedJavadoc#?#3:java.lang" shape=ellipse]
49 [label="testScopeAnonInnerPrivate#?#3:final
testRelaxedJavadoc#?#3:final" shape=ellipse]
50 [label="testScopeAnonInnerPrivate#?#3:VE: Modifiers_LocalVariable
testRelaxedJavadoc#?#3:VE: Modifiers_LocalVariable" shape=ellipse]
51 [label="testScopeAnonInnerPrivate#?#5:addProperty
testRelaxedJavadoc#?#5:addProperty" shape=ellipse]
52 [label="testScopeAnonInnerPrivate#?#5:addProperty(java.lang.String)
testRelaxedJavadoc#?#5:addProperty(java.lang.String)" shape=ellipse]
53 [label="testScopeAnonInnerPrivate#?#5:CheckConfiguration
testRelaxedJavadoc#?#5:CheckConfiguration" shape=ellipse]
54 [label="testScopeAnonInnerPrivate#?#5:String
testRelaxedJavadoc#?#5:String" shape=ellipse]
55 [label="testScopeAnonInnerPrivate#?#5:\"scope\"
testRelaxedJavadoc#?#5:\"scope\"" shape=ellipse]
56 [label="testScopeAnonInnerPrivate#?#5:String
testRelaxedJavadoc#?#5:String" shape=ellipse]
57 [label="testScopeAnonInnerPrivate#?#5:PRIVATE.getName()
testRelaxedJavadoc#?#5:PROTECTED.getName()" shape=ellipse]
58 [label="testScopeAnonInnerPrivate#?#5:getName
testRelaxedJavadoc#?#5:getName" shape=ellipse]
59 [label="testScopeAnonInnerPrivate#?#5:PRIVATE
testRelaxedJavadoc#?#5:PROTECTED" shape=ellipse]
60 [label="testScopeAnonInnerPrivate#?#5:getName()
testRelaxedJavadoc#?#5:getName()" shape=ellipse]
61 [label="testScopeAnonInnerPrivate#?#4:addAttribute
testRelaxedJavadoc#?#4:addAttribute" shape=ellipse]
62 [label="testScopeAnonInnerPrivate#?#4:addAttribute(java.lang.String)
testRelaxedJavadoc#?#4:addAttribute(java.lang.String)" shape=ellipse]
63 [label="testScopeAnonInnerPrivate#?#4:DefaultConfiguration
testRelaxedJavadoc#?#4:DefaultConfiguration" shape=ellipse]
64 [label="testScopeAnonInnerPrivate#?#4:
testRelaxedJavadoc#?#4:" shape=ellipse]
65 [label="testScopeAnonInnerPrivate#?#4:String
testRelaxedJavadoc#?#4:String" shape=ellipse]
66 [label="testScopeAnonInnerPrivate#?#4:java.lang
testRelaxedJavadoc#?#4:java.lang" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 51 [label="AST:2"];
1 -> 13 [label="AST:2"];
1 -> 52 [label="AST:2"];
1 -> 55 [label="AST:2"];
1 -> 57 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
2 -> 8 [label="AST:2"];
2 -> 9 [label="AST:2"];
2 -> 10 [label="Action:2"];
3 -> 2 [label="AST:2"];
4 -> 23 [label="AST:2"];
5 -> 25 [label="AST:2"];
6 -> 22 [label="AST:2"];
9 -> 19 [label="AST:2"];
10 -> 11 [label="Action:2"];
11 -> 12 [label="AST:2"];
11 -> 49 [label="AST:2"];
11 -> 50 [label="AST:2"];
12 -> 13 [label="Define Use:2"];
12 -> 13 [label="Data Dep:2"];
12 -> 13 [label="Control Dep:2"];
12 -> 17 [label="Define Use:2"];
12 -> 17 [label="Data Dep:2"];
12 -> 17 [label="Control Dep:2"];
13 -> 21 [label="AST:2"];
14 -> 15 [label="AST:2"];
15 -> 16 [label="AST:2"];
17 -> 18 [label="AST:2"];
17 -> 22 [label="Data Dep:2"];
19 -> 20 [label="AST:2"];
22 -> 19 [label="Define Use:2"];
27 -> 12 [label="Data Dep:2"];
27 -> 28 [label="AST:2"];
27 -> 30 [label="AST:2"];
28 -> 29 [label="AST:2"];
30 -> 31 [label="AST:2"];
31 -> 32 [label="AST:2"];
33 -> 34 [label="AST:2"];
33 -> 36 [label="AST:2"];
34 -> 35 [label="AST:2"];
36 -> 37 [label="AST:2"];
36 -> 38 [label="AST:2"];
38 -> 39 [label="AST:2"];
40 -> 12 [label="Data Dep:2"];
40 -> 41 [label="AST:2"];
40 -> 44 [label="AST:2"];
41 -> 42 [label="AST:2"];
42 -> 43 [label="AST:2"];
44 -> 45 [label="AST:2"];
44 -> 47 [label="AST:2"];
45 -> 46 [label="AST:2"];
47 -> 48 [label="AST:2"];
52 -> 53 [label="AST:2"];
52 -> 54 [label="AST:2"];
55 -> 56 [label="AST:2"];
57 -> 58 [label="AST:2"];
57 -> 59 [label="AST:2"];
57 -> 60 [label="AST:2"];
62 -> 63 [label="AST:2"];
62 -> 65 [label="AST:2"];
63 -> 64 [label="AST:2"];
65 -> 66 [label="AST:2"];
}