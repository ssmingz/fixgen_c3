digraph "visitToken#?,DetailAST" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@visitToken" shape=ellipse]
2 [label="3:CtParameterImpl@DetailAST ast" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="4:CtExecutableReferenceImpl@mustCheckName(<unknown>)" shape=ellipse]
5 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@null" shape=ellipse]
7 [label="4:CtVirtualElement@mustCheckName" shape=ellipse]
8 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
9 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
10 [label="4:CtThisAccessImpl@" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
12 [label="4:CtVariableReadImpl@ast" shape=ellipse]
13 [label="4:CtParameterReferenceImpl@ast" shape=ellipse]
14 [label="4:CtInvocationImpl@mustCheckName(ast)" shape=ellipse]
15 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
16 [label="5:CtPackageReferenceImpl@" shape=ellipse]
17 [label="5:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
18 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
19 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
20 [label="5:CtVirtualElement@findFirstToken" shape=ellipse]
21 [label="5:CtVariableReadImpl@ast" shape=ellipse]
22 [label="5:CtParameterReferenceImpl@ast" shape=ellipse]
23 [label="5:CtTypeAccessImpl@IDENT" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@IDENT" shape=ellipse]
25 [label="5:CtInvocationImpl@ast.findFirstToken(IDENT)" shape=ellipse]
26 [label="5:CtVirtualElement@nameAST" shape=ellipse]
27 [label="5:CtLocalVariableImpl@final DetailAST nameAST = ast.findFirstToken(IDENT)" shape=ellipse]
28 [label="6:CtExecutableReferenceImpl@find()" shape=ellipse]
29 [label="6:CtVirtualElement@find" shape=ellipse]
30 [label="6:CtExecutableReferenceImpl@matcher()" shape=ellipse]
31 [label="6:CtVirtualElement@matcher" shape=ellipse]
32 [label="6:CtExecutableReferenceImpl@getRegexp()" shape=ellipse]
33 [label="6:CtVirtualElement@getRegexp" shape=ellipse]
34 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
35 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
36 [label="6:CtThisAccessImpl@" shape=ellipse]
37 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
38 [label="6:CtInvocationImpl@getRegexp()" shape=ellipse]
39 [label="6:CtExecutableReferenceImpl@getText()" shape=ellipse]
40 [label="6:CtTypeReferenceImpl@DetailAST" shape=ellipse]
41 [label="6:CtVirtualElement@getText" shape=ellipse]
42 [label="6:CtVariableReadImpl@nameAST" shape=ellipse]
43 [label="6:CtLocalVariableReferenceImpl@nameAST" shape=ellipse]
44 [label="6:CtInvocationImpl@nameAST.getText()" shape=ellipse]
45 [label="6:CtInvocationImpl@getRegexp().matcher(nameAST.getText())" shape=ellipse]
46 [label="6:CtInvocationImpl@getRegexp().matcher(nameAST.getText()).find()" shape=ellipse]
47 [label="6:CtUnaryOperatorImpl@!getRegexp().matcher(nameAST.getText()).find()" shape=ellipse]
48 [label="7:CtExecutableReferenceImpl@log(<unknown>,<unknown>,<unknown>,<unknown>,<unknown>)" shape=ellipse]
49 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
51 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
52 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
54 [label="7:CtVirtualElement@log" shape=ellipse]
55 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
56 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
57 [label="7:CtThisAccessImpl@" shape=ellipse]
58 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
59 [label="8:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
60 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
61 [label="8:CtVirtualElement@getLineNo" shape=ellipse]
62 [label="8:CtVariableReadImpl@nameAST" shape=ellipse]
63 [label="8:CtLocalVariableReferenceImpl@nameAST" shape=ellipse]
64 [label="8:CtInvocationImpl@nameAST.getLineNo()" shape=ellipse]
65 [label="9:CtExecutableReferenceImpl@getColumnNo()" shape=ellipse]
66 [label="9:CtTypeReferenceImpl@DetailAST" shape=ellipse]
67 [label="9:CtVirtualElement@getColumnNo" shape=ellipse]
68 [label="9:CtVariableReadImpl@nameAST" shape=ellipse]
69 [label="9:CtLocalVariableReferenceImpl@nameAST" shape=ellipse]
70 [label="9:CtInvocationImpl@nameAST.getColumnNo()" shape=ellipse]
71 [label="10:CtTypeAccessImpl@MSG_INVALID_PATTERN" shape=ellipse]
72 [label="10:CtTypeReferenceImpl@MSG_INVALID_PATTERN" shape=ellipse]
73 [label="11:CtExecutableReferenceImpl@getText()" shape=ellipse]
74 [label="11:CtTypeReferenceImpl@DetailAST" shape=ellipse]
75 [label="11:CtVirtualElement@getText" shape=ellipse]
76 [label="11:CtVariableReadImpl@nameAST" shape=ellipse]
77 [label="11:CtLocalVariableReferenceImpl@nameAST" shape=ellipse]
78 [label="11:CtInvocationImpl@nameAST.getText()" shape=ellipse]
79 [label="12:CtExecutableReferenceImpl@getFormat()" shape=ellipse]
80 [label="12:CtVirtualElement@getFormat" shape=ellipse]
81 [label="12:CtTypeAccessImpl@PlaceHold" shape=ellipse]
82 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
83 [label="12:CtThisAccessImpl@" shape=ellipse]
84 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
85 [label="12:CtInvocationImpl@getFormat()" shape=ellipse]
86 [label="7:CtInvocationImpl@log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat())" shape=ellipse]
87 [label="6:CtBlockImpl@\{
    log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
\}" shape=ellipse]
88 [label="6:CtIfImpl@if (!getRegexp().matcher(nameAST.getText()).find()) \{
    log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
\}" shape=ellipse]
89 [label="4:CtBlockImpl@\{
    final DetailAST nameAST = ast.findFirstToken(IDENT);
    if (!getRegexp().matcher(nameAST.getText()).find()) \{
        log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
    \}
\}" shape=ellipse]
90 [label="4:CtIfImpl@if (mustCheckName(ast)) \{
    final DetailAST nameAST = ast.findFirstToken(IDENT);
    if (!getRegexp().matcher(nameAST.getText()).find()) \{
        log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
    \}
\}" shape=ellipse]
91 [label="3:CtBlockImpl@\{
    if (mustCheckName(ast)) \{
        final DetailAST nameAST = ast.findFirstToken(IDENT);
        if (!getRegexp().matcher(nameAST.getText()).find()) \{
            log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
        \}
    \}
\}" shape=ellipse]
92 [label="3:CtMethodImpl@@Override
public void visitToken(DetailAST ast) \{
    if (mustCheckName(ast)) \{
        final DetailAST nameAST = ast.findFirstToken(IDENT);
        if (!getRegexp().matcher(nameAST.getText()).find()) \{
            log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
        \}
    \}
\}" shape=ellipse]
93 [label="2:CtAnnotationImpl@@Override" shape=ellipse]
94 [label="6:Delete@DELETE" shape=ellipse]
95 [label="12:Delete@DELETE" shape=ellipse]
96 [label="12:Insert@INSERT" shape=ellipse]
97 [label="12:CtPackageReferenceImpl@" shape=ellipse]
98 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
99 [label="12:CtFieldReferenceImpl@format" shape=ellipse]
100 [label="12:CtFieldReadImpl@format" shape=ellipse]
101 [label="6:Insert@INSERT" shape=ellipse]
102 [label="6:CtPackageReferenceImpl@" shape=ellipse]
103 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
104 [label="6:CtFieldReferenceImpl@regexp" shape=ellipse]
105 [label="6:CtFieldReadImpl@regexp" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
8 -> 9 [label="AST"];
10 -> 11 [label="AST"];
10 -> 8 [label="AST"];
12 -> 13 [label="AST"];
14 -> 7 [label="AST"];
14 -> 10 [label="AST"];
14 -> 4 [label="AST"];
14 -> 12 [label="AST"];
14 -> 89 [label="Control Dep"];
14 -> 27 [label="Control Dep"];
14 -> 25 [label="Control Dep"];
14 -> 17 [label="Control Dep"];
14 -> 21 [label="Control Dep"];
14 -> 23 [label="Control Dep"];
14 -> 88 [label="Control Dep"];
14 -> 47 [label="Control Dep"];
14 -> 46 [label="Control Dep"];
14 -> 28 [label="Control Dep"];
14 -> 45 [label="Control Dep"];
14 -> 30 [label="Control Dep"];
14 -> 38 [label="Control Dep"];
14 -> 32 [label="Control Dep"];
14 -> 36 [label="Control Dep"];
14 -> 34 [label="Control Dep"];
14 -> 44 [label="Control Dep"];
14 -> 39 [label="Control Dep"];
14 -> 42 [label="Control Dep"];
14 -> 105 [label="Control Dep"];
15 -> 16 [label="AST"];
17 -> 18 [label="AST"];
17 -> 19 [label="AST"];
21 -> 22 [label="AST"];
21 -> 26 [label="Data Dep"];
23 -> 24 [label="AST"];
25 -> 20 [label="AST"];
25 -> 21 [label="AST"];
25 -> 17 [label="AST"];
25 -> 23 [label="AST"];
26 -> 42 [label="Define-Use"];
26 -> 62 [label="Define-Use"];
26 -> 68 [label="Define-Use"];
26 -> 76 [label="Define-Use"];
27 -> 26 [label="AST"];
27 -> 15 [label="AST"];
27 -> 25 [label="AST"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
36 -> 34 [label="AST"];
38 -> 33 [label="AST"];
38 -> 36 [label="AST"];
38 -> 32 [label="AST"];
38 -> 94 [label="Action"];
39 -> 40 [label="AST"];
42 -> 43 [label="AST"];
44 -> 41 [label="AST"];
44 -> 42 [label="AST"];
44 -> 39 [label="AST"];
45 -> 31 [label="AST"];
45 -> 38 [label="AST"];
45 -> 30 [label="AST"];
45 -> 44 [label="AST"];
45 -> 101 [label="Action"];
46 -> 29 [label="AST"];
46 -> 45 [label="AST"];
46 -> 28 [label="AST"];
47 -> 46 [label="AST"];
47 -> 87 [label="Control Dep"];
47 -> 86 [label="Control Dep"];
47 -> 48 [label="Control Dep"];
47 -> 57 [label="Control Dep"];
47 -> 55 [label="Control Dep"];
47 -> 64 [label="Control Dep"];
47 -> 59 [label="Control Dep"];
47 -> 62 [label="Control Dep"];
47 -> 70 [label="Control Dep"];
47 -> 65 [label="Control Dep"];
47 -> 68 [label="Control Dep"];
47 -> 71 [label="Control Dep"];
47 -> 78 [label="Control Dep"];
47 -> 73 [label="Control Dep"];
47 -> 76 [label="Control Dep"];
47 -> 85 [label="Control Dep"];
47 -> 79 [label="Control Dep"];
47 -> 83 [label="Control Dep"];
47 -> 81 [label="Control Dep"];
47 -> 100 [label="Control Dep"];
48 -> 49 [label="AST"];
48 -> 50 [label="AST"];
48 -> 51 [label="AST"];
48 -> 52 [label="AST"];
48 -> 53 [label="AST"];
55 -> 56 [label="AST"];
57 -> 58 [label="AST"];
57 -> 55 [label="AST"];
59 -> 60 [label="AST"];
62 -> 63 [label="AST"];
64 -> 61 [label="AST"];
64 -> 62 [label="AST"];
64 -> 59 [label="AST"];
65 -> 66 [label="AST"];
68 -> 69 [label="AST"];
70 -> 67 [label="AST"];
70 -> 68 [label="AST"];
70 -> 65 [label="AST"];
71 -> 72 [label="AST"];
73 -> 74 [label="AST"];
76 -> 77 [label="AST"];
78 -> 75 [label="AST"];
78 -> 76 [label="AST"];
78 -> 73 [label="AST"];
81 -> 82 [label="AST"];
83 -> 84 [label="AST"];
83 -> 81 [label="AST"];
85 -> 80 [label="AST"];
85 -> 83 [label="AST"];
85 -> 79 [label="AST"];
85 -> 95 [label="Action"];
86 -> 54 [label="AST"];
86 -> 57 [label="AST"];
86 -> 48 [label="AST"];
86 -> 64 [label="AST"];
86 -> 70 [label="AST"];
86 -> 71 [label="AST"];
86 -> 78 [label="AST"];
86 -> 85 [label="AST"];
86 -> 96 [label="Action"];
87 -> 86 [label="AST"];
88 -> 47 [label="AST"];
88 -> 87 [label="AST"];
89 -> 27 [label="AST"];
89 -> 88 [label="AST"];
90 -> 14 [label="AST"];
90 -> 89 [label="AST"];
91 -> 90 [label="AST"];
92 -> 1 [label="AST"];
92 -> 93 [label="AST"];
92 -> 0 [label="AST"];
92 -> 2 [label="AST"];
92 -> 91 [label="AST"];
96 -> 100 [label="Action"];
98 -> 97 [label="AST"];
99 -> 98 [label="AST"];
100 -> 99 [label="AST"];
101 -> 105 [label="Action"];
103 -> 102 [label="AST"];
104 -> 103 [label="AST"];
105 -> 104 [label="AST"];
}