digraph "Pattern" {
0 [label="visitToken#?,DetailAST#12:DELETE
visitToken#?,DetailAST#10:DELETE" shape=ellipse]
1 [label="visitToken#?,DetailAST#12:getFormat()
visitToken#?,DetailAST#10:getFormat()" shape=ellipse]
2 [label="visitToken#?,DetailAST#6:!getRegexp().matcher(nameAST.getText()).find()" shape=ellipse]
3 [label="visitToken#?,DetailAST#4:mustCheckName(ast)
visitToken#?,DetailAST#10:ast.getColumnNo()" shape=ellipse]
4 [label="visitToken#?,DetailAST#6:getRegexp()" shape=ellipse]
5 [label="visitToken#?,DetailAST#6:regexp
visitToken#?,DetailAST#10:format" shape=ellipse]
6 [label="visitToken#?,DetailAST#6:PlaceHold
visitToken#?,DetailAST#10:PlaceHold" shape=ellipse]
7 [label="visitToken#?,DetailAST#6:
visitToken#?,DetailAST#10:" shape=ellipse]
8 [label="visitToken#?,DetailAST#6:if (!getRegexp().matcher(nameAST.getText()).find()) \{
    log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
\}" shape=ellipse]
9 [label="visitToken#?,DetailAST#6:getRegexp().matcher(nameAST.getText()).find()" shape=ellipse]
10 [label="visitToken#?,DetailAST#6:\{
    log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat());
\}
visitToken#?,DetailAST#5:\{
    String customMessage = message;
    if (customMessage.isEmpty()) \{
        customMessage = MSG_KEY;
    \}
    log(ast.getLineNo(), ast.getColumnNo(), customMessage, getFormat());
\}" shape=ellipse]
11 [label="visitToken#?,DetailAST#7:log(nameAST.getLineNo(), nameAST.getColumnNo(), MSG_INVALID_PATTERN, nameAST.getText(), getFormat())" shape=ellipse]
12 [label="visitToken#?,DetailAST#7:log(<unknown>,<unknown>,<unknown>,<unknown>,<unknown>)
visitToken#?,DetailAST#10:log(<unknown>,<unknown>,java.lang.String,<unknown>)" shape=ellipse]
13 [label="visitToken#?,DetailAST#7:
visitToken#?,DetailAST#10:" shape=ellipse]
14 [label="visitToken#?,DetailAST#7:PlaceHold
visitToken#?,DetailAST#10:PlaceHold" shape=ellipse]
15 [label="visitToken#?,DetailAST#8:nameAST.getLineNo()
visitToken#?,DetailAST#10:ast.getLineNo()" shape=ellipse]
16 [label="visitToken#?,DetailAST#8:getLineNo()
visitToken#?,DetailAST#10:getLineNo()" shape=ellipse]
17 [label="visitToken#?,DetailAST#8:nameAST
visitToken#?,DetailAST#10:ast" shape=ellipse]
18 [label="visitToken#?,DetailAST#9:nameAST.getColumnNo()
visitToken#?,DetailAST#7:customMessage.isEmpty()" shape=ellipse]
19 [label="visitToken#?,DetailAST#9:getColumnNo()
visitToken#?,DetailAST#7:isEmpty()" shape=ellipse]
20 [label="visitToken#?,DetailAST#9:nameAST
visitToken#?,DetailAST#7:customMessage" shape=ellipse]
21 [label="visitToken#?,DetailAST#10:MSG_INVALID_PATTERN
visitToken#?,DetailAST#10:PlaceHold" shape=ellipse]
22 [label="visitToken#?,DetailAST#11:nameAST.getText()
visitToken#?,DetailAST#5:getRegexp().matcher(text)" shape=ellipse]
23 [label="visitToken#?,DetailAST#11:getText()" shape=ellipse]
24 [label="visitToken#?,DetailAST#11:nameAST" shape=ellipse]
25 [label="visitToken#?,DetailAST#12:getFormat()
visitToken#?,DetailAST#10:getFormat()" shape=ellipse]
26 [label="visitToken#?,DetailAST#12:" shape=ellipse]
27 [label="visitToken#?,DetailAST#12:PlaceHold
visitToken#?,DetailAST#6:message" shape=ellipse]
28 [label="visitToken#?,DetailAST#12:format
visitToken#?,DetailAST#10:customMessage" shape=ellipse]
29 [label="visitToken#?,DetailAST#12:format" shape=ellipse]
30 [label="visitToken#?,DetailAST#12:PlaceHold
visitToken#?,DetailAST#5:find()" shape=ellipse]
31 [label="visitToken#?,DetailAST#12:" shape=ellipse]
32 [label="visitToken#?,DetailAST#12:getFormat
visitToken#?,DetailAST#10:getFormat" shape=ellipse]
33 [label="visitToken#?,DetailAST#5:getRegexp().matcher(text).find()" shape=ellipse]
34 [label="visitToken#?,DetailAST#5:if (getRegexp().matcher(text).find()) \{
    String customMessage = message;
    if (customMessage.isEmpty()) \{
        customMessage = MSG_KEY;
    \}
    log(ast.getLineNo(), ast.getColumnNo(), customMessage, getFormat());
\}" shape=ellipse]
35 [label="visitToken#?,DetailAST#7:if (customMessage.isEmpty()) \{
    customMessage = MSG_KEY;
\}" shape=ellipse]
36 [label="visitToken#?,DetailAST#10:log(ast.getLineNo(), ast.getColumnNo(), customMessage, getFormat())" shape=ellipse]
37 [label="visitToken#?,DetailAST#10:ast" shape=ellipse]
38 [label="visitToken#?,DetailAST#10:" shape=ellipse]
39 [label="visitToken#?,DetailAST#10:format" shape=ellipse]
40 [label="visitToken#?,DetailAST#5:find" shape=ellipse]
41 [label="visitToken#?,DetailAST#6:String customMessage = message" shape=ellipse]
42 [label="visitToken#?,DetailAST#10:getColumnNo()" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 32 [label="AST:2"];
1 -> 26 [label="AST:1"];
1 -> 25 [label="AST:2"];
1 -> 38 [label="AST:1"];
2 -> 1 [label="Control Dep:1"];
2 -> 9 [label="AST:1"];
2 -> 10 [label="Control Dep:1"];
2 -> 11 [label="Control Dep:1"];
2 -> 12 [label="Control Dep:1"];
2 -> 13 [label="Control Dep:1"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:1"];
2 -> 16 [label="Control Dep:1"];
2 -> 17 [label="Control Dep:1"];
2 -> 18 [label="Control Dep:1"];
2 -> 19 [label="Control Dep:1"];
2 -> 20 [label="Control Dep:1"];
2 -> 21 [label="Control Dep:1"];
2 -> 22 [label="Control Dep:1"];
2 -> 23 [label="Control Dep:1"];
2 -> 24 [label="Control Dep:1"];
2 -> 25 [label="Control Dep:1"];
2 -> 26 [label="Control Dep:1"];
2 -> 27 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:1"];
3 -> 8 [label="Control Dep:1"];
3 -> 9 [label="Control Dep:1"];
3 -> 4 [label="Control Dep:1"];
3 -> 37 [label="AST:1"];
3 -> 42 [label="AST:1"];
5 -> 6 [label="AST:2"];
6 -> 7 [label="AST:2"];
8 -> 2 [label="AST:1"];
8 -> 10 [label="AST:1"];
10 -> 11 [label="AST:1"];
10 -> 35 [label="AST:1"];
10 -> 36 [label="AST:1"];
10 -> 41 [label="AST:1"];
11 -> 1 [label="AST:1"];
11 -> 13 [label="AST:1"];
11 -> 12 [label="AST:1"];
11 -> 15 [label="AST:1"];
11 -> 18 [label="AST:1"];
11 -> 21 [label="AST:1"];
11 -> 22 [label="AST:1"];
13 -> 14 [label="AST:2"];
15 -> 17 [label="AST:2"];
15 -> 16 [label="AST:2"];
18 -> 20 [label="AST:2"];
18 -> 19 [label="AST:2"];
22 -> 24 [label="AST:1"];
22 -> 23 [label="AST:1"];
26 -> 27 [label="AST:1"];
28 -> 29 [label="AST:1"];
29 -> 30 [label="AST:1"];
30 -> 31 [label="AST:1"];
33 -> 40 [label="AST:1"];
33 -> 22 [label="AST:1"];
33 -> 30 [label="AST:1"];
33 -> 10 [label="Control Dep:1"];
33 -> 41 [label="Control Dep:1"];
33 -> 27 [label="Control Dep:1"];
33 -> 35 [label="Control Dep:1"];
33 -> 18 [label="Control Dep:1"];
33 -> 19 [label="Control Dep:1"];
33 -> 20 [label="Control Dep:1"];
33 -> 36 [label="Control Dep:1"];
33 -> 12 [label="Control Dep:1"];
33 -> 13 [label="Control Dep:1"];
33 -> 14 [label="Control Dep:1"];
33 -> 15 [label="Control Dep:1"];
33 -> 16 [label="Control Dep:1"];
33 -> 17 [label="Control Dep:1"];
33 -> 3 [label="Control Dep:1"];
33 -> 42 [label="Control Dep:1"];
33 -> 37 [label="Control Dep:1"];
33 -> 28 [label="Control Dep:1"];
33 -> 1 [label="Control Dep:1"];
33 -> 25 [label="Control Dep:1"];
33 -> 38 [label="Control Dep:1"];
33 -> 21 [label="Control Dep:1"];
33 -> 39 [label="Control Dep:1"];
34 -> 33 [label="AST:1"];
34 -> 10 [label="AST:1"];
35 -> 18 [label="AST:1"];
36 -> 13 [label="AST:1"];
36 -> 12 [label="AST:1"];
36 -> 15 [label="AST:1"];
36 -> 3 [label="AST:1"];
36 -> 28 [label="AST:1"];
36 -> 1 [label="AST:1"];
38 -> 21 [label="AST:1"];
39 -> 5 [label="AST:1"];
41 -> 27 [label="AST:1"];
}