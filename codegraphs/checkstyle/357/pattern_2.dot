digraph "Pattern" {
0 [label="visitToken#?,DetailAST#11:INSERT
processLeft#?,DetailAST#8:INSERT" shape=ellipse]
1 [label="visitToken#?,DetailAST#11:log(semi.getLineNo(), after, \"ws.followed\", \";\")
processLeft#?,DetailAST#8:log(ast.getLineNo(), after, \"ws.followed\", \"(\")" shape=ellipse]
2 [label="visitToken#?,DetailAST#9:(PadOption.NOSPACE == getAbstractOption()) && Character.isWhitespace(line.charAt(after))
processLeft#?,DetailAST#6:(PadOption.NOSPACE == getAbstractOption()) && Character.isWhitespace(line.charAt(after))" shape=ellipse]
3 [label="visitToken#?,DetailAST#8:after < line.length()
processLeft#?,DetailAST#5:after < line.length()" shape=ellipse]
4 [label="visitToken#?,DetailAST#9:if ((PadOption.NOSPACE == getAbstractOption()) && Character.isWhitespace(line.charAt(after))) \{
    log(semi.getLineNo(), after, \"ws.followed\", \";\");
\} else if ((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) \{
    log(semi.getLineNo(), after, \"ws.notFollowed\", \";\");
\}
processLeft#?,DetailAST#6:if ((PadOption.NOSPACE == getAbstractOption()) && Character.isWhitespace(line.charAt(after))) \{
    log(ast.getLineNo(), after, \"ws.followed\", \"(\");
\} else if (((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) && (line.charAt(after) != ')')) \{
    log(ast.getLineNo(), after, \"ws.notFollowed\", \"(\");
\}" shape=ellipse]
5 [label="visitToken#?,DetailAST#9:(PadOption.NOSPACE == getAbstractOption())
processLeft#?,DetailAST#6:(PadOption.NOSPACE == getAbstractOption())" shape=ellipse]
6 [label="visitToken#?,DetailAST#10:Character.isWhitespace(line.charAt(after))
processLeft#?,DetailAST#7:Character.isWhitespace(line.charAt(after))" shape=ellipse]
7 [label="visitToken#?,DetailAST#10:\{
    log(semi.getLineNo(), after, \"ws.followed\", \";\");
\}
processLeft#?,DetailAST#7:\{
    log(ast.getLineNo(), after, \"ws.followed\", \"(\");
\}" shape=ellipse]
8 [label="visitToken#?,DetailAST#11:log(<unknown>,int,java.lang.String,java.lang.String)
processLeft#?,DetailAST#8:log(<unknown>,int,java.lang.String,java.lang.String)" shape=ellipse]
9 [label="visitToken#?,DetailAST#11:
processLeft#?,DetailAST#8:" shape=ellipse]
10 [label="visitToken#?,DetailAST#11:PlaceHold
processLeft#?,DetailAST#8:PlaceHold" shape=ellipse]
11 [label="visitToken#?,DetailAST#11:semi.getLineNo()
processLeft#?,DetailAST#8:ast.getLineNo()" shape=ellipse]
12 [label="visitToken#?,DetailAST#11:getLineNo()
processLeft#?,DetailAST#8:getLineNo()" shape=ellipse]
13 [label="visitToken#?,DetailAST#11:semi
processLeft#?,DetailAST#8:ast" shape=ellipse]
14 [label="visitToken#?,DetailAST#11:after
processLeft#?,DetailAST#8:after" shape=ellipse]
15 [label="visitToken#?,DetailAST#11:\"ws.followed\"
processLeft#?,DetailAST#8:\"ws.followed\"" shape=ellipse]
16 [label="visitToken#?,DetailAST#11:\";\"
processLeft#?,DetailAST#8:\"(\"" shape=ellipse]
17 [label="visitToken#?,DetailAST#12:
    if ((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) \{
        log(semi.getLineNo(), after, \"ws.notFollowed\", \";\");
    \}

processLeft#?,DetailAST#9:
    if (((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) && (line.charAt(after) != ')')) \{
        log(ast.getLineNo(), after, \"ws.notFollowed\", \"(\");
    \}
" shape=ellipse]
18 [label="visitToken#?,DetailAST#12:if ((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) \{
    log(semi.getLineNo(), after, \"ws.notFollowed\", \";\");
\}
processLeft#?,DetailAST#9:if (((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) && (line.charAt(after) != ')')) \{
    log(ast.getLineNo(), after, \"ws.notFollowed\", \"(\");
\}" shape=ellipse]
19 [label="visitToken#?,DetailAST#12:(PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))
processLeft#?,DetailAST#9:((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after)))) && (line.charAt(after) != ')')" shape=ellipse]
20 [label="visitToken#?,DetailAST#14:WS_NOT_FOLLOWED
processLeft#?,DetailAST#12:WS_NOT_FOLLOWED" shape=ellipse]
21 [label="visitToken#?,DetailAST#14:WS_NOT_FOLLOWED
processLeft#?,DetailAST#12:WS_NOT_FOLLOWED" shape=ellipse]
22 [label="visitToken#?,DetailAST#14:
processLeft#?,DetailAST#12:" shape=ellipse]
23 [label="visitToken#?,DetailAST#12:(PadOption.SPACE == getAbstractOption())
processLeft#?,DetailAST#9:((PadOption.SPACE == getAbstractOption()) && (!Character.isWhitespace(line.charAt(after))))" shape=ellipse]
24 [label="visitToken#?,DetailAST#12:PadOption.SPACE
processLeft#?,DetailAST#9:(PadOption.SPACE == getAbstractOption())" shape=ellipse]
25 [label="visitToken#?,DetailAST#12:getAbstractOption()" shape=ellipse]
26 [label="visitToken#?,DetailAST#12:getAbstractOption()
processLeft#?,DetailAST#9:getAbstractOption()" shape=ellipse]
27 [label="visitToken#?,DetailAST#12:
processLeft#?,DetailAST#9:" shape=ellipse]
28 [label="visitToken#?,DetailAST#12:PlaceHold
processLeft#?,DetailAST#9:PlaceHold" shape=ellipse]
29 [label="visitToken#?,DetailAST#13:(!Character.isWhitespace(line.charAt(after)))" shape=ellipse]
30 [label="visitToken#?,DetailAST#13:Character.isWhitespace(line.charAt(after))
processLeft#?,DetailAST#10:Character.isWhitespace(line.charAt(after))" shape=ellipse]
31 [label="visitToken#?,DetailAST#13:isWhitespace(char)
processLeft#?,DetailAST#10:isWhitespace(char)" shape=ellipse]
32 [label="visitToken#?,DetailAST#13:Character
processLeft#?,DetailAST#10:Character" shape=ellipse]
33 [label="visitToken#?,DetailAST#13:line.charAt(after)
processLeft#?,DetailAST#10:line.charAt(after)" shape=ellipse]
34 [label="visitToken#?,DetailAST#13:charAt(int)
processLeft#?,DetailAST#10:charAt(int)" shape=ellipse]
35 [label="visitToken#?,DetailAST#13:line
processLeft#?,DetailAST#10:line" shape=ellipse]
36 [label="visitToken#?,DetailAST#13:after
processLeft#?,DetailAST#10:after" shape=ellipse]
37 [label="visitToken#?,DetailAST#11:WS_FOLLOWED
processLeft#?,DetailAST#8:WS_FOLLOWED" shape=ellipse]
38 [label="visitToken#?,DetailAST#11:WS_FOLLOWED
processLeft#?,DetailAST#8:WS_FOLLOWED" shape=ellipse]
39 [label="visitToken#?,DetailAST#11:
processLeft#?,DetailAST#8:" shape=ellipse]
40 [label="visitToken#?,DetailAST#11:log
processLeft#?,DetailAST#8:log" shape=ellipse]
41 [label="processLeft#?,DetailAST#9:PadOption.SPACE" shape=ellipse]
42 [label="processLeft#?,DetailAST#9:getAbstractOption()" shape=ellipse]
43 [label="processLeft#?,DetailAST#10:(!Character.isWhitespace(line.charAt(after)))" shape=ellipse]
44 [label="processLeft#?,DetailAST#11:(line.charAt(after) != ')')" shape=ellipse]
45 [label="processLeft#?,DetailAST#11:line.charAt(after)" shape=ellipse]
46 [label="processLeft#?,DetailAST#11:line" shape=ellipse]
47 [label="processLeft#?,DetailAST#11:after" shape=ellipse]
48 [label="processLeft#?,DetailAST#11:')'" shape=ellipse]
49 [label="processLeft#?,DetailAST#11:charAt(int)" shape=ellipse]
0 -> 37 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 40 [label="AST:2"];
1 -> 9 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 11 [label="AST:2"];
1 -> 14 [label="AST:2"];
1 -> 15 [label="AST:2"];
1 -> 16 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:1"];
2 -> 26 [label="Control Dep:2"];
2 -> 27 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:2"];
2 -> 29 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:2"];
2 -> 31 [label="Control Dep:2"];
2 -> 32 [label="Control Dep:2"];
2 -> 33 [label="Control Dep:2"];
2 -> 34 [label="Control Dep:2"];
2 -> 35 [label="Control Dep:2"];
2 -> 36 [label="Control Dep:2"];
2 -> 37 [label="Control Dep:2"];
2 -> 41 [label="Control Dep:1"];
2 -> 42 [label="Control Dep:1"];
2 -> 43 [label="Control Dep:1"];
2 -> 44 [label="Control Dep:1"];
2 -> 45 [label="Control Dep:1"];
2 -> 46 [label="Control Dep:1"];
2 -> 47 [label="Control Dep:1"];
2 -> 48 [label="Control Dep:1"];
2 -> 49 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 5 [label="Control Dep:2"];
3 -> 6 [label="Control Dep:2"];
4 -> 2 [label="AST:2"];
4 -> 7 [label="AST:2"];
4 -> 17 [label="AST:2"];
7 -> 1 [label="AST:2"];
9 -> 10 [label="AST:2"];
11 -> 13 [label="AST:2"];
11 -> 12 [label="AST:2"];
17 -> 18 [label="AST:2"];
18 -> 19 [label="AST:2"];
19 -> 23 [label="AST:2"];
19 -> 29 [label="AST:1"];
19 -> 20 [label="Control Dep:2"];
19 -> 44 [label="AST:1"];
20 -> 21 [label="AST:2"];
21 -> 22 [label="AST:2"];
23 -> 24 [label="AST:2"];
23 -> 25 [label="AST:1"];
23 -> 43 [label="AST:1"];
24 -> 41 [label="AST:1"];
24 -> 42 [label="AST:1"];
25 -> 27 [label="AST:1"];
25 -> 26 [label="AST:1"];
27 -> 28 [label="AST:2"];
29 -> 30 [label="AST:1"];
30 -> 32 [label="AST:2"];
30 -> 31 [label="AST:2"];
30 -> 33 [label="AST:2"];
33 -> 35 [label="AST:2"];
33 -> 34 [label="AST:2"];
33 -> 36 [label="AST:2"];
37 -> 38 [label="AST:2"];
38 -> 39 [label="AST:2"];
42 -> 27 [label="AST:1"];
42 -> 26 [label="AST:1"];
43 -> 30 [label="AST:1"];
44 -> 45 [label="AST:1"];
44 -> 48 [label="AST:1"];
45 -> 46 [label="AST:1"];
45 -> 49 [label="AST:1"];
45 -> 47 [label="AST:1"];
}