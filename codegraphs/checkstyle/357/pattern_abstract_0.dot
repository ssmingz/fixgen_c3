digraph "Pattern" {
0 [label="##ActionPoint##
locationInParent:ACTION
nodeType:Delete
nodeType2:ActionNode
nodeType3:CtElementImpl
value:DELETE
value2:" shape=ellipse]
1 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:\"ws.followed\"
value2:String" shape=ellipse]
2 [label="locationInParent:CONDITION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:(PadOption.NOSPACE == getAbstractOption()) && Character.isWhitespace(line.charAt(after))
value2:(PadOption.PlaceHold == getAbstractOption()) && java.lang.Character.isWhitespace(String.charAt(int))" shape=ellipse]
3 [label="locationInParent:CONDITION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:after < line.length()
value2:int < String.length()" shape=ellipse]
4 [label="locationInParent:STATEMENT
nodeType:CtIfImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
5 [label="locationInParent:LEFT_OPERAND
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:(PadOption.NOSPACE == getAbstractOption())
value2:(PadOption.PlaceHold == getAbstractOption())" shape=ellipse]
6 [label="locationInParent:RIGHT_OPERAND
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:Character.isWhitespace(line.charAt(after))
value2:java.lang.Character.isWhitespace(String.charAt(int))" shape=ellipse]
7 [label="locationInParent:THEN
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value2:\{
    log(DetailAST.getLineNo(), int, String, String);
\}" shape=ellipse]
8 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value2:log(DetailAST.getLineNo(), int, String, String)" shape=ellipse]
9 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:log(<unknown>,int,java.lang.String,java.lang.String)
value2:log(<unknown>,int,java.lang.String,java.lang.String)" shape=ellipse]
10 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
11 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
12 [label="locationInParent:ARGUMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value2:DetailAST.getLineNo()" shape=ellipse]
13 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getLineNo()
value2:getLineNo()" shape=ellipse]
14 [label="locationInParent:TARGET
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value2:DetailAST" shape=ellipse]
15 [label="locationInParent:ARGUMENT
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:after
value2:int" shape=ellipse]
16 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value2:String" shape=ellipse]
17 [label="locationInParent:ELSE
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
18 [label="locationInParent:STATEMENT
nodeType:CtIfImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
19 [label="locationInParent:CONDITION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl" shape=ellipse]
20 [label="locationInParent:ARGUMENT
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:WS_NOT_FOLLOWED
value2:WS_NOT_FOLLOWED" shape=ellipse]
21 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:WS_NOT_FOLLOWED
value2:WS_NOT_FOLLOWED" shape=ellipse]
22 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
23 [label="locationInParent:LEFT_OPERAND
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl" shape=ellipse]
24 [label="locationInParent:LEFT_OPERAND" shape=ellipse]
25 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getAbstractOption()
value2:getAbstractOption()" shape=ellipse]
26 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
27 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
28 [label="locationInParent:EXPRESSION
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:Character.isWhitespace(line.charAt(after))
value2:java.lang.Character.isWhitespace(String.charAt(int))" shape=ellipse]
29 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:isWhitespace(char)
value2:isWhitespace(char)" shape=ellipse]
30 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:Character
value2:java.lang.Character" shape=ellipse]
31 [label="locationInParent:ARGUMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:line.charAt(after)
value2:String.charAt(int)" shape=ellipse]
32 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:charAt(int)
value2:charAt(int)" shape=ellipse]
33 [label="locationInParent:TARGET
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:line
value2:String" shape=ellipse]
34 [label="locationInParent:ARGUMENT
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:after
value2:int" shape=ellipse]
35 [label="locationInParent:ARGUMENT
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:WS_FOLLOWED
value2:WS_FOLLOWED" shape=ellipse]
36 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:WS_FOLLOWED
value2:WS_FOLLOWED" shape=ellipse]
37 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
38 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:String
value2:java.lang.String" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 38 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:2"];
2 -> 26 [label="Control Dep:2"];
2 -> 27 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:2"];
2 -> 29 [label="Control Dep:2"];
2 -> 30 [label="Control Dep:2"];
2 -> 31 [label="Control Dep:2"];
2 -> 32 [label="Control Dep:2"];
2 -> 33 [label="Control Dep:2"];
2 -> 34 [label="Control Dep:2"];
2 -> 35 [label="Control Dep:2"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 5 [label="Control Dep:2"];
3 -> 6 [label="Control Dep:2"];
4 -> 2 [label="AST:2"];
4 -> 7 [label="AST:2"];
4 -> 17 [label="AST:2"];
7 -> 8 [label="AST:2"];
8 -> 1 [label="AST:2"];
8 -> 10 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 12 [label="AST:2"];
8 -> 15 [label="AST:2"];
8 -> 16 [label="AST:2"];
10 -> 11 [label="AST:2"];
12 -> 14 [label="AST:2"];
12 -> 13 [label="AST:2"];
17 -> 18 [label="AST:2"];
18 -> 19 [label="AST:2"];
19 -> 23 [label="AST:2"];
19 -> 20 [label="Control Dep:2"];
20 -> 21 [label="AST:2"];
21 -> 22 [label="AST:2"];
23 -> 24 [label="AST:2"];
26 -> 27 [label="AST:2"];
28 -> 30 [label="AST:2"];
28 -> 29 [label="AST:2"];
28 -> 31 [label="AST:2"];
31 -> 33 [label="AST:2"];
31 -> 32 [label="AST:2"];
31 -> 34 [label="AST:2"];
35 -> 36 [label="AST:2"];
36 -> 37 [label="AST:2"];
}