digraph "Pattern" {
0 [label="checkTag#?,int,List,String,Pattern,String#13:INSERT
checkTag#?,int,String[],String,Pattern,Pattern,String#16:INSERT" shape=ellipse]
1 [label="checkTag#?,int,List,String,Pattern,String#13:log(lineNo, \"type.tagFormat\", \"@\" + tagName, format)
checkTag#?,int,String[],String,Pattern,Pattern,String#16:log((lineNo + i) - comment.length, \"type.tagFormat\", tag, format)" shape=ellipse]
2 [label="checkTag#?,int,List,String,Pattern,String#12:!formatPattern.matcher(tag.getArg1()).find()" shape=ellipse]
3 [label="checkTag#?,int,List,String,Pattern,String#10:tag.getTagName().equals(tagName)
checkTag#?,int,String[],String,Pattern,Pattern,String#18:logTag((lineNo + i) - comment.length, tag, content)" shape=ellipse]
4 [label="checkTag#?,int,List,String,Pattern,String#12:if (!formatPattern.matcher(tag.getArg1()).find()) \{
    log(lineNo, \"type.tagFormat\", \"@\" + tagName, format);
\}" shape=ellipse]
5 [label="checkTag#?,int,List,String,Pattern,String#12:formatPattern.matcher(tag.getArg1()).find()" shape=ellipse]
6 [label="checkTag#?,int,List,String,Pattern,String#12:\{
    log(lineNo, \"type.tagFormat\", \"@\" + tagName, format);
\}
checkTag#?,int,String[],String,Pattern,Pattern,String#15:\{
    log((lineNo + i) - comment.length, \"type.tagFormat\", tag, format);
\}" shape=ellipse]
7 [label="checkTag#?,int,List,String,Pattern,String#13:log(int,java.lang.String,java.lang.String,java.lang.String)
checkTag#?,int,String[],String,Pattern,Pattern,String#16:log(int,java.lang.String,java.lang.String,java.lang.String)" shape=ellipse]
8 [label="checkTag#?,int,List,String,Pattern,String#13:
checkTag#?,int,String[],String,Pattern,Pattern,String#16:" shape=ellipse]
9 [label="checkTag#?,int,List,String,Pattern,String#13:PlaceHold
checkTag#?,int,String[],String,Pattern,Pattern,String#16:PlaceHold" shape=ellipse]
10 [label="checkTag#?,int,List,String,Pattern,String#13:lineNo
checkTag#?,int,String[],String,Pattern,Pattern,String#16:format" shape=ellipse]
11 [label="checkTag#?,int,List,String,Pattern,String#13:\"type.tagFormat\"
checkTag#?,int,String[],String,Pattern,Pattern,String#16:\"type.tagFormat\"" shape=ellipse]
12 [label="checkTag#?,int,List,String,Pattern,String#13:\"@\" + tagName
checkTag#?,int,String[],String,Pattern,Pattern,String#16:(lineNo + i) - comment.length" shape=ellipse]
13 [label="checkTag#?,int,List,String,Pattern,String#13:\"@\"
checkTag#?,int,String[],String,Pattern,Pattern,String#16:comment.length" shape=ellipse]
14 [label="checkTag#?,int,List,String,Pattern,String#13:tagName" shape=ellipse]
15 [label="checkTag#?,int,List,String,Pattern,String#13:format
checkTag#?,int,String[],String,Pattern,Pattern,String#16:tag" shape=ellipse]
16 [label="checkTag#?,int,List,String,Pattern,String#13:TAG_FORMAT
checkTag#?,int,String[],String,Pattern,Pattern,String#16:TAG_FORMAT" shape=ellipse]
17 [label="checkTag#?,int,List,String,Pattern,String#13:TAG_FORMAT
checkTag#?,int,String[],String,Pattern,Pattern,String#16:TAG_FORMAT" shape=ellipse]
18 [label="checkTag#?,int,List,String,Pattern,String#13:
checkTag#?,int,String[],String,Pattern,Pattern,String#16:" shape=ellipse]
19 [label="checkTag#?,int,List,String,Pattern,String#13:log
checkTag#?,int,String[],String,Pattern,Pattern,String#16:log" shape=ellipse]
20 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#15:(formatRE != null) && (!formatRE.matcher(content).find())" shape=ellipse]
21 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#11:matcher.find()" shape=ellipse]
22 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#15:if ((formatRE != null) && (!formatRE.matcher(content).find())) \{
    log((lineNo + i) - comment.length, \"type.tagFormat\", tag, format);
\} else \{
    logTag((lineNo + i) - comment.length, tag, content);
\}" shape=ellipse]
23 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#15:(formatRE != null)" shape=ellipse]
24 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:(lineNo + i) - comment.length" shape=ellipse]
25 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#15:(!formatRE.matcher(content).find())" shape=ellipse]
26 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#16:(lineNo + i)" shape=ellipse]
27 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:i" shape=ellipse]
28 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#16:lineNo" shape=ellipse]
29 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#16:i" shape=ellipse]
30 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:lineNo" shape=ellipse]
31 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:content" shape=ellipse]
32 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#17:\{
    logTag((lineNo + i) - comment.length, tag, content);
\}" shape=ellipse]
33 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:comment.length" shape=ellipse]
34 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:tag" shape=ellipse]
35 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:" shape=ellipse]
36 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:PlaceHold" shape=ellipse]
37 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:(lineNo + i)" shape=ellipse]
38 [label="checkTag#?,int,String[],String,Pattern,Pattern,String#18:logTag(int,java.lang.String,java.lang.String)" shape=ellipse]
0 -> 16 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 19 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 10 [label="AST:2"];
1 -> 11 [label="AST:2"];
1 -> 12 [label="AST:2"];
1 -> 15 [label="AST:2"];
2 -> 1 [label="Control Dep:1"];
2 -> 5 [label="AST:1"];
2 -> 6 [label="Control Dep:1"];
2 -> 7 [label="Control Dep:1"];
2 -> 8 [label="Control Dep:1"];
2 -> 9 [label="Control Dep:1"];
2 -> 10 [label="Control Dep:1"];
2 -> 11 [label="Control Dep:1"];
2 -> 12 [label="Control Dep:1"];
2 -> 13 [label="Control Dep:1"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:1"];
2 -> 16 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:1"];
3 -> 4 [label="Control Dep:1"];
3 -> 5 [label="Control Dep:1"];
3 -> 24 [label="AST:1"];
3 -> 31 [label="AST:1"];
3 -> 34 [label="AST:1"];
3 -> 35 [label="AST:1"];
3 -> 38 [label="AST:1"];
4 -> 2 [label="AST:1"];
4 -> 6 [label="AST:1"];
6 -> 1 [label="AST:2"];
8 -> 9 [label="AST:2"];
12 -> 13 [label="AST:2"];
12 -> 14 [label="AST:1"];
12 -> 26 [label="AST:1"];
16 -> 17 [label="AST:2"];
17 -> 18 [label="AST:2"];
20 -> 23 [label="AST:1"];
20 -> 25 [label="AST:1"];
20 -> 6 [label="Control Dep:1"];
20 -> 1 [label="Control Dep:1"];
20 -> 7 [label="Control Dep:1"];
20 -> 8 [label="Control Dep:1"];
20 -> 9 [label="Control Dep:1"];
20 -> 12 [label="Control Dep:1"];
20 -> 26 [label="Control Dep:1"];
20 -> 28 [label="Control Dep:1"];
20 -> 29 [label="Control Dep:1"];
20 -> 13 [label="Control Dep:1"];
20 -> 11 [label="Control Dep:1"];
20 -> 15 [label="Control Dep:1"];
20 -> 10 [label="Control Dep:1"];
20 -> 32 [label="Control Dep:1"];
20 -> 3 [label="Control Dep:1"];
20 -> 38 [label="Control Dep:1"];
20 -> 35 [label="Control Dep:1"];
20 -> 36 [label="Control Dep:1"];
20 -> 24 [label="Control Dep:1"];
20 -> 37 [label="Control Dep:1"];
20 -> 30 [label="Control Dep:1"];
20 -> 27 [label="Control Dep:1"];
20 -> 33 [label="Control Dep:1"];
20 -> 34 [label="Control Dep:1"];
20 -> 31 [label="Control Dep:1"];
20 -> 16 [label="Control Dep:1"];
21 -> 20 [label="Control Dep:1"];
21 -> 22 [label="Control Dep:1"];
21 -> 23 [label="Control Dep:1"];
21 -> 25 [label="Control Dep:1"];
22 -> 20 [label="AST:1"];
22 -> 6 [label="AST:1"];
22 -> 32 [label="AST:1"];
24 -> 37 [label="AST:1"];
24 -> 33 [label="AST:1"];
26 -> 28 [label="AST:1"];
26 -> 29 [label="AST:1"];
32 -> 3 [label="AST:1"];
35 -> 36 [label="AST:1"];
37 -> 27 [label="AST:1"];
37 -> 30 [label="AST:1"];
}