digraph "Pattern" {
0 [label="checkTypeParamTag#?,int,List,String#7:INSERT
checkUnusedTypeParamTags#?,List,List#7:INSERT" shape=ellipse]
1 [label="checkTypeParamTag#?,int,List,String#7:tag.getTag().equals(\"param\")
checkUnusedTypeParamTags#?,List,List#7:tag.getTag().equals(\"param\")" shape=ellipse]
2 [label="checkTypeParamTag#?,int,List,String#5:i >= 0
checkUnusedTypeParamTags#?,List,List#5:i >= 0" shape=ellipse]
3 [label="checkTypeParamTag#?,int,List,String#5:for (int i = aTags.size() - 1; i >= 0; i--) \{
    final JavadocTag tag = aTags.get(i);
    if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
        found = true;
    \}
\}
checkUnusedTypeParamTags#?,List,List#5:for (int i = aTags.size() - 1; i >= 0; i--) \{
    final JavadocTag tag = aTags.get(i);
    if (tag.getTag().equals(\"param\")) \{
        if (tag.getArg1() != null) \{
            final Matcher matcher = pattern.matcher(tag.getArg1());
            String typeParamName = null;
            if (matcher.matches()) \{
                typeParamName = matcher.group(1).trim();
                if (!aTypeParamNames.contains(typeParamName)) \{
                    log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
                \}
            \} else \{
                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
            \}
        \} else \{
            log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
        \}
    \}
\}" shape=ellipse]
4 [label="checkTypeParamTag#?,int,List,String#5:boolean
checkUnusedTypeParamTags#?,List,List#5:boolean" shape=ellipse]
5 [label="checkTypeParamTag#?,int,List,String#5:i
checkUnusedTypeParamTags#?,List,List#5:i" shape=ellipse]
6 [label="checkTypeParamTag#?,int,List,String#5:0
checkUnusedTypeParamTags#?,List,List#5:0" shape=ellipse]
7 [label="checkTypeParamTag#?,int,List,String#5:\{
    final JavadocTag tag = aTags.get(i);
    if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
        found = true;
    \}
\}
checkUnusedTypeParamTags#?,List,List#5:\{
    final JavadocTag tag = aTags.get(i);
    if (tag.getTag().equals(\"param\")) \{
        if (tag.getArg1() != null) \{
            final Matcher matcher = pattern.matcher(tag.getArg1());
            String typeParamName = null;
            if (matcher.matches()) \{
                typeParamName = matcher.group(1).trim();
                if (!aTypeParamNames.contains(typeParamName)) \{
                    log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
                \}
            \} else \{
                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
            \}
        \} else \{
            log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
        \}
    \}
\}" shape=ellipse]
8 [label="checkTypeParamTag#?,int,List,String#6:final JavadocTag tag = aTags.get(i)
checkUnusedTypeParamTags#?,List,List#6:final JavadocTag tag = aTags.get(i)" shape=ellipse]
9 [label="checkTypeParamTag#?,int,List,String#6:aTags.get(i)
checkUnusedTypeParamTags#?,List,List#6:aTags.get(i)" shape=ellipse]
10 [label="checkTypeParamTag#?,int,List,String#6:get(int)
checkUnusedTypeParamTags#?,List,List#6:get(int)" shape=ellipse]
11 [label="checkTypeParamTag#?,int,List,String#6:aTags
checkUnusedTypeParamTags#?,List,List#6:aTags" shape=ellipse]
12 [label="checkTypeParamTag#?,int,List,String#6:i
checkUnusedTypeParamTags#?,List,List#6:i" shape=ellipse]
13 [label="checkTypeParamTag#?,int,List,String#7:if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
    found = true;
\}" shape=ellipse]
14 [label="checkTypeParamTag#?,int,List,String#7:(tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)" shape=ellipse]
15 [label="checkTypeParamTag#?,int,List,String#7:(tag.getTag().equals(\"param\") && (tag.getArg1() != null))" shape=ellipse]
16 [label="checkTypeParamTag#?,int,List,String#7:equals(java.lang.String)
checkUnusedTypeParamTags#?,List,List#7:equals(java.lang.String)" shape=ellipse]
17 [label="checkTypeParamTag#?,int,List,String#7:tag.getTag()
checkUnusedTypeParamTags#?,List,List#7:tag.getTag()" shape=ellipse]
18 [label="checkTypeParamTag#?,int,List,String#7:getTag()
checkUnusedTypeParamTags#?,List,List#7:getTag()" shape=ellipse]
19 [label="checkTypeParamTag#?,int,List,String#7:tag
checkUnusedTypeParamTags#?,List,List#7:tag" shape=ellipse]
20 [label="checkTypeParamTag#?,int,List,String#7:\"param\"
checkUnusedTypeParamTags#?,List,List#7:\"param\"" shape=ellipse]
21 [label="checkTypeParamTag#?,int,List,String#7:(tag.getArg1() != null)" shape=ellipse]
22 [label="checkTypeParamTag#?,int,List,String#7:tag.getArg1()" shape=ellipse]
23 [label="checkTypeParamTag#?,int,List,String#7:getArg1()" shape=ellipse]
24 [label="checkTypeParamTag#?,int,List,String#7:tag" shape=ellipse]
25 [label="checkTypeParamTag#?,int,List,String#7:null" shape=ellipse]
26 [label="checkTypeParamTag#?,int,List,String#8:(tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)" shape=ellipse]
27 [label="checkTypeParamTag#?,int,List,String#8:tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\")" shape=ellipse]
28 [label="checkTypeParamTag#?,int,List,String#8:indexOf(java.lang.String)" shape=ellipse]
29 [label="checkTypeParamTag#?,int,List,String#8:tag.getArg1()" shape=ellipse]
30 [label="checkTypeParamTag#?,int,List,String#8:getArg1()" shape=ellipse]
31 [label="checkTypeParamTag#?,int,List,String#8:tag" shape=ellipse]
32 [label="checkTypeParamTag#?,int,List,String#8:(\"<\" + aTypeParamName) + \">\"" shape=ellipse]
33 [label="checkTypeParamTag#?,int,List,String#8:(\"<\" + aTypeParamName)" shape=ellipse]
34 [label="checkTypeParamTag#?,int,List,String#8:\"<\"" shape=ellipse]
35 [label="checkTypeParamTag#?,int,List,String#8:aTypeParamName" shape=ellipse]
36 [label="checkTypeParamTag#?,int,List,String#8:\">\"" shape=ellipse]
37 [label="checkTypeParamTag#?,int,List,String#8:0" shape=ellipse]
38 [label="checkTypeParamTag#?,int,List,String#7:\"param\"
checkUnusedTypeParamTags#?,List,List#7:\"param\"" shape=ellipse]
39 [label="checkTypeParamTag#?,int,List,String#7:String
checkUnusedTypeParamTags#?,List,List#7:String" shape=ellipse]
40 [label="checkTypeParamTag#?,int,List,String#7:java.lang
checkUnusedTypeParamTags#?,List,List#7:java.lang" shape=ellipse]
41 [label="checkTypeParamTag#?,int,List,String#7:equals
checkUnusedTypeParamTags#?,List,List#7:equals" shape=ellipse]
42 [label="checkUnusedTypeParamTags#?,List,List#8:tag.getArg1()" shape=ellipse]
43 [label="checkUnusedTypeParamTags#?,List,List#7:if (tag.getTag().equals(\"param\")) \{
    if (tag.getArg1() != null) \{
        final Matcher matcher = pattern.matcher(tag.getArg1());
        String typeParamName = null;
        if (matcher.matches()) \{
            typeParamName = matcher.group(1).trim();
            if (!aTypeParamNames.contains(typeParamName)) \{
                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
            \}
        \} else \{
            log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
        \}
    \} else \{
        log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
    \}
\}" shape=ellipse]
44 [label="checkUnusedTypeParamTags#?,List,List#7:\{
    if (tag.getArg1() != null) \{
        final Matcher matcher = pattern.matcher(tag.getArg1());
        String typeParamName = null;
        if (matcher.matches()) \{
            typeParamName = matcher.group(1).trim();
            if (!aTypeParamNames.contains(typeParamName)) \{
                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
            \}
        \} else \{
            log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
        \}
    \} else \{
        log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
    \}
\}" shape=ellipse]
45 [label="checkUnusedTypeParamTags#?,List,List#11:matcher" shape=ellipse]
46 [label="checkUnusedTypeParamTags#?,List,List#25:tag" shape=ellipse]
47 [label="checkUnusedTypeParamTags#?,List,List#25:tag.getColumnNo()" shape=ellipse]
48 [label="checkUnusedTypeParamTags#?,List,List#11:if (matcher.matches()) \{
    typeParamName = matcher.group(1).trim();
    if (!aTypeParamNames.contains(typeParamName)) \{
        log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
    \}
\} else \{
    log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
\}" shape=ellipse]
49 [label="checkUnusedTypeParamTags#?,List,List#25:\"javadoc.unusedTagGeneral\"" shape=ellipse]
50 [label="checkUnusedTypeParamTags#?,List,List#8:if (tag.getArg1() != null) \{
    final Matcher matcher = pattern.matcher(tag.getArg1());
    String typeParamName = null;
    if (matcher.matches()) \{
        typeParamName = matcher.group(1).trim();
        if (!aTypeParamNames.contains(typeParamName)) \{
            log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
        \}
    \} else \{
        log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
    \}
\} else \{
    log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
\}" shape=ellipse]
51 [label="checkUnusedTypeParamTags#?,List,List#8:tag.getArg1() != null" shape=ellipse]
52 [label="checkUnusedTypeParamTags#?,List,List#8:null" shape=ellipse]
53 [label="checkUnusedTypeParamTags#?,List,List#8:\{
    final Matcher matcher = pattern.matcher(tag.getArg1());
    String typeParamName = null;
    if (matcher.matches()) \{
        typeParamName = matcher.group(1).trim();
        if (!aTypeParamNames.contains(typeParamName)) \{
            log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\", \"@param\", (\"<\" + typeParamName) + \">\");
        \}
    \} else \{
        log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
    \}
\}" shape=ellipse]
54 [label="checkUnusedTypeParamTags#?,List,List#8:tag" shape=ellipse]
55 [label="checkUnusedTypeParamTags#?,List,List#9:pattern.matcher(tag.getArg1())" shape=ellipse]
56 [label="checkUnusedTypeParamTags#?,List,List#24:\{
    log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\");
\}" shape=ellipse]
57 [label="checkUnusedTypeParamTags#?,List,List#25:tag" shape=ellipse]
58 [label="checkUnusedTypeParamTags#?,List,List#25:log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTagGeneral\")" shape=ellipse]
59 [label="checkUnusedTypeParamTags#?,List,List#11:matcher.matches()" shape=ellipse]
60 [label="checkUnusedTypeParamTags#?,List,List#9:pattern" shape=ellipse]
61 [label="checkUnusedTypeParamTags#?,List,List#10:null" shape=ellipse]
62 [label="checkUnusedTypeParamTags#?,List,List#25:PlaceHold" shape=ellipse]
63 [label="checkUnusedTypeParamTags#?,List,List#9:tag.getArg1()" shape=ellipse]
64 [label="checkUnusedTypeParamTags#?,List,List#25:tag.getLineNo()" shape=ellipse]
65 [label="checkUnusedTypeParamTags#?,List,List#25:" shape=ellipse]
66 [label="checkUnusedTypeParamTags#?,List,List#9:tag" shape=ellipse]
67 [label="checkUnusedTypeParamTags#?,List,List#25:log(<unknown>,<unknown>,java.lang.String)" shape=ellipse]
68 [label="checkUnusedTypeParamTags#?,List,List#25:getLineNo()" shape=ellipse]
69 [label="checkUnusedTypeParamTags#?,List,List#8:tag" shape=ellipse]
70 [label="checkUnusedTypeParamTags#?,List,List#10:String typeParamName = null" shape=ellipse]
71 [label="checkUnusedTypeParamTags#?,List,List#8:JavadocTag" shape=ellipse]
72 [label="checkUnusedTypeParamTags#?,List,List#6:tag" shape=ellipse]
73 [label="checkUnusedTypeParamTags#?,List,List#25:getColumnNo()" shape=ellipse]
74 [label="checkUnusedTypeParamTags#?,List,List#11:matches()" shape=ellipse]
75 [label="checkUnusedTypeParamTags#?,List,List#9:final Matcher matcher = pattern.matcher(tag.getArg1())" shape=ellipse]
76 [label="checkUnusedTypeParamTags#?,List,List#9:matcher()" shape=ellipse]
77 [label="checkUnusedTypeParamTags#?,List,List#9:getArg1()" shape=ellipse]
78 [label="checkUnusedTypeParamTags#?,List,List#8:getArg1()" shape=ellipse]
0 -> 38 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 41 [label="AST:2"];
1 -> 17 [label="AST:2"];
1 -> 16 [label="AST:2"];
1 -> 20 [label="AST:2"];
1 -> 42 [label="Control Dep:1"];
1 -> 44 [label="Control Dep:1"];
1 -> 50 [label="Control Dep:1"];
1 -> 51 [label="Control Dep:1"];
1 -> 52 [label="Control Dep:1"];
1 -> 54 [label="Control Dep:1"];
1 -> 78 [label="Control Dep:1"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:1"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:1"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:1"];
2 -> 22 [label="Control Dep:1"];
2 -> 23 [label="Control Dep:1"];
2 -> 24 [label="Control Dep:1"];
2 -> 25 [label="Control Dep:1"];
2 -> 26 [label="Control Dep:1"];
2 -> 27 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
2 -> 29 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:1"];
2 -> 31 [label="Control Dep:1"];
2 -> 32 [label="Control Dep:1"];
2 -> 33 [label="Control Dep:1"];
2 -> 34 [label="Control Dep:1"];
2 -> 35 [label="Control Dep:1"];
2 -> 36 [label="Control Dep:1"];
2 -> 37 [label="Control Dep:1"];
2 -> 38 [label="Control Dep:2"];
2 -> 43 [label="Control Dep:1"];
3 -> 2 [label="AST:2"];
3 -> 7 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 13 [label="AST:1"];
7 -> 43 [label="AST:1"];
8 -> 9 [label="AST:2"];
8 -> 72 [label="AST:1"];
9 -> 11 [label="AST:2"];
9 -> 10 [label="AST:2"];
9 -> 12 [label="AST:2"];
11 -> 72 [label="Data Dep:1"];
12 -> 72 [label="Data Dep:1"];
13 -> 14 [label="AST:1"];
14 -> 15 [label="AST:1"];
14 -> 26 [label="AST:1"];
15 -> 1 [label="AST:1"];
15 -> 21 [label="AST:1"];
17 -> 19 [label="AST:2"];
17 -> 18 [label="AST:2"];
21 -> 22 [label="AST:1"];
21 -> 25 [label="AST:1"];
22 -> 24 [label="AST:1"];
22 -> 23 [label="AST:1"];
26 -> 27 [label="AST:1"];
26 -> 37 [label="AST:1"];
27 -> 29 [label="AST:1"];
27 -> 28 [label="AST:1"];
27 -> 32 [label="AST:1"];
29 -> 31 [label="AST:1"];
29 -> 30 [label="AST:1"];
32 -> 33 [label="AST:1"];
32 -> 36 [label="AST:1"];
33 -> 34 [label="AST:1"];
33 -> 35 [label="AST:1"];
38 -> 39 [label="AST:2"];
39 -> 40 [label="AST:2"];
42 -> 54 [label="AST:1"];
42 -> 78 [label="AST:1"];
43 -> 1 [label="AST:1"];
43 -> 44 [label="AST:1"];
44 -> 50 [label="AST:1"];
47 -> 57 [label="AST:1"];
47 -> 73 [label="AST:1"];
48 -> 59 [label="AST:1"];
50 -> 51 [label="AST:1"];
50 -> 53 [label="AST:1"];
50 -> 56 [label="AST:1"];
51 -> 42 [label="AST:1"];
51 -> 45 [label="Control Dep:1"];
51 -> 46 [label="Control Dep:1"];
51 -> 47 [label="Control Dep:1"];
51 -> 48 [label="Control Dep:1"];
51 -> 49 [label="Control Dep:1"];
51 -> 52 [label="AST:1"];
51 -> 53 [label="Control Dep:1"];
51 -> 75 [label="Control Dep:1"];
51 -> 55 [label="Control Dep:1"];
51 -> 76 [label="Control Dep:1"];
51 -> 60 [label="Control Dep:1"];
51 -> 63 [label="Control Dep:1"];
51 -> 77 [label="Control Dep:1"];
51 -> 66 [label="Control Dep:1"];
51 -> 70 [label="Control Dep:1"];
51 -> 61 [label="Control Dep:1"];
51 -> 59 [label="Control Dep:1"];
51 -> 74 [label="Control Dep:1"];
51 -> 56 [label="Control Dep:1"];
51 -> 58 [label="Control Dep:1"];
51 -> 67 [label="Control Dep:1"];
51 -> 65 [label="Control Dep:1"];
51 -> 62 [label="Control Dep:1"];
51 -> 64 [label="Control Dep:1"];
51 -> 68 [label="Control Dep:1"];
51 -> 73 [label="Control Dep:1"];
51 -> 57 [label="Control Dep:1"];
53 -> 48 [label="AST:1"];
53 -> 75 [label="AST:1"];
53 -> 70 [label="AST:1"];
54 -> 69 [label="AST:1"];
55 -> 60 [label="AST:1"];
55 -> 76 [label="AST:1"];
55 -> 63 [label="AST:1"];
56 -> 58 [label="AST:1"];
58 -> 47 [label="AST:1"];
58 -> 49 [label="AST:1"];
58 -> 65 [label="AST:1"];
58 -> 67 [label="AST:1"];
58 -> 64 [label="AST:1"];
59 -> 45 [label="AST:1"];
59 -> 74 [label="AST:1"];
63 -> 66 [label="AST:1"];
63 -> 77 [label="AST:1"];
64 -> 46 [label="AST:1"];
64 -> 68 [label="AST:1"];
65 -> 62 [label="AST:1"];
70 -> 61 [label="AST:1"];
72 -> 46 [label="Define Use:1"];
72 -> 54 [label="Define Use:1"];
72 -> 57 [label="Define Use:1"];
72 -> 66 [label="Define Use:1"];
72 -> 19 [label="Define Use:1"];
75 -> 55 [label="AST:1"];
78 -> 71 [label="AST:1"];
}