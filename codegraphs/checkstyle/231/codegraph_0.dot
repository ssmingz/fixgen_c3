digraph "checkTypeParamTag#?,int,List,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@checkTypeParamTag" shape=ellipse]
2 [label="3:CtParameterImpl@final int aLineNo" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
4 [label="3:CtParameterImpl@final List<JavadocTag> aTags" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@List<JavadocTag>" shape=ellipse]
6 [label="3:CtParameterImpl@final String aTypeParamName" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
9 [label="4:CtLiteralImpl@false" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
11 [label="4:CtVirtualElement@found" shape=ellipse]
12 [label="4:CtLocalVariableImpl@boolean found = false" shape=ellipse]
13 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
14 [label="5:CtExecutableReferenceImpl@size()" shape=ellipse]
15 [label="5:CtTypeReferenceImpl@List<JavadocTag>" shape=ellipse]
16 [label="5:CtVirtualElement@size" shape=ellipse]
17 [label="5:CtVariableReadImpl@aTags" shape=ellipse]
18 [label="5:CtParameterReferenceImpl@aTags" shape=ellipse]
19 [label="5:CtInvocationImpl@aTags.size()" shape=ellipse]
20 [label="5:CtLiteralImpl@1" shape=ellipse]
21 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
22 [label="5:CtBinaryOperatorImpl@aTags.size() - 1" shape=ellipse]
23 [label="5:CtVirtualElement@i" shape=ellipse]
24 [label="5:CtLocalVariableImpl@int i = aTags.size() - 1" shape=ellipse]
25 [label="5:CtVariableReadImpl@i" shape=ellipse]
26 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
27 [label="5:CtLiteralImpl@0" shape=ellipse]
28 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
29 [label="5:CtBinaryOperatorImpl@i >= 0" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@boolean" shape=ellipse]
31 [label="5:CtVariableWriteImpl@i" shape=ellipse]
32 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
33 [label="5:CtUnaryOperatorImpl@i--" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
35 [label="6:CtTypeReferenceImpl@JavadocTag" shape=ellipse]
36 [label="6:CtPackageReferenceImpl@" shape=ellipse]
37 [label="6:CtExecutableReferenceImpl@get(int)" shape=ellipse]
38 [label="6:CtTypeReferenceImpl@List<JavadocTag>" shape=ellipse]
39 [label="6:CtTypeReferenceImpl@JavadocTag" shape=ellipse]
40 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
41 [label="6:CtVirtualElement@get" shape=ellipse]
42 [label="6:CtVariableReadImpl@aTags" shape=ellipse]
43 [label="6:CtParameterReferenceImpl@aTags" shape=ellipse]
44 [label="6:CtVariableReadImpl@i" shape=ellipse]
45 [label="6:CtLocalVariableReferenceImpl@i" shape=ellipse]
46 [label="6:CtInvocationImpl@aTags.get(i)" shape=ellipse]
47 [label="6:CtVirtualElement@tag" shape=ellipse]
48 [label="6:CtLocalVariableImpl@final JavadocTag tag = aTags.get(i)" shape=ellipse]
49 [label="7:CtExecutableReferenceImpl@equals(java.lang.String)" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
51 [label="7:CtVirtualElement@equals" shape=ellipse]
52 [label="7:CtExecutableReferenceImpl@getTag()" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@JavadocTag" shape=ellipse]
54 [label="7:CtVirtualElement@getTag" shape=ellipse]
55 [label="7:CtVariableReadImpl@tag" shape=ellipse]
56 [label="7:CtLocalVariableReferenceImpl@tag" shape=ellipse]
57 [label="7:CtInvocationImpl@tag.getTag()" shape=ellipse]
58 [label="7:CtLiteralImpl@\"param\"" shape=ellipse]
59 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
60 [label="7:CtInvocationImpl@tag.getTag().equals(\"param\")" shape=ellipse]
61 [label="7:CtExecutableReferenceImpl@getArg1()" shape=ellipse]
62 [label="7:CtTypeReferenceImpl@JavadocTag" shape=ellipse]
63 [label="7:CtVirtualElement@getArg1" shape=ellipse]
64 [label="7:CtVariableReadImpl@tag" shape=ellipse]
65 [label="7:CtLocalVariableReferenceImpl@tag" shape=ellipse]
66 [label="7:CtInvocationImpl@tag.getArg1()" shape=ellipse]
67 [label="7:CtLiteralImpl@null" shape=ellipse]
68 [label="7:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
69 [label="7:CtBinaryOperatorImpl@(tag.getArg1() != null)" shape=ellipse]
70 [label="7:CtBinaryOperatorImpl@(tag.getTag().equals(\"param\") && (tag.getArg1() != null))" shape=ellipse]
71 [label="8:CtExecutableReferenceImpl@indexOf(java.lang.String)" shape=ellipse]
72 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
73 [label="8:CtVirtualElement@indexOf" shape=ellipse]
74 [label="8:CtExecutableReferenceImpl@getArg1()" shape=ellipse]
75 [label="8:CtTypeReferenceImpl@JavadocTag" shape=ellipse]
76 [label="8:CtVirtualElement@getArg1" shape=ellipse]
77 [label="8:CtVariableReadImpl@tag" shape=ellipse]
78 [label="8:CtLocalVariableReferenceImpl@tag" shape=ellipse]
79 [label="8:CtInvocationImpl@tag.getArg1()" shape=ellipse]
80 [label="8:CtLiteralImpl@\"<\"" shape=ellipse]
81 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
82 [label="8:CtVariableReadImpl@aTypeParamName" shape=ellipse]
83 [label="8:CtParameterReferenceImpl@aTypeParamName" shape=ellipse]
84 [label="8:CtBinaryOperatorImpl@(\"<\" + aTypeParamName)" shape=ellipse]
85 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
86 [label="8:CtLiteralImpl@\">\"" shape=ellipse]
87 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
88 [label="8:CtBinaryOperatorImpl@(\"<\" + aTypeParamName) + \">\"" shape=ellipse]
89 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
90 [label="8:CtInvocationImpl@tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\")" shape=ellipse]
91 [label="8:CtLiteralImpl@0" shape=ellipse]
92 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
93 [label="8:CtBinaryOperatorImpl@(tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)" shape=ellipse]
94 [label="7:CtBinaryOperatorImpl@(tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)" shape=ellipse]
95 [label="9:CtVariableWriteImpl@found" shape=ellipse]
96 [label="9:CtLocalVariableReferenceImpl@found" shape=ellipse]
97 [label="9:CtLiteralImpl@true" shape=ellipse]
98 [label="9:CtTypeReferenceImpl@boolean" shape=ellipse]
99 [label="9:CtTypeReferenceImpl@boolean" shape=ellipse]
100 [label="9:CtAssignmentImpl@found = true" shape=ellipse]
101 [label="8:CtBlockImpl@\{
    found = true;
\}" shape=ellipse]
102 [label="7:CtIfImpl@if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
    found = true;
\}" shape=ellipse]
103 [label="5:CtBlockImpl@\{
    final JavadocTag tag = aTags.get(i);
    if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
        found = true;
    \}
\}" shape=ellipse]
104 [label="5:CtForImpl@for (int i = aTags.size() - 1; i >= 0; i--) \{
    final JavadocTag tag = aTags.get(i);
    if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
        found = true;
    \}
\}" shape=ellipse]
105 [label="12:CtVariableReadImpl@found" shape=ellipse]
106 [label="12:CtLocalVariableReferenceImpl@found" shape=ellipse]
107 [label="12:CtUnaryOperatorImpl@!found" shape=ellipse]
108 [label="12:CtTypeReferenceImpl@boolean" shape=ellipse]
109 [label="13:CtExecutableReferenceImpl@log(int,java.lang.String,java.lang.String)" shape=ellipse]
110 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
111 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
112 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
113 [label="13:CtVirtualElement@log" shape=ellipse]
114 [label="13:CtTypeAccessImpl@PlaceHold" shape=ellipse]
115 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
116 [label="13:CtThisAccessImpl@" shape=ellipse]
117 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
118 [label="13:CtVariableReadImpl@aLineNo" shape=ellipse]
119 [label="13:CtParameterReferenceImpl@aLineNo" shape=ellipse]
120 [label="13:CtLiteralImpl@\"type.missingTag\"" shape=ellipse]
121 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
122 [label="13:CtLiteralImpl@\"@param <\"" shape=ellipse]
123 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
124 [label="13:CtVariableReadImpl@aTypeParamName" shape=ellipse]
125 [label="13:CtParameterReferenceImpl@aTypeParamName" shape=ellipse]
126 [label="13:CtBinaryOperatorImpl@(\"@param <\" + aTypeParamName)" shape=ellipse]
127 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
128 [label="13:CtLiteralImpl@\">\"" shape=ellipse]
129 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
130 [label="13:CtBinaryOperatorImpl@(\"@param <\" + aTypeParamName) + \">\"" shape=ellipse]
131 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
132 [label="13:CtInvocationImpl@log(aLineNo, \"type.missingTag\", (\"@param <\" + aTypeParamName) + \">\")" shape=ellipse]
133 [label="12:CtBlockImpl@\{
    log(aLineNo, \"type.missingTag\", (\"@param <\" + aTypeParamName) + \">\");
\}" shape=ellipse]
134 [label="12:CtIfImpl@if (!found) \{
    log(aLineNo, \"type.missingTag\", (\"@param <\" + aTypeParamName) + \">\");
\}" shape=ellipse]
135 [label="3:CtBlockImpl@\{
    boolean found = false;
    for (int i = aTags.size() - 1; i >= 0; i--) \{
        final JavadocTag tag = aTags.get(i);
        if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
            found = true;
        \}
    \}
    if (!found) \{
        log(aLineNo, \"type.missingTag\", (\"@param <\" + aTypeParamName) + \">\");
    \}
\}" shape=ellipse]
136 [label="2:CtMethodImpl@private void checkTypeParamTag(final int aLineNo, final List<JavadocTag> aTags, final String aTypeParamName) \{
    boolean found = false;
    for (int i = aTags.size() - 1; i >= 0; i--) \{
        final JavadocTag tag = aTags.get(i);
        if ((tag.getTag().equals(\"param\") && (tag.getArg1() != null)) && (tag.getArg1().indexOf((\"<\" + aTypeParamName) + \">\") == 0)) \{
            found = true;
        \}
    \}
    if (!found) \{
        log(aLineNo, \"type.missingTag\", (\"@param <\" + aTypeParamName) + \">\");
    \}
\}" shape=ellipse]
137 [label="7:Delete@DELETE" shape=ellipse]
138 [label="7:Insert@INSERT" shape=ellipse]
139 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
140 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
141 [label="7:CtLiteralImpl@\"param\"" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
9 -> 10 [label="AST"];
11 -> 105 [label="Define-Use"];
12 -> 11 [label="AST"];
12 -> 8 [label="AST"];
12 -> 9 [label="AST"];
14 -> 15 [label="AST"];
17 -> 18 [label="AST"];
17 -> 23 [label="Data Dep"];
19 -> 16 [label="AST"];
19 -> 17 [label="AST"];
19 -> 14 [label="AST"];
20 -> 21 [label="AST"];
22 -> 19 [label="AST"];
22 -> 20 [label="AST"];
23 -> 25 [label="Define-Use"];
24 -> 23 [label="AST"];
24 -> 13 [label="AST"];
24 -> 22 [label="AST"];
25 -> 26 [label="AST"];
27 -> 28 [label="AST"];
29 -> 30 [label="AST"];
29 -> 25 [label="AST"];
29 -> 27 [label="AST"];
29 -> 103 [label="Control Dep"];
29 -> 48 [label="Control Dep"];
29 -> 46 [label="Control Dep"];
29 -> 37 [label="Control Dep"];
29 -> 42 [label="Control Dep"];
29 -> 44 [label="Control Dep"];
29 -> 102 [label="Control Dep"];
29 -> 94 [label="Control Dep"];
29 -> 70 [label="Control Dep"];
29 -> 60 [label="Control Dep"];
29 -> 49 [label="Control Dep"];
29 -> 57 [label="Control Dep"];
29 -> 52 [label="Control Dep"];
29 -> 55 [label="Control Dep"];
29 -> 58 [label="Control Dep"];
29 -> 69 [label="Control Dep"];
29 -> 66 [label="Control Dep"];
29 -> 61 [label="Control Dep"];
29 -> 64 [label="Control Dep"];
29 -> 67 [label="Control Dep"];
29 -> 93 [label="Control Dep"];
29 -> 90 [label="Control Dep"];
29 -> 71 [label="Control Dep"];
29 -> 79 [label="Control Dep"];
29 -> 74 [label="Control Dep"];
29 -> 77 [label="Control Dep"];
29 -> 88 [label="Control Dep"];
29 -> 84 [label="Control Dep"];
29 -> 80 [label="Control Dep"];
29 -> 82 [label="Control Dep"];
29 -> 86 [label="Control Dep"];
29 -> 91 [label="Control Dep"];
29 -> 141 [label="Control Dep"];
31 -> 32 [label="AST"];
31 -> 44 [label="Define-Use"];
33 -> 34 [label="AST"];
33 -> 31 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 39 [label="AST"];
37 -> 40 [label="AST"];
42 -> 43 [label="AST"];
42 -> 47 [label="Data Dep"];
44 -> 45 [label="AST"];
44 -> 47 [label="Data Dep"];
46 -> 41 [label="AST"];
46 -> 42 [label="AST"];
46 -> 37 [label="AST"];
46 -> 44 [label="AST"];
47 -> 55 [label="Define-Use"];
47 -> 64 [label="Define-Use"];
47 -> 77 [label="Define-Use"];
48 -> 47 [label="AST"];
48 -> 35 [label="AST"];
48 -> 46 [label="AST"];
49 -> 50 [label="AST"];
52 -> 53 [label="AST"];
55 -> 56 [label="AST"];
57 -> 54 [label="AST"];
57 -> 55 [label="AST"];
57 -> 52 [label="AST"];
58 -> 59 [label="AST"];
58 -> 137 [label="Action"];
60 -> 51 [label="AST"];
60 -> 57 [label="AST"];
60 -> 49 [label="AST"];
60 -> 58 [label="AST"];
60 -> 138 [label="Action"];
61 -> 62 [label="AST"];
64 -> 65 [label="AST"];
66 -> 63 [label="AST"];
66 -> 64 [label="AST"];
66 -> 61 [label="AST"];
67 -> 68 [label="AST"];
69 -> 66 [label="AST"];
69 -> 67 [label="AST"];
70 -> 60 [label="AST"];
70 -> 69 [label="AST"];
71 -> 72 [label="AST"];
74 -> 75 [label="AST"];
77 -> 78 [label="AST"];
79 -> 76 [label="AST"];
79 -> 77 [label="AST"];
79 -> 74 [label="AST"];
80 -> 81 [label="AST"];
82 -> 83 [label="AST"];
84 -> 85 [label="AST"];
84 -> 80 [label="AST"];
84 -> 82 [label="AST"];
86 -> 87 [label="AST"];
88 -> 89 [label="AST"];
88 -> 84 [label="AST"];
88 -> 86 [label="AST"];
90 -> 73 [label="AST"];
90 -> 79 [label="AST"];
90 -> 71 [label="AST"];
90 -> 88 [label="AST"];
91 -> 92 [label="AST"];
93 -> 90 [label="AST"];
93 -> 91 [label="AST"];
94 -> 70 [label="AST"];
94 -> 93 [label="AST"];
94 -> 101 [label="Control Dep"];
94 -> 100 [label="Control Dep"];
94 -> 95 [label="Control Dep"];
94 -> 97 [label="Control Dep"];
95 -> 96 [label="AST"];
95 -> 105 [label="Define-Use"];
96 -> 105 [label="Define-Use"];
97 -> 98 [label="AST"];
100 -> 99 [label="AST"];
100 -> 95 [label="AST"];
100 -> 97 [label="AST"];
101 -> 100 [label="AST"];
102 -> 94 [label="AST"];
102 -> 101 [label="AST"];
103 -> 48 [label="AST"];
103 -> 102 [label="AST"];
104 -> 24 [label="AST"];
104 -> 29 [label="AST"];
104 -> 33 [label="AST"];
104 -> 103 [label="AST"];
105 -> 106 [label="AST"];
107 -> 108 [label="AST"];
107 -> 105 [label="AST"];
107 -> 133 [label="Control Dep"];
107 -> 132 [label="Control Dep"];
107 -> 109 [label="Control Dep"];
107 -> 116 [label="Control Dep"];
107 -> 114 [label="Control Dep"];
107 -> 118 [label="Control Dep"];
107 -> 120 [label="Control Dep"];
107 -> 130 [label="Control Dep"];
107 -> 126 [label="Control Dep"];
107 -> 122 [label="Control Dep"];
107 -> 124 [label="Control Dep"];
107 -> 128 [label="Control Dep"];
109 -> 110 [label="AST"];
109 -> 111 [label="AST"];
109 -> 112 [label="AST"];
114 -> 115 [label="AST"];
116 -> 117 [label="AST"];
116 -> 114 [label="AST"];
118 -> 119 [label="AST"];
120 -> 121 [label="AST"];
122 -> 123 [label="AST"];
124 -> 125 [label="AST"];
126 -> 127 [label="AST"];
126 -> 122 [label="AST"];
126 -> 124 [label="AST"];
128 -> 129 [label="AST"];
130 -> 131 [label="AST"];
130 -> 126 [label="AST"];
130 -> 128 [label="AST"];
132 -> 113 [label="AST"];
132 -> 116 [label="AST"];
132 -> 109 [label="AST"];
132 -> 118 [label="AST"];
132 -> 120 [label="AST"];
132 -> 130 [label="AST"];
133 -> 132 [label="AST"];
134 -> 107 [label="AST"];
134 -> 133 [label="AST"];
135 -> 12 [label="AST"];
135 -> 104 [label="AST"];
135 -> 134 [label="AST"];
136 -> 1 [label="AST"];
136 -> 0 [label="AST"];
136 -> 2 [label="AST"];
136 -> 4 [label="AST"];
136 -> 6 [label="AST"];
136 -> 135 [label="AST"];
138 -> 141 [label="Action"];
140 -> 139 [label="AST"];
141 -> 140 [label="AST"];
}