digraph "Pattern" {
0 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:UPDATE
resolveType#?,SymTabAST,Scope,IClass,boolean#7:UPDATE" shape=ellipse]
1 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:referencePhase
resolveType#?,SymTabAST,Scope,IClass,boolean#7:referencePhase" shape=ellipse]
2 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:child.getType() == TokenTypes.ARRAY_DECLARATOR
resolveType#?,SymTabAST,Scope,IClass,boolean#6:nameNode.getType() == TokenTypes.DOT" shape=ellipse]
3 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:if (child.getType() == TokenTypes.ARRAY_DECLARATOR) \{
    type = new ArrayDef(resolveType(((SymTabAST) (typeNode.getFirstChild())), location, context, referencePhase));
\} else \{
    type = resolveType(typeNode, location, context, referencePhase);
\}
resolveType#?,SymTabAST,Scope,IClass,boolean#6:if (nameNode.getType() == TokenTypes.DOT) \{
    result = resolveDottedName(nameNode, location, context, referencePhase);
\} else \{
    result = resolveClassIdent(nameNode, location, context, referencePhase);
\}" shape=ellipse]
4 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:child.getType()
resolveType#?,SymTabAST,Scope,IClass,boolean#6:nameNode.getType()" shape=ellipse]
5 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:TokenTypes.ARRAY_DECLARATOR
resolveType#?,SymTabAST,Scope,IClass,boolean#6:TokenTypes.DOT" shape=ellipse]
6 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:\{
    type = new ArrayDef(resolveType(((SymTabAST) (typeNode.getFirstChild())), location, context, referencePhase));
\}
resolveType#?,SymTabAST,Scope,IClass,boolean#6:\{
    result = resolveDottedName(nameNode, location, context, referencePhase);
\}" shape=ellipse]
7 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#12:type = new ArrayDef(resolveType(((SymTabAST) (typeNode.getFirstChild())), location, context, referencePhase))
resolveType#?,SymTabAST,Scope,IClass,boolean#7:result = resolveDottedName(nameNode, location, context, referencePhase)" shape=ellipse]
8 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#12:type
resolveType#?,SymTabAST,Scope,IClass,boolean#7:result" shape=ellipse]
9 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#16:createReference
resolveType#?,SymTabAST,Scope,IClass,boolean#8:createReference" shape=ellipse]
10 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#16:boolean
resolveType#?,SymTabAST,Scope,IClass,boolean#8:boolean" shape=ellipse]
11 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#13:new ArrayDef(resolveType(((SymTabAST) (typeNode.getFirstChild())), location, context, referencePhase))" shape=ellipse]
12 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#13:ArrayDef()
resolveType#?,SymTabAST,Scope,IClass,boolean#7:resolveDottedName(<unknown>,<unknown>,<unknown>,boolean)" shape=ellipse]
13 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#14:resolveType(((SymTabAST) (typeNode.getFirstChild())), location, context, referencePhase)" shape=ellipse]
14 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#14:resolveType(SymTabAST,<unknown>,<unknown>,boolean)
resolveType#?,SymTabAST,Scope,IClass,boolean#9:resolveClassIdent(<unknown>,<unknown>,<unknown>,boolean)" shape=ellipse]
15 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#14:
resolveType#?,SymTabAST,Scope,IClass,boolean#7:" shape=ellipse]
16 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#14:PlaceHold
resolveType#?,SymTabAST,Scope,IClass,boolean#7:PlaceHold" shape=ellipse]
17 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:((SymTabAST) (typeNode.getFirstChild()))" shape=ellipse]
18 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:getFirstChild()" shape=ellipse]
19 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:typeNode
resolveType#?,SymTabAST,Scope,IClass,boolean#7:nameNode" shape=ellipse]
20 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:location
resolveType#?,SymTabAST,Scope,IClass,boolean#7:location" shape=ellipse]
21 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:context
resolveType#?,SymTabAST,Scope,IClass,boolean#7:context" shape=ellipse]
22 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#16:\{
    type = resolveType(typeNode, location, context, referencePhase);
\}
resolveType#?,SymTabAST,Scope,IClass,boolean#8:\{
    result = resolveClassIdent(nameNode, location, context, referencePhase);
\}" shape=ellipse]
23 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:type = resolveType(typeNode, location, context, referencePhase)
resolveType#?,SymTabAST,Scope,IClass,boolean#9:result = resolveClassIdent(nameNode, location, context, referencePhase)" shape=ellipse]
24 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:type
resolveType#?,SymTabAST,Scope,IClass,boolean#9:result" shape=ellipse]
25 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:referencePhase
resolveType#?,SymTabAST,Scope,IClass,boolean#9:referencePhase" shape=ellipse]
26 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#18:createReference
resolveType#?,SymTabAST,Scope,IClass,boolean#10:createReference" shape=ellipse]
27 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#18:boolean
resolveType#?,SymTabAST,Scope,IClass,boolean#10:boolean" shape=ellipse]
28 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:resolveType(typeNode, location, context, referencePhase)" shape=ellipse]
29 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:resolveType(<unknown>,<unknown>,<unknown>,boolean)" shape=ellipse]
30 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:
resolveType#?,SymTabAST,Scope,IClass,boolean#9:" shape=ellipse]
31 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:PlaceHold
resolveType#?,SymTabAST,Scope,IClass,boolean#9:PlaceHold" shape=ellipse]
32 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:typeNode
resolveType#?,SymTabAST,Scope,IClass,boolean#9:nameNode" shape=ellipse]
33 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:location
resolveType#?,SymTabAST,Scope,IClass,boolean#9:location" shape=ellipse]
34 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#17:context
resolveType#?,SymTabAST,Scope,IClass,boolean#9:context" shape=ellipse]
35 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:createReference
resolveType#?,SymTabAST,Scope,IClass,boolean#6:createReference" shape=ellipse]
36 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:final boolean createReference = false
resolveType#?,SymTabAST,Scope,IClass,boolean#6:final boolean createReference = false" shape=ellipse]
37 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:boolean
resolveType#?,SymTabAST,Scope,IClass,boolean#6:boolean" shape=ellipse]
38 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:false
resolveType#?,SymTabAST,Scope,IClass,boolean#6:false" shape=ellipse]
39 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#11:boolean
resolveType#?,SymTabAST,Scope,IClass,boolean#6:boolean" shape=ellipse]
40 [label="resolveTypecast#?,SymTabAST,Scope,IClass,boolean#15:referencePhase
resolveType#?,SymTabAST,Scope,IClass,boolean#7:referencePhase" shape=ellipse]
41 [label="resolveType#?,SymTabAST,Scope,IClass,boolean#7:resolveDottedName(nameNode, location, context, referencePhase)" shape=ellipse]
42 [label="resolveType#?,SymTabAST,Scope,IClass,boolean#9:resolveClassIdent(nameNode, location, context, referencePhase)" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 40 [label="AST:2"];
1 -> 8 [label="Data Dep:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="Control Dep:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:1"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:1"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:1"];
2 -> 18 [label="Control Dep:1"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:2"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:1"];
2 -> 29 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:2"];
2 -> 31 [label="Control Dep:2"];
2 -> 32 [label="Control Dep:2"];
2 -> 33 [label="Control Dep:2"];
2 -> 34 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:2"];
2 -> 41 [label="Control Dep:1"];
2 -> 42 [label="Control Dep:1"];
3 -> 2 [label="AST:2"];
3 -> 6 [label="AST:2"];
3 -> 22 [label="AST:2"];
6 -> 7 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 11 [label="AST:1"];
7 -> 41 [label="AST:1"];
9 -> 10 [label="AST:2"];
11 -> 12 [label="AST:1"];
11 -> 13 [label="AST:1"];
13 -> 1 [label="AST:1"];
13 -> 15 [label="AST:1"];
13 -> 14 [label="AST:1"];
13 -> 17 [label="AST:1"];
13 -> 20 [label="AST:1"];
13 -> 21 [label="AST:1"];
15 -> 8 [label="Data Dep:2"];
15 -> 16 [label="AST:2"];
17 -> 19 [label="AST:1"];
17 -> 18 [label="AST:1"];
19 -> 8 [label="Data Dep:2"];
20 -> 8 [label="Data Dep:2"];
21 -> 8 [label="Data Dep:2"];
22 -> 23 [label="AST:2"];
23 -> 24 [label="AST:2"];
23 -> 28 [label="AST:1"];
23 -> 42 [label="AST:1"];
25 -> 24 [label="Data Dep:2"];
26 -> 27 [label="AST:2"];
28 -> 25 [label="AST:1"];
28 -> 30 [label="AST:1"];
28 -> 29 [label="AST:1"];
28 -> 32 [label="AST:1"];
28 -> 33 [label="AST:1"];
28 -> 34 [label="AST:1"];
30 -> 24 [label="Data Dep:2"];
30 -> 31 [label="AST:2"];
32 -> 24 [label="Data Dep:2"];
33 -> 24 [label="Data Dep:2"];
34 -> 24 [label="Data Dep:2"];
35 -> 1 [label="Define Use:2"];
35 -> 1 [label="Data Dep:2"];
35 -> 1 [label="Control Dep:2"];
35 -> 25 [label="Define Use:2"];
35 -> 25 [label="Data Dep:2"];
35 -> 25 [label="Control Dep:2"];
36 -> 35 [label="AST:2"];
36 -> 37 [label="AST:2"];
36 -> 38 [label="AST:2"];
38 -> 39 [label="AST:2"];
41 -> 15 [label="AST:1"];
41 -> 12 [label="AST:1"];
41 -> 19 [label="AST:1"];
41 -> 20 [label="AST:1"];
41 -> 21 [label="AST:1"];
41 -> 1 [label="AST:1"];
42 -> 30 [label="AST:1"];
42 -> 14 [label="AST:1"];
42 -> 32 [label="AST:1"];
42 -> 33 [label="AST:1"];
42 -> 34 [label="AST:1"];
42 -> 25 [label="AST:1"];
}