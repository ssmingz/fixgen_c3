digraph "checkNonlistChild#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@checkNonlistChild" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@getNonlistChild()" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
6 [label="3:CtVirtualElement@getNonlistChild" shape=ellipse]
7 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
9 [label="3:CtThisAccessImpl@" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
11 [label="3:CtInvocationImpl@getNonlistChild()" shape=ellipse]
12 [label="3:CtVirtualElement@nonlist" shape=ellipse]
13 [label="3:CtLocalVariableImpl@DetailAST nonlist = getNonlistChild()" shape=ellipse]
14 [label="4:CtVariableReadImpl@nonlist" shape=ellipse]
15 [label="4:CtLocalVariableReferenceImpl@nonlist" shape=ellipse]
16 [label="4:CtLiteralImpl@null" shape=ellipse]
17 [label="4:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
18 [label="4:CtBinaryOperatorImpl@nonlist == null" shape=ellipse]
19 [label="5:CtReturnImpl@return" shape=ellipse]
20 [label="4:CtBlockImpl@\{
    return;
\}" shape=ellipse]
21 [label="4:CtIfImpl@if (nonlist == null) \{
    return;
\}" shape=ellipse]
22 [label="7:CtExecutableReferenceImpl@checkExpressionSubtree(<unknown>,<unknown>,boolean,boolean)" shape=ellipse]
23 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
24 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
25 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
26 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
27 [label="7:CtVirtualElement@checkExpressionSubtree" shape=ellipse]
28 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
29 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
30 [label="7:CtThisAccessImpl@" shape=ellipse]
31 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
32 [label="7:CtVariableReadImpl@nonlist" shape=ellipse]
33 [label="7:CtLocalVariableReferenceImpl@nonlist" shape=ellipse]
34 [label="7:CtExecutableReferenceImpl@getLevel()" shape=ellipse]
35 [label="7:CtVirtualElement@getLevel" shape=ellipse]
36 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
37 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
38 [label="7:CtThisAccessImpl@" shape=ellipse]
39 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
40 [label="7:CtInvocationImpl@getLevel()" shape=ellipse]
41 [label="7:CtExecutableReferenceImpl@getBasicOffset()" shape=ellipse]
42 [label="7:CtVirtualElement@getBasicOffset" shape=ellipse]
43 [label="7:CtExecutableReferenceImpl@getIndentCheck()" shape=ellipse]
44 [label="7:CtVirtualElement@getIndentCheck" shape=ellipse]
45 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
46 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
47 [label="7:CtThisAccessImpl@" shape=ellipse]
48 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
49 [label="7:CtInvocationImpl@getIndentCheck()" shape=ellipse]
50 [label="7:CtInvocationImpl@getIndentCheck().getBasicOffset()" shape=ellipse]
51 [label="7:CtBinaryOperatorImpl@getLevel() + getIndentCheck().getBasicOffset()" shape=ellipse]
52 [label="7:CtLiteralImpl@false" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
54 [label="7:CtLiteralImpl@false" shape=ellipse]
55 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
56 [label="7:CtInvocationImpl@checkExpressionSubtree(nonlist, getLevel() + getIndentCheck().getBasicOffset(), false, false)" shape=ellipse]
57 [label="2:CtBlockImpl@\{
    DetailAST nonlist = getNonlistChild();
    if (nonlist == null) \{
        return;
    \}
    checkExpressionSubtree(nonlist, getLevel() + getIndentCheck().getBasicOffset(), false, false);
\}" shape=ellipse]
58 [label="2:CtMethodImpl@private void checkNonlistChild() \{
    DetailAST nonlist = getNonlistChild();
    if (nonlist == null) \{
        return;
    \}
    checkExpressionSubtree(nonlist, getLevel() + getIndentCheck().getBasicOffset(), false, false);
\}" shape=ellipse]
59 [label="7:Delete@DELETE" shape=ellipse]
60 [label="7:Delete@DELETE" shape=ellipse]
61 [label="7:Insert@INSERT" shape=ellipse]
62 [label="7:CtPackageReferenceImpl@" shape=ellipse]
63 [label="7:CtTypeReferenceImpl@IndentLevel" shape=ellipse]
64 [label="7:CtPackageReferenceImpl@" shape=ellipse]
65 [label="7:CtTypeReferenceImpl@IndentLevel" shape=ellipse]
66 [label="7:CtPackageReferenceImpl@" shape=ellipse]
67 [label="7:CtTypeReferenceImpl@IndentLevel" shape=ellipse]
68 [label="7:CtExecutableReferenceImpl@IndentLevel()" shape=ellipse]
69 [label="7:CtPackageReferenceImpl@" shape=ellipse]
70 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
71 [label="7:CtPackageReferenceImpl@" shape=ellipse]
72 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
73 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
74 [label="7:CtThisAccessImpl@" shape=ellipse]
75 [label="7:CtExecutableReferenceImpl@getLevel()" shape=ellipse]
76 [label="7:CtInvocationImpl@getLevel()" shape=ellipse]
77 [label="7:CtVirtualElement@getLevel" shape=ellipse]
78 [label="7:CtPackageReferenceImpl@" shape=ellipse]
79 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
80 [label="7:CtPackageReferenceImpl@" shape=ellipse]
81 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
82 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
83 [label="7:CtThisAccessImpl@" shape=ellipse]
84 [label="7:CtExecutableReferenceImpl@getBasicOffset()" shape=ellipse]
85 [label="7:CtInvocationImpl@getBasicOffset()" shape=ellipse]
86 [label="7:CtVirtualElement@getBasicOffset" shape=ellipse]
87 [label="7:CtConstructorCallImpl@new IndentLevel(getLevel(), getBasicOffset())" shape=ellipse]
88 [label="7:CtLocalVariableImpl@IndentLevel expected = new IndentLevel(, )" shape=ellipse]
89 [label="7:CtVirtualElement@expected" shape=ellipse]
90 [label="8:Insert@INSERT" shape=ellipse]
91 [label="8:CtPackageReferenceImpl@" shape=ellipse]
92 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
93 [label="8:CtPackageReferenceImpl@" shape=ellipse]
94 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
95 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
96 [label="8:CtThisAccessImpl@" shape=ellipse]
97 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
98 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
99 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
100 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
101 [label="8:CtExecutableReferenceImpl@checkExpressionSubtree(<unknown>,<unknown>,boolean,boolean)" shape=ellipse]
102 [label="8:CtPackageReferenceImpl@" shape=ellipse]
103 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
104 [label="8:CtLocalVariableReferenceImpl@nonlist" shape=ellipse]
105 [label="8:CtVariableReadImpl@nonlist" shape=ellipse]
106 [label="8:CtPackageReferenceImpl@" shape=ellipse]
107 [label="8:CtTypeReferenceImpl@IndentLevel" shape=ellipse]
108 [label="8:CtLocalVariableReferenceImpl@expected" shape=ellipse]
109 [label="8:CtVariableReadImpl@expected" shape=ellipse]
110 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
111 [label="8:CtLiteralImpl@false" shape=ellipse]
112 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
113 [label="8:CtLiteralImpl@false" shape=ellipse]
114 [label="8:CtInvocationImpl@checkExpressionSubtree(nonlist, expected, , )" shape=ellipse]
115 [label="8:CtVirtualElement@checkExpressionSubtree" shape=ellipse]
116 [label="7:Move@MOVE" shape=ellipse]
117 [label="7:Move@MOVE" shape=ellipse]
118 [label="7:Move@MOVE" shape=ellipse]
119 [label="7:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
7 -> 8 [label="AST"];
9 -> 10 [label="AST"];
9 -> 7 [label="AST"];
9 -> 12 [label="Data Dep"];
11 -> 6 [label="AST"];
11 -> 9 [label="AST"];
11 -> 4 [label="AST"];
12 -> 14 [label="Define-Use"];
12 -> 32 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 2 [label="AST"];
13 -> 11 [label="AST"];
14 -> 15 [label="AST"];
16 -> 17 [label="AST"];
18 -> 14 [label="AST"];
18 -> 16 [label="AST"];
18 -> 20 [label="Control Dep"];
18 -> 19 [label="Control Dep"];
20 -> 19 [label="AST"];
21 -> 18 [label="AST"];
21 -> 20 [label="AST"];
22 -> 23 [label="AST"];
22 -> 24 [label="AST"];
22 -> 25 [label="AST"];
22 -> 26 [label="AST"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
30 -> 28 [label="AST"];
32 -> 33 [label="AST"];
36 -> 37 [label="AST"];
38 -> 39 [label="AST"];
38 -> 36 [label="AST"];
40 -> 35 [label="AST"];
40 -> 38 [label="AST"];
40 -> 34 [label="AST"];
40 -> 118 [label="Action"];
45 -> 46 [label="AST"];
47 -> 48 [label="AST"];
47 -> 45 [label="AST"];
49 -> 44 [label="AST"];
49 -> 47 [label="AST"];
49 -> 43 [label="AST"];
49 -> 59 [label="Action"];
50 -> 42 [label="AST"];
50 -> 49 [label="AST"];
50 -> 41 [label="AST"];
50 -> 119 [label="Action"];
51 -> 40 [label="AST"];
51 -> 50 [label="AST"];
52 -> 53 [label="AST"];
52 -> 116 [label="Action"];
54 -> 55 [label="AST"];
54 -> 117 [label="Action"];
56 -> 27 [label="AST"];
56 -> 30 [label="AST"];
56 -> 22 [label="AST"];
56 -> 32 [label="AST"];
56 -> 51 [label="AST"];
56 -> 52 [label="AST"];
56 -> 54 [label="AST"];
56 -> 60 [label="Action"];
57 -> 13 [label="AST"];
57 -> 21 [label="AST"];
57 -> 56 [label="AST"];
57 -> 61 [label="Action"];
57 -> 90 [label="Action"];
58 -> 1 [label="AST"];
58 -> 0 [label="AST"];
58 -> 57 [label="AST"];
61 -> 88 [label="Action"];
63 -> 62 [label="AST"];
65 -> 64 [label="AST"];
67 -> 66 [label="AST"];
68 -> 65 [label="AST"];
68 -> 67 [label="AST"];
70 -> 69 [label="AST"];
72 -> 71 [label="AST"];
73 -> 72 [label="AST"];
74 -> 70 [label="AST"];
74 -> 73 [label="AST"];
74 -> 89 [label="Data Dep"];
76 -> 77 [label="AST"];
76 -> 74 [label="AST"];
76 -> 75 [label="AST"];
79 -> 78 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
83 -> 79 [label="AST"];
83 -> 82 [label="AST"];
83 -> 89 [label="Data Dep"];
85 -> 86 [label="AST"];
85 -> 83 [label="AST"];
85 -> 84 [label="AST"];
87 -> 68 [label="AST"];
87 -> 76 [label="AST"];
87 -> 85 [label="AST"];
88 -> 89 [label="AST"];
88 -> 63 [label="AST"];
88 -> 87 [label="AST"];
89 -> 109 [label="Define-Use"];
90 -> 114 [label="Action"];
92 -> 91 [label="AST"];
94 -> 93 [label="AST"];
95 -> 94 [label="AST"];
96 -> 92 [label="AST"];
96 -> 95 [label="AST"];
101 -> 97 [label="AST"];
101 -> 98 [label="AST"];
101 -> 99 [label="AST"];
101 -> 100 [label="AST"];
103 -> 102 [label="AST"];
104 -> 103 [label="AST"];
105 -> 104 [label="AST"];
107 -> 106 [label="AST"];
108 -> 107 [label="AST"];
109 -> 108 [label="AST"];
111 -> 110 [label="AST"];
113 -> 112 [label="AST"];
114 -> 115 [label="AST"];
114 -> 96 [label="AST"];
114 -> 101 [label="AST"];
114 -> 105 [label="AST"];
114 -> 109 [label="AST"];
114 -> 111 [label="AST"];
114 -> 113 [label="AST"];
116 -> 114 [label="Action"];
117 -> 114 [label="Action"];
118 -> 87 [label="Action"];
119 -> 87 [label="Action"];
}