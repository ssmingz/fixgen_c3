digraph "Pattern" {
0 [label="##ActionPoint##
locationInParent:ACTION
nodeType:Move
nodeType2:ActionNode
nodeType3:CtElementImpl
value:MOVE
value2:" shape=ellipse]
1 [label="locationInParent:LEFT_OPERAND
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getLevel()
value2:getLevel()" shape=ellipse]
2 [label="locationInParent:ARGUMENT
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:getLevel() + getIndentCheck().getBasicOffset()
value2:getLevel() + getIndentCheck().getBasicOffset()" shape=ellipse]
3 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value2:checkExpressionSubtree(DetailAST, getLevel() + getIndentCheck().getBasicOffset(), Boolean, Boolean)" shape=ellipse]
4 [label="locationInParent:RIGHT_OPERAND
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getIndentCheck().getBasicOffset()
value2:getIndentCheck().getBasicOffset()" shape=ellipse]
5 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:getLevel
value2:getLevel()" shape=ellipse]
6 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
7 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
8 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
9 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getLevel()
value2:getLevel()" shape=ellipse]
10 [label="locationInParent:DEFAULT_EXPRESSION
nodeType:CtConstructorCallImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:new IndentLevel(getLevel(), getBasicOffset())
value2:new IndentLevel(getLevel(), getBasicOffset())" shape=ellipse]
11 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:IndentLevel()
value2:IndentLevel()" shape=ellipse]
12 [label="locationInParent:DECLARING_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
13 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
14 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
15 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
16 [label="locationInParent:ARGUMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getBasicOffset()
value2:getBasicOffset()" shape=ellipse]
17 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:getBasicOffset
value2:getBasicOffset()" shape=ellipse]
18 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
19 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
20 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
21 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
22 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
23 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
24 [label="locationInParent:LOCAL_VAR_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:expected
value2:IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset())" shape=ellipse]
25 [label="locationInParent:ARGUMENT
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:expected
value2:IndentLevel" shape=ellipse]
26 [label="locationInParent:VARIABLE
nodeType:CtLocalVariableReferenceImpl
nodeType2:CtVariableReferenceImpl
nodeType3:CtVariableReferenceImpl
value:expected
value2:IndentLevel" shape=ellipse]
27 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
28 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
29 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getBasicOffset()
value2:getBasicOffset()" shape=ellipse]
0 -> 10 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 5 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 9 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
3 -> 2 [label="AST:2"];
6 -> 7 [label="AST:2"];
6 -> 8 [label="AST:2"];
10 -> 11 [label="AST:2"];
10 -> 16 [label="AST:2"];
11 -> 12 [label="AST:2"];
11 -> 14 [label="AST:2"];
12 -> 13 [label="AST:2"];
14 -> 15 [label="AST:2"];
16 -> 17 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 29 [label="AST:2"];
18 -> 19 [label="AST:2"];
18 -> 21 [label="AST:2"];
18 -> 24 [label="Data Dep:2"];
19 -> 20 [label="AST:2"];
21 -> 22 [label="AST:2"];
22 -> 23 [label="AST:2"];
24 -> 25 [label="Define Use:2"];
25 -> 26 [label="AST:2"];
26 -> 27 [label="AST:2"];
27 -> 28 [label="AST:2"];
}