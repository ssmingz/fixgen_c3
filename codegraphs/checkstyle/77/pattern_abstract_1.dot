digraph "Pattern" {
0 [label="##ActionPoint##
locationInParent:ACTION
nodeType:Delete
nodeType2:ActionNode
nodeType3:CtElementImpl
value:DELETE
value2:" shape=ellipse]
1 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value2:checkExpressionSubtree(DetailAST, getLevel() + getIndentCheck().getBasicOffset(), Boolean, Boolean)" shape=ellipse]
2 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
3 [label="locationInParent:TYPE_MEMBER
nodeType:CtMethodImpl
nodeType2:CtExecutableImpl
nodeType3:CtExecutableImpl" shape=ellipse]
4 [label="locationInParent:STATEMENT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
5 [label="locationInParent:ACTION
nodeType:Insert
nodeType2:ActionNode
nodeType3:CtElementImpl
value:INSERT
value2:" shape=ellipse]
6 [label="locationInParent:STATEMENT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset())
value2:IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset())" shape=ellipse]
7 [label="locationInParent:LOCAL_VAR_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:expected
value2:IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset())" shape=ellipse]
8 [label="locationInParent:ARGUMENT
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:expected
value2:IndentLevel" shape=ellipse]
9 [label="locationInParent:VARIABLE
nodeType:CtLocalVariableReferenceImpl
nodeType2:CtVariableReferenceImpl
nodeType3:CtVariableReferenceImpl
value:expected
value2:IndentLevel" shape=ellipse]
10 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
11 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
12 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
13 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
14 [label="locationInParent:DEFAULT_EXPRESSION
nodeType:CtConstructorCallImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:new IndentLevel(getLevel(), getBasicOffset())
value2:new IndentLevel(getLevel(), getBasicOffset())" shape=ellipse]
15 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:IndentLevel()
value2:IndentLevel()" shape=ellipse]
16 [label="locationInParent:DECLARING_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
17 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
18 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IndentLevel
value2:IndentLevel" shape=ellipse]
19 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
20 [label="locationInParent:ARGUMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getLevel()
value2:getLevel()" shape=ellipse]
21 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:getLevel
value2:getLevel()" shape=ellipse]
22 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
23 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
24 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
25 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
26 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
27 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
28 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getLevel()
value2:getLevel()" shape=ellipse]
29 [label="locationInParent:ARGUMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getBasicOffset()
value2:getBasicOffset()" shape=ellipse]
30 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:getBasicOffset
value2:getBasicOffset()" shape=ellipse]
31 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
32 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
33 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
34 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
35 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
36 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
37 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getBasicOffset()
value2:getBasicOffset()" shape=ellipse]
38 [label="locationInParent:ACTION
nodeType:Insert
nodeType2:ActionNode
nodeType3:CtElementImpl
value:INSERT
value2:" shape=ellipse]
39 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value2:checkExpressionSubtree(DetailAST, IndentLevel, Boolean, Boolean)" shape=ellipse]
40 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:checkExpressionSubtree
value2:checkExpressionSubtree(DetailAST, IndentLevel, Boolean, Boolean)" shape=ellipse]
41 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
42 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
43 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
44 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
45 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
46 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
47 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:checkExpressionSubtree(<unknown>,<unknown>,boolean,boolean)
value2:checkExpressionSubtree(<unknown>,<unknown>,boolean,boolean)" shape=ellipse]
48 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:null
value2:null" shape=ellipse]
49 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:null
value2:null" shape=ellipse]
50 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
51 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
52 [label="locationInParent:ARGUMENT
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value2:DetailAST" shape=ellipse]
53 [label="locationInParent:VARIABLE
nodeType:CtLocalVariableReferenceImpl
nodeType2:CtVariableReferenceImpl
nodeType3:CtVariableReferenceImpl
value2:DetailAST" shape=ellipse]
54 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:DetailAST
value2:DetailAST" shape=ellipse]
55 [label="locationInParent:PACKAGE_REF
nodeType:CtPackageReferenceImpl
nodeType2:CtPackageReferenceImpl
nodeType3:CtPackageReferenceImpl
value:
value2:" shape=ellipse]
56 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:false
value2:Boolean" shape=ellipse]
57 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
58 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value2:Boolean" shape=ellipse]
59 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
60 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:checkExpressionSubtree
value2:checkExpressionSubtree(DetailAST, getLevel() + getIndentCheck().getBasicOffset(), Boolean, Boolean)" shape=ellipse]
61 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
62 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
63 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
64 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:checkExpressionSubtree(<unknown>,<unknown>,boolean,boolean)
value2:checkExpressionSubtree(<unknown>,<unknown>,boolean,boolean)" shape=ellipse]
65 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:null
value2:null" shape=ellipse]
66 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:null
value2:null" shape=ellipse]
67 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
68 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
69 [label="locationInParent:ARGUMENT
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value2:DetailAST" shape=ellipse]
70 [label="locationInParent:LOCAL_VAR_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object" shape=ellipse]
71 [label="locationInParent:VARIABLE
nodeType:CtLocalVariableReferenceImpl
nodeType2:CtVariableReferenceImpl
nodeType3:CtVariableReferenceImpl
value2:DetailAST" shape=ellipse]
72 [label="locationInParent:ARGUMENT
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:getLevel() + getIndentCheck().getBasicOffset()
value2:getLevel() + getIndentCheck().getBasicOffset()" shape=ellipse]
73 [label="locationInParent:LEFT_OPERAND
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getLevel()
value2:getLevel()" shape=ellipse]
74 [label="locationInParent:RIGHT_OPERAND
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:getIndentCheck().getBasicOffset()
value2:getIndentCheck().getBasicOffset()" shape=ellipse]
75 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:false
value2:Boolean" shape=ellipse]
76 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
77 [label="locationInParent:ACTION
nodeType:Move
nodeType2:ActionNode
nodeType3:CtElementImpl
value:MOVE
value2:" shape=ellipse]
78 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value2:Boolean" shape=ellipse]
79 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
80 [label="locationInParent:ACTION
nodeType:Move
nodeType2:ActionNode
nodeType3:CtElementImpl
value:MOVE
value2:" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 60 [label="AST:2"];
1 -> 61 [label="AST:2"];
1 -> 64 [label="AST:2"];
1 -> 69 [label="AST:2"];
1 -> 72 [label="AST:2"];
1 -> 75 [label="AST:2"];
1 -> 78 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="Action:2"];
2 -> 38 [label="Action:2"];
3 -> 2 [label="AST:2"];
4 -> 70 [label="AST:2"];
5 -> 6 [label="Action:2"];
6 -> 7 [label="AST:2"];
6 -> 12 [label="AST:2"];
6 -> 14 [label="AST:2"];
7 -> 8 [label="Define Use:2"];
8 -> 9 [label="AST:2"];
9 -> 10 [label="AST:2"];
10 -> 11 [label="AST:2"];
12 -> 13 [label="AST:2"];
14 -> 15 [label="AST:2"];
14 -> 20 [label="AST:2"];
14 -> 29 [label="AST:2"];
15 -> 16 [label="AST:2"];
15 -> 18 [label="AST:2"];
16 -> 17 [label="AST:2"];
18 -> 19 [label="AST:2"];
20 -> 21 [label="AST:2"];
20 -> 22 [label="AST:2"];
20 -> 28 [label="AST:2"];
22 -> 7 [label="Data Dep:2"];
22 -> 23 [label="AST:2"];
22 -> 25 [label="AST:2"];
23 -> 24 [label="AST:2"];
25 -> 26 [label="AST:2"];
26 -> 27 [label="AST:2"];
29 -> 30 [label="AST:2"];
29 -> 31 [label="AST:2"];
29 -> 37 [label="AST:2"];
31 -> 7 [label="Data Dep:2"];
31 -> 32 [label="AST:2"];
31 -> 34 [label="AST:2"];
32 -> 33 [label="AST:2"];
34 -> 35 [label="AST:2"];
35 -> 36 [label="AST:2"];
38 -> 39 [label="Action:2"];
39 -> 8 [label="AST:2"];
39 -> 40 [label="AST:2"];
39 -> 41 [label="AST:2"];
39 -> 47 [label="AST:2"];
39 -> 52 [label="AST:2"];
39 -> 56 [label="AST:2"];
39 -> 58 [label="AST:2"];
41 -> 42 [label="AST:2"];
41 -> 44 [label="AST:2"];
42 -> 43 [label="AST:2"];
44 -> 45 [label="AST:2"];
45 -> 46 [label="AST:2"];
47 -> 48 [label="AST:2"];
47 -> 49 [label="AST:2"];
47 -> 50 [label="AST:2"];
47 -> 51 [label="AST:2"];
52 -> 53 [label="AST:2"];
53 -> 54 [label="AST:2"];
54 -> 55 [label="AST:2"];
56 -> 57 [label="AST:2"];
58 -> 59 [label="AST:2"];
61 -> 62 [label="AST:2"];
61 -> 63 [label="AST:2"];
64 -> 65 [label="AST:2"];
64 -> 66 [label="AST:2"];
64 -> 67 [label="AST:2"];
64 -> 68 [label="AST:2"];
69 -> 71 [label="AST:2"];
70 -> 69 [label="Define Use:2"];
72 -> 73 [label="AST:2"];
72 -> 74 [label="AST:2"];
75 -> 76 [label="AST:2"];
75 -> 77 [label="Action:2"];
77 -> 39 [label="Action:2"];
78 -> 79 [label="AST:2"];
78 -> 80 [label="Action:2"];
80 -> 39 [label="Action:2"];
}