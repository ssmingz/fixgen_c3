digraph "visitToken#?,DetailAST" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@visitToken" shape=ellipse]
2 [label="3:CtParameterImpl@DetailAST ast" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@getParent()" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
9 [label="4:CtVirtualElement@getParent" shape=ellipse]
10 [label="4:CtVariableReadImpl@ast" shape=ellipse]
11 [label="4:CtParameterReferenceImpl@ast" shape=ellipse]
12 [label="4:CtInvocationImpl@ast.getParent()" shape=ellipse]
13 [label="4:CtVirtualElement@parent" shape=ellipse]
14 [label="4:CtLocalVariableImpl@final DetailAST parent = ast.getParent()" shape=ellipse]
15 [label="5:CtExecutableReferenceImpl@getType()" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
17 [label="5:CtVirtualElement@getType" shape=ellipse]
18 [label="5:CtVariableReadImpl@parent" shape=ellipse]
19 [label="5:CtLocalVariableReferenceImpl@parent" shape=ellipse]
20 [label="5:CtInvocationImpl@parent.getType()" shape=ellipse]
21 [label="6:CtFieldReferenceImpl@TokenTypes.NOT_EQUAL" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
23 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
24 [label="6:CtFieldReadImpl@TokenTypes.NOT_EQUAL" shape=ellipse]
25 [label="6:CtTypeAccessImpl@TokenTypes" shape=ellipse]
26 [label="6:CtCaseImpl@case TokenTypes.NOT_EQUAL :" shape=ellipse]
27 [label="7:CtFieldReferenceImpl@TokenTypes.EQUAL" shape=ellipse]
28 [label="7:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
29 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
30 [label="7:CtFieldReadImpl@TokenTypes.EQUAL" shape=ellipse]
31 [label="7:CtTypeAccessImpl@TokenTypes" shape=ellipse]
32 [label="7:CtCaseImpl@case TokenTypes.EQUAL :" shape=ellipse]
33 [label="8:CtFieldReferenceImpl@TokenTypes.LNOT" shape=ellipse]
34 [label="8:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
35 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
36 [label="8:CtFieldReadImpl@TokenTypes.LNOT" shape=ellipse]
37 [label="8:CtTypeAccessImpl@TokenTypes" shape=ellipse]
38 [label="8:CtCaseImpl@case TokenTypes.LNOT :" shape=ellipse]
39 [label="9:CtFieldReferenceImpl@TokenTypes.LOR" shape=ellipse]
40 [label="9:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
41 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
42 [label="9:CtFieldReadImpl@TokenTypes.LOR" shape=ellipse]
43 [label="9:CtTypeAccessImpl@TokenTypes" shape=ellipse]
44 [label="9:CtCaseImpl@case TokenTypes.LOR :" shape=ellipse]
45 [label="10:CtFieldReferenceImpl@TokenTypes.LAND" shape=ellipse]
46 [label="10:CtTypeReferenceImpl@TokenTypes" shape=ellipse]
47 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
48 [label="10:CtFieldReadImpl@TokenTypes.LAND" shape=ellipse]
49 [label="10:CtTypeAccessImpl@TokenTypes" shape=ellipse]
50 [label="11:CtExecutableReferenceImpl@log(<unknown>,<unknown>,java.lang.String)" shape=ellipse]
51 [label="11:CtTypeReferenceImpl@null" shape=ellipse]
52 [label="11:CtTypeReferenceImpl@null" shape=ellipse]
53 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
54 [label="11:CtVirtualElement@log" shape=ellipse]
55 [label="11:CtTypeAccessImpl@PlaceHold" shape=ellipse]
56 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
57 [label="11:CtThisAccessImpl@" shape=ellipse]
58 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
59 [label="11:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
60 [label="11:CtTypeReferenceImpl@DetailAST" shape=ellipse]
61 [label="11:CtVirtualElement@getLineNo" shape=ellipse]
62 [label="11:CtVariableReadImpl@parent" shape=ellipse]
63 [label="11:CtLocalVariableReferenceImpl@parent" shape=ellipse]
64 [label="11:CtInvocationImpl@parent.getLineNo()" shape=ellipse]
65 [label="11:CtExecutableReferenceImpl@getColumnNo()" shape=ellipse]
66 [label="11:CtTypeReferenceImpl@DetailAST" shape=ellipse]
67 [label="11:CtVirtualElement@getColumnNo" shape=ellipse]
68 [label="11:CtVariableReadImpl@parent" shape=ellipse]
69 [label="11:CtLocalVariableReferenceImpl@parent" shape=ellipse]
70 [label="11:CtInvocationImpl@parent.getColumnNo()" shape=ellipse]
71 [label="11:CtLiteralImpl@\"simplify.expression\"" shape=ellipse]
72 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
73 [label="11:CtInvocationImpl@log(parent.getLineNo(), parent.getColumnNo(), \"simplify.expression\")" shape=ellipse]
74 [label="12:CtBreakImpl@break" shape=ellipse]
75 [label="10:CtCaseImpl@case TokenTypes.LAND :
    log(parent.getLineNo(), parent.getColumnNo(), \"simplify.expression\");
    break;" shape=ellipse]
76 [label="14:CtBreakImpl@break" shape=ellipse]
77 [label="13:CtCaseImpl@default :
    break;" shape=ellipse]
78 [label="5:CtSwitchImpl@switch (parent.getType()) \{
    case TokenTypes.NOT_EQUAL :
    case TokenTypes.EQUAL :
    case TokenTypes.LNOT :
    case TokenTypes.LOR :
    case TokenTypes.LAND :
        log(parent.getLineNo(), parent.getColumnNo(), \"simplify.expression\");
        break;
    default :
        break;
\}" shape=ellipse]
79 [label="3:CtBlockImpl@\{
    final DetailAST parent = ast.getParent();
    switch (parent.getType()) \{
        case TokenTypes.NOT_EQUAL :
        case TokenTypes.EQUAL :
        case TokenTypes.LNOT :
        case TokenTypes.LOR :
        case TokenTypes.LAND :
            log(parent.getLineNo(), parent.getColumnNo(), \"simplify.expression\");
            break;
        default :
            break;
    \}
\}" shape=ellipse]
80 [label="3:CtMethodImpl@@Override
public void visitToken(DetailAST ast) \{
    final DetailAST parent = ast.getParent();
    switch (parent.getType()) \{
        case TokenTypes.NOT_EQUAL :
        case TokenTypes.EQUAL :
        case TokenTypes.LNOT :
        case TokenTypes.LOR :
        case TokenTypes.LAND :
            log(parent.getLineNo(), parent.getColumnNo(), \"simplify.expression\");
            break;
        default :
            break;
    \}
\}" shape=ellipse]
81 [label="2:CtAnnotationImpl@@Override" shape=ellipse]
82 [label="11:Delete@DELETE" shape=ellipse]
83 [label="11:Insert@INSERT" shape=ellipse]
84 [label="11:CtPackageReferenceImpl@" shape=ellipse]
85 [label="11:CtTypeReferenceImpl@MSG_KEY" shape=ellipse]
86 [label="11:CtTypeAccessImpl@MSG_KEY" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
10 -> 11 [label="AST"];
10 -> 13 [label="Data Dep"];
12 -> 9 [label="AST"];
12 -> 10 [label="AST"];
12 -> 6 [label="AST"];
13 -> 18 [label="Define-Use"];
13 -> 62 [label="Define-Use"];
13 -> 68 [label="Define-Use"];
14 -> 13 [label="AST"];
14 -> 4 [label="AST"];
14 -> 12 [label="AST"];
15 -> 16 [label="AST"];
18 -> 19 [label="AST"];
20 -> 17 [label="AST"];
20 -> 18 [label="AST"];
20 -> 15 [label="AST"];
20 -> 26 [label="Control Dep"];
20 -> 24 [label="Control Dep"];
20 -> 32 [label="Control Dep"];
20 -> 30 [label="Control Dep"];
20 -> 38 [label="Control Dep"];
20 -> 36 [label="Control Dep"];
20 -> 44 [label="Control Dep"];
20 -> 42 [label="Control Dep"];
20 -> 75 [label="Control Dep"];
20 -> 48 [label="Control Dep"];
20 -> 73 [label="Control Dep"];
20 -> 50 [label="Control Dep"];
20 -> 57 [label="Control Dep"];
20 -> 55 [label="Control Dep"];
20 -> 64 [label="Control Dep"];
20 -> 59 [label="Control Dep"];
20 -> 62 [label="Control Dep"];
20 -> 70 [label="Control Dep"];
20 -> 65 [label="Control Dep"];
20 -> 68 [label="Control Dep"];
20 -> 71 [label="Control Dep"];
20 -> 74 [label="Control Dep"];
20 -> 77 [label="Control Dep"];
20 -> 76 [label="Control Dep"];
20 -> 86 [label="Control Dep"];
21 -> 22 [label="AST"];
21 -> 23 [label="AST"];
24 -> 25 [label="AST"];
24 -> 21 [label="AST"];
26 -> 24 [label="AST"];
27 -> 28 [label="AST"];
27 -> 29 [label="AST"];
30 -> 31 [label="AST"];
30 -> 27 [label="AST"];
32 -> 30 [label="AST"];
33 -> 34 [label="AST"];
33 -> 35 [label="AST"];
36 -> 37 [label="AST"];
36 -> 33 [label="AST"];
38 -> 36 [label="AST"];
39 -> 40 [label="AST"];
39 -> 41 [label="AST"];
42 -> 43 [label="AST"];
42 -> 39 [label="AST"];
44 -> 42 [label="AST"];
45 -> 46 [label="AST"];
45 -> 47 [label="AST"];
48 -> 49 [label="AST"];
48 -> 45 [label="AST"];
50 -> 51 [label="AST"];
50 -> 52 [label="AST"];
50 -> 53 [label="AST"];
55 -> 56 [label="AST"];
57 -> 58 [label="AST"];
57 -> 55 [label="AST"];
59 -> 60 [label="AST"];
62 -> 63 [label="AST"];
64 -> 61 [label="AST"];
64 -> 62 [label="AST"];
64 -> 59 [label="AST"];
65 -> 66 [label="AST"];
68 -> 69 [label="AST"];
70 -> 67 [label="AST"];
70 -> 68 [label="AST"];
70 -> 65 [label="AST"];
71 -> 72 [label="AST"];
71 -> 82 [label="Action"];
73 -> 54 [label="AST"];
73 -> 57 [label="AST"];
73 -> 50 [label="AST"];
73 -> 64 [label="AST"];
73 -> 70 [label="AST"];
73 -> 71 [label="AST"];
73 -> 83 [label="Action"];
75 -> 48 [label="AST"];
75 -> 73 [label="AST"];
75 -> 74 [label="AST"];
77 -> 76 [label="AST"];
78 -> 20 [label="AST"];
78 -> 26 [label="AST"];
78 -> 32 [label="AST"];
78 -> 38 [label="AST"];
78 -> 44 [label="AST"];
78 -> 75 [label="AST"];
78 -> 77 [label="AST"];
79 -> 14 [label="AST"];
79 -> 78 [label="AST"];
80 -> 1 [label="AST"];
80 -> 81 [label="AST"];
80 -> 0 [label="AST"];
80 -> 2 [label="AST"];
80 -> 79 [label="AST"];
83 -> 86 [label="Action"];
85 -> 84 [label="AST"];
86 -> 85 [label="AST"];
}