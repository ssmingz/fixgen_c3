digraph "testFileExtensions#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@testFileExtensions" shape=ellipse]
2 [label="4:CtVirtualElement@String[]" shape=ellipse]
3 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="4:CtNewArrayImpl@new String[]\{ \"java\" \}" shape=ellipse]
6 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
7 [label="4:CtLiteralImpl@\"java\"" shape=ellipse]
8 [label="4:CtVirtualElement@fileExtensions" shape=ellipse]
9 [label="4:CtLocalVariableImpl@final String[] fileExtensions = new String[]\{ \"java\" \}" shape=ellipse]
10 [label="5:CtTypeReferenceImpl@File" shape=ellipse]
11 [label="5:CtPackageReferenceImpl@" shape=ellipse]
12 [label="5:CtExecutableReferenceImpl@File(java.lang.String)" shape=ellipse]
13 [label="5:CtTypeReferenceImpl@File" shape=ellipse]
14 [label="5:CtTypeReferenceImpl@File" shape=ellipse]
15 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
16 [label="5:CtLiteralImpl@\"file.pdf\"" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
18 [label="5:CtConstructorCallImpl@new File(\"file.pdf\")" shape=ellipse]
19 [label="5:CtVirtualElement@file" shape=ellipse]
20 [label="5:CtLocalVariableImpl@File file = new File(\"file.pdf\")" shape=ellipse]
21 [label="6:CtExecutableReferenceImpl@assertFalse(<unknown>)" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
23 [label="6:CtVirtualElement@assertFalse" shape=ellipse]
24 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
25 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
26 [label="6:CtThisAccessImpl@" shape=ellipse]
27 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
28 [label="6:CtExecutableReferenceImpl@fileExtensionMatches(File,java.lang.String[])" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@Utils" shape=ellipse]
30 [label="6:CtTypeReferenceImpl@File" shape=ellipse]
31 [label="6:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
32 [label="6:CtVirtualElement@fileExtensionMatches" shape=ellipse]
33 [label="6:CtTypeAccessImpl@Utils" shape=ellipse]
34 [label="6:CtTypeReferenceImpl@Utils" shape=ellipse]
35 [label="6:CtVariableReadImpl@file" shape=ellipse]
36 [label="6:CtLocalVariableReferenceImpl@file" shape=ellipse]
37 [label="6:CtVariableReadImpl@fileExtensions" shape=ellipse]
38 [label="6:CtLocalVariableReferenceImpl@fileExtensions" shape=ellipse]
39 [label="6:CtInvocationImpl@Utils.fileExtensionMatches(file, fileExtensions)" shape=ellipse]
40 [label="6:CtInvocationImpl@assertFalse(Utils.fileExtensionMatches(file, fileExtensions))" shape=ellipse]
41 [label="7:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
42 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
43 [label="7:CtVirtualElement@assertTrue" shape=ellipse]
44 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
45 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
46 [label="7:CtThisAccessImpl@" shape=ellipse]
47 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
48 [label="7:CtExecutableReferenceImpl@fileExtensionMatches(File,<unknown>)" shape=ellipse]
49 [label="7:CtTypeReferenceImpl@Utils" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@File" shape=ellipse]
51 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
52 [label="7:CtVirtualElement@fileExtensionMatches" shape=ellipse]
53 [label="7:CtTypeAccessImpl@Utils" shape=ellipse]
54 [label="7:CtTypeReferenceImpl@Utils" shape=ellipse]
55 [label="7:CtVariableReadImpl@file" shape=ellipse]
56 [label="7:CtLocalVariableReferenceImpl@file" shape=ellipse]
57 [label="7:CtLiteralImpl@null" shape=ellipse]
58 [label="7:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
59 [label="7:CtInvocationImpl@Utils.fileExtensionMatches(file, null)" shape=ellipse]
60 [label="7:CtInvocationImpl@assertTrue(Utils.fileExtensionMatches(file, null))" shape=ellipse]
61 [label="8:CtVariableWriteImpl@file" shape=ellipse]
62 [label="8:CtLocalVariableReferenceImpl@file" shape=ellipse]
63 [label="8:CtExecutableReferenceImpl@File(java.lang.String)" shape=ellipse]
64 [label="8:CtTypeReferenceImpl@File" shape=ellipse]
65 [label="8:CtTypeReferenceImpl@File" shape=ellipse]
66 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
67 [label="8:CtLiteralImpl@\"file.java\"" shape=ellipse]
68 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
69 [label="8:CtConstructorCallImpl@new File(\"file.java\")" shape=ellipse]
70 [label="8:CtAssignmentImpl@file = new File(\"file.java\")" shape=ellipse]
71 [label="9:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
72 [label="9:CtTypeReferenceImpl@null" shape=ellipse]
73 [label="9:CtVirtualElement@assertTrue" shape=ellipse]
74 [label="9:CtTypeAccessImpl@PlaceHold" shape=ellipse]
75 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
76 [label="9:CtThisAccessImpl@" shape=ellipse]
77 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
78 [label="9:CtExecutableReferenceImpl@fileExtensionMatches(File,java.lang.String[])" shape=ellipse]
79 [label="9:CtTypeReferenceImpl@Utils" shape=ellipse]
80 [label="9:CtTypeReferenceImpl@File" shape=ellipse]
81 [label="9:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
82 [label="9:CtVirtualElement@fileExtensionMatches" shape=ellipse]
83 [label="9:CtTypeAccessImpl@Utils" shape=ellipse]
84 [label="9:CtTypeReferenceImpl@Utils" shape=ellipse]
85 [label="9:CtVariableReadImpl@file" shape=ellipse]
86 [label="9:CtLocalVariableReferenceImpl@file" shape=ellipse]
87 [label="9:CtVariableReadImpl@fileExtensions" shape=ellipse]
88 [label="9:CtLocalVariableReferenceImpl@fileExtensions" shape=ellipse]
89 [label="9:CtInvocationImpl@Utils.fileExtensionMatches(file, fileExtensions)" shape=ellipse]
90 [label="9:CtInvocationImpl@assertTrue(Utils.fileExtensionMatches(file, fileExtensions))" shape=ellipse]
91 [label="10:CtVariableWriteImpl@file" shape=ellipse]
92 [label="10:CtLocalVariableReferenceImpl@file" shape=ellipse]
93 [label="10:CtExecutableReferenceImpl@File(java.lang.String)" shape=ellipse]
94 [label="10:CtTypeReferenceImpl@File" shape=ellipse]
95 [label="10:CtTypeReferenceImpl@File" shape=ellipse]
96 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
97 [label="10:CtLiteralImpl@\"file.\"" shape=ellipse]
98 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
99 [label="10:CtConstructorCallImpl@new File(\"file.\")" shape=ellipse]
100 [label="10:CtAssignmentImpl@file = new File(\"file.\")" shape=ellipse]
101 [label="11:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
102 [label="11:CtTypeReferenceImpl@null" shape=ellipse]
103 [label="11:CtVirtualElement@assertTrue" shape=ellipse]
104 [label="11:CtTypeAccessImpl@PlaceHold" shape=ellipse]
105 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
106 [label="11:CtThisAccessImpl@" shape=ellipse]
107 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
108 [label="11:CtExecutableReferenceImpl@fileExtensionMatches(File,java.lang.String)" shape=ellipse]
109 [label="11:CtTypeReferenceImpl@Utils" shape=ellipse]
110 [label="11:CtTypeReferenceImpl@File" shape=ellipse]
111 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
112 [label="11:CtVirtualElement@fileExtensionMatches" shape=ellipse]
113 [label="11:CtTypeAccessImpl@Utils" shape=ellipse]
114 [label="11:CtTypeReferenceImpl@Utils" shape=ellipse]
115 [label="11:CtVariableReadImpl@file" shape=ellipse]
116 [label="11:CtLocalVariableReferenceImpl@file" shape=ellipse]
117 [label="11:CtLiteralImpl@\"\"" shape=ellipse]
118 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
119 [label="11:CtInvocationImpl@Utils.fileExtensionMatches(file, \"\")" shape=ellipse]
120 [label="11:CtInvocationImpl@assertTrue(Utils.fileExtensionMatches(file, \"\"))" shape=ellipse]
121 [label="3:CtBlockImpl@\{
    final String[] fileExtensions = new String[]\{ \"java\" \};
    File file = new File(\"file.pdf\");
    assertFalse(Utils.fileExtensionMatches(file, fileExtensions));
    assertTrue(Utils.fileExtensionMatches(file, null));
    file = new File(\"file.java\");
    assertTrue(Utils.fileExtensionMatches(file, fileExtensions));
    file = new File(\"file.\");
    assertTrue(Utils.fileExtensionMatches(file, \"\"));
\}" shape=ellipse]
122 [label="3:CtMethodImpl@@Test
public void testFileExtensions() \{
    final String[] fileExtensions = new String[]\{ \"java\" \};
    File file = new File(\"file.pdf\");
    assertFalse(Utils.fileExtensionMatches(file, fileExtensions));
    assertTrue(Utils.fileExtensionMatches(file, null));
    file = new File(\"file.java\");
    assertTrue(Utils.fileExtensionMatches(file, fileExtensions));
    file = new File(\"file.\");
    assertTrue(Utils.fileExtensionMatches(file, \"\"));
\}" shape=ellipse]
123 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
124 [label="7:Update@UPDATE" shape=ellipse]
125 [label="7:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
126 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
127 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
128 [label="7:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
129 [label="7:CtLiteralImpl@((String[]) (null))" shape=ellipse]
3 -> 2 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
5 -> 7 [label="AST"];
8 -> 37 [label="Define-Use"];
8 -> 87 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 3 [label="AST"];
9 -> 5 [label="AST"];
10 -> 11 [label="AST"];
12 -> 13 [label="AST"];
12 -> 14 [label="AST"];
12 -> 15 [label="AST"];
16 -> 17 [label="AST"];
18 -> 12 [label="AST"];
18 -> 16 [label="AST"];
19 -> 35 [label="Define-Use"];
19 -> 55 [label="Define-Use"];
20 -> 19 [label="AST"];
20 -> 10 [label="AST"];
20 -> 18 [label="AST"];
21 -> 22 [label="AST"];
24 -> 25 [label="AST"];
26 -> 27 [label="AST"];
26 -> 24 [label="AST"];
28 -> 29 [label="AST"];
28 -> 30 [label="AST"];
28 -> 31 [label="AST"];
33 -> 34 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
39 -> 32 [label="AST"];
39 -> 33 [label="AST"];
39 -> 28 [label="AST"];
39 -> 35 [label="AST"];
39 -> 37 [label="AST"];
40 -> 23 [label="AST"];
40 -> 26 [label="AST"];
40 -> 21 [label="AST"];
40 -> 39 [label="AST"];
41 -> 42 [label="AST"];
44 -> 45 [label="AST"];
46 -> 47 [label="AST"];
46 -> 44 [label="AST"];
48 -> 49 [label="AST"];
48 -> 50 [label="AST"];
48 -> 51 [label="AST"];
53 -> 54 [label="AST"];
55 -> 56 [label="AST"];
57 -> 58 [label="AST"];
57 -> 124 [label="Action"];
59 -> 52 [label="AST"];
59 -> 53 [label="AST"];
59 -> 48 [label="AST"];
59 -> 55 [label="AST"];
59 -> 57 [label="AST"];
60 -> 43 [label="AST"];
60 -> 46 [label="AST"];
60 -> 41 [label="AST"];
60 -> 59 [label="AST"];
61 -> 62 [label="AST"];
61 -> 85 [label="Define-Use"];
63 -> 64 [label="AST"];
63 -> 65 [label="AST"];
63 -> 66 [label="AST"];
67 -> 68 [label="AST"];
69 -> 63 [label="AST"];
69 -> 67 [label="AST"];
70 -> 61 [label="AST"];
70 -> 69 [label="AST"];
71 -> 72 [label="AST"];
74 -> 75 [label="AST"];
76 -> 77 [label="AST"];
76 -> 74 [label="AST"];
78 -> 79 [label="AST"];
78 -> 80 [label="AST"];
78 -> 81 [label="AST"];
83 -> 84 [label="AST"];
85 -> 86 [label="AST"];
87 -> 88 [label="AST"];
89 -> 82 [label="AST"];
89 -> 83 [label="AST"];
89 -> 78 [label="AST"];
89 -> 85 [label="AST"];
89 -> 87 [label="AST"];
90 -> 73 [label="AST"];
90 -> 76 [label="AST"];
90 -> 71 [label="AST"];
90 -> 89 [label="AST"];
91 -> 92 [label="AST"];
91 -> 115 [label="Define-Use"];
93 -> 94 [label="AST"];
93 -> 95 [label="AST"];
93 -> 96 [label="AST"];
97 -> 98 [label="AST"];
99 -> 93 [label="AST"];
99 -> 97 [label="AST"];
100 -> 91 [label="AST"];
100 -> 99 [label="AST"];
101 -> 102 [label="AST"];
104 -> 105 [label="AST"];
106 -> 107 [label="AST"];
106 -> 104 [label="AST"];
108 -> 109 [label="AST"];
108 -> 110 [label="AST"];
108 -> 111 [label="AST"];
113 -> 114 [label="AST"];
115 -> 116 [label="AST"];
117 -> 118 [label="AST"];
119 -> 112 [label="AST"];
119 -> 113 [label="AST"];
119 -> 108 [label="AST"];
119 -> 115 [label="AST"];
119 -> 117 [label="AST"];
120 -> 103 [label="AST"];
120 -> 106 [label="AST"];
120 -> 101 [label="AST"];
120 -> 119 [label="AST"];
121 -> 9 [label="AST"];
121 -> 20 [label="AST"];
121 -> 40 [label="AST"];
121 -> 60 [label="AST"];
121 -> 70 [label="AST"];
121 -> 90 [label="AST"];
121 -> 100 [label="AST"];
121 -> 120 [label="AST"];
122 -> 1 [label="AST"];
122 -> 123 [label="AST"];
122 -> 0 [label="AST"];
122 -> 121 [label="AST"];
124 -> 129 [label="Action"];
127 -> 126 [label="AST"];
128 -> 127 [label="AST"];
129 -> 125 [label="AST"];
129 -> 128 [label="AST"];
}