digraph "Pattern" {
0 [label="process#?,File#10:INSERT
process#?,File[]#15:INSERT" shape=ellipse]
1 [label="process#?,File#10:Utils.getLines(fileName)
process#?,File[]#15:Utils.getLines(file.getPath())" shape=ellipse]
2 [label="process#?,File#10:final String[] lines = Utils.getLines(fileName)
process#?,File[]#15:String[] lines = Utils.getLines(file.getPath())" shape=ellipse]
3 [label="process#?,File#8:\{
    getMessageDispatcher().fireFileStarted(fileName);
    final String[] lines = Utils.getLines(fileName);
    final FileContents contents = new FileContents(fileName, lines);
    final DetailAST rootAST = TreeWalker.parse(contents);
    walk(rootAST, contents);
\}
process#?,File[]#13:\{
    File file = mFiles[i];
    String[] lines = Utils.getLines(file.getPath());
    ChecksumGenerator transformer = findChecksumGenerator(file);
    mLineChecksums[i] = transformer.convertLines(lines);
\}" shape=ellipse]
4 [label="process#?,File#10:lines" shape=ellipse]
5 [label="process#?,File#10:String[]
process#?,File[]#15:String[]" shape=ellipse]
6 [label="process#?,File#10:getLines
process#?,File[]#15:getLines" shape=ellipse]
7 [label="process#?,File#10:Utils
process#?,File[]#15:Utils" shape=ellipse]
8 [label="process#?,File#10:Utils" shape=ellipse]
9 [label="process#?,File#10:getLines(java.lang.String)
process#?,File[]#15:getLines()" shape=ellipse]
10 [label="process#?,File#10:Utils" shape=ellipse]
11 [label="process#?,File#10:String[]" shape=ellipse]
12 [label="process#?,File#10:String" shape=ellipse]
13 [label="process#?,File#10:fileName" shape=ellipse]
14 [label="process#?,File#3:fileName
process#?,File[]#15:file" shape=ellipse]
15 [label="process#?,File#10:fileName" shape=ellipse]
16 [label="process#?,File#10:getCharset()
process#?,File[]#15:getCharset()" shape=ellipse]
17 [label="process#?,File#10:getCharset
process#?,File[]#15:getCharset" shape=ellipse]
18 [label="process#?,File#10:
process#?,File[]#15:" shape=ellipse]
19 [label="process#?,File#10:PlaceHold" shape=ellipse]
20 [label="process#?,File#10:
process#?,File[]#15:getPath()" shape=ellipse]
21 [label="process#?,File#10:PlaceHold
process#?,File[]#15:PlaceHold" shape=ellipse]
22 [label="process#?,File#10:PlaceHold" shape=ellipse]
23 [label="process#?,File#10:
process#?,File[]#16:findChecksumGenerator(<unknown>)" shape=ellipse]
24 [label="process#?,File#11:lines
process#?,File[]#17:lines" shape=ellipse]
25 [label="process#?,File#11:lines" shape=ellipse]
26 [label="process#?,File#12:contents
process#?,File[]#17:transformer" shape=ellipse]
27 [label="process#?,File#12:contents" shape=ellipse]
28 [label="process#?,File#13:rootAST
process#?,File[]#12:mFiles.length" shape=ellipse]
29 [label="process#?,File#13:rootAST" shape=ellipse]
30 [label="process#?,File#13:contents
process#?,File[]#17:mLineChecksums" shape=ellipse]
31 [label="process#?,File#13:contents" shape=ellipse]
32 [label="process#?,File#10:getCharset()
process#?,File[]#15:getCharset()" shape=ellipse]
33 [label="process#?,File[]#12:\{
    try \{
        File file = mFiles[i];
        String[] lines = Utils.getLines(file.getPath());
        ChecksumGenerator transformer = findChecksumGenerator(file);
        mLineChecksums[i] = transformer.convertLines(lines);
    \} catch (IOException ex) \{
        LOG.error(\"Cannot access files to check, giving up: \" + ex.getMessage(), ex);
        mLineChecksums = new long[0][0];
    \}
\}" shape=ellipse]
34 [label="process#?,File[]#12:i < mFiles.length" shape=ellipse]
35 [label="process#?,File[]#12:for (int i = 0; i < mFiles.length; i++) \{
    try \{
        File file = mFiles[i];
        String[] lines = Utils.getLines(file.getPath());
        ChecksumGenerator transformer = findChecksumGenerator(file);
        mLineChecksums[i] = transformer.convertLines(lines);
    \} catch (IOException ex) \{
        LOG.error(\"Cannot access files to check, giving up: \" + ex.getMessage(), ex);
        mLineChecksums = new long[0][0];
    \}
\}" shape=ellipse]
36 [label="process#?,File[]#12:i" shape=ellipse]
37 [label="process#?,File[]#17:transformer.convertLines(lines)" shape=ellipse]
38 [label="process#?,File[]#13:try \{
    File file = mFiles[i];
    String[] lines = Utils.getLines(file.getPath());
    ChecksumGenerator transformer = findChecksumGenerator(file);
    mLineChecksums[i] = transformer.convertLines(lines);
\} catch (IOException ex) \{
    LOG.error(\"Cannot access files to check, giving up: \" + ex.getMessage(), ex);
    mLineChecksums = new long[0][0];
\}" shape=ellipse]
39 [label="process#?,File[]#17:mLineChecksums[i] = transformer.convertLines(lines)" shape=ellipse]
40 [label="process#?,File[]#14:mFiles[i]" shape=ellipse]
41 [label="process#?,File[]#17:mLineChecksums[i]" shape=ellipse]
42 [label="process#?,File[]#14:mFiles" shape=ellipse]
43 [label="process#?,File[]#16:file" shape=ellipse]
44 [label="process#?,File[]#16:PlaceHold" shape=ellipse]
45 [label="process#?,File[]#14:i" shape=ellipse]
46 [label="process#?,File[]#15:file.getPath()" shape=ellipse]
47 [label="process#?,File[]#18: catch (IOException ex) \{
    LOG.error(\"Cannot access files to check, giving up: \" + ex.getMessage(), ex);
    mLineChecksums = new long[0][0];
\}" shape=ellipse]
48 [label="process#?,File[]#16:findChecksumGenerator(file)" shape=ellipse]
49 [label="process#?,File[]#17:i" shape=ellipse]
50 [label="process#?,File[]#16:" shape=ellipse]
51 [label="process#?,File[]#16:ChecksumGenerator transformer = findChecksumGenerator(file)" shape=ellipse]
52 [label="process#?,File[]#14:File file = mFiles[i]" shape=ellipse]
53 [label="process#?,File[]#17:convertLines(java.lang.String[])" shape=ellipse]
54 [label="process#?,File[]#18:IOException ex" shape=ellipse]
0 -> 16 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 9 [label="AST:2"];
1 -> 13 [label="AST:1"];
1 -> 46 [label="AST:1"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:1"];
2 -> 5 [label="AST:2"];
3 -> 2 [label="AST:2"];
3 -> 39 [label="AST:1"];
3 -> 51 [label="AST:1"];
3 -> 52 [label="AST:1"];
4 -> 24 [label="Define Use:1"];
7 -> 8 [label="AST:1"];
9 -> 10 [label="AST:1"];
9 -> 11 [label="AST:1"];
9 -> 12 [label="AST:1"];
13 -> 4 [label="Data Dep:1"];
13 -> 15 [label="AST:1"];
14 -> 13 [label="Define Use:1"];
16 -> 17 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 32 [label="AST:2"];
18 -> 19 [label="AST:1"];
18 -> 21 [label="AST:2"];
19 -> 20 [label="AST:1"];
21 -> 22 [label="AST:1"];
22 -> 23 [label="AST:1"];
24 -> 25 [label="AST:1"];
24 -> 41 [label="Data Dep:1"];
26 -> 27 [label="AST:1"];
26 -> 41 [label="Data Dep:1"];
28 -> 29 [label="AST:1"];
30 -> 31 [label="AST:1"];
33 -> 38 [label="AST:1"];
34 -> 33 [label="Control Dep:1"];
34 -> 36 [label="AST:1"];
34 -> 28 [label="AST:1"];
34 -> 38 [label="Control Dep:1"];
34 -> 3 [label="Control Dep:1"];
34 -> 52 [label="Control Dep:1"];
34 -> 40 [label="Control Dep:1"];
34 -> 42 [label="Control Dep:1"];
34 -> 45 [label="Control Dep:1"];
34 -> 2 [label="Control Dep:1"];
34 -> 5 [label="Control Dep:1"];
34 -> 1 [label="Control Dep:1"];
34 -> 9 [label="Control Dep:1"];
34 -> 7 [label="Control Dep:1"];
34 -> 46 [label="Control Dep:1"];
34 -> 20 [label="Control Dep:1"];
34 -> 14 [label="Control Dep:1"];
34 -> 51 [label="Control Dep:1"];
34 -> 48 [label="Control Dep:1"];
34 -> 23 [label="Control Dep:1"];
34 -> 50 [label="Control Dep:1"];
34 -> 44 [label="Control Dep:1"];
34 -> 43 [label="Control Dep:1"];
34 -> 39 [label="Control Dep:1"];
34 -> 41 [label="Control Dep:1"];
34 -> 30 [label="Control Dep:1"];
34 -> 49 [label="Control Dep:1"];
34 -> 37 [label="Control Dep:1"];
34 -> 53 [label="Control Dep:1"];
34 -> 26 [label="Control Dep:1"];
34 -> 24 [label="Control Dep:1"];
34 -> 47 [label="Control Dep:1"];
34 -> 54 [label="Control Dep:1"];
34 -> 21 [label="Control Dep:1"];
34 -> 18 [label="Control Dep:1"];
34 -> 32 [label="Control Dep:1"];
34 -> 16 [label="Control Dep:1"];
35 -> 33 [label="AST:1"];
35 -> 34 [label="AST:1"];
37 -> 26 [label="AST:1"];
37 -> 53 [label="AST:1"];
37 -> 24 [label="AST:1"];
38 -> 3 [label="AST:1"];
38 -> 47 [label="AST:1"];
39 -> 37 [label="AST:1"];
39 -> 41 [label="AST:1"];
40 -> 42 [label="AST:1"];
40 -> 45 [label="AST:1"];
41 -> 30 [label="AST:1"];
41 -> 49 [label="AST:1"];
46 -> 14 [label="AST:1"];
46 -> 20 [label="AST:1"];
47 -> 54 [label="AST:1"];
48 -> 43 [label="AST:1"];
48 -> 50 [label="AST:1"];
48 -> 23 [label="AST:1"];
50 -> 44 [label="AST:1"];
51 -> 48 [label="AST:1"];
52 -> 40 [label="AST:1"];
}