digraph "Pattern" {
0 [label="##ActionPoint##
locationInParent:ACTION
nodeType:Move
nodeType2:ActionNode
nodeType3:CtElementImpl
value:MOVE
value2:" shape=ellipse]
1 [label="locationInParent:EXPRESSION
nodeType:CtFieldReadImpl
nodeType2:CtFieldAccessImpl
nodeType3:CtVariableAccessImpl
value:TokenTypes.LITERAL_TRY
value2:TokenTypes.PlaceHold" shape=ellipse]
2 [label="locationInParent:EXPRESSION
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:ast.getType()
value2:DetailAST.getType()" shape=ellipse]
3 [label="locationInParent:STATEMENT
nodeType:CtSwitchImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
4 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:getType
value2:DetailAST.getType()" shape=ellipse]
5 [label="locationInParent:TARGET
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:ast
value2:DetailAST" shape=ellipse]
6 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:getType()
value2:getType()" shape=ellipse]
7 [label="locationInParent:CASE
nodeType:CtCaseImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
8 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl" shape=ellipse]
9 [label="locationInParent:CONDITION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:ast.getType() == TokenTypes.LITERAL_TRY
value2:DetailAST.getType() == TokenTypes.PlaceHold" shape=ellipse]
10 [label="locationInParent:THEN
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
11 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl" shape=ellipse]
12 [label="locationInParent:TARGET
nodeType:CtThisAccessImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:
value2:" shape=ellipse]
13 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
14 [label="locationInParent:ELSE
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:\{
    throw new IllegalStateException(ast.toString());
\}
value2:\{
    throw new java.lang.IllegalStateException(DetailAST.toString());
\}" shape=ellipse]
15 [label="locationInParent:STATEMENT
nodeType:CtThrowImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:throw new IllegalStateException(ast.toString())
value2:throw new java.lang.IllegalStateException(DetailAST.toString())" shape=ellipse]
16 [label="locationInParent:EXPRESSION
nodeType:CtConstructorCallImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:new IllegalStateException(ast.toString())
value2:new java.lang.IllegalStateException(DetailAST.toString())" shape=ellipse]
17 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:java.lang.IllegalStateException(java.lang.String)
value2:java.lang.IllegalStateException(java.lang.String)" shape=ellipse]
18 [label="locationInParent:ARGUMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:ast.toString()
value2:DetailAST.toString()" shape=ellipse]
19 [label="locationInParent:TARGET
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:ast
value2:DetailAST" shape=ellipse]
20 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
21 [label="locationInParent:ACCESSED_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:PlaceHold
value2:PlaceHold" shape=ellipse]
22 [label="locationInParent:DECLARING_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IllegalStateException
value2:java.lang.IllegalStateException" shape=ellipse]
23 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:IllegalStateException
value2:java.lang.IllegalStateException" shape=ellipse]
24 [label="locationInParent:ARGUMENT_TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:String
value2:java.lang.String" shape=ellipse]
25 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:toString
value2:DetailAST.toString()" shape=ellipse]
26 [label="locationInParent:VARIABLE
nodeType:CtParameterReferenceImpl
nodeType2:CtVariableReferenceImpl
nodeType3:CtVariableReferenceImpl
value:ast
value2:DetailAST" shape=ellipse]
27 [label="locationInParent:ACTION
nodeType:Move
nodeType2:ActionNode
nodeType3:CtElementImpl
value:MOVE
value2:" shape=ellipse]
28 [label="locationInParent:STATEMENT
nodeType:CtBreakImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:break
value2:break" shape=ellipse]
29 [label="locationInParent:CASE
nodeType:CtCaseImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:default :
    throw new IllegalStateException(ast.toString());
value2:default :
    throw new java.lang.IllegalStateException(DetailAST.toString());" shape=ellipse]
30 [label="locationInParent:ACTION
nodeType:Move
nodeType2:ActionNode
nodeType3:CtElementImpl
value:MOVE
value2:" shape=ellipse]
31 [label="locationInParent:TARGET
nodeType:CtTypeAccessImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:TokenTypes
value2:TokenTypes" shape=ellipse]
0 -> 9 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 31 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:2"];
2 -> 29 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 30 [label="Action:2"];
3 -> 2 [label="AST:2"];
3 -> 7 [label="AST:2"];
3 -> 29 [label="AST:2"];
7 -> 1 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 28 [label="AST:2"];
8 -> 12 [label="AST:2"];
8 -> 11 [label="AST:2"];
9 -> 8 [label="Control Dep:2"];
9 -> 10 [label="Control Dep:2"];
9 -> 14 [label="Control Dep:2"];
9 -> 11 [label="Control Dep:2"];
9 -> 12 [label="Control Dep:2"];
9 -> 13 [label="Control Dep:2"];
9 -> 15 [label="Control Dep:2"];
9 -> 16 [label="Control Dep:2"];
9 -> 17 [label="Control Dep:2"];
9 -> 18 [label="Control Dep:2"];
9 -> 19 [label="Control Dep:2"];
12 -> 20 [label="AST:2"];
12 -> 13 [label="AST:2"];
13 -> 21 [label="AST:2"];
15 -> 16 [label="AST:2"];
15 -> 27 [label="Action:2"];
16 -> 17 [label="AST:2"];
16 -> 18 [label="AST:2"];
17 -> 22 [label="AST:2"];
17 -> 23 [label="AST:2"];
17 -> 24 [label="AST:2"];
18 -> 25 [label="AST:2"];
18 -> 19 [label="AST:2"];
19 -> 26 [label="AST:2"];
27 -> 14 [label="Action:2"];
29 -> 15 [label="AST:2"];
30 -> 9 [label="Action:2"];
}