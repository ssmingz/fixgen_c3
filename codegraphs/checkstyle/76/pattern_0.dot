digraph "Pattern" {
0 [label="setOnCommentFormat#?,String#4:UPDATE
setOffCommentFormat#?,String#4:UPDATE" shape=ellipse]
1 [label="setOnCommentFormat#?,String#4:Utils.getPattern(format)
setOffCommentFormat#?,String#4:Utils.getPattern(format)" shape=ellipse]
2 [label="setOnCommentFormat#?,String#4:onRegexp = Utils.getPattern(format)
setOffCommentFormat#?,String#4:offRegexp = Utils.getPattern(format)" shape=ellipse]
3 [label="setOnCommentFormat#?,String#3:\{
    onRegexp = Utils.getPattern(format);
\}
setOffCommentFormat#?,String#3:\{
    offRegexp = Utils.getPattern(format);
\}" shape=ellipse]
4 [label="setOnCommentFormat#?,String#4:onRegexp
setOffCommentFormat#?,String#4:offRegexp" shape=ellipse]
5 [label="setOnCommentFormat#?,String#4:MOVE
setOffCommentFormat#?,String#4:MOVE" shape=ellipse]
6 [label="setOnCommentFormat#?,String#2:public void setOnCommentFormat(String format) throws ConversionException \{
    try \{
        onRegexp = Utils.getPattern(format);
    \} catch (final PatternSyntaxException e) \{
        throw new ConversionException(\"unable to parse \" + format, e);
    \}
\}
setOffCommentFormat#?,String#2:public void setOffCommentFormat(String format) throws ConversionException \{
    try \{
        offRegexp = Utils.getPattern(format);
    \} catch (final PatternSyntaxException e) \{
        throw new ConversionException(\"unable to parse \" + format, e);
    \}
\}" shape=ellipse]
7 [label="setOnCommentFormat#?,String#2:setOnCommentFormat
setOffCommentFormat#?,String#2:setOffCommentFormat" shape=ellipse]
8 [label="setOnCommentFormat#?,String#2:void
setOffCommentFormat#?,String#2:void" shape=ellipse]
9 [label="setOnCommentFormat#?,String#2:String format
setOffCommentFormat#?,String#2:String format" shape=ellipse]
10 [label="setOnCommentFormat#?,String#2:String
setOffCommentFormat#?,String#2:String" shape=ellipse]
11 [label="setOnCommentFormat#?,String#2:ConversionException
setOffCommentFormat#?,String#2:ConversionException" shape=ellipse]
12 [label="setOnCommentFormat#?,String#2:
setOffCommentFormat#?,String#2:" shape=ellipse]
13 [label="setOnCommentFormat#?,String#2:\{
    try \{
        onRegexp = Utils.getPattern(format);
    \} catch (final PatternSyntaxException e) \{
        throw new ConversionException(\"unable to parse \" + format, e);
    \}
\}
setOffCommentFormat#?,String#2:\{
    try \{
        offRegexp = Utils.getPattern(format);
    \} catch (final PatternSyntaxException e) \{
        throw new ConversionException(\"unable to parse \" + format, e);
    \}
\}" shape=ellipse]
14 [label="setOnCommentFormat#?,String#3:try \{
    onRegexp = Utils.getPattern(format);
\} catch (final PatternSyntaxException e) \{
    throw new ConversionException(\"unable to parse \" + format, e);
\}
setOffCommentFormat#?,String#3:try \{
    offRegexp = Utils.getPattern(format);
\} catch (final PatternSyntaxException e) \{
    throw new ConversionException(\"unable to parse \" + format, e);
\}" shape=ellipse]
15 [label="setOnCommentFormat#?,String#5: catch (final PatternSyntaxException e) \{
    throw new ConversionException(\"unable to parse \" + format, e);
\}
setOffCommentFormat#?,String#5: catch (final PatternSyntaxException e) \{
    throw new ConversionException(\"unable to parse \" + format, e);
\}" shape=ellipse]
16 [label="setOnCommentFormat#?,String#5:final PatternSyntaxException e
setOffCommentFormat#?,String#5:final PatternSyntaxException e" shape=ellipse]
17 [label="setOnCommentFormat#?,String#5:e
setOffCommentFormat#?,String#5:e" shape=ellipse]
18 [label="setOnCommentFormat#?,String#6:e
setOffCommentFormat#?,String#6:e" shape=ellipse]
19 [label="setOnCommentFormat#?,String#6:e
setOffCommentFormat#?,String#6:e" shape=ellipse]
20 [label="setOnCommentFormat#?,String#5:PatternSyntaxException
setOffCommentFormat#?,String#5:PatternSyntaxException" shape=ellipse]
21 [label="setOnCommentFormat#?,String#5:
setOffCommentFormat#?,String#5:" shape=ellipse]
22 [label="setOnCommentFormat#?,String#5:\{
    throw new ConversionException(\"unable to parse \" + format, e);
\}
setOffCommentFormat#?,String#5:\{
    throw new ConversionException(\"unable to parse \" + format, e);
\}" shape=ellipse]
23 [label="setOnCommentFormat#?,String#6:throw new ConversionException(\"unable to parse \" + format, e)
setOffCommentFormat#?,String#6:throw new ConversionException(\"unable to parse \" + format, e)" shape=ellipse]
24 [label="setOnCommentFormat#?,String#6:new ConversionException(\"unable to parse \" + format, e)
setOffCommentFormat#?,String#6:new ConversionException(\"unable to parse \" + format, e)" shape=ellipse]
25 [label="setOnCommentFormat#?,String#6:ConversionException()
setOffCommentFormat#?,String#6:ConversionException()" shape=ellipse]
26 [label="setOnCommentFormat#?,String#6:ConversionException
setOffCommentFormat#?,String#6:ConversionException" shape=ellipse]
27 [label="setOnCommentFormat#?,String#6:ConversionException
setOffCommentFormat#?,String#6:ConversionException" shape=ellipse]
28 [label="setOnCommentFormat#?,String#6:\"unable to parse \" + format
setOffCommentFormat#?,String#6:\"unable to parse \" + format" shape=ellipse]
29 [label="setOnCommentFormat#?,String#6:String
setOffCommentFormat#?,String#6:String" shape=ellipse]
30 [label="setOnCommentFormat#?,String#6:\"unable to parse \"
setOffCommentFormat#?,String#6:\"unable to parse \"" shape=ellipse]
31 [label="setOnCommentFormat#?,String#6:String
setOffCommentFormat#?,String#6:String" shape=ellipse]
32 [label="setOnCommentFormat#?,String#6:format
setOffCommentFormat#?,String#6:format" shape=ellipse]
33 [label="setOnCommentFormat#?,String#6:format
setOffCommentFormat#?,String#6:format" shape=ellipse]
34 [label="setOnCommentFormat#?,String#3:DELETE
setOffCommentFormat#?,String#3:DELETE" shape=ellipse]
35 [label="setOnCommentFormat#?,String#4:getPattern
setOffCommentFormat#?,String#4:getPattern" shape=ellipse]
36 [label="setOnCommentFormat#?,String#4:Utils
setOffCommentFormat#?,String#4:Utils" shape=ellipse]
37 [label="setOnCommentFormat#?,String#4:Utils
setOffCommentFormat#?,String#4:Utils" shape=ellipse]
38 [label="setOnCommentFormat#?,String#4:getPattern(java.lang.String)
setOffCommentFormat#?,String#4:getPattern(java.lang.String)" shape=ellipse]
39 [label="setOnCommentFormat#?,String#4:Utils
setOffCommentFormat#?,String#4:Utils" shape=ellipse]
40 [label="setOnCommentFormat#?,String#4:String
setOffCommentFormat#?,String#4:String" shape=ellipse]
41 [label="setOnCommentFormat#?,String#4:format
setOffCommentFormat#?,String#4:format" shape=ellipse]
42 [label="setOnCommentFormat#?,String#4:format
setOffCommentFormat#?,String#4:format" shape=ellipse]
43 [label="setOnCommentFormat#?,String#3:createPattern
setOffCommentFormat#?,String#3:createPattern" shape=ellipse]
44 [label="setOnCommentFormat#?,String#3:createPattern(java.lang.String)
setOffCommentFormat#?,String#3:createPattern(java.lang.String)" shape=ellipse]
45 [label="setOnCommentFormat#?,String#3:Utils
setOffCommentFormat#?,String#3:Utils" shape=ellipse]
46 [label="setOnCommentFormat#?,String#3:
setOffCommentFormat#?,String#3:" shape=ellipse]
47 [label="setOnCommentFormat#?,String#3:String
setOffCommentFormat#?,String#3:String" shape=ellipse]
48 [label="setOnCommentFormat#?,String#3:java.lang
setOffCommentFormat#?,String#3:java.lang" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 35 [label="AST:2"];
1 -> 36 [label="AST:2"];
1 -> 38 [label="AST:2"];
1 -> 41 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="Action:2"];
3 -> 2 [label="AST:2"];
5 -> 6 [label="Action:2"];
6 -> 7 [label="AST:2"];
6 -> 8 [label="AST:2"];
6 -> 9 [label="AST:2"];
6 -> 11 [label="AST:2"];
6 -> 13 [label="AST:2"];
9 -> 10 [label="AST:2"];
11 -> 12 [label="AST:2"];
13 -> 14 [label="AST:2"];
14 -> 3 [label="AST:2"];
14 -> 15 [label="AST:2"];
14 -> 34 [label="Action:2"];
15 -> 16 [label="AST:2"];
15 -> 22 [label="AST:2"];
16 -> 17 [label="AST:2"];
16 -> 20 [label="AST:2"];
16 -> 22 [label="Control Dep:2"];
16 -> 23 [label="Control Dep:2"];
16 -> 24 [label="Control Dep:2"];
16 -> 25 [label="Control Dep:2"];
16 -> 28 [label="Control Dep:2"];
16 -> 30 [label="Control Dep:2"];
16 -> 32 [label="Control Dep:2"];
16 -> 18 [label="Control Dep:2"];
17 -> 18 [label="Define Use:2"];
18 -> 19 [label="AST:2"];
20 -> 21 [label="AST:2"];
22 -> 23 [label="AST:2"];
23 -> 24 [label="AST:2"];
24 -> 18 [label="AST:2"];
24 -> 25 [label="AST:2"];
24 -> 28 [label="AST:2"];
25 -> 26 [label="AST:2"];
25 -> 27 [label="AST:2"];
28 -> 29 [label="AST:2"];
28 -> 30 [label="AST:2"];
28 -> 32 [label="AST:2"];
30 -> 31 [label="AST:2"];
32 -> 33 [label="AST:2"];
36 -> 37 [label="AST:2"];
38 -> 39 [label="AST:2"];
38 -> 40 [label="AST:2"];
41 -> 4 [label="Data Dep:2"];
41 -> 42 [label="AST:2"];
44 -> 45 [label="AST:2"];
44 -> 47 [label="AST:2"];
45 -> 46 [label="AST:2"];
47 -> 48 [label="AST:2"];
}