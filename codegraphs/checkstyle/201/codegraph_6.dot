digraph "testAddFilter#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@testAddFilter" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@DebugChecker" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@DebugChecker()" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DebugChecker" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@DebugChecker" shape=ellipse]
9 [label="4:CtConstructorCallImpl@new DebugChecker()" shape=ellipse]
10 [label="4:CtVirtualElement@checker" shape=ellipse]
11 [label="4:CtLocalVariableImpl@final DebugChecker checker = new DebugChecker()" shape=ellipse]
12 [label="5:CtTypeReferenceImpl@DebugFilter" shape=ellipse]
13 [label="5:CtPackageReferenceImpl@" shape=ellipse]
14 [label="5:CtExecutableReferenceImpl@DebugFilter()" shape=ellipse]
15 [label="5:CtTypeReferenceImpl@DebugFilter" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@DebugFilter" shape=ellipse]
17 [label="5:CtConstructorCallImpl@new DebugFilter()" shape=ellipse]
18 [label="5:CtVirtualElement@filter" shape=ellipse]
19 [label="5:CtLocalVariableImpl@final DebugFilter filter = new DebugFilter()" shape=ellipse]
20 [label="6:CtExecutableReferenceImpl@addFilter(DebugFilter)" shape=ellipse]
21 [label="6:CtTypeReferenceImpl@DebugChecker" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@DebugFilter" shape=ellipse]
23 [label="6:CtVirtualElement@addFilter" shape=ellipse]
24 [label="6:CtVariableReadImpl@checker" shape=ellipse]
25 [label="6:CtLocalVariableReferenceImpl@checker" shape=ellipse]
26 [label="6:CtVariableReadImpl@filter" shape=ellipse]
27 [label="6:CtLocalVariableReferenceImpl@filter" shape=ellipse]
28 [label="6:CtInvocationImpl@checker.addFilter(filter)" shape=ellipse]
29 [label="7:CtExecutableReferenceImpl@resetFilter()" shape=ellipse]
30 [label="7:CtTypeReferenceImpl@DebugFilter" shape=ellipse]
31 [label="7:CtVirtualElement@resetFilter" shape=ellipse]
32 [label="7:CtVariableReadImpl@filter" shape=ellipse]
33 [label="7:CtLocalVariableReferenceImpl@filter" shape=ellipse]
34 [label="7:CtInvocationImpl@filter.resetFilter()" shape=ellipse]
35 [label="8:CtTypeReferenceImpl@TreeSet<LocalizedMessage>" shape=ellipse]
36 [label="8:CtPackageReferenceImpl@" shape=ellipse]
37 [label="8:CtTypeReferenceImpl@LocalizedMessage" shape=ellipse]
38 [label="8:CtExecutableReferenceImpl@newTreeSet()" shape=ellipse]
39 [label="8:CtTypeReferenceImpl@Sets" shape=ellipse]
40 [label="8:CtTypeReferenceImpl@TreeSet<LocalizedMessage>" shape=ellipse]
41 [label="8:CtVirtualElement@newTreeSet" shape=ellipse]
42 [label="8:CtTypeAccessImpl@Sets" shape=ellipse]
43 [label="8:CtTypeReferenceImpl@Sets" shape=ellipse]
44 [label="8:CtInvocationImpl@Sets.newTreeSet()" shape=ellipse]
45 [label="8:CtVirtualElement@msgs" shape=ellipse]
46 [label="8:CtLocalVariableImpl@final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet()" shape=ellipse]
47 [label="9:CtExecutableReferenceImpl@add(LocalizedMessage)" shape=ellipse]
48 [label="9:CtTypeReferenceImpl@TreeSet<LocalizedMessage>" shape=ellipse]
49 [label="9:CtTypeReferenceImpl@LocalizedMessage" shape=ellipse]
50 [label="9:CtVirtualElement@add" shape=ellipse]
51 [label="9:CtVariableReadImpl@msgs" shape=ellipse]
52 [label="9:CtLocalVariableReferenceImpl@msgs" shape=ellipse]
53 [label="10:CtExecutableReferenceImpl@LocalizedMessage(int,int,java.lang.String,java.lang.String,java.lang.Object[],<unknown>,java.lang.Class,<unknown>)" shape=ellipse]
54 [label="10:CtTypeReferenceImpl@LocalizedMessage" shape=ellipse]
55 [label="10:CtTypeReferenceImpl@LocalizedMessage" shape=ellipse]
56 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
57 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
58 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
59 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
60 [label="10:CtArrayTypeReferenceImpl@Object[]" shape=ellipse]
61 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
62 [label="10:CtTypeReferenceImpl@Class<? extends PlaceHold>" shape=ellipse]
63 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
64 [label="11:CtLiteralImpl@0" shape=ellipse]
65 [label="11:CtTypeReferenceImpl@int" shape=ellipse]
66 [label="11:CtLiteralImpl@0" shape=ellipse]
67 [label="11:CtTypeReferenceImpl@int" shape=ellipse]
68 [label="11:CtLiteralImpl@\"a Bundle\"" shape=ellipse]
69 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
70 [label="11:CtLiteralImpl@\"message.key\"" shape=ellipse]
71 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
72 [label="11:CtNewArrayImpl@new Object[]\{ \"arg\" \}" shape=ellipse]
73 [label="11:CtArrayTypeReferenceImpl@Object[]" shape=ellipse]
74 [label="11:CtLiteralImpl@\"arg\"" shape=ellipse]
75 [label="11:CtLiteralImpl@null" shape=ellipse]
76 [label="11:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
77 [label="11:CtExecutableReferenceImpl@getClass()" shape=ellipse]
78 [label="11:CtTypeReferenceImpl@Object" shape=ellipse]
79 [label="11:CtTypeReferenceImpl@Class<? extends PlaceHold>" shape=ellipse]
80 [label="11:CtVirtualElement@getClass" shape=ellipse]
81 [label="11:CtTypeAccessImpl@PlaceHold" shape=ellipse]
82 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
83 [label="11:CtThisAccessImpl@" shape=ellipse]
84 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
85 [label="11:CtInvocationImpl@getClass()" shape=ellipse]
86 [label="11:CtLiteralImpl@null" shape=ellipse]
87 [label="11:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
88 [label="10:CtConstructorCallImpl@new LocalizedMessage(0, 0, \"a Bundle\", \"message.key\", new Object[]\{ \"arg\" \}, null, getClass(), null)" shape=ellipse]
89 [label="9:CtInvocationImpl@msgs.add(new LocalizedMessage(0, 0, \"a Bundle\", \"message.key\", new Object[]\{ \"arg\" \}, null, getClass(), null))" shape=ellipse]
90 [label="12:CtExecutableReferenceImpl@fireErrors(java.lang.String,TreeSet)" shape=ellipse]
91 [label="12:CtTypeReferenceImpl@DebugChecker" shape=ellipse]
92 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
93 [label="12:CtTypeReferenceImpl@TreeSet<LocalizedMessage>" shape=ellipse]
94 [label="12:CtVirtualElement@fireErrors" shape=ellipse]
95 [label="12:CtVariableReadImpl@checker" shape=ellipse]
96 [label="12:CtLocalVariableReferenceImpl@checker" shape=ellipse]
97 [label="12:CtLiteralImpl@\"Some File Name\"" shape=ellipse]
98 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
99 [label="12:CtVariableReadImpl@msgs" shape=ellipse]
100 [label="12:CtLocalVariableReferenceImpl@msgs" shape=ellipse]
101 [label="12:CtInvocationImpl@checker.fireErrors(\"Some File Name\", msgs)" shape=ellipse]
102 [label="13:CtExecutableReferenceImpl@assertTrue(java.lang.String,<unknown>)" shape=ellipse]
103 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
104 [label="13:CtTypeReferenceImpl@null" shape=ellipse]
105 [label="13:CtVirtualElement@assertTrue" shape=ellipse]
106 [label="13:CtTypeAccessImpl@PlaceHold" shape=ellipse]
107 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
108 [label="13:CtThisAccessImpl@" shape=ellipse]
109 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
110 [label="13:CtLiteralImpl@\"Checker.fireErrors() doesn't call filter\"" shape=ellipse]
111 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
112 [label="13:CtExecutableReferenceImpl@wasCalled()" shape=ellipse]
113 [label="13:CtTypeReferenceImpl@DebugFilter" shape=ellipse]
114 [label="13:CtVirtualElement@wasCalled" shape=ellipse]
115 [label="13:CtVariableReadImpl@filter" shape=ellipse]
116 [label="13:CtLocalVariableReferenceImpl@filter" shape=ellipse]
117 [label="13:CtInvocationImpl@filter.wasCalled()" shape=ellipse]
118 [label="13:CtInvocationImpl@assertTrue(\"Checker.fireErrors() doesn't call filter\", filter.wasCalled())" shape=ellipse]
119 [label="3:CtBlockImpl@\{
    final DebugChecker checker = new DebugChecker();
    final DebugFilter filter = new DebugFilter();
    checker.addFilter(filter);
    filter.resetFilter();
    final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();
    msgs.add(new LocalizedMessage(0, 0, \"a Bundle\", \"message.key\", new Object[]\{ \"arg\" \}, null, getClass(), null));
    checker.fireErrors(\"Some File Name\", msgs);
    assertTrue(\"Checker.fireErrors() doesn't call filter\", filter.wasCalled());
\}" shape=ellipse]
120 [label="3:CtMethodImpl@@Test
public void testAddFilter() throws Exception \{
    final DebugChecker checker = new DebugChecker();
    final DebugFilter filter = new DebugFilter();
    checker.addFilter(filter);
    filter.resetFilter();
    final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();
    msgs.add(new LocalizedMessage(0, 0, \"a Bundle\", \"message.key\", new Object[]\{ \"arg\" \}, null, getClass(), null));
    checker.fireErrors(\"Some File Name\", msgs);
    assertTrue(\"Checker.fireErrors() doesn't call filter\", filter.wasCalled());
\}" shape=ellipse]
121 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
122 [label="8:Update@UPDATE" shape=ellipse]
123 [label="8:CtPackageReferenceImpl@" shape=ellipse]
124 [label="8:CtPackageReferenceImpl@" shape=ellipse]
125 [label="8:CtTypeReferenceImpl@LocalizedMessage" shape=ellipse]
126 [label="8:CtTypeReferenceImpl@SortedSet<LocalizedMessage>" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
9 -> 6 [label="AST"];
10 -> 24 [label="Define-Use"];
10 -> 95 [label="Define-Use"];
11 -> 10 [label="AST"];
11 -> 4 [label="AST"];
11 -> 9 [label="AST"];
12 -> 13 [label="AST"];
14 -> 15 [label="AST"];
14 -> 16 [label="AST"];
17 -> 14 [label="AST"];
18 -> 26 [label="Define-Use"];
18 -> 32 [label="Define-Use"];
18 -> 115 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 12 [label="AST"];
19 -> 17 [label="AST"];
20 -> 21 [label="AST"];
20 -> 22 [label="AST"];
24 -> 25 [label="AST"];
26 -> 27 [label="AST"];
28 -> 23 [label="AST"];
28 -> 24 [label="AST"];
28 -> 20 [label="AST"];
28 -> 26 [label="AST"];
29 -> 30 [label="AST"];
32 -> 33 [label="AST"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
34 -> 29 [label="AST"];
35 -> 36 [label="AST"];
35 -> 37 [label="AST"];
35 -> 122 [label="Action"];
38 -> 39 [label="AST"];
38 -> 40 [label="AST"];
42 -> 43 [label="AST"];
44 -> 41 [label="AST"];
44 -> 42 [label="AST"];
44 -> 38 [label="AST"];
45 -> 51 [label="Define-Use"];
45 -> 99 [label="Define-Use"];
46 -> 45 [label="AST"];
46 -> 35 [label="AST"];
46 -> 44 [label="AST"];
47 -> 48 [label="AST"];
47 -> 49 [label="AST"];
51 -> 52 [label="AST"];
53 -> 54 [label="AST"];
53 -> 55 [label="AST"];
53 -> 56 [label="AST"];
53 -> 57 [label="AST"];
53 -> 58 [label="AST"];
53 -> 59 [label="AST"];
53 -> 60 [label="AST"];
53 -> 61 [label="AST"];
53 -> 62 [label="AST"];
53 -> 63 [label="AST"];
64 -> 65 [label="AST"];
66 -> 67 [label="AST"];
68 -> 69 [label="AST"];
70 -> 71 [label="AST"];
72 -> 73 [label="AST"];
72 -> 74 [label="AST"];
75 -> 76 [label="AST"];
77 -> 78 [label="AST"];
77 -> 79 [label="AST"];
81 -> 82 [label="AST"];
83 -> 84 [label="AST"];
83 -> 81 [label="AST"];
85 -> 80 [label="AST"];
85 -> 83 [label="AST"];
85 -> 77 [label="AST"];
86 -> 87 [label="AST"];
88 -> 53 [label="AST"];
88 -> 64 [label="AST"];
88 -> 66 [label="AST"];
88 -> 68 [label="AST"];
88 -> 70 [label="AST"];
88 -> 72 [label="AST"];
88 -> 75 [label="AST"];
88 -> 85 [label="AST"];
88 -> 86 [label="AST"];
89 -> 50 [label="AST"];
89 -> 51 [label="AST"];
89 -> 47 [label="AST"];
89 -> 88 [label="AST"];
90 -> 91 [label="AST"];
90 -> 92 [label="AST"];
90 -> 93 [label="AST"];
95 -> 96 [label="AST"];
97 -> 98 [label="AST"];
99 -> 100 [label="AST"];
101 -> 94 [label="AST"];
101 -> 95 [label="AST"];
101 -> 90 [label="AST"];
101 -> 97 [label="AST"];
101 -> 99 [label="AST"];
102 -> 103 [label="AST"];
102 -> 104 [label="AST"];
106 -> 107 [label="AST"];
108 -> 109 [label="AST"];
108 -> 106 [label="AST"];
110 -> 111 [label="AST"];
112 -> 113 [label="AST"];
115 -> 116 [label="AST"];
117 -> 114 [label="AST"];
117 -> 115 [label="AST"];
117 -> 112 [label="AST"];
118 -> 105 [label="AST"];
118 -> 108 [label="AST"];
118 -> 102 [label="AST"];
118 -> 110 [label="AST"];
118 -> 117 [label="AST"];
119 -> 11 [label="AST"];
119 -> 19 [label="AST"];
119 -> 28 [label="AST"];
119 -> 34 [label="AST"];
119 -> 46 [label="AST"];
119 -> 89 [label="AST"];
119 -> 101 [label="AST"];
119 -> 118 [label="AST"];
120 -> 1 [label="AST"];
120 -> 121 [label="AST"];
120 -> 0 [label="AST"];
120 -> 2 [label="AST"];
120 -> 119 [label="AST"];
122 -> 126 [label="Action"];
125 -> 124 [label="AST"];
126 -> 123 [label="AST"];
126 -> 125 [label="AST"];
}