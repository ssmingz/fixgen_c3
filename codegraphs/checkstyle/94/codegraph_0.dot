digraph "checkLinesIndent#?,int,int,int" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@checkLinesIndent" shape=ellipse]
2 [label="2:CtParameterImpl@int aStartLine" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
4 [label="2:CtParameterImpl@int aEndLine" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
6 [label="2:CtParameterImpl@int aIndentLevel" shape=ellipse]
7 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
8 [label="3:CtExecutableReferenceImpl@checkSingleLine(int,int)" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
11 [label="3:CtVirtualElement@checkSingleLine" shape=ellipse]
12 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
13 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
14 [label="3:CtThisAccessImpl@" shape=ellipse]
15 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
16 [label="3:CtVariableReadImpl@aStartLine" shape=ellipse]
17 [label="3:CtParameterReferenceImpl@aStartLine" shape=ellipse]
18 [label="3:CtVariableReadImpl@aIndentLevel" shape=ellipse]
19 [label="3:CtParameterReferenceImpl@aIndentLevel" shape=ellipse]
20 [label="3:CtInvocationImpl@checkSingleLine(aStartLine, aIndentLevel)" shape=ellipse]
21 [label="4:CtVariableWriteImpl@aIndentLevel" shape=ellipse]
22 [label="4:CtParameterReferenceImpl@aIndentLevel" shape=ellipse]
23 [label="4:CtExecutableReferenceImpl@getIndentationAmount()" shape=ellipse]
24 [label="4:CtTypeReferenceImpl@mIndentCheck" shape=ellipse]
25 [label="4:CtVirtualElement@getIndentationAmount" shape=ellipse]
26 [label="4:CtFieldReferenceImpl@mIndentCheck" shape=ellipse]
27 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
28 [label="4:CtFieldReadImpl@mIndentCheck" shape=ellipse]
29 [label="4:CtInvocationImpl@mIndentCheck.getIndentationAmount()" shape=ellipse]
30 [label="4:CtOperatorAssignmentImpl@aIndentLevel += mIndentCheck.getIndentationAmount()" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
32 [label="5:CtVariableReadImpl@aStartLine" shape=ellipse]
33 [label="5:CtParameterReferenceImpl@aStartLine" shape=ellipse]
34 [label="5:CtLiteralImpl@1" shape=ellipse]
35 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
36 [label="5:CtBinaryOperatorImpl@aStartLine + 1" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
38 [label="5:CtVirtualElement@i" shape=ellipse]
39 [label="5:CtLocalVariableImpl@int i = aStartLine + 1" shape=ellipse]
40 [label="5:CtVariableReadImpl@i" shape=ellipse]
41 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
42 [label="5:CtVariableReadImpl@aEndLine" shape=ellipse]
43 [label="5:CtParameterReferenceImpl@aEndLine" shape=ellipse]
44 [label="5:CtBinaryOperatorImpl@i <= aEndLine" shape=ellipse]
45 [label="5:CtTypeReferenceImpl@boolean" shape=ellipse]
46 [label="5:CtVariableWriteImpl@i" shape=ellipse]
47 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
48 [label="5:CtUnaryOperatorImpl@i++" shape=ellipse]
49 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
50 [label="6:CtExecutableReferenceImpl@checkSingleLine(int,int)" shape=ellipse]
51 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
52 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
53 [label="6:CtVirtualElement@checkSingleLine" shape=ellipse]
54 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
55 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
56 [label="6:CtThisAccessImpl@" shape=ellipse]
57 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
58 [label="6:CtVariableReadImpl@i" shape=ellipse]
59 [label="6:CtLocalVariableReferenceImpl@i" shape=ellipse]
60 [label="6:CtVariableReadImpl@aIndentLevel" shape=ellipse]
61 [label="6:CtParameterReferenceImpl@aIndentLevel" shape=ellipse]
62 [label="6:CtInvocationImpl@checkSingleLine(i, aIndentLevel)" shape=ellipse]
63 [label="5:CtBlockImpl@\{
    checkSingleLine(i, aIndentLevel);
\}" shape=ellipse]
64 [label="5:CtForImpl@for (int i = aStartLine + 1; i <= aEndLine; i++) \{
    checkSingleLine(i, aIndentLevel);
\}" shape=ellipse]
65 [label="2:CtBlockImpl@\{
    checkSingleLine(aStartLine, aIndentLevel);
    aIndentLevel += mIndentCheck.getIndentationAmount();
    for (int i = aStartLine + 1; i <= aEndLine; i++) \{
        checkSingleLine(i, aIndentLevel);
    \}
\}" shape=ellipse]
66 [label="2:CtMethodImpl@protected void checkLinesIndent(int aStartLine, int aEndLine, int aIndentLevel) \{
    checkSingleLine(aStartLine, aIndentLevel);
    aIndentLevel += mIndentCheck.getIndentationAmount();
    for (int i = aStartLine + 1; i <= aEndLine; i++) \{
        checkSingleLine(i, aIndentLevel);
    \}
\}" shape=ellipse]
67 [label="4:Update@UPDATE" shape=ellipse]
68 [label="4:CtPackageReferenceImpl@" shape=ellipse]
69 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
70 [label="4:CtFieldReferenceImpl@mIndentCheck" shape=ellipse]
71 [label="4:CtFieldReadImpl@mIndentCheck" shape=ellipse]
72 [label="4:CtPackageReferenceImpl@" shape=ellipse]
73 [label="4:CtTypeReferenceImpl@mIndentCheck" shape=ellipse]
74 [label="4:CtExecutableReferenceImpl@getBasicOffset()" shape=ellipse]
75 [label="4:CtInvocationImpl@mIndentCheck.getBasicOffset()" shape=ellipse]
76 [label="4:CtVirtualElement@getBasicOffset" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
8 -> 10 [label="AST"];
12 -> 13 [label="AST"];
14 -> 15 [label="AST"];
14 -> 12 [label="AST"];
16 -> 17 [label="AST"];
18 -> 19 [label="AST"];
20 -> 11 [label="AST"];
20 -> 14 [label="AST"];
20 -> 8 [label="AST"];
20 -> 16 [label="AST"];
20 -> 18 [label="AST"];
21 -> 22 [label="AST"];
21 -> 60 [label="Define-Use"];
23 -> 24 [label="AST"];
26 -> 27 [label="AST"];
28 -> 26 [label="AST"];
28 -> 21 [label="Data Dep"];
29 -> 25 [label="AST"];
29 -> 28 [label="AST"];
29 -> 23 [label="AST"];
29 -> 67 [label="Action"];
30 -> 21 [label="AST"];
30 -> 29 [label="AST"];
32 -> 33 [label="AST"];
32 -> 38 [label="Data Dep"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
36 -> 32 [label="AST"];
36 -> 34 [label="AST"];
38 -> 40 [label="Define-Use"];
39 -> 38 [label="AST"];
39 -> 31 [label="AST"];
39 -> 36 [label="AST"];
40 -> 41 [label="AST"];
42 -> 43 [label="AST"];
44 -> 45 [label="AST"];
44 -> 40 [label="AST"];
44 -> 42 [label="AST"];
44 -> 63 [label="Control Dep"];
44 -> 62 [label="Control Dep"];
44 -> 50 [label="Control Dep"];
44 -> 56 [label="Control Dep"];
44 -> 54 [label="Control Dep"];
44 -> 58 [label="Control Dep"];
44 -> 60 [label="Control Dep"];
46 -> 47 [label="AST"];
46 -> 58 [label="Define-Use"];
48 -> 49 [label="AST"];
48 -> 46 [label="AST"];
50 -> 51 [label="AST"];
50 -> 52 [label="AST"];
54 -> 55 [label="AST"];
56 -> 57 [label="AST"];
56 -> 54 [label="AST"];
58 -> 59 [label="AST"];
60 -> 61 [label="AST"];
62 -> 53 [label="AST"];
62 -> 56 [label="AST"];
62 -> 50 [label="AST"];
62 -> 58 [label="AST"];
62 -> 60 [label="AST"];
63 -> 62 [label="AST"];
64 -> 39 [label="AST"];
64 -> 44 [label="AST"];
64 -> 48 [label="AST"];
64 -> 63 [label="AST"];
65 -> 20 [label="AST"];
65 -> 30 [label="AST"];
65 -> 64 [label="AST"];
66 -> 1 [label="AST"];
66 -> 0 [label="AST"];
66 -> 2 [label="AST"];
66 -> 4 [label="AST"];
66 -> 6 [label="AST"];
66 -> 65 [label="AST"];
67 -> 75 [label="Action"];
69 -> 68 [label="AST"];
70 -> 69 [label="AST"];
71 -> 70 [label="AST"];
71 -> 21 [label="Data Dep"];
71 -> 21 [label="Control Dep"];
73 -> 72 [label="AST"];
74 -> 73 [label="AST"];
75 -> 76 [label="AST"];
75 -> 71 [label="AST"];
75 -> 74 [label="AST"];
}