digraph "testProperFileExtension#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@testProperFileExtension" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@createCheckConfig(java.lang.Class)" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@Class<ConstantNameCheck>" shape=ellipse]
9 [label="4:CtVirtualElement@createCheckConfig" shape=ellipse]
10 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
12 [label="4:CtThisAccessImpl@" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
14 [label="4:CtFieldReferenceImpl@ConstantNameCheck.class" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@ConstantNameCheck" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@Class" shape=ellipse]
17 [label="4:CtFieldReadImpl@ConstantNameCheck.class" shape=ellipse]
18 [label="4:CtTypeAccessImpl@ConstantNameCheck" shape=ellipse]
19 [label="4:CtInvocationImpl@createCheckConfig(ConstantNameCheck.class)" shape=ellipse]
20 [label="4:CtVirtualElement@checkConfig" shape=ellipse]
21 [label="4:CtLocalVariableImpl@final DefaultConfiguration checkConfig = createCheckConfig(ConstantNameCheck.class)" shape=ellipse]
22 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
23 [label="5:CtPackageReferenceImpl@java.lang" shape=ellipse]
24 [label="5:CtLiteralImpl@\"public class Main \{ public static final int k = 5 + 4; \}\"" shape=ellipse]
25 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
26 [label="5:CtVirtualElement@content" shape=ellipse]
27 [label="5:CtLocalVariableImpl@final String content = \"public class Main \{ public static final int k = 5 + 4; \}\"" shape=ellipse]
28 [label="6:CtTypeReferenceImpl@File" shape=ellipse]
29 [label="6:CtPackageReferenceImpl@" shape=ellipse]
30 [label="6:CtExecutableReferenceImpl@newFile(java.lang.String)" shape=ellipse]
31 [label="6:CtTypeReferenceImpl@temporaryFolder" shape=ellipse]
32 [label="6:CtTypeReferenceImpl@File" shape=ellipse]
33 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
34 [label="6:CtVirtualElement@newFile" shape=ellipse]
35 [label="6:CtFieldReferenceImpl@temporaryFolder" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
37 [label="6:CtFieldReadImpl@temporaryFolder" shape=ellipse]
38 [label="6:CtLiteralImpl@\"file.java\"" shape=ellipse]
39 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
40 [label="6:CtInvocationImpl@temporaryFolder.newFile(\"file.java\")" shape=ellipse]
41 [label="6:CtVirtualElement@file" shape=ellipse]
42 [label="6:CtLocalVariableImpl@final File file = temporaryFolder.newFile(\"file.java\")" shape=ellipse]
43 [label="7:CtTypeReferenceImpl@Writer" shape=ellipse]
44 [label="7:CtPackageReferenceImpl@" shape=ellipse]
45 [label="8:CtExecutableReferenceImpl@BufferedWriter(OutputStreamWriter)" shape=ellipse]
46 [label="8:CtTypeReferenceImpl@BufferedWriter" shape=ellipse]
47 [label="8:CtTypeReferenceImpl@BufferedWriter" shape=ellipse]
48 [label="8:CtTypeReferenceImpl@OutputStreamWriter" shape=ellipse]
49 [label="9:CtExecutableReferenceImpl@OutputStreamWriter()" shape=ellipse]
50 [label="9:CtTypeReferenceImpl@OutputStreamWriter" shape=ellipse]
51 [label="9:CtTypeReferenceImpl@OutputStreamWriter" shape=ellipse]
52 [label="9:CtExecutableReferenceImpl@FileOutputStream()" shape=ellipse]
53 [label="9:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
54 [label="9:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
55 [label="9:CtVariableReadImpl@file" shape=ellipse]
56 [label="9:CtLocalVariableReferenceImpl@file" shape=ellipse]
57 [label="9:CtConstructorCallImpl@new FileOutputStream(file)" shape=ellipse]
58 [label="9:CtFieldReferenceImpl@StandardCharsets.UTF_8" shape=ellipse]
59 [label="9:CtTypeReferenceImpl@StandardCharsets" shape=ellipse]
60 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
61 [label="9:CtFieldReadImpl@StandardCharsets.UTF_8" shape=ellipse]
62 [label="9:CtTypeAccessImpl@StandardCharsets" shape=ellipse]
63 [label="9:CtConstructorCallImpl@new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8)" shape=ellipse]
64 [label="8:CtConstructorCallImpl@new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8))" shape=ellipse]
65 [label="7:CtVirtualElement@writer" shape=ellipse]
66 [label="7:CtLocalVariableImpl@final Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8))" shape=ellipse]
67 [label="10:CtExecutableReferenceImpl@write(java.lang.String)" shape=ellipse]
68 [label="10:CtTypeReferenceImpl@Writer" shape=ellipse]
69 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
70 [label="10:CtVirtualElement@write" shape=ellipse]
71 [label="10:CtVariableReadImpl@writer" shape=ellipse]
72 [label="10:CtLocalVariableReferenceImpl@writer" shape=ellipse]
73 [label="10:CtVariableReadImpl@content" shape=ellipse]
74 [label="10:CtLocalVariableReferenceImpl@content" shape=ellipse]
75 [label="10:CtInvocationImpl@writer.write(content)" shape=ellipse]
76 [label="11:CtExecutableReferenceImpl@close()" shape=ellipse]
77 [label="11:CtTypeReferenceImpl@Writer" shape=ellipse]
78 [label="11:CtVirtualElement@close" shape=ellipse]
79 [label="11:CtVariableReadImpl@writer" shape=ellipse]
80 [label="11:CtLocalVariableReferenceImpl@writer" shape=ellipse]
81 [label="11:CtInvocationImpl@writer.close()" shape=ellipse]
82 [label="12:CtVirtualElement@String[]" shape=ellipse]
83 [label="12:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
84 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
85 [label="13:CtNewArrayImpl@new String[]\{ \"1:45: Name 'k' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\" \}" shape=ellipse]
86 [label="13:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
87 [label="13:CtLiteralImpl@\"1:45: Name 'k' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\"" shape=ellipse]
88 [label="12:CtVirtualElement@expected1" shape=ellipse]
89 [label="12:CtLocalVariableImpl@final String[] expected1 = new String[]\{ \"1:45: Name 'k' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\" \}" shape=ellipse]
90 [label="14:CtExecutableReferenceImpl@verify(<unknown>,<unknown>,java.lang.String[])" shape=ellipse]
91 [label="14:CtTypeReferenceImpl@null" shape=ellipse]
92 [label="14:CtTypeReferenceImpl@null" shape=ellipse]
93 [label="14:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
94 [label="14:CtVirtualElement@verify" shape=ellipse]
95 [label="14:CtTypeAccessImpl@PlaceHold" shape=ellipse]
96 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
97 [label="14:CtThisAccessImpl@" shape=ellipse]
98 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
99 [label="14:CtVariableReadImpl@checkConfig" shape=ellipse]
100 [label="14:CtLocalVariableReferenceImpl@checkConfig" shape=ellipse]
101 [label="14:CtExecutableReferenceImpl@getPath()" shape=ellipse]
102 [label="14:CtTypeReferenceImpl@File" shape=ellipse]
103 [label="14:CtVirtualElement@getPath" shape=ellipse]
104 [label="14:CtVariableReadImpl@file" shape=ellipse]
105 [label="14:CtLocalVariableReferenceImpl@file" shape=ellipse]
106 [label="14:CtInvocationImpl@file.getPath()" shape=ellipse]
107 [label="14:CtVariableReadImpl@expected1" shape=ellipse]
108 [label="14:CtLocalVariableReferenceImpl@expected1" shape=ellipse]
109 [label="14:CtInvocationImpl@verify(checkConfig, file.getPath(), expected1)" shape=ellipse]
110 [label="3:CtBlockImpl@\{
    final DefaultConfiguration checkConfig = createCheckConfig(ConstantNameCheck.class);
    final String content = \"public class Main \{ public static final int k = 5 + 4; \}\";
    final File file = temporaryFolder.newFile(\"file.java\");
    final Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8));
    writer.write(content);
    writer.close();
    final String[] expected1 = new String[]\{ \"1:45: Name 'k' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\" \};
    verify(checkConfig, file.getPath(), expected1);
\}" shape=ellipse]
111 [label="3:CtMethodImpl@@Test
public void testProperFileExtension() throws Exception \{
    final DefaultConfiguration checkConfig = createCheckConfig(ConstantNameCheck.class);
    final String content = \"public class Main \{ public static final int k = 5 + 4; \}\";
    final File file = temporaryFolder.newFile(\"file.java\");
    final Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8));
    writer.write(content);
    writer.close();
    final String[] expected1 = new String[]\{ \"1:45: Name 'k' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\" \};
    verify(checkConfig, file.getPath(), expected1);
\}" shape=ellipse]
112 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
113 [label="11:Delete@DELETE" shape=ellipse]
114 [label="7:Insert@INSERT" shape=ellipse]
115 [label="7:CtPackageReferenceImpl@" shape=ellipse]
116 [label="7:CtTypeReferenceImpl@Writer" shape=ellipse]
117 [label="8:CtPackageReferenceImpl@" shape=ellipse]
118 [label="8:CtTypeReferenceImpl@BufferedWriter" shape=ellipse]
119 [label="8:CtPackageReferenceImpl@" shape=ellipse]
120 [label="8:CtTypeReferenceImpl@BufferedWriter" shape=ellipse]
121 [label="8:CtPackageReferenceImpl@" shape=ellipse]
122 [label="8:CtTypeReferenceImpl@OutputStreamWriter" shape=ellipse]
123 [label="8:CtExecutableReferenceImpl@BufferedWriter(OutputStreamWriter)" shape=ellipse]
124 [label="9:CtPackageReferenceImpl@" shape=ellipse]
125 [label="9:CtTypeReferenceImpl@OutputStreamWriter" shape=ellipse]
126 [label="9:CtPackageReferenceImpl@" shape=ellipse]
127 [label="9:CtTypeReferenceImpl@OutputStreamWriter" shape=ellipse]
128 [label="9:CtExecutableReferenceImpl@OutputStreamWriter()" shape=ellipse]
129 [label="9:CtPackageReferenceImpl@" shape=ellipse]
130 [label="9:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
131 [label="9:CtPackageReferenceImpl@" shape=ellipse]
132 [label="9:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
133 [label="9:CtExecutableReferenceImpl@FileOutputStream()" shape=ellipse]
134 [label="9:CtPackageReferenceImpl@" shape=ellipse]
135 [label="9:CtTypeReferenceImpl@File" shape=ellipse]
136 [label="9:CtLocalVariableReferenceImpl@file" shape=ellipse]
137 [label="9:CtVariableReadImpl@file" shape=ellipse]
138 [label="9:CtConstructorCallImpl@new FileOutputStream(file)" shape=ellipse]
139 [label="9:CtPackageReferenceImpl@" shape=ellipse]
140 [label="9:CtTypeReferenceImpl@StandardCharsets" shape=ellipse]
141 [label="9:CtTypeAccessImpl@StandardCharsets" shape=ellipse]
142 [label="9:CtPackageReferenceImpl@" shape=ellipse]
143 [label="9:CtTypeReferenceImpl@StandardCharsets" shape=ellipse]
144 [label="9:CtPackageReferenceImpl@" shape=ellipse]
145 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
146 [label="9:CtFieldReferenceImpl@StandardCharsets.UTF_8" shape=ellipse]
147 [label="9:CtFieldReadImpl@StandardCharsets.UTF_8" shape=ellipse]
148 [label="9:CtConstructorCallImpl@new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8)" shape=ellipse]
149 [label="8:CtConstructorCallImpl@new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8))" shape=ellipse]
150 [label="7:CtLocalVariableImpl@final Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8))" shape=ellipse]
151 [label="7:CtVirtualElement@final" shape=ellipse]
152 [label="7:CtVirtualElement@VE: Modifiers_LocalVariable" shape=ellipse]
153 [label="10:CtPackageReferenceImpl@" shape=ellipse]
154 [label="10:CtTypeReferenceImpl@Writer" shape=ellipse]
155 [label="10:CtLocalVariableReferenceImpl@writer" shape=ellipse]
156 [label="10:CtVariableReadImpl@writer" shape=ellipse]
157 [label="10:CtPackageReferenceImpl@" shape=ellipse]
158 [label="10:CtTypeReferenceImpl@Writer" shape=ellipse]
159 [label="10:CtPackageReferenceImpl@java.lang" shape=ellipse]
160 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
161 [label="10:CtExecutableReferenceImpl@write(java.lang.String)" shape=ellipse]
162 [label="10:CtPackageReferenceImpl@java.lang" shape=ellipse]
163 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
164 [label="10:CtLocalVariableReferenceImpl@content" shape=ellipse]
165 [label="10:CtVariableReadImpl@content" shape=ellipse]
166 [label="10:CtInvocationImpl@writer.write(content)" shape=ellipse]
167 [label="10:CtVirtualElement@write" shape=ellipse]
168 [label="9:CtBlockImpl@\{
    writer.write(content);
\}" shape=ellipse]
169 [label="7:CtTryWithResourceImpl@try () \{

\}" shape=ellipse]
170 [label="7:Move@MOVE" shape=ellipse]
171 [label="10:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
10 -> 11 [label="AST"];
12 -> 13 [label="AST"];
12 -> 10 [label="AST"];
12 -> 20 [label="Data Dep"];
14 -> 15 [label="AST"];
14 -> 16 [label="AST"];
17 -> 18 [label="AST"];
17 -> 14 [label="AST"];
17 -> 20 [label="Data Dep"];
19 -> 9 [label="AST"];
19 -> 12 [label="AST"];
19 -> 6 [label="AST"];
19 -> 17 [label="AST"];
20 -> 99 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 4 [label="AST"];
21 -> 19 [label="AST"];
22 -> 23 [label="AST"];
24 -> 25 [label="AST"];
26 -> 73 [label="Define-Use"];
27 -> 26 [label="AST"];
27 -> 22 [label="AST"];
27 -> 24 [label="AST"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
30 -> 33 [label="AST"];
35 -> 36 [label="AST"];
37 -> 35 [label="AST"];
37 -> 41 [label="Data Dep"];
38 -> 39 [label="AST"];
40 -> 34 [label="AST"];
40 -> 37 [label="AST"];
40 -> 30 [label="AST"];
40 -> 38 [label="AST"];
41 -> 55 [label="Define-Use"];
41 -> 104 [label="Define-Use"];
42 -> 41 [label="AST"];
42 -> 28 [label="AST"];
42 -> 40 [label="AST"];
43 -> 44 [label="AST"];
45 -> 46 [label="AST"];
45 -> 47 [label="AST"];
45 -> 48 [label="AST"];
49 -> 50 [label="AST"];
49 -> 51 [label="AST"];
52 -> 53 [label="AST"];
52 -> 54 [label="AST"];
55 -> 56 [label="AST"];
55 -> 65 [label="Data Dep"];
57 -> 52 [label="AST"];
57 -> 55 [label="AST"];
58 -> 59 [label="AST"];
58 -> 60 [label="AST"];
61 -> 62 [label="AST"];
61 -> 58 [label="AST"];
61 -> 65 [label="Data Dep"];
63 -> 49 [label="AST"];
63 -> 57 [label="AST"];
63 -> 61 [label="AST"];
64 -> 45 [label="AST"];
64 -> 63 [label="AST"];
65 -> 71 [label="Define-Use"];
65 -> 79 [label="Define-Use"];
66 -> 65 [label="AST"];
66 -> 43 [label="AST"];
66 -> 64 [label="AST"];
66 -> 170 [label="Action"];
67 -> 68 [label="AST"];
67 -> 69 [label="AST"];
71 -> 72 [label="AST"];
73 -> 74 [label="AST"];
75 -> 70 [label="AST"];
75 -> 71 [label="AST"];
75 -> 67 [label="AST"];
75 -> 73 [label="AST"];
75 -> 171 [label="Action"];
76 -> 77 [label="AST"];
79 -> 80 [label="AST"];
81 -> 78 [label="AST"];
81 -> 79 [label="AST"];
81 -> 76 [label="AST"];
81 -> 113 [label="Action"];
83 -> 82 [label="AST"];
83 -> 84 [label="AST"];
85 -> 86 [label="AST"];
85 -> 87 [label="AST"];
88 -> 107 [label="Define-Use"];
89 -> 88 [label="AST"];
89 -> 83 [label="AST"];
89 -> 85 [label="AST"];
90 -> 91 [label="AST"];
90 -> 92 [label="AST"];
90 -> 93 [label="AST"];
95 -> 96 [label="AST"];
97 -> 98 [label="AST"];
97 -> 95 [label="AST"];
99 -> 100 [label="AST"];
101 -> 102 [label="AST"];
104 -> 105 [label="AST"];
106 -> 103 [label="AST"];
106 -> 104 [label="AST"];
106 -> 101 [label="AST"];
107 -> 108 [label="AST"];
109 -> 94 [label="AST"];
109 -> 97 [label="AST"];
109 -> 90 [label="AST"];
109 -> 99 [label="AST"];
109 -> 106 [label="AST"];
109 -> 107 [label="AST"];
110 -> 21 [label="AST"];
110 -> 27 [label="AST"];
110 -> 42 [label="AST"];
110 -> 66 [label="AST"];
110 -> 75 [label="AST"];
110 -> 81 [label="AST"];
110 -> 89 [label="AST"];
110 -> 109 [label="AST"];
110 -> 114 [label="Action"];
111 -> 1 [label="AST"];
111 -> 112 [label="AST"];
111 -> 0 [label="AST"];
111 -> 2 [label="AST"];
111 -> 110 [label="AST"];
114 -> 169 [label="Action"];
116 -> 115 [label="AST"];
118 -> 117 [label="AST"];
120 -> 119 [label="AST"];
122 -> 121 [label="AST"];
123 -> 118 [label="AST"];
123 -> 120 [label="AST"];
123 -> 122 [label="AST"];
125 -> 124 [label="AST"];
127 -> 126 [label="AST"];
128 -> 125 [label="AST"];
128 -> 127 [label="AST"];
130 -> 129 [label="AST"];
132 -> 131 [label="AST"];
133 -> 130 [label="AST"];
133 -> 132 [label="AST"];
135 -> 134 [label="AST"];
136 -> 135 [label="AST"];
137 -> 136 [label="AST"];
138 -> 133 [label="AST"];
138 -> 137 [label="AST"];
140 -> 139 [label="AST"];
141 -> 140 [label="AST"];
143 -> 142 [label="AST"];
145 -> 144 [label="AST"];
146 -> 143 [label="AST"];
146 -> 145 [label="AST"];
147 -> 141 [label="AST"];
147 -> 146 [label="AST"];
148 -> 128 [label="AST"];
148 -> 138 [label="AST"];
148 -> 147 [label="AST"];
149 -> 123 [label="AST"];
149 -> 148 [label="AST"];
150 -> 151 [label="AST"];
150 -> 152 [label="AST"];
150 -> 116 [label="AST"];
150 -> 149 [label="AST"];
154 -> 153 [label="AST"];
155 -> 154 [label="AST"];
156 -> 155 [label="AST"];
158 -> 157 [label="AST"];
160 -> 159 [label="AST"];
161 -> 158 [label="AST"];
161 -> 160 [label="AST"];
163 -> 162 [label="AST"];
164 -> 163 [label="AST"];
165 -> 164 [label="AST"];
166 -> 167 [label="AST"];
166 -> 156 [label="AST"];
166 -> 161 [label="AST"];
166 -> 165 [label="AST"];
168 -> 166 [label="AST"];
169 -> 150 [label="AST"];
169 -> 168 [label="AST"];
170 -> 169 [label="Action"];
171 -> 169 [label="Action"];
}