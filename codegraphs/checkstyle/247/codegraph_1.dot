digraph "mustCheckName#?,DetailAST" {
0 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
1 [label="3:CtVirtualElement@mustCheckName" shape=ellipse]
2 [label="3:CtParameterImpl@DetailAST ast" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
9 [label="4:CtVirtualElement@findFirstToken" shape=ellipse]
10 [label="4:CtVariableReadImpl@ast" shape=ellipse]
11 [label="4:CtParameterReferenceImpl@ast" shape=ellipse]
12 [label="4:CtTypeAccessImpl@MODIFIERS" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@MODIFIERS" shape=ellipse]
14 [label="4:CtInvocationImpl@ast.findFirstToken(MODIFIERS)" shape=ellipse]
15 [label="4:CtVirtualElement@modifiersAST" shape=ellipse]
16 [label="4:CtLocalVariableImpl@final DetailAST modifiersAST = ast.findFirstToken(MODIFIERS)" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@boolean" shape=ellipse]
18 [label="5:CtExecutableReferenceImpl@branchContains()" shape=ellipse]
19 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
20 [label="5:CtTypeReferenceImpl@boolean" shape=ellipse]
21 [label="5:CtVirtualElement@branchContains" shape=ellipse]
22 [label="5:CtVariableReadImpl@modifiersAST" shape=ellipse]
23 [label="5:CtLocalVariableReferenceImpl@modifiersAST" shape=ellipse]
24 [label="5:CtTypeAccessImpl@LITERAL_STATIC" shape=ellipse]
25 [label="5:CtTypeReferenceImpl@LITERAL_STATIC" shape=ellipse]
26 [label="5:CtInvocationImpl@modifiersAST.branchContains(LITERAL_STATIC)" shape=ellipse]
27 [label="5:CtVirtualElement@isStatic" shape=ellipse]
28 [label="5:CtLocalVariableImpl@final boolean isStatic = modifiersAST.branchContains(LITERAL_STATIC)" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
30 [label="6:CtExecutableReferenceImpl@branchContains()" shape=ellipse]
31 [label="6:CtTypeReferenceImpl@DetailAST" shape=ellipse]
32 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
33 [label="6:CtVirtualElement@branchContains" shape=ellipse]
34 [label="6:CtVariableReadImpl@modifiersAST" shape=ellipse]
35 [label="6:CtLocalVariableReferenceImpl@modifiersAST" shape=ellipse]
36 [label="6:CtTypeAccessImpl@FINAL" shape=ellipse]
37 [label="6:CtTypeReferenceImpl@FINAL" shape=ellipse]
38 [label="6:CtInvocationImpl@modifiersAST.branchContains(FINAL)" shape=ellipse]
39 [label="6:CtVirtualElement@isFinal" shape=ellipse]
40 [label="6:CtLocalVariableImpl@final boolean isFinal = modifiersAST.branchContains(FINAL)" shape=ellipse]
41 [label="7:CtVariableReadImpl@isStatic" shape=ellipse]
42 [label="7:CtLocalVariableReferenceImpl@isStatic" shape=ellipse]
43 [label="7:CtVariableReadImpl@isFinal" shape=ellipse]
44 [label="7:CtLocalVariableReferenceImpl@isFinal" shape=ellipse]
45 [label="7:CtUnaryOperatorImpl@(!isFinal)" shape=ellipse]
46 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
47 [label="7:CtBinaryOperatorImpl@(isStatic && (!isFinal))" shape=ellipse]
48 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
49 [label="7:CtExecutableReferenceImpl@shouldCheckInScope(<unknown>)" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
51 [label="7:CtVirtualElement@shouldCheckInScope" shape=ellipse]
52 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
54 [label="7:CtThisAccessImpl@" shape=ellipse]
55 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
56 [label="7:CtVariableReadImpl@modifiersAST" shape=ellipse]
57 [label="7:CtLocalVariableReferenceImpl@modifiersAST" shape=ellipse]
58 [label="7:CtInvocationImpl@shouldCheckInScope(modifiersAST)" shape=ellipse]
59 [label="7:CtBinaryOperatorImpl@((isStatic && (!isFinal)) && shouldCheckInScope(modifiersAST))" shape=ellipse]
60 [label="8:CtExecutableReferenceImpl@inInterfaceOrAnnotationBlock(DetailAST)" shape=ellipse]
61 [label="8:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
62 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
63 [label="8:CtVirtualElement@inInterfaceOrAnnotationBlock" shape=ellipse]
64 [label="8:CtTypeAccessImpl@ScopeUtils" shape=ellipse]
65 [label="8:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
66 [label="8:CtVariableReadImpl@ast" shape=ellipse]
67 [label="8:CtParameterReferenceImpl@ast" shape=ellipse]
68 [label="8:CtInvocationImpl@ScopeUtils.inInterfaceOrAnnotationBlock(ast)" shape=ellipse]
69 [label="8:CtUnaryOperatorImpl@(!ScopeUtils.inInterfaceOrAnnotationBlock(ast))" shape=ellipse]
70 [label="7:CtBinaryOperatorImpl@((isStatic && (!isFinal)) && shouldCheckInScope(modifiersAST)) && (!ScopeUtils.inInterfaceOrAnnotationBlock(ast))" shape=ellipse]
71 [label="7:CtReturnImpl@return ((isStatic && (!isFinal)) && shouldCheckInScope(modifiersAST)) && (!ScopeUtils.inInterfaceOrAnnotationBlock(ast))" shape=ellipse]
72 [label="3:CtBlockImpl@\{
    final DetailAST modifiersAST = ast.findFirstToken(MODIFIERS);
    final boolean isStatic = modifiersAST.branchContains(LITERAL_STATIC);
    final boolean isFinal = modifiersAST.branchContains(FINAL);
    return ((isStatic && (!isFinal)) && shouldCheckInScope(modifiersAST)) && (!ScopeUtils.inInterfaceOrAnnotationBlock(ast));
\}" shape=ellipse]
73 [label="3:CtMethodImpl@@Override
protected final boolean mustCheckName(DetailAST ast) \{
    final DetailAST modifiersAST = ast.findFirstToken(MODIFIERS);
    final boolean isStatic = modifiersAST.branchContains(LITERAL_STATIC);
    final boolean isFinal = modifiersAST.branchContains(FINAL);
    return ((isStatic && (!isFinal)) && shouldCheckInScope(modifiersAST)) && (!ScopeUtils.inInterfaceOrAnnotationBlock(ast));
\}" shape=ellipse]
74 [label="2:CtAnnotationImpl@@Override" shape=ellipse]
75 [label="8:Update@UPDATE" shape=ellipse]
76 [label="8:CtPackageReferenceImpl@" shape=ellipse]
77 [label="8:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
78 [label="8:CtTypeAccessImpl@ScopeUtils" shape=ellipse]
79 [label="8:CtPackageReferenceImpl@" shape=ellipse]
80 [label="8:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
81 [label="8:CtPackageReferenceImpl@" shape=ellipse]
82 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
83 [label="8:CtExecutableReferenceImpl@isInInterfaceOrAnnotationBlock(DetailAST)" shape=ellipse]
84 [label="8:CtPackageReferenceImpl@" shape=ellipse]
85 [label="8:CtTypeReferenceImpl@DetailAST" shape=ellipse]
86 [label="8:CtParameterReferenceImpl@ast" shape=ellipse]
87 [label="8:CtVariableReadImpl@ast" shape=ellipse]
88 [label="8:CtInvocationImpl@ScopeUtils.isInInterfaceOrAnnotationBlock(ast)" shape=ellipse]
89 [label="8:CtVirtualElement@isInInterfaceOrAnnotationBlock" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
10 -> 11 [label="AST"];
10 -> 15 [label="Data Dep"];
12 -> 13 [label="AST"];
14 -> 9 [label="AST"];
14 -> 10 [label="AST"];
14 -> 6 [label="AST"];
14 -> 12 [label="AST"];
15 -> 22 [label="Define-Use"];
15 -> 34 [label="Define-Use"];
15 -> 56 [label="Define-Use"];
16 -> 15 [label="AST"];
16 -> 4 [label="AST"];
16 -> 14 [label="AST"];
18 -> 19 [label="AST"];
18 -> 20 [label="AST"];
22 -> 23 [label="AST"];
22 -> 27 [label="Data Dep"];
24 -> 25 [label="AST"];
26 -> 21 [label="AST"];
26 -> 22 [label="AST"];
26 -> 18 [label="AST"];
26 -> 24 [label="AST"];
27 -> 41 [label="Define-Use"];
28 -> 27 [label="AST"];
28 -> 17 [label="AST"];
28 -> 26 [label="AST"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
34 -> 35 [label="AST"];
34 -> 39 [label="Data Dep"];
36 -> 37 [label="AST"];
38 -> 33 [label="AST"];
38 -> 34 [label="AST"];
38 -> 30 [label="AST"];
38 -> 36 [label="AST"];
39 -> 43 [label="Define-Use"];
40 -> 39 [label="AST"];
40 -> 29 [label="AST"];
40 -> 38 [label="AST"];
41 -> 42 [label="AST"];
43 -> 44 [label="AST"];
45 -> 46 [label="AST"];
45 -> 43 [label="AST"];
47 -> 48 [label="AST"];
47 -> 41 [label="AST"];
47 -> 45 [label="AST"];
49 -> 50 [label="AST"];
52 -> 53 [label="AST"];
54 -> 55 [label="AST"];
54 -> 52 [label="AST"];
56 -> 57 [label="AST"];
58 -> 51 [label="AST"];
58 -> 54 [label="AST"];
58 -> 49 [label="AST"];
58 -> 56 [label="AST"];
59 -> 47 [label="AST"];
59 -> 58 [label="AST"];
60 -> 61 [label="AST"];
60 -> 62 [label="AST"];
64 -> 65 [label="AST"];
66 -> 67 [label="AST"];
68 -> 63 [label="AST"];
68 -> 64 [label="AST"];
68 -> 60 [label="AST"];
68 -> 66 [label="AST"];
68 -> 75 [label="Action"];
69 -> 68 [label="AST"];
70 -> 59 [label="AST"];
70 -> 69 [label="AST"];
71 -> 70 [label="AST"];
72 -> 16 [label="AST"];
72 -> 28 [label="AST"];
72 -> 40 [label="AST"];
72 -> 71 [label="AST"];
73 -> 1 [label="AST"];
73 -> 74 [label="AST"];
73 -> 0 [label="AST"];
73 -> 2 [label="AST"];
73 -> 72 [label="AST"];
75 -> 88 [label="Action"];
77 -> 76 [label="AST"];
78 -> 77 [label="AST"];
80 -> 79 [label="AST"];
82 -> 81 [label="AST"];
83 -> 80 [label="AST"];
83 -> 82 [label="AST"];
85 -> 84 [label="AST"];
86 -> 85 [label="AST"];
87 -> 86 [label="AST"];
88 -> 89 [label="AST"];
88 -> 78 [label="AST"];
88 -> 83 [label="AST"];
88 -> 87 [label="AST"];
}