digraph "loadKeys#?,File" {
0 [label="2:CtTypeReferenceImpl@Set<Object>" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Object" shape=ellipse]
3 [label="2:CtVirtualElement@loadKeys" shape=ellipse]
4 [label="2:CtParameterImpl@File file" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@Set<Object>" shape=ellipse]
7 [label="3:CtPackageReferenceImpl@" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@Object" shape=ellipse]
9 [label="3:CtExecutableReferenceImpl@newHashSet()" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@Sets" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@Set<Object>" shape=ellipse]
12 [label="3:CtVirtualElement@newHashSet" shape=ellipse]
13 [label="3:CtTypeAccessImpl@Sets" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@Sets" shape=ellipse]
15 [label="3:CtInvocationImpl@Sets.newHashSet()" shape=ellipse]
16 [label="3:CtVirtualElement@keys" shape=ellipse]
17 [label="3:CtLocalVariableImpl@final Set<Object> keys = Sets.newHashSet()" shape=ellipse]
18 [label="4:CtTypeReferenceImpl@InputStream" shape=ellipse]
19 [label="4:CtPackageReferenceImpl@" shape=ellipse]
20 [label="4:CtLiteralImpl@null" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
22 [label="4:CtVirtualElement@inStream" shape=ellipse]
23 [label="4:CtLocalVariableImpl@InputStream inStream = null" shape=ellipse]
24 [label="6:CtVariableWriteImpl@inStream" shape=ellipse]
25 [label="6:CtLocalVariableReferenceImpl@inStream" shape=ellipse]
26 [label="6:CtExecutableReferenceImpl@FileInputStream()" shape=ellipse]
27 [label="6:CtTypeReferenceImpl@FileInputStream" shape=ellipse]
28 [label="6:CtTypeReferenceImpl@FileInputStream" shape=ellipse]
29 [label="6:CtVariableReadImpl@file" shape=ellipse]
30 [label="6:CtParameterReferenceImpl@file" shape=ellipse]
31 [label="6:CtConstructorCallImpl@new FileInputStream(file)" shape=ellipse]
32 [label="6:CtAssignmentImpl@inStream = new FileInputStream(file)" shape=ellipse]
33 [label="7:CtTypeReferenceImpl@Properties" shape=ellipse]
34 [label="7:CtPackageReferenceImpl@" shape=ellipse]
35 [label="7:CtExecutableReferenceImpl@Properties()" shape=ellipse]
36 [label="7:CtTypeReferenceImpl@Properties" shape=ellipse]
37 [label="7:CtTypeReferenceImpl@Properties" shape=ellipse]
38 [label="7:CtConstructorCallImpl@new Properties()" shape=ellipse]
39 [label="7:CtVirtualElement@props" shape=ellipse]
40 [label="7:CtLocalVariableImpl@final Properties props = new Properties()" shape=ellipse]
41 [label="8:CtExecutableReferenceImpl@load(InputStream)" shape=ellipse]
42 [label="8:CtTypeReferenceImpl@Properties" shape=ellipse]
43 [label="8:CtTypeReferenceImpl@InputStream" shape=ellipse]
44 [label="8:CtVirtualElement@load" shape=ellipse]
45 [label="8:CtVariableReadImpl@props" shape=ellipse]
46 [label="8:CtLocalVariableReferenceImpl@props" shape=ellipse]
47 [label="8:CtVariableReadImpl@inStream" shape=ellipse]
48 [label="8:CtLocalVariableReferenceImpl@inStream" shape=ellipse]
49 [label="8:CtInvocationImpl@props.load(inStream)" shape=ellipse]
50 [label="9:CtTypeReferenceImpl@Enumeration<?>" shape=ellipse]
51 [label="9:CtPackageReferenceImpl@" shape=ellipse]
52 [label="9:CtWildcardReferenceImpl@?" shape=ellipse]
53 [label="9:CtExecutableReferenceImpl@propertyNames()" shape=ellipse]
54 [label="9:CtTypeReferenceImpl@Properties" shape=ellipse]
55 [label="9:CtTypeReferenceImpl@Enumeration<?>" shape=ellipse]
56 [label="9:CtVirtualElement@propertyNames" shape=ellipse]
57 [label="9:CtVariableReadImpl@props" shape=ellipse]
58 [label="9:CtLocalVariableReferenceImpl@props" shape=ellipse]
59 [label="9:CtInvocationImpl@props.propertyNames()" shape=ellipse]
60 [label="9:CtVirtualElement@e" shape=ellipse]
61 [label="9:CtLocalVariableImpl@final Enumeration<?> e = props.propertyNames()" shape=ellipse]
62 [label="10:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
63 [label="10:CtTypeReferenceImpl@Enumeration<?>" shape=ellipse]
64 [label="10:CtTypeReferenceImpl@boolean" shape=ellipse]
65 [label="10:CtVirtualElement@hasMoreElements" shape=ellipse]
66 [label="10:CtVariableReadImpl@e" shape=ellipse]
67 [label="10:CtLocalVariableReferenceImpl@e" shape=ellipse]
68 [label="10:CtInvocationImpl@e.hasMoreElements()" shape=ellipse]
69 [label="11:CtExecutableReferenceImpl@add()" shape=ellipse]
70 [label="11:CtTypeReferenceImpl@Set<Object>" shape=ellipse]
71 [label="11:CtVirtualElement@add" shape=ellipse]
72 [label="11:CtVariableReadImpl@keys" shape=ellipse]
73 [label="11:CtLocalVariableReferenceImpl@keys" shape=ellipse]
74 [label="11:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
75 [label="11:CtTypeReferenceImpl@Enumeration<?>" shape=ellipse]
76 [label="11:CtVirtualElement@nextElement" shape=ellipse]
77 [label="11:CtVariableReadImpl@e" shape=ellipse]
78 [label="11:CtLocalVariableReferenceImpl@e" shape=ellipse]
79 [label="11:CtInvocationImpl@e.nextElement()" shape=ellipse]
80 [label="11:CtInvocationImpl@keys.add(e.nextElement())" shape=ellipse]
81 [label="10:CtBlockImpl@\{
    keys.add(e.nextElement());
\}" shape=ellipse]
82 [label="10:CtWhileImpl@while (e.hasMoreElements()) \{
    keys.add(e.nextElement());
\} " shape=ellipse]
83 [label="5:CtBlockImpl@\{
    inStream = new FileInputStream(file);
    final Properties props = new Properties();
    props.load(inStream);
    final Enumeration<?> e = props.propertyNames();
    while (e.hasMoreElements()) \{
        keys.add(e.nextElement());
    \} 
\}" shape=ellipse]
84 [label="13:CtVirtualElement@e" shape=ellipse]
85 [label="13:CtTypeReferenceImpl@IOException" shape=ellipse]
86 [label="13:CtPackageReferenceImpl@" shape=ellipse]
87 [label="13:CtCatchVariableImpl@final IOException e" shape=ellipse]
88 [label="14:CtExecutableReferenceImpl@logIOException(<unknown>,<unknown>)" shape=ellipse]
89 [label="14:CtTypeReferenceImpl@null" shape=ellipse]
90 [label="14:CtTypeReferenceImpl@null" shape=ellipse]
91 [label="14:CtVirtualElement@logIOException" shape=ellipse]
92 [label="14:CtTypeAccessImpl@PlaceHold" shape=ellipse]
93 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
94 [label="14:CtThisAccessImpl@" shape=ellipse]
95 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
96 [label="14:CtVariableReadImpl@e" shape=ellipse]
97 [label="14:CtCatchVariableReferenceImpl@e" shape=ellipse]
98 [label="14:CtVariableReadImpl@file" shape=ellipse]
99 [label="14:CtParameterReferenceImpl@file" shape=ellipse]
100 [label="14:CtInvocationImpl@logIOException(e, file)" shape=ellipse]
101 [label="13:CtBlockImpl@\{
    logIOException(e, file);
\}" shape=ellipse]
102 [label="13:CtCatchImpl@ catch (final IOException e) \{
    logIOException(e, file);
\}" shape=ellipse]
103 [label="16:CtExecutableReferenceImpl@closeQuietly(InputStream)" shape=ellipse]
104 [label="16:CtTypeReferenceImpl@Utils" shape=ellipse]
105 [label="16:CtTypeReferenceImpl@InputStream" shape=ellipse]
106 [label="16:CtVirtualElement@closeQuietly" shape=ellipse]
107 [label="16:CtTypeAccessImpl@Utils" shape=ellipse]
108 [label="16:CtTypeReferenceImpl@Utils" shape=ellipse]
109 [label="16:CtVariableReadImpl@inStream" shape=ellipse]
110 [label="16:CtLocalVariableReferenceImpl@inStream" shape=ellipse]
111 [label="16:CtInvocationImpl@Utils.closeQuietly(inStream)" shape=ellipse]
112 [label="15:CtBlockImpl@\{
    Utils.closeQuietly(inStream);
\}" shape=ellipse]
113 [label="5:CtTryImpl@try \{
    inStream = new FileInputStream(file);
    final Properties props = new Properties();
    props.load(inStream);
    final Enumeration<?> e = props.propertyNames();
    while (e.hasMoreElements()) \{
        keys.add(e.nextElement());
    \} 
\} catch (final IOException e) \{
    logIOException(e, file);
\} finally \{
    Utils.closeQuietly(inStream);
\}" shape=ellipse]
114 [label="18:CtVariableReadImpl@keys" shape=ellipse]
115 [label="18:CtLocalVariableReferenceImpl@keys" shape=ellipse]
116 [label="18:CtReturnImpl@return keys" shape=ellipse]
117 [label="2:CtBlockImpl@\{
    final Set<Object> keys = Sets.newHashSet();
    InputStream inStream = null;
    try \{
        inStream = new FileInputStream(file);
        final Properties props = new Properties();
        props.load(inStream);
        final Enumeration<?> e = props.propertyNames();
        while (e.hasMoreElements()) \{
            keys.add(e.nextElement());
        \} 
    \} catch (final IOException e) \{
        logIOException(e, file);
    \} finally \{
        Utils.closeQuietly(inStream);
    \}
    return keys;
\}" shape=ellipse]
118 [label="2:CtMethodImpl@private Set<Object> loadKeys(File file) \{
    final Set<Object> keys = Sets.newHashSet();
    InputStream inStream = null;
    try \{
        inStream = new FileInputStream(file);
        final Properties props = new Properties();
        props.load(inStream);
        final Enumeration<?> e = props.propertyNames();
        while (e.hasMoreElements()) \{
            keys.add(e.nextElement());
        \} 
    \} catch (final IOException e) \{
        logIOException(e, file);
    \} finally \{
        Utils.closeQuietly(inStream);
    \}
    return keys;
\}" shape=ellipse]
119 [label="16:Update@UPDATE" shape=ellipse]
120 [label="16:CtPackageReferenceImpl@" shape=ellipse]
121 [label="16:CtTypeReferenceImpl@Closeables" shape=ellipse]
122 [label="16:CtTypeAccessImpl@Closeables" shape=ellipse]
0 -> 1 [label="AST"];
0 -> 2 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
9 -> 10 [label="AST"];
9 -> 11 [label="AST"];
13 -> 14 [label="AST"];
15 -> 12 [label="AST"];
15 -> 13 [label="AST"];
15 -> 9 [label="AST"];
16 -> 72 [label="Define-Use"];
16 -> 114 [label="Define-Use"];
17 -> 16 [label="AST"];
17 -> 6 [label="AST"];
17 -> 15 [label="AST"];
18 -> 19 [label="AST"];
20 -> 21 [label="AST"];
23 -> 22 [label="AST"];
23 -> 18 [label="AST"];
23 -> 20 [label="AST"];
24 -> 25 [label="AST"];
24 -> 47 [label="Define-Use"];
24 -> 109 [label="Define-Use"];
26 -> 27 [label="AST"];
26 -> 28 [label="AST"];
29 -> 30 [label="AST"];
29 -> 24 [label="Data Dep"];
31 -> 26 [label="AST"];
31 -> 29 [label="AST"];
32 -> 24 [label="AST"];
32 -> 31 [label="AST"];
33 -> 34 [label="AST"];
35 -> 36 [label="AST"];
35 -> 37 [label="AST"];
38 -> 35 [label="AST"];
39 -> 45 [label="Define-Use"];
39 -> 57 [label="Define-Use"];
40 -> 39 [label="AST"];
40 -> 33 [label="AST"];
40 -> 38 [label="AST"];
41 -> 42 [label="AST"];
41 -> 43 [label="AST"];
45 -> 46 [label="AST"];
47 -> 48 [label="AST"];
49 -> 44 [label="AST"];
49 -> 45 [label="AST"];
49 -> 41 [label="AST"];
49 -> 47 [label="AST"];
50 -> 51 [label="AST"];
50 -> 52 [label="AST"];
53 -> 54 [label="AST"];
53 -> 55 [label="AST"];
57 -> 58 [label="AST"];
57 -> 60 [label="Data Dep"];
59 -> 56 [label="AST"];
59 -> 57 [label="AST"];
59 -> 53 [label="AST"];
60 -> 66 [label="Define-Use"];
60 -> 77 [label="Define-Use"];
61 -> 60 [label="AST"];
61 -> 50 [label="AST"];
61 -> 59 [label="AST"];
62 -> 63 [label="AST"];
62 -> 64 [label="AST"];
66 -> 67 [label="AST"];
68 -> 65 [label="AST"];
68 -> 66 [label="AST"];
68 -> 62 [label="AST"];
68 -> 81 [label="Control Dep"];
68 -> 80 [label="Control Dep"];
68 -> 69 [label="Control Dep"];
68 -> 72 [label="Control Dep"];
68 -> 79 [label="Control Dep"];
68 -> 74 [label="Control Dep"];
68 -> 77 [label="Control Dep"];
69 -> 70 [label="AST"];
72 -> 73 [label="AST"];
74 -> 75 [label="AST"];
77 -> 78 [label="AST"];
79 -> 76 [label="AST"];
79 -> 77 [label="AST"];
79 -> 74 [label="AST"];
80 -> 71 [label="AST"];
80 -> 72 [label="AST"];
80 -> 69 [label="AST"];
80 -> 79 [label="AST"];
81 -> 80 [label="AST"];
82 -> 68 [label="AST"];
82 -> 81 [label="AST"];
83 -> 32 [label="AST"];
83 -> 40 [label="AST"];
83 -> 49 [label="AST"];
83 -> 61 [label="AST"];
83 -> 82 [label="AST"];
84 -> 96 [label="Define-Use"];
85 -> 86 [label="AST"];
87 -> 84 [label="AST"];
87 -> 85 [label="AST"];
87 -> 101 [label="Control Dep"];
87 -> 100 [label="Control Dep"];
87 -> 88 [label="Control Dep"];
87 -> 94 [label="Control Dep"];
87 -> 92 [label="Control Dep"];
87 -> 96 [label="Control Dep"];
87 -> 98 [label="Control Dep"];
88 -> 89 [label="AST"];
88 -> 90 [label="AST"];
92 -> 93 [label="AST"];
94 -> 95 [label="AST"];
94 -> 92 [label="AST"];
96 -> 97 [label="AST"];
98 -> 99 [label="AST"];
100 -> 91 [label="AST"];
100 -> 94 [label="AST"];
100 -> 88 [label="AST"];
100 -> 96 [label="AST"];
100 -> 98 [label="AST"];
101 -> 100 [label="AST"];
102 -> 87 [label="AST"];
102 -> 101 [label="AST"];
103 -> 104 [label="AST"];
103 -> 105 [label="AST"];
107 -> 108 [label="AST"];
107 -> 119 [label="Action"];
109 -> 110 [label="AST"];
111 -> 106 [label="AST"];
111 -> 107 [label="AST"];
111 -> 103 [label="AST"];
111 -> 109 [label="AST"];
112 -> 111 [label="AST"];
113 -> 83 [label="AST"];
113 -> 102 [label="AST"];
113 -> 112 [label="AST"];
114 -> 115 [label="AST"];
116 -> 114 [label="AST"];
117 -> 17 [label="AST"];
117 -> 23 [label="AST"];
117 -> 113 [label="AST"];
117 -> 116 [label="AST"];
118 -> 3 [label="AST"];
118 -> 0 [label="AST"];
118 -> 4 [label="AST"];
118 -> 117 [label="AST"];
119 -> 122 [label="Action"];
121 -> 120 [label="AST"];
122 -> 121 [label="AST"];
}