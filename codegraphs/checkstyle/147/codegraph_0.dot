digraph "findClassAlias#?,String" {
0 [label="2:CtTypeReferenceImpl@ClassInfo" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@" shape=ellipse]
2 [label="2:CtVirtualElement@findClassAlias" shape=ellipse]
3 [label="2:CtParameterImpl@final String aName" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@ClassInfo" shape=ellipse]
6 [label="3:CtPackageReferenceImpl@" shape=ellipse]
7 [label="3:CtLiteralImpl@null" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
9 [label="3:CtVirtualElement@ci" shape=ellipse]
10 [label="3:CtLocalVariableImpl@ClassInfo ci = null" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
12 [label="4:CtExecutableReferenceImpl@size()" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@mTypeParams" shape=ellipse]
14 [label="4:CtVirtualElement@size" shape=ellipse]
15 [label="4:CtFieldReferenceImpl@mTypeParams" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
17 [label="4:CtFieldReadImpl@mTypeParams" shape=ellipse]
18 [label="4:CtInvocationImpl@mTypeParams.size()" shape=ellipse]
19 [label="4:CtLiteralImpl@1" shape=ellipse]
20 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
21 [label="4:CtBinaryOperatorImpl@mTypeParams.size() - 1" shape=ellipse]
22 [label="4:CtVirtualElement@i" shape=ellipse]
23 [label="4:CtLocalVariableImpl@int i = mTypeParams.size() - 1" shape=ellipse]
24 [label="4:CtVariableReadImpl@i" shape=ellipse]
25 [label="4:CtLocalVariableReferenceImpl@i" shape=ellipse]
26 [label="4:CtLiteralImpl@0" shape=ellipse]
27 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
28 [label="4:CtBinaryOperatorImpl@i >= 0" shape=ellipse]
29 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
30 [label="4:CtVariableWriteImpl@i" shape=ellipse]
31 [label="4:CtLocalVariableReferenceImpl@i" shape=ellipse]
32 [label="4:CtUnaryOperatorImpl@i--" shape=ellipse]
33 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@Map<String, ClassInfo>" shape=ellipse]
35 [label="5:CtPackageReferenceImpl@" shape=ellipse]
36 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@ClassInfo" shape=ellipse]
38 [label="5:CtExecutableReferenceImpl@get(int)" shape=ellipse]
39 [label="5:CtTypeReferenceImpl@mTypeParams" shape=ellipse]
40 [label="5:CtTypeReferenceImpl@Map<String, ClassInfo>" shape=ellipse]
41 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
42 [label="5:CtVirtualElement@get" shape=ellipse]
43 [label="5:CtFieldReferenceImpl@mTypeParams" shape=ellipse]
44 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
45 [label="5:CtFieldReadImpl@mTypeParams" shape=ellipse]
46 [label="5:CtVariableReadImpl@i" shape=ellipse]
47 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
48 [label="5:CtInvocationImpl@mTypeParams.get(i)" shape=ellipse]
49 [label="5:CtVirtualElement@paramMap" shape=ellipse]
50 [label="5:CtLocalVariableImpl@final Map<String, ClassInfo> paramMap = mTypeParams.get(i)" shape=ellipse]
51 [label="6:CtVariableWriteImpl@ci" shape=ellipse]
52 [label="6:CtLocalVariableReferenceImpl@ci" shape=ellipse]
53 [label="6:CtExecutableReferenceImpl@get(java.lang.String)" shape=ellipse]
54 [label="6:CtTypeReferenceImpl@Map<String, ClassInfo>" shape=ellipse]
55 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
56 [label="6:CtVirtualElement@get" shape=ellipse]
57 [label="6:CtVariableReadImpl@paramMap" shape=ellipse]
58 [label="6:CtLocalVariableReferenceImpl@paramMap" shape=ellipse]
59 [label="6:CtVariableReadImpl@aName" shape=ellipse]
60 [label="6:CtParameterReferenceImpl@aName" shape=ellipse]
61 [label="6:CtInvocationImpl@paramMap.get(aName)" shape=ellipse]
62 [label="6:CtAssignmentImpl@ci = paramMap.get(aName)" shape=ellipse]
63 [label="7:CtVariableReadImpl@ci" shape=ellipse]
64 [label="7:CtLocalVariableReferenceImpl@ci" shape=ellipse]
65 [label="7:CtLiteralImpl@null" shape=ellipse]
66 [label="7:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
67 [label="7:CtBinaryOperatorImpl@ci != null" shape=ellipse]
68 [label="8:CtBreakImpl@break" shape=ellipse]
69 [label="7:CtBlockImpl@\{
    break;
\}" shape=ellipse]
70 [label="7:CtIfImpl@if (ci != null) \{
    break;
\}" shape=ellipse]
71 [label="4:CtBlockImpl@\{
    final Map<String, ClassInfo> paramMap = mTypeParams.get(i);
    ci = paramMap.get(aName);
    if (ci != null) \{
        break;
    \}
\}" shape=ellipse]
72 [label="4:CtForImpl@for (int i = mTypeParams.size() - 1; i >= 0; i--) \{
    final Map<String, ClassInfo> paramMap = mTypeParams.get(i);
    ci = paramMap.get(aName);
    if (ci != null) \{
        break;
    \}
\}" shape=ellipse]
73 [label="11:CtVariableReadImpl@ci" shape=ellipse]
74 [label="11:CtLocalVariableReferenceImpl@ci" shape=ellipse]
75 [label="11:CtReturnImpl@return ci" shape=ellipse]
76 [label="2:CtBlockImpl@\{
    ClassInfo ci = null;
    for (int i = mTypeParams.size() - 1; i >= 0; i--) \{
        final Map<String, ClassInfo> paramMap = mTypeParams.get(i);
        ci = paramMap.get(aName);
        if (ci != null) \{
            break;
        \}
    \}
    return ci;
\}" shape=ellipse]
77 [label="2:CtMethodImpl@protected final ClassInfo findClassAlias(final String aName) \{
    ClassInfo ci = null;
    for (int i = mTypeParams.size() - 1; i >= 0; i--) \{
        final Map<String, ClassInfo> paramMap = mTypeParams.get(i);
        ci = paramMap.get(aName);
        if (ci != null) \{
            break;
        \}
    \}
    return ci;
\}" shape=ellipse]
78 [label="5:Update@UPDATE" shape=ellipse]
79 [label="5:CtPackageReferenceImpl@" shape=ellipse]
80 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
81 [label="5:CtFieldReferenceImpl@mTypeParams" shape=ellipse]
82 [label="5:CtFieldReadImpl@mTypeParams" shape=ellipse]
83 [label="5:CtPackageReferenceImpl@" shape=ellipse]
84 [label="5:CtTypeReferenceImpl@mTypeParams" shape=ellipse]
85 [label="5:CtPackageReferenceImpl@" shape=ellipse]
86 [label="5:CtPackageReferenceImpl@java.lang" shape=ellipse]
87 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
88 [label="5:CtPackageReferenceImpl@" shape=ellipse]
89 [label="5:CtTypeReferenceImpl@ClassInfo" shape=ellipse]
90 [label="5:CtTypeReferenceImpl@Map<String, ClassInfo>" shape=ellipse]
91 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
92 [label="5:CtExecutableReferenceImpl@peek(int)" shape=ellipse]
93 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
94 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
95 [label="5:CtVariableReadImpl@i" shape=ellipse]
96 [label="5:CtInvocationImpl@mTypeParams.peek(i)" shape=ellipse]
97 [label="5:CtVirtualElement@peek" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
10 -> 9 [label="AST"];
10 -> 5 [label="AST"];
10 -> 7 [label="AST"];
12 -> 13 [label="AST"];
15 -> 16 [label="AST"];
17 -> 15 [label="AST"];
17 -> 22 [label="Data Dep"];
18 -> 14 [label="AST"];
18 -> 17 [label="AST"];
18 -> 12 [label="AST"];
19 -> 20 [label="AST"];
21 -> 18 [label="AST"];
21 -> 19 [label="AST"];
22 -> 24 [label="Define-Use"];
23 -> 22 [label="AST"];
23 -> 11 [label="AST"];
23 -> 21 [label="AST"];
24 -> 25 [label="AST"];
26 -> 27 [label="AST"];
28 -> 29 [label="AST"];
28 -> 24 [label="AST"];
28 -> 26 [label="AST"];
28 -> 71 [label="Control Dep"];
28 -> 50 [label="Control Dep"];
28 -> 48 [label="Control Dep"];
28 -> 38 [label="Control Dep"];
28 -> 45 [label="Control Dep"];
28 -> 46 [label="Control Dep"];
28 -> 62 [label="Control Dep"];
28 -> 51 [label="Control Dep"];
28 -> 61 [label="Control Dep"];
28 -> 53 [label="Control Dep"];
28 -> 57 [label="Control Dep"];
28 -> 59 [label="Control Dep"];
28 -> 70 [label="Control Dep"];
28 -> 67 [label="Control Dep"];
28 -> 63 [label="Control Dep"];
28 -> 65 [label="Control Dep"];
28 -> 82 [label="Control Dep"];
28 -> 92 [label="Control Dep"];
28 -> 95 [label="Control Dep"];
28 -> 96 [label="Control Dep"];
30 -> 31 [label="AST"];
30 -> 46 [label="Define-Use"];
30 -> 95 [label="Define-Use"];
30 -> 95 [label="Data Dep"];
30 -> 95 [label="Control Dep"];
32 -> 33 [label="AST"];
32 -> 30 [label="AST"];
34 -> 35 [label="AST"];
34 -> 36 [label="AST"];
34 -> 37 [label="AST"];
38 -> 39 [label="AST"];
38 -> 40 [label="AST"];
38 -> 41 [label="AST"];
43 -> 44 [label="AST"];
45 -> 43 [label="AST"];
45 -> 49 [label="Data Dep"];
46 -> 47 [label="AST"];
46 -> 49 [label="Data Dep"];
48 -> 42 [label="AST"];
48 -> 45 [label="AST"];
48 -> 38 [label="AST"];
48 -> 46 [label="AST"];
48 -> 78 [label="Action"];
49 -> 57 [label="Define-Use"];
50 -> 49 [label="AST"];
50 -> 34 [label="AST"];
50 -> 48 [label="AST"];
51 -> 52 [label="AST"];
51 -> 63 [label="Define-Use"];
51 -> 73 [label="Define-Use"];
53 -> 54 [label="AST"];
53 -> 55 [label="AST"];
57 -> 58 [label="AST"];
57 -> 51 [label="Data Dep"];
59 -> 60 [label="AST"];
59 -> 51 [label="Data Dep"];
61 -> 56 [label="AST"];
61 -> 57 [label="AST"];
61 -> 53 [label="AST"];
61 -> 59 [label="AST"];
62 -> 51 [label="AST"];
62 -> 61 [label="AST"];
63 -> 64 [label="AST"];
65 -> 66 [label="AST"];
67 -> 63 [label="AST"];
67 -> 65 [label="AST"];
67 -> 69 [label="Control Dep"];
67 -> 68 [label="Control Dep"];
69 -> 68 [label="AST"];
70 -> 67 [label="AST"];
70 -> 69 [label="AST"];
71 -> 50 [label="AST"];
71 -> 62 [label="AST"];
71 -> 70 [label="AST"];
72 -> 23 [label="AST"];
72 -> 28 [label="AST"];
72 -> 32 [label="AST"];
72 -> 71 [label="AST"];
73 -> 74 [label="AST"];
75 -> 73 [label="AST"];
76 -> 10 [label="AST"];
76 -> 72 [label="AST"];
76 -> 75 [label="AST"];
77 -> 2 [label="AST"];
77 -> 0 [label="AST"];
77 -> 3 [label="AST"];
77 -> 76 [label="AST"];
78 -> 96 [label="Action"];
80 -> 79 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
84 -> 83 [label="AST"];
87 -> 86 [label="AST"];
89 -> 88 [label="AST"];
90 -> 85 [label="AST"];
90 -> 87 [label="AST"];
90 -> 89 [label="AST"];
92 -> 84 [label="AST"];
92 -> 90 [label="AST"];
92 -> 91 [label="AST"];
94 -> 93 [label="AST"];
95 -> 94 [label="AST"];
96 -> 97 [label="AST"];
96 -> 82 [label="AST"];
96 -> 92 [label="AST"];
96 -> 95 [label="AST"];
}