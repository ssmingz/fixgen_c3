digraph "visitLiteralThrows#?,DetailAST" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@visitLiteralThrows" shape=ellipse]
2 [label="2:CtParameterImpl@DetailAST ast" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@getChildCount()" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
7 [label="3:CtVirtualElement@getChildCount" shape=ellipse]
8 [label="3:CtVariableReadImpl@ast" shape=ellipse]
9 [label="3:CtParameterReferenceImpl@ast" shape=ellipse]
10 [label="3:CtInvocationImpl@ast.getChildCount()" shape=ellipse]
11 [label="3:CtLiteralImpl@1" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
13 [label="3:CtBinaryOperatorImpl@(ast.getChildCount() + 1)" shape=ellipse]
14 [label="3:CtLiteralImpl@2" shape=ellipse]
15 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
16 [label="3:CtBinaryOperatorImpl@(ast.getChildCount() + 1) / 2" shape=ellipse]
17 [label="3:CtVirtualElement@count" shape=ellipse]
18 [label="3:CtLocalVariableImpl@final int count = (ast.getChildCount() + 1) / 2" shape=ellipse]
19 [label="4:CtVariableReadImpl@count" shape=ellipse]
20 [label="4:CtLocalVariableReferenceImpl@count" shape=ellipse]
21 [label="4:CtExecutableReferenceImpl@getMax()" shape=ellipse]
22 [label="4:CtVirtualElement@getMax" shape=ellipse]
23 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
24 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
25 [label="4:CtThisAccessImpl@" shape=ellipse]
26 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
27 [label="4:CtInvocationImpl@getMax()" shape=ellipse]
28 [label="4:CtBinaryOperatorImpl@count > getMax()" shape=ellipse]
29 [label="5:CtExecutableReferenceImpl@log(<unknown>,<unknown>,java.lang.String,int,<unknown>)" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
32 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
33 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
35 [label="5:CtVirtualElement@log" shape=ellipse]
36 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
38 [label="5:CtThisAccessImpl@" shape=ellipse]
39 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
40 [label="5:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
41 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
42 [label="5:CtVirtualElement@getLineNo" shape=ellipse]
43 [label="5:CtVariableReadImpl@ast" shape=ellipse]
44 [label="5:CtParameterReferenceImpl@ast" shape=ellipse]
45 [label="5:CtInvocationImpl@ast.getLineNo()" shape=ellipse]
46 [label="5:CtExecutableReferenceImpl@getColumnNo()" shape=ellipse]
47 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
48 [label="5:CtVirtualElement@getColumnNo" shape=ellipse]
49 [label="5:CtVariableReadImpl@ast" shape=ellipse]
50 [label="5:CtParameterReferenceImpl@ast" shape=ellipse]
51 [label="5:CtInvocationImpl@ast.getColumnNo()" shape=ellipse]
52 [label="5:CtLiteralImpl@\"throws.count\"" shape=ellipse]
53 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
54 [label="5:CtVariableReadImpl@count" shape=ellipse]
55 [label="5:CtLocalVariableReferenceImpl@count" shape=ellipse]
56 [label="5:CtExecutableReferenceImpl@getMax()" shape=ellipse]
57 [label="5:CtVirtualElement@getMax" shape=ellipse]
58 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
59 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
60 [label="5:CtThisAccessImpl@" shape=ellipse]
61 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
62 [label="5:CtInvocationImpl@getMax()" shape=ellipse]
63 [label="5:CtInvocationImpl@log(ast.getLineNo(), ast.getColumnNo(), \"throws.count\", count, getMax())" shape=ellipse]
64 [label="4:CtBlockImpl@\{
    log(ast.getLineNo(), ast.getColumnNo(), \"throws.count\", count, getMax());
\}" shape=ellipse]
65 [label="4:CtIfImpl@if (count > getMax()) \{
    log(ast.getLineNo(), ast.getColumnNo(), \"throws.count\", count, getMax());
\}" shape=ellipse]
66 [label="2:CtBlockImpl@\{
    final int count = (ast.getChildCount() + 1) / 2;
    if (count > getMax()) \{
        log(ast.getLineNo(), ast.getColumnNo(), \"throws.count\", count, getMax());
    \}
\}" shape=ellipse]
67 [label="2:CtMethodImpl@private void visitLiteralThrows(DetailAST ast) \{
    final int count = (ast.getChildCount() + 1) / 2;
    if (count > getMax()) \{
        log(ast.getLineNo(), ast.getColumnNo(), \"throws.count\", count, getMax());
    \}
\}" shape=ellipse]
68 [label="5:Delete@DELETE" shape=ellipse]
69 [label="5:Insert@INSERT" shape=ellipse]
70 [label="5:CtPackageReferenceImpl@" shape=ellipse]
71 [label="5:CtTypeReferenceImpl@MSG_KEY" shape=ellipse]
72 [label="5:CtTypeAccessImpl@MSG_KEY" shape=ellipse]
2 -> 3 [label="AST"];
5 -> 6 [label="AST"];
8 -> 9 [label="AST"];
8 -> 17 [label="Data Dep"];
10 -> 7 [label="AST"];
10 -> 8 [label="AST"];
10 -> 5 [label="AST"];
11 -> 12 [label="AST"];
13 -> 10 [label="AST"];
13 -> 11 [label="AST"];
14 -> 15 [label="AST"];
16 -> 13 [label="AST"];
16 -> 14 [label="AST"];
17 -> 19 [label="Define-Use"];
17 -> 54 [label="Define-Use"];
18 -> 17 [label="AST"];
18 -> 4 [label="AST"];
18 -> 16 [label="AST"];
19 -> 20 [label="AST"];
23 -> 24 [label="AST"];
25 -> 26 [label="AST"];
25 -> 23 [label="AST"];
27 -> 22 [label="AST"];
27 -> 25 [label="AST"];
27 -> 21 [label="AST"];
28 -> 19 [label="AST"];
28 -> 27 [label="AST"];
28 -> 64 [label="Control Dep"];
28 -> 63 [label="Control Dep"];
28 -> 29 [label="Control Dep"];
28 -> 38 [label="Control Dep"];
28 -> 36 [label="Control Dep"];
28 -> 45 [label="Control Dep"];
28 -> 40 [label="Control Dep"];
28 -> 43 [label="Control Dep"];
28 -> 51 [label="Control Dep"];
28 -> 46 [label="Control Dep"];
28 -> 49 [label="Control Dep"];
28 -> 52 [label="Control Dep"];
28 -> 54 [label="Control Dep"];
28 -> 62 [label="Control Dep"];
28 -> 56 [label="Control Dep"];
28 -> 60 [label="Control Dep"];
28 -> 58 [label="Control Dep"];
28 -> 72 [label="Control Dep"];
29 -> 30 [label="AST"];
29 -> 31 [label="AST"];
29 -> 32 [label="AST"];
29 -> 33 [label="AST"];
29 -> 34 [label="AST"];
36 -> 37 [label="AST"];
38 -> 39 [label="AST"];
38 -> 36 [label="AST"];
40 -> 41 [label="AST"];
43 -> 44 [label="AST"];
45 -> 42 [label="AST"];
45 -> 43 [label="AST"];
45 -> 40 [label="AST"];
46 -> 47 [label="AST"];
49 -> 50 [label="AST"];
51 -> 48 [label="AST"];
51 -> 49 [label="AST"];
51 -> 46 [label="AST"];
52 -> 53 [label="AST"];
52 -> 68 [label="Action"];
54 -> 55 [label="AST"];
58 -> 59 [label="AST"];
60 -> 61 [label="AST"];
60 -> 58 [label="AST"];
62 -> 57 [label="AST"];
62 -> 60 [label="AST"];
62 -> 56 [label="AST"];
63 -> 35 [label="AST"];
63 -> 38 [label="AST"];
63 -> 29 [label="AST"];
63 -> 45 [label="AST"];
63 -> 51 [label="AST"];
63 -> 52 [label="AST"];
63 -> 54 [label="AST"];
63 -> 62 [label="AST"];
63 -> 69 [label="Action"];
64 -> 63 [label="AST"];
65 -> 28 [label="AST"];
65 -> 64 [label="AST"];
66 -> 18 [label="AST"];
66 -> 65 [label="AST"];
67 -> 1 [label="AST"];
67 -> 0 [label="AST"];
67 -> 2 [label="AST"];
67 -> 66 [label="AST"];
69 -> 72 [label="Action"];
71 -> 70 [label="AST"];
72 -> 71 [label="AST"];
}