digraph "mustCheckName#?,DetailAST" {
0 [label="2:CtTypeReferenceImpl@boolean" shape=ellipse]
1 [label="2:CtVirtualElement@mustCheckName" shape=ellipse]
2 [label="2:CtParameterImpl@DetailAST aAST" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
5 [label="3:CtPackageReferenceImpl@" shape=ellipse]
6 [label="3:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
9 [label="3:CtVirtualElement@findFirstToken" shape=ellipse]
10 [label="3:CtVariableReadImpl@aAST" shape=ellipse]
11 [label="3:CtParameterReferenceImpl@aAST" shape=ellipse]
12 [label="3:CtTypeAccessImpl@MODIFIERS" shape=ellipse]
13 [label="3:CtTypeReferenceImpl@MODIFIERS" shape=ellipse]
14 [label="3:CtInvocationImpl@aAST.findFirstToken(MODIFIERS)" shape=ellipse]
15 [label="3:CtVirtualElement@modifiersAST" shape=ellipse]
16 [label="3:CtLocalVariableImpl@final DetailAST modifiersAST = aAST.findFirstToken(MODIFIERS)" shape=ellipse]
17 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
18 [label="4:CtVariableReadImpl@modifiersAST" shape=ellipse]
19 [label="4:CtLocalVariableReferenceImpl@modifiersAST" shape=ellipse]
20 [label="4:CtLiteralImpl@null" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
22 [label="4:CtBinaryOperatorImpl@(modifiersAST != null)" shape=ellipse]
23 [label="4:CtExecutableReferenceImpl@branchContains()" shape=ellipse]
24 [label="4:CtTypeReferenceImpl@DetailAST" shape=ellipse]
25 [label="4:CtVirtualElement@branchContains" shape=ellipse]
26 [label="4:CtVariableReadImpl@modifiersAST" shape=ellipse]
27 [label="4:CtLocalVariableReferenceImpl@modifiersAST" shape=ellipse]
28 [label="4:CtTypeAccessImpl@FINAL" shape=ellipse]
29 [label="4:CtTypeReferenceImpl@FINAL" shape=ellipse]
30 [label="4:CtInvocationImpl@modifiersAST.branchContains(FINAL)" shape=ellipse]
31 [label="4:CtBinaryOperatorImpl@(modifiersAST != null) && modifiersAST.branchContains(FINAL)" shape=ellipse]
32 [label="4:CtVirtualElement@isFinal" shape=ellipse]
33 [label="4:CtLocalVariableImpl@final boolean isFinal = (modifiersAST != null) && modifiersAST.branchContains(FINAL)" shape=ellipse]
34 [label="5:CtVariableReadImpl@isFinal" shape=ellipse]
35 [label="5:CtLocalVariableReferenceImpl@isFinal" shape=ellipse]
36 [label="5:CtExecutableReferenceImpl@inCodeBlock(DetailAST)" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
38 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
39 [label="5:CtVirtualElement@inCodeBlock" shape=ellipse]
40 [label="5:CtTypeAccessImpl@ScopeUtils" shape=ellipse]
41 [label="5:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
42 [label="5:CtVariableReadImpl@aAST" shape=ellipse]
43 [label="5:CtParameterReferenceImpl@aAST" shape=ellipse]
44 [label="5:CtInvocationImpl@ScopeUtils.inCodeBlock(aAST)" shape=ellipse]
45 [label="5:CtBinaryOperatorImpl@isFinal && ScopeUtils.inCodeBlock(aAST)" shape=ellipse]
46 [label="5:CtReturnImpl@return isFinal && ScopeUtils.inCodeBlock(aAST)" shape=ellipse]
47 [label="2:CtBlockImpl@\{
    final DetailAST modifiersAST = aAST.findFirstToken(MODIFIERS);
    final boolean isFinal = (modifiersAST != null) && modifiersAST.branchContains(FINAL);
    return isFinal && ScopeUtils.inCodeBlock(aAST);
\}" shape=ellipse]
48 [label="2:CtMethodImpl@protected final boolean mustCheckName(DetailAST aAST) \{
    final DetailAST modifiersAST = aAST.findFirstToken(MODIFIERS);
    final boolean isFinal = (modifiersAST != null) && modifiersAST.branchContains(FINAL);
    return isFinal && ScopeUtils.inCodeBlock(aAST);
\}" shape=ellipse]
49 [label="5:Update@UPDATE" shape=ellipse]
50 [label="5:CtPackageReferenceImpl@" shape=ellipse]
51 [label="5:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
52 [label="5:CtTypeAccessImpl@ScopeUtils" shape=ellipse]
53 [label="5:CtPackageReferenceImpl@" shape=ellipse]
54 [label="5:CtTypeReferenceImpl@ScopeUtils" shape=ellipse]
55 [label="5:CtPackageReferenceImpl@" shape=ellipse]
56 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
57 [label="5:CtExecutableReferenceImpl@isLocalVariableDef(DetailAST)" shape=ellipse]
58 [label="5:CtPackageReferenceImpl@" shape=ellipse]
59 [label="5:CtTypeReferenceImpl@DetailAST" shape=ellipse]
60 [label="5:CtParameterReferenceImpl@aAST" shape=ellipse]
61 [label="5:CtVariableReadImpl@aAST" shape=ellipse]
62 [label="5:CtInvocationImpl@ScopeUtils.isLocalVariableDef(aAST)" shape=ellipse]
63 [label="5:CtVirtualElement@isLocalVariableDef" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
10 -> 11 [label="AST"];
10 -> 15 [label="Data Dep"];
12 -> 13 [label="AST"];
14 -> 9 [label="AST"];
14 -> 10 [label="AST"];
14 -> 6 [label="AST"];
14 -> 12 [label="AST"];
15 -> 18 [label="Define-Use"];
15 -> 26 [label="Define-Use"];
16 -> 15 [label="AST"];
16 -> 4 [label="AST"];
16 -> 14 [label="AST"];
18 -> 19 [label="AST"];
18 -> 32 [label="Data Dep"];
20 -> 21 [label="AST"];
22 -> 18 [label="AST"];
22 -> 20 [label="AST"];
23 -> 24 [label="AST"];
26 -> 27 [label="AST"];
26 -> 32 [label="Data Dep"];
28 -> 29 [label="AST"];
30 -> 25 [label="AST"];
30 -> 26 [label="AST"];
30 -> 23 [label="AST"];
30 -> 28 [label="AST"];
31 -> 22 [label="AST"];
31 -> 30 [label="AST"];
32 -> 34 [label="Define-Use"];
33 -> 32 [label="AST"];
33 -> 17 [label="AST"];
33 -> 31 [label="AST"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
36 -> 38 [label="AST"];
40 -> 41 [label="AST"];
42 -> 43 [label="AST"];
44 -> 39 [label="AST"];
44 -> 40 [label="AST"];
44 -> 36 [label="AST"];
44 -> 42 [label="AST"];
44 -> 49 [label="Action"];
45 -> 34 [label="AST"];
45 -> 44 [label="AST"];
46 -> 45 [label="AST"];
47 -> 16 [label="AST"];
47 -> 33 [label="AST"];
47 -> 46 [label="AST"];
48 -> 1 [label="AST"];
48 -> 0 [label="AST"];
48 -> 2 [label="AST"];
48 -> 47 [label="AST"];
49 -> 62 [label="Action"];
51 -> 50 [label="AST"];
52 -> 51 [label="AST"];
54 -> 53 [label="AST"];
56 -> 55 [label="AST"];
57 -> 54 [label="AST"];
57 -> 56 [label="AST"];
59 -> 58 [label="AST"];
60 -> 59 [label="AST"];
61 -> 60 [label="AST"];
62 -> 63 [label="AST"];
62 -> 52 [label="AST"];
62 -> 57 [label="AST"];
62 -> 61 [label="AST"];
}