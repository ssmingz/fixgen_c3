digraph "setHeaderFile#?,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@setHeaderFile" shape=ellipse]
2 [label="2:CtParameterImpl@String aFileName" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@ConversionException" shape=ellipse]
5 [label="2:CtPackageReferenceImpl@" shape=ellipse]
6 [label="3:CtVariableReadImpl@aFileName" shape=ellipse]
7 [label="3:CtParameterReferenceImpl@aFileName" shape=ellipse]
8 [label="3:CtLiteralImpl@null" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
10 [label="3:CtBinaryOperatorImpl@(aFileName == null)" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
12 [label="3:CtExecutableReferenceImpl@length()" shape=ellipse]
13 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
15 [label="3:CtVirtualElement@length" shape=ellipse]
16 [label="3:CtExecutableReferenceImpl@trim()" shape=ellipse]
17 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
18 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
19 [label="3:CtVirtualElement@trim" shape=ellipse]
20 [label="3:CtVariableReadImpl@aFileName" shape=ellipse]
21 [label="3:CtParameterReferenceImpl@aFileName" shape=ellipse]
22 [label="3:CtInvocationImpl@aFileName.trim()" shape=ellipse]
23 [label="3:CtInvocationImpl@aFileName.trim().length()" shape=ellipse]
24 [label="3:CtLiteralImpl@0" shape=ellipse]
25 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
26 [label="3:CtBinaryOperatorImpl@(aFileName.trim().length() == 0)" shape=ellipse]
27 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
28 [label="3:CtBinaryOperatorImpl@(aFileName == null) || (aFileName.trim().length() == 0)" shape=ellipse]
29 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
30 [label="4:CtReturnImpl@return" shape=ellipse]
31 [label="3:CtBlockImpl@\{
    return;
\}" shape=ellipse]
32 [label="3:CtIfImpl@if ((aFileName == null) || (aFileName.trim().length() == 0)) \{
    return;
\}" shape=ellipse]
33 [label="6:CtExecutableReferenceImpl@checkHeaderNotInitialized()" shape=ellipse]
34 [label="6:CtVirtualElement@checkHeaderNotInitialized" shape=ellipse]
35 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
37 [label="6:CtThisAccessImpl@" shape=ellipse]
38 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
39 [label="6:CtInvocationImpl@checkHeaderNotInitialized()" shape=ellipse]
40 [label="7:CtTypeReferenceImpl@Reader" shape=ellipse]
41 [label="7:CtPackageReferenceImpl@" shape=ellipse]
42 [label="7:CtLiteralImpl@null" shape=ellipse]
43 [label="7:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
44 [label="7:CtVirtualElement@headerReader" shape=ellipse]
45 [label="7:CtLocalVariableImpl@Reader headerReader = null" shape=ellipse]
46 [label="9:CtVariableWriteImpl@headerReader" shape=ellipse]
47 [label="9:CtLocalVariableReferenceImpl@headerReader" shape=ellipse]
48 [label="9:CtExecutableReferenceImpl@FileReader(java.lang.String)" shape=ellipse]
49 [label="9:CtTypeReferenceImpl@FileReader" shape=ellipse]
50 [label="9:CtTypeReferenceImpl@FileReader" shape=ellipse]
51 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
52 [label="9:CtVariableReadImpl@aFileName" shape=ellipse]
53 [label="9:CtParameterReferenceImpl@aFileName" shape=ellipse]
54 [label="9:CtConstructorCallImpl@new FileReader(aFileName)" shape=ellipse]
55 [label="9:CtAssignmentImpl@headerReader = new FileReader(aFileName)" shape=ellipse]
56 [label="10:CtExecutableReferenceImpl@loadHeader(<unknown>)" shape=ellipse]
57 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
58 [label="10:CtVirtualElement@loadHeader" shape=ellipse]
59 [label="10:CtTypeAccessImpl@PlaceHold" shape=ellipse]
60 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
61 [label="10:CtThisAccessImpl@" shape=ellipse]
62 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
63 [label="10:CtVariableReadImpl@headerReader" shape=ellipse]
64 [label="10:CtLocalVariableReferenceImpl@headerReader" shape=ellipse]
65 [label="10:CtInvocationImpl@loadHeader(headerReader)" shape=ellipse]
66 [label="8:CtBlockImpl@\{
    headerReader = new FileReader(aFileName);
    loadHeader(headerReader);
\}" shape=ellipse]
67 [label="11:CtVirtualElement@ex" shape=ellipse]
68 [label="11:CtTypeReferenceImpl@IOException" shape=ellipse]
69 [label="11:CtPackageReferenceImpl@" shape=ellipse]
70 [label="11:CtCatchVariableImpl@final IOException ex" shape=ellipse]
71 [label="12:CtExecutableReferenceImpl@ConversionException()" shape=ellipse]
72 [label="12:CtTypeReferenceImpl@ConversionException" shape=ellipse]
73 [label="12:CtTypeReferenceImpl@ConversionException" shape=ellipse]
74 [label="12:CtLiteralImpl@\"unable to load header file \"" shape=ellipse]
75 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
76 [label="12:CtVariableReadImpl@aFileName" shape=ellipse]
77 [label="12:CtParameterReferenceImpl@aFileName" shape=ellipse]
78 [label="12:CtBinaryOperatorImpl@\"unable to load header file \" + aFileName" shape=ellipse]
79 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
80 [label="12:CtVariableReadImpl@ex" shape=ellipse]
81 [label="12:CtCatchVariableReferenceImpl@ex" shape=ellipse]
82 [label="12:CtConstructorCallImpl@new ConversionException(\"unable to load header file \" + aFileName, ex)" shape=ellipse]
83 [label="12:CtThrowImpl@throw new ConversionException(\"unable to load header file \" + aFileName, ex)" shape=ellipse]
84 [label="11:CtBlockImpl@\{
    throw new ConversionException(\"unable to load header file \" + aFileName, ex);
\}" shape=ellipse]
85 [label="11:CtCatchImpl@ catch (final IOException ex) \{
    throw new ConversionException(\"unable to load header file \" + aFileName, ex);
\}" shape=ellipse]
86 [label="14:CtVariableReadImpl@headerReader" shape=ellipse]
87 [label="14:CtLocalVariableReferenceImpl@headerReader" shape=ellipse]
88 [label="14:CtLiteralImpl@null" shape=ellipse]
89 [label="14:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
90 [label="14:CtBinaryOperatorImpl@headerReader != null" shape=ellipse]
91 [label="16:CtExecutableReferenceImpl@close()" shape=ellipse]
92 [label="16:CtTypeReferenceImpl@Reader" shape=ellipse]
93 [label="16:CtVirtualElement@close" shape=ellipse]
94 [label="16:CtVariableReadImpl@headerReader" shape=ellipse]
95 [label="16:CtLocalVariableReferenceImpl@headerReader" shape=ellipse]
96 [label="16:CtInvocationImpl@headerReader.close()" shape=ellipse]
97 [label="15:CtBlockImpl@\{
    headerReader.close();
\}" shape=ellipse]
98 [label="17:CtVirtualElement@ex" shape=ellipse]
99 [label="17:CtTypeReferenceImpl@IOException" shape=ellipse]
100 [label="17:CtPackageReferenceImpl@" shape=ellipse]
101 [label="17:CtCatchVariableImpl@final IOException ex" shape=ellipse]
102 [label="18:CtExecutableReferenceImpl@ConversionException()" shape=ellipse]
103 [label="18:CtTypeReferenceImpl@ConversionException" shape=ellipse]
104 [label="18:CtTypeReferenceImpl@ConversionException" shape=ellipse]
105 [label="18:CtLiteralImpl@\"unable to close header file \"" shape=ellipse]
106 [label="18:CtTypeReferenceImpl@String" shape=ellipse]
107 [label="18:CtVariableReadImpl@aFileName" shape=ellipse]
108 [label="18:CtParameterReferenceImpl@aFileName" shape=ellipse]
109 [label="18:CtBinaryOperatorImpl@\"unable to close header file \" + aFileName" shape=ellipse]
110 [label="18:CtTypeReferenceImpl@String" shape=ellipse]
111 [label="18:CtVariableReadImpl@ex" shape=ellipse]
112 [label="18:CtCatchVariableReferenceImpl@ex" shape=ellipse]
113 [label="18:CtConstructorCallImpl@new ConversionException(\"unable to close header file \" + aFileName, ex)" shape=ellipse]
114 [label="18:CtThrowImpl@throw new ConversionException(\"unable to close header file \" + aFileName, ex)" shape=ellipse]
115 [label="17:CtBlockImpl@\{
    throw new ConversionException(\"unable to close header file \" + aFileName, ex);
\}" shape=ellipse]
116 [label="17:CtCatchImpl@ catch (final IOException ex) \{
    throw new ConversionException(\"unable to close header file \" + aFileName, ex);
\}" shape=ellipse]
117 [label="15:CtTryImpl@try \{
    headerReader.close();
\} catch (final IOException ex) \{
    throw new ConversionException(\"unable to close header file \" + aFileName, ex);
\}" shape=ellipse]
118 [label="14:CtBlockImpl@\{
    try \{
        headerReader.close();
    \} catch (final IOException ex) \{
        throw new ConversionException(\"unable to close header file \" + aFileName, ex);
    \}
\}" shape=ellipse]
119 [label="14:CtIfImpl@if (headerReader != null) \{
    try \{
        headerReader.close();
    \} catch (final IOException ex) \{
        throw new ConversionException(\"unable to close header file \" + aFileName, ex);
    \}
\}" shape=ellipse]
120 [label="13:CtBlockImpl@\{
    if (headerReader != null) \{
        try \{
            headerReader.close();
        \} catch (final IOException ex) \{
            throw new ConversionException(\"unable to close header file \" + aFileName, ex);
        \}
    \}
\}" shape=ellipse]
121 [label="8:CtTryImpl@try \{
    headerReader = new FileReader(aFileName);
    loadHeader(headerReader);
\} catch (final IOException ex) \{
    throw new ConversionException(\"unable to load header file \" + aFileName, ex);
\} finally \{
    if (headerReader != null) \{
        try \{
            headerReader.close();
        \} catch (final IOException ex) \{
            throw new ConversionException(\"unable to close header file \" + aFileName, ex);
        \}
    \}
\}" shape=ellipse]
122 [label="2:CtBlockImpl@\{
    if ((aFileName == null) || (aFileName.trim().length() == 0)) \{
        return;
    \}
    checkHeaderNotInitialized();
    Reader headerReader = null;
    try \{
        headerReader = new FileReader(aFileName);
        loadHeader(headerReader);
    \} catch (final IOException ex) \{
        throw new ConversionException(\"unable to load header file \" + aFileName, ex);
    \} finally \{
        if (headerReader != null) \{
            try \{
                headerReader.close();
            \} catch (final IOException ex) \{
                throw new ConversionException(\"unable to close header file \" + aFileName, ex);
            \}
        \}
    \}
\}" shape=ellipse]
123 [label="2:CtMethodImpl@final void setHeaderFile(String aFileName) throws ConversionException \{
    if ((aFileName == null) || (aFileName.trim().length() == 0)) \{
        return;
    \}
    checkHeaderNotInitialized();
    Reader headerReader = null;
    try \{
        headerReader = new FileReader(aFileName);
        loadHeader(headerReader);
    \} catch (final IOException ex) \{
        throw new ConversionException(\"unable to load header file \" + aFileName, ex);
    \} finally \{
        if (headerReader != null) \{
            try \{
                headerReader.close();
            \} catch (final IOException ex) \{
                throw new ConversionException(\"unable to close header file \" + aFileName, ex);
            \}
        \}
    \}
\}" shape=ellipse]
124 [label="16:Update@UPDATE" shape=ellipse]
125 [label="14:CtPackageReferenceImpl@" shape=ellipse]
126 [label="14:CtTypeReferenceImpl@Utils" shape=ellipse]
127 [label="14:CtTypeAccessImpl@Utils" shape=ellipse]
128 [label="14:CtPackageReferenceImpl@" shape=ellipse]
129 [label="14:CtTypeReferenceImpl@Utils" shape=ellipse]
130 [label="14:CtPackageReferenceImpl@" shape=ellipse]
131 [label="14:CtTypeReferenceImpl@Reader" shape=ellipse]
132 [label="14:CtExecutableReferenceImpl@closeQuietly(Reader)" shape=ellipse]
133 [label="14:CtPackageReferenceImpl@" shape=ellipse]
134 [label="14:CtTypeReferenceImpl@Reader" shape=ellipse]
135 [label="14:CtLocalVariableReferenceImpl@headerReader" shape=ellipse]
136 [label="14:CtVariableReadImpl@headerReader" shape=ellipse]
137 [label="14:CtInvocationImpl@Utils.closeQuietly(headerReader)" shape=ellipse]
138 [label="14:CtVirtualElement@closeQuietly" shape=ellipse]
139 [label="14:Delete@DELETE" shape=ellipse]
140 [label="16:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
10 -> 11 [label="AST"];
10 -> 6 [label="AST"];
10 -> 8 [label="AST"];
12 -> 13 [label="AST"];
12 -> 14 [label="AST"];
16 -> 17 [label="AST"];
16 -> 18 [label="AST"];
20 -> 21 [label="AST"];
22 -> 19 [label="AST"];
22 -> 20 [label="AST"];
22 -> 16 [label="AST"];
23 -> 15 [label="AST"];
23 -> 22 [label="AST"];
23 -> 12 [label="AST"];
24 -> 25 [label="AST"];
26 -> 27 [label="AST"];
26 -> 23 [label="AST"];
26 -> 24 [label="AST"];
28 -> 29 [label="AST"];
28 -> 10 [label="AST"];
28 -> 26 [label="AST"];
28 -> 31 [label="Control Dep"];
28 -> 30 [label="Control Dep"];
31 -> 30 [label="AST"];
32 -> 28 [label="AST"];
32 -> 31 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 35 [label="AST"];
39 -> 34 [label="AST"];
39 -> 37 [label="AST"];
39 -> 33 [label="AST"];
40 -> 41 [label="AST"];
42 -> 43 [label="AST"];
45 -> 44 [label="AST"];
45 -> 40 [label="AST"];
45 -> 42 [label="AST"];
46 -> 47 [label="AST"];
46 -> 63 [label="Define-Use"];
46 -> 86 [label="Define-Use"];
46 -> 94 [label="Define-Use"];
46 -> 136 [label="Define-Use"];
46 -> 136 [label="Data Dep"];
46 -> 136 [label="Control Dep"];
48 -> 49 [label="AST"];
48 -> 50 [label="AST"];
48 -> 51 [label="AST"];
52 -> 53 [label="AST"];
52 -> 46 [label="Data Dep"];
54 -> 48 [label="AST"];
54 -> 52 [label="AST"];
55 -> 46 [label="AST"];
55 -> 54 [label="AST"];
56 -> 57 [label="AST"];
59 -> 60 [label="AST"];
61 -> 62 [label="AST"];
61 -> 59 [label="AST"];
63 -> 64 [label="AST"];
65 -> 58 [label="AST"];
65 -> 61 [label="AST"];
65 -> 56 [label="AST"];
65 -> 63 [label="AST"];
66 -> 55 [label="AST"];
66 -> 65 [label="AST"];
67 -> 80 [label="Define-Use"];
67 -> 111 [label="Define-Use"];
68 -> 69 [label="AST"];
70 -> 67 [label="AST"];
70 -> 68 [label="AST"];
70 -> 84 [label="Control Dep"];
70 -> 83 [label="Control Dep"];
70 -> 82 [label="Control Dep"];
70 -> 71 [label="Control Dep"];
70 -> 78 [label="Control Dep"];
70 -> 74 [label="Control Dep"];
70 -> 76 [label="Control Dep"];
70 -> 80 [label="Control Dep"];
71 -> 72 [label="AST"];
71 -> 73 [label="AST"];
74 -> 75 [label="AST"];
76 -> 77 [label="AST"];
78 -> 79 [label="AST"];
78 -> 74 [label="AST"];
78 -> 76 [label="AST"];
80 -> 81 [label="AST"];
82 -> 71 [label="AST"];
82 -> 78 [label="AST"];
82 -> 80 [label="AST"];
83 -> 82 [label="AST"];
84 -> 83 [label="AST"];
85 -> 70 [label="AST"];
85 -> 84 [label="AST"];
86 -> 87 [label="AST"];
88 -> 89 [label="AST"];
90 -> 86 [label="AST"];
90 -> 88 [label="AST"];
90 -> 118 [label="Control Dep"];
90 -> 117 [label="Control Dep"];
90 -> 97 [label="Control Dep"];
90 -> 96 [label="Control Dep"];
90 -> 91 [label="Control Dep"];
90 -> 94 [label="Control Dep"];
90 -> 116 [label="Control Dep"];
90 -> 101 [label="Control Dep"];
91 -> 92 [label="AST"];
94 -> 95 [label="AST"];
96 -> 93 [label="AST"];
96 -> 94 [label="AST"];
96 -> 91 [label="AST"];
96 -> 124 [label="Action"];
96 -> 140 [label="Action"];
97 -> 96 [label="AST"];
98 -> 111 [label="Define-Use"];
99 -> 100 [label="AST"];
101 -> 98 [label="AST"];
101 -> 99 [label="AST"];
101 -> 115 [label="Control Dep"];
101 -> 114 [label="Control Dep"];
101 -> 113 [label="Control Dep"];
101 -> 102 [label="Control Dep"];
101 -> 109 [label="Control Dep"];
101 -> 105 [label="Control Dep"];
101 -> 107 [label="Control Dep"];
101 -> 111 [label="Control Dep"];
102 -> 103 [label="AST"];
102 -> 104 [label="AST"];
105 -> 106 [label="AST"];
107 -> 108 [label="AST"];
109 -> 110 [label="AST"];
109 -> 105 [label="AST"];
109 -> 107 [label="AST"];
111 -> 112 [label="AST"];
113 -> 102 [label="AST"];
113 -> 109 [label="AST"];
113 -> 111 [label="AST"];
114 -> 113 [label="AST"];
115 -> 114 [label="AST"];
116 -> 101 [label="AST"];
116 -> 115 [label="AST"];
117 -> 97 [label="AST"];
117 -> 116 [label="AST"];
118 -> 117 [label="AST"];
119 -> 90 [label="AST"];
119 -> 118 [label="AST"];
119 -> 139 [label="Action"];
120 -> 119 [label="AST"];
121 -> 66 [label="AST"];
121 -> 85 [label="AST"];
121 -> 120 [label="AST"];
122 -> 32 [label="AST"];
122 -> 39 [label="AST"];
122 -> 45 [label="AST"];
122 -> 121 [label="AST"];
123 -> 1 [label="AST"];
123 -> 0 [label="AST"];
123 -> 2 [label="AST"];
123 -> 4 [label="AST"];
123 -> 122 [label="AST"];
124 -> 137 [label="Action"];
126 -> 125 [label="AST"];
127 -> 126 [label="AST"];
129 -> 128 [label="AST"];
131 -> 130 [label="AST"];
132 -> 129 [label="AST"];
132 -> 131 [label="AST"];
134 -> 133 [label="AST"];
135 -> 134 [label="AST"];
136 -> 135 [label="AST"];
137 -> 138 [label="AST"];
137 -> 127 [label="AST"];
137 -> 132 [label="AST"];
137 -> 136 [label="AST"];
140 -> 121 [label="Action"];
}