digraph "checkVariable#?,MyVariable,RE,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@checkVariable" shape=ellipse]
2 [label="2:CtParameterImpl@MyVariable aVar" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@MyVariable" shape=ellipse]
4 [label="2:CtParameterImpl@RE aRegexp" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@RE" shape=ellipse]
6 [label="2:CtParameterImpl@String aPattern" shape=ellipse]
7 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="3:CtExecutableReferenceImpl@match()" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@RE" shape=ellipse]
10 [label="3:CtVirtualElement@match" shape=ellipse]
11 [label="3:CtVariableReadImpl@aRegexp" shape=ellipse]
12 [label="3:CtParameterReferenceImpl@aRegexp" shape=ellipse]
13 [label="3:CtExecutableReferenceImpl@getText()" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@MyVariable" shape=ellipse]
15 [label="3:CtVirtualElement@getText" shape=ellipse]
16 [label="3:CtVariableReadImpl@aVar" shape=ellipse]
17 [label="3:CtParameterReferenceImpl@aVar" shape=ellipse]
18 [label="3:CtInvocationImpl@aVar.getText()" shape=ellipse]
19 [label="3:CtInvocationImpl@aRegexp.match(aVar.getText())" shape=ellipse]
20 [label="3:CtUnaryOperatorImpl@!aRegexp.match(aVar.getText())" shape=ellipse]
21 [label="4:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@null" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@null" shape=ellipse]
24 [label="4:CtVirtualElement@log" shape=ellipse]
25 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
26 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
27 [label="4:CtThisAccessImpl@" shape=ellipse]
28 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
29 [label="5:CtExecutableReferenceImpl@getLineNo()" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@MyVariable" shape=ellipse]
31 [label="5:CtVirtualElement@getLineNo" shape=ellipse]
32 [label="5:CtVariableReadImpl@aVar" shape=ellipse]
33 [label="5:CtParameterReferenceImpl@aVar" shape=ellipse]
34 [label="5:CtInvocationImpl@aVar.getLineNo()" shape=ellipse]
35 [label="6:CtLiteralImpl@\"variable '\"" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
37 [label="6:CtExecutableReferenceImpl@getText()" shape=ellipse]
38 [label="6:CtTypeReferenceImpl@MyVariable" shape=ellipse]
39 [label="6:CtVirtualElement@getText" shape=ellipse]
40 [label="6:CtVariableReadImpl@aVar" shape=ellipse]
41 [label="6:CtParameterReferenceImpl@aVar" shape=ellipse]
42 [label="6:CtInvocationImpl@aVar.getText()" shape=ellipse]
43 [label="6:CtBinaryOperatorImpl@(\"variable '\" + aVar.getText())" shape=ellipse]
44 [label="6:CtLiteralImpl@\"' must match pattern '\"" shape=ellipse]
45 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
46 [label="6:CtBinaryOperatorImpl@((\"variable '\" + aVar.getText()) + \"' must match pattern '\")" shape=ellipse]
47 [label="6:CtVariableReadImpl@aPattern" shape=ellipse]
48 [label="6:CtParameterReferenceImpl@aPattern" shape=ellipse]
49 [label="6:CtBinaryOperatorImpl@(((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern)" shape=ellipse]
50 [label="6:CtLiteralImpl@\"'.\"" shape=ellipse]
51 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
52 [label="6:CtBinaryOperatorImpl@(((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern) + \"'.\"" shape=ellipse]
53 [label="4:CtInvocationImpl@log(aVar.getLineNo(), (((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern) + \"'.\")" shape=ellipse]
54 [label="3:CtBlockImpl@\{
    log(aVar.getLineNo(), (((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern) + \"'.\");
\}" shape=ellipse]
55 [label="3:CtIfImpl@if (!aRegexp.match(aVar.getText())) \{
    log(aVar.getLineNo(), (((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern) + \"'.\");
\}" shape=ellipse]
56 [label="2:CtBlockImpl@\{
    if (!aRegexp.match(aVar.getText())) \{
        log(aVar.getLineNo(), (((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern) + \"'.\");
    \}
\}" shape=ellipse]
57 [label="2:CtMethodImpl@private void checkVariable(MyVariable aVar, RE aRegexp, String aPattern) \{
    if (!aRegexp.match(aVar.getText())) \{
        log(aVar.getLineNo(), (((\"variable '\" + aVar.getText()) + \"' must match pattern '\") + aPattern) + \"'.\");
    \}
\}" shape=ellipse]
58 [label="6:Insert@INSERT" shape=ellipse]
59 [label="6:CtPackageReferenceImpl@" shape=ellipse]
60 [label="6:CtTypeReferenceImpl@MyVariable" shape=ellipse]
61 [label="6:CtParameterReferenceImpl@aVar" shape=ellipse]
62 [label="6:CtVariableReadImpl@aVar" shape=ellipse]
63 [label="6:CtPackageReferenceImpl@" shape=ellipse]
64 [label="6:CtTypeReferenceImpl@MyVariable" shape=ellipse]
65 [label="6:CtExecutableReferenceImpl@getColumnNo()" shape=ellipse]
66 [label="6:CtInvocationImpl@aVar.getColumnNo()" shape=ellipse]
67 [label="6:CtVirtualElement@getColumnNo" shape=ellipse]
68 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
69 [label="6:CtLiteralImpl@1" shape=ellipse]
70 [label="6:CtBinaryOperatorImpl@aVar.getColumnNo() - 1" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
11 -> 12 [label="AST"];
13 -> 14 [label="AST"];
16 -> 17 [label="AST"];
18 -> 15 [label="AST"];
18 -> 16 [label="AST"];
18 -> 13 [label="AST"];
19 -> 10 [label="AST"];
19 -> 11 [label="AST"];
19 -> 8 [label="AST"];
19 -> 18 [label="AST"];
20 -> 19 [label="AST"];
20 -> 54 [label="Control Dep"];
20 -> 53 [label="Control Dep"];
20 -> 21 [label="Control Dep"];
20 -> 27 [label="Control Dep"];
20 -> 25 [label="Control Dep"];
20 -> 34 [label="Control Dep"];
20 -> 29 [label="Control Dep"];
20 -> 32 [label="Control Dep"];
20 -> 52 [label="Control Dep"];
20 -> 49 [label="Control Dep"];
20 -> 46 [label="Control Dep"];
20 -> 43 [label="Control Dep"];
20 -> 35 [label="Control Dep"];
20 -> 42 [label="Control Dep"];
20 -> 37 [label="Control Dep"];
20 -> 40 [label="Control Dep"];
20 -> 44 [label="Control Dep"];
20 -> 47 [label="Control Dep"];
20 -> 50 [label="Control Dep"];
20 -> 62 [label="Control Dep"];
20 -> 65 [label="Control Dep"];
20 -> 66 [label="Control Dep"];
20 -> 69 [label="Control Dep"];
20 -> 70 [label="Control Dep"];
21 -> 22 [label="AST"];
21 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 28 [label="AST"];
27 -> 25 [label="AST"];
29 -> 30 [label="AST"];
32 -> 33 [label="AST"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
34 -> 29 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
40 -> 41 [label="AST"];
42 -> 39 [label="AST"];
42 -> 40 [label="AST"];
42 -> 37 [label="AST"];
43 -> 35 [label="AST"];
43 -> 42 [label="AST"];
44 -> 45 [label="AST"];
46 -> 43 [label="AST"];
46 -> 44 [label="AST"];
47 -> 48 [label="AST"];
49 -> 46 [label="AST"];
49 -> 47 [label="AST"];
50 -> 51 [label="AST"];
52 -> 49 [label="AST"];
52 -> 50 [label="AST"];
53 -> 24 [label="AST"];
53 -> 27 [label="AST"];
53 -> 21 [label="AST"];
53 -> 34 [label="AST"];
53 -> 52 [label="AST"];
53 -> 58 [label="Action"];
54 -> 53 [label="AST"];
55 -> 20 [label="AST"];
55 -> 54 [label="AST"];
56 -> 55 [label="AST"];
57 -> 1 [label="AST"];
57 -> 0 [label="AST"];
57 -> 2 [label="AST"];
57 -> 4 [label="AST"];
57 -> 6 [label="AST"];
57 -> 56 [label="AST"];
58 -> 70 [label="Action"];
60 -> 59 [label="AST"];
61 -> 60 [label="AST"];
62 -> 61 [label="AST"];
64 -> 63 [label="AST"];
65 -> 64 [label="AST"];
66 -> 67 [label="AST"];
66 -> 62 [label="AST"];
66 -> 65 [label="AST"];
69 -> 68 [label="AST"];
70 -> 66 [label="AST"];
70 -> 69 [label="AST"];
}