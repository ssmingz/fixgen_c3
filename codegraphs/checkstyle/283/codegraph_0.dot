digraph "testMax#?" {
0 [label="3:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtVirtualElement@testMax" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
5 [label="4:CtPackageReferenceImpl@" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@createCheckConfig(java.lang.Class)" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@Class<ThrowsCountCheck>" shape=ellipse]
9 [label="4:CtVirtualElement@createCheckConfig" shape=ellipse]
10 [label="4:CtTypeAccessImpl@PlaceHold" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
12 [label="4:CtThisAccessImpl@" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
14 [label="4:CtFieldReferenceImpl@ThrowsCountCheck.class" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@ThrowsCountCheck" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@Class" shape=ellipse]
17 [label="4:CtFieldReadImpl@ThrowsCountCheck.class" shape=ellipse]
18 [label="4:CtTypeAccessImpl@ThrowsCountCheck" shape=ellipse]
19 [label="4:CtInvocationImpl@createCheckConfig(ThrowsCountCheck.class)" shape=ellipse]
20 [label="4:CtVirtualElement@checkConfig" shape=ellipse]
21 [label="4:CtLocalVariableImpl@DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class)" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@addAttribute(java.lang.String,java.lang.String)" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
25 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
26 [label="5:CtVirtualElement@addAttribute" shape=ellipse]
27 [label="5:CtVariableReadImpl@checkConfig" shape=ellipse]
28 [label="5:CtLocalVariableReferenceImpl@checkConfig" shape=ellipse]
29 [label="5:CtLiteralImpl@\"max\"" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
31 [label="5:CtLiteralImpl@\"2\"" shape=ellipse]
32 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
33 [label="5:CtInvocationImpl@checkConfig.addAttribute(\"max\", \"2\")" shape=ellipse]
34 [label="6:CtVirtualElement@String[]" shape=ellipse]
35 [label="6:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
37 [label="6:CtNewArrayImpl@new String[]\{ \"22:20: Throws count is 3 (max allowed is 2).\" \}" shape=ellipse]
38 [label="6:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
39 [label="6:CtLiteralImpl@\"22:20: Throws count is 3 (max allowed is 2).\"" shape=ellipse]
40 [label="6:CtVirtualElement@expected" shape=ellipse]
41 [label="6:CtLocalVariableImpl@String[] expected = new String[]\{ \"22:20: Throws count is 3 (max allowed is 2).\" \}" shape=ellipse]
42 [label="7:CtExecutableReferenceImpl@verify(<unknown>,<unknown>,java.lang.String[])" shape=ellipse]
43 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
44 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
45 [label="7:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
46 [label="7:CtVirtualElement@verify" shape=ellipse]
47 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
48 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
49 [label="7:CtThisAccessImpl@" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
51 [label="7:CtVariableReadImpl@checkConfig" shape=ellipse]
52 [label="7:CtLocalVariableReferenceImpl@checkConfig" shape=ellipse]
53 [label="7:CtExecutableReferenceImpl@getPath(<unknown>)" shape=ellipse]
54 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
55 [label="7:CtVirtualElement@getPath" shape=ellipse]
56 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
57 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
58 [label="7:CtThisAccessImpl@" shape=ellipse]
59 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
60 [label="7:CtLiteralImpl@\"design\"" shape=ellipse]
61 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
62 [label="7:CtFieldReferenceImpl@File.separator" shape=ellipse]
63 [label="7:CtTypeReferenceImpl@File" shape=ellipse]
64 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
65 [label="7:CtFieldReadImpl@File.separator" shape=ellipse]
66 [label="7:CtTypeAccessImpl@File" shape=ellipse]
67 [label="7:CtBinaryOperatorImpl@(\"design\" + File.separator)" shape=ellipse]
68 [label="7:CtLiteralImpl@\"InputThrowsCount.java\"" shape=ellipse]
69 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
70 [label="7:CtBinaryOperatorImpl@(\"design\" + File.separator) + \"InputThrowsCount.java\"" shape=ellipse]
71 [label="7:CtInvocationImpl@getPath((\"design\" + File.separator) + \"InputThrowsCount.java\")" shape=ellipse]
72 [label="7:CtVariableReadImpl@expected" shape=ellipse]
73 [label="7:CtLocalVariableReferenceImpl@expected" shape=ellipse]
74 [label="7:CtInvocationImpl@verify(checkConfig, getPath((\"design\" + File.separator) + \"InputThrowsCount.java\"), expected)" shape=ellipse]
75 [label="3:CtBlockImpl@\{
    DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);
    checkConfig.addAttribute(\"max\", \"2\");
    String[] expected = new String[]\{ \"22:20: Throws count is 3 (max allowed is 2).\" \};
    verify(checkConfig, getPath((\"design\" + File.separator) + \"InputThrowsCount.java\"), expected);
\}" shape=ellipse]
76 [label="3:CtMethodImpl@@Test
public void testMax() throws Exception \{
    DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);
    checkConfig.addAttribute(\"max\", \"2\");
    String[] expected = new String[]\{ \"22:20: Throws count is 3 (max allowed is 2).\" \};
    verify(checkConfig, getPath((\"design\" + File.separator) + \"InputThrowsCount.java\"), expected);
\}" shape=ellipse]
77 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
78 [label="6:Update@UPDATE" shape=ellipse]
79 [label="6:CtPackageReferenceImpl@java.lang" shape=ellipse]
80 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
81 [label="6:CtLiteralImpl@\"22:20: \"" shape=ellipse]
82 [label="6:Insert@INSERT" shape=ellipse]
83 [label="6:CtPackageReferenceImpl@java.lang" shape=ellipse]
84 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
85 [label="6:CtLiteralImpl@\"22:20: \"" shape=ellipse]
86 [label="6:CtPackageReferenceImpl@" shape=ellipse]
87 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
88 [label="6:CtPackageReferenceImpl@" shape=ellipse]
89 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
90 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
91 [label="6:CtThisAccessImpl@" shape=ellipse]
92 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
93 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
94 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
95 [label="6:CtExecutableReferenceImpl@getCheckMessage(<unknown>,int,int)" shape=ellipse]
96 [label="6:CtPackageReferenceImpl@" shape=ellipse]
97 [label="6:CtTypeReferenceImpl@MSG_KEY" shape=ellipse]
98 [label="6:CtTypeAccessImpl@MSG_KEY" shape=ellipse]
99 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
100 [label="6:CtLiteralImpl@3" shape=ellipse]
101 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
102 [label="6:CtLiteralImpl@2" shape=ellipse]
103 [label="6:CtInvocationImpl@getCheckMessage(MSG_KEY, 3, 2)" shape=ellipse]
104 [label="6:CtBinaryOperatorImpl@ + getCheckMessage(MSG_KEY, 3, 2)" shape=ellipse]
105 [label="6:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
10 -> 11 [label="AST"];
12 -> 13 [label="AST"];
12 -> 10 [label="AST"];
12 -> 20 [label="Data Dep"];
14 -> 15 [label="AST"];
14 -> 16 [label="AST"];
17 -> 18 [label="AST"];
17 -> 14 [label="AST"];
17 -> 20 [label="Data Dep"];
19 -> 9 [label="AST"];
19 -> 12 [label="AST"];
19 -> 6 [label="AST"];
19 -> 17 [label="AST"];
20 -> 27 [label="Define-Use"];
20 -> 51 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 4 [label="AST"];
21 -> 19 [label="AST"];
22 -> 23 [label="AST"];
22 -> 24 [label="AST"];
22 -> 25 [label="AST"];
27 -> 28 [label="AST"];
29 -> 30 [label="AST"];
31 -> 32 [label="AST"];
33 -> 26 [label="AST"];
33 -> 27 [label="AST"];
33 -> 22 [label="AST"];
33 -> 29 [label="AST"];
33 -> 31 [label="AST"];
35 -> 34 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 39 [label="AST"];
37 -> 82 [label="Action"];
39 -> 78 [label="Action"];
39 -> 105 [label="Action"];
40 -> 72 [label="Define-Use"];
41 -> 40 [label="AST"];
41 -> 35 [label="AST"];
41 -> 37 [label="AST"];
42 -> 43 [label="AST"];
42 -> 44 [label="AST"];
42 -> 45 [label="AST"];
47 -> 48 [label="AST"];
49 -> 50 [label="AST"];
49 -> 47 [label="AST"];
51 -> 52 [label="AST"];
53 -> 54 [label="AST"];
56 -> 57 [label="AST"];
58 -> 59 [label="AST"];
58 -> 56 [label="AST"];
60 -> 61 [label="AST"];
62 -> 63 [label="AST"];
62 -> 64 [label="AST"];
65 -> 66 [label="AST"];
65 -> 62 [label="AST"];
67 -> 60 [label="AST"];
67 -> 65 [label="AST"];
68 -> 69 [label="AST"];
70 -> 67 [label="AST"];
70 -> 68 [label="AST"];
71 -> 55 [label="AST"];
71 -> 58 [label="AST"];
71 -> 53 [label="AST"];
71 -> 70 [label="AST"];
72 -> 73 [label="AST"];
74 -> 46 [label="AST"];
74 -> 49 [label="AST"];
74 -> 42 [label="AST"];
74 -> 51 [label="AST"];
74 -> 71 [label="AST"];
74 -> 72 [label="AST"];
75 -> 21 [label="AST"];
75 -> 33 [label="AST"];
75 -> 41 [label="AST"];
75 -> 74 [label="AST"];
76 -> 1 [label="AST"];
76 -> 77 [label="AST"];
76 -> 0 [label="AST"];
76 -> 2 [label="AST"];
76 -> 75 [label="AST"];
78 -> 85 [label="Action"];
78 -> 85 [label="Action"];
84 -> 83 [label="AST"];
84 -> 83 [label="AST"];
85 -> 84 [label="AST"];
85 -> 84 [label="AST"];
82 -> 104 [label="Action"];
84 -> 83 [label="AST"];
84 -> 83 [label="AST"];
85 -> 84 [label="AST"];
85 -> 84 [label="AST"];
87 -> 86 [label="AST"];
89 -> 88 [label="AST"];
90 -> 89 [label="AST"];
91 -> 87 [label="AST"];
91 -> 90 [label="AST"];
95 -> 92 [label="AST"];
95 -> 93 [label="AST"];
95 -> 94 [label="AST"];
97 -> 96 [label="AST"];
98 -> 97 [label="AST"];
100 -> 99 [label="AST"];
102 -> 101 [label="AST"];
103 -> 91 [label="AST"];
103 -> 95 [label="AST"];
103 -> 98 [label="AST"];
103 -> 100 [label="AST"];
103 -> 102 [label="AST"];
104 -> 85 [label="AST"];
104 -> 85 [label="AST"];
104 -> 103 [label="AST"];
105 -> 104 [label="Action"];
}