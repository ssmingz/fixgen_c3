digraph "visitMethodDef#?,DetailAST" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@visitMethodDef" shape=ellipse]
2 [label="2:CtParameterImpl@DetailAST aAST" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@DetailAST" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="3:CtPackageReferenceImpl@java.lang" shape=ellipse]
6 [label="3:CtExecutableReferenceImpl@getText()" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="3:CtVirtualElement@getText" shape=ellipse]
9 [label="3:CtExecutableReferenceImpl@findFirstToken()" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@DetailAST" shape=ellipse]
11 [label="3:CtVirtualElement@findFirstToken" shape=ellipse]
12 [label="3:CtVariableReadImpl@aAST" shape=ellipse]
13 [label="3:CtParameterReferenceImpl@aAST" shape=ellipse]
14 [label="3:CtTypeAccessImpl@IDENT" shape=ellipse]
15 [label="3:CtTypeReferenceImpl@IDENT" shape=ellipse]
16 [label="3:CtInvocationImpl@aAST.findFirstToken(IDENT)" shape=ellipse]
17 [label="3:CtInvocationImpl@aAST.findFirstToken(IDENT).getText()" shape=ellipse]
18 [label="3:CtVirtualElement@name" shape=ellipse]
19 [label="3:CtLocalVariableImpl@String name = aAST.findFirstToken(IDENT).getText()" shape=ellipse]
20 [label="4:CtExecutableReferenceImpl@equalsIgnoreCase(java.lang.String)" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
24 [label="4:CtVirtualElement@equalsIgnoreCase" shape=ellipse]
25 [label="4:CtVariableReadImpl@name" shape=ellipse]
26 [label="4:CtLocalVariableReferenceImpl@name" shape=ellipse]
27 [label="4:CtTypeAccessImpl@SET_UP_METHOD_NAME" shape=ellipse]
28 [label="4:CtTypeReferenceImpl@SET_UP_METHOD_NAME" shape=ellipse]
29 [label="4:CtInvocationImpl@name.equalsIgnoreCase(SET_UP_METHOD_NAME)" shape=ellipse]
30 [label="5:CtExecutableReferenceImpl@checkSetUpTearDownMethod(<unknown>,java.lang.String,<unknown>)" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
32 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
33 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
34 [label="5:CtVirtualElement@checkSetUpTearDownMethod" shape=ellipse]
35 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
36 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
37 [label="5:CtThisAccessImpl@" shape=ellipse]
38 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
39 [label="5:CtVariableReadImpl@aAST" shape=ellipse]
40 [label="5:CtParameterReferenceImpl@aAST" shape=ellipse]
41 [label="5:CtVariableReadImpl@name" shape=ellipse]
42 [label="5:CtLocalVariableReferenceImpl@name" shape=ellipse]
43 [label="5:CtTypeAccessImpl@SET_UP_METHOD_NAME" shape=ellipse]
44 [label="5:CtTypeReferenceImpl@SET_UP_METHOD_NAME" shape=ellipse]
45 [label="5:CtInvocationImpl@checkSetUpTearDownMethod(aAST, name, SET_UP_METHOD_NAME)" shape=ellipse]
46 [label="4:CtBlockImpl@\{
    checkSetUpTearDownMethod(aAST, name, SET_UP_METHOD_NAME);
\}" shape=ellipse]
47 [label="6:CtExecutableReferenceImpl@equalsIgnoreCase(java.lang.String)" shape=ellipse]
48 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
49 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
50 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
51 [label="6:CtVirtualElement@equalsIgnoreCase" shape=ellipse]
52 [label="6:CtVariableReadImpl@name" shape=ellipse]
53 [label="6:CtLocalVariableReferenceImpl@name" shape=ellipse]
54 [label="6:CtTypeAccessImpl@TEAR_DOWN_METHOD_NAME" shape=ellipse]
55 [label="6:CtTypeReferenceImpl@TEAR_DOWN_METHOD_NAME" shape=ellipse]
56 [label="6:CtInvocationImpl@name.equalsIgnoreCase(TEAR_DOWN_METHOD_NAME)" shape=ellipse]
57 [label="7:CtExecutableReferenceImpl@checkSetUpTearDownMethod(<unknown>,java.lang.String,<unknown>)" shape=ellipse]
58 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
59 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
60 [label="7:CtTypeReferenceImpl@null" shape=ellipse]
61 [label="7:CtVirtualElement@checkSetUpTearDownMethod" shape=ellipse]
62 [label="7:CtTypeAccessImpl@PlaceHold" shape=ellipse]
63 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
64 [label="7:CtThisAccessImpl@" shape=ellipse]
65 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
66 [label="7:CtVariableReadImpl@aAST" shape=ellipse]
67 [label="7:CtParameterReferenceImpl@aAST" shape=ellipse]
68 [label="7:CtVariableReadImpl@name" shape=ellipse]
69 [label="7:CtLocalVariableReferenceImpl@name" shape=ellipse]
70 [label="7:CtTypeAccessImpl@TEAR_DOWN_METHOD_NAME" shape=ellipse]
71 [label="7:CtTypeReferenceImpl@TEAR_DOWN_METHOD_NAME" shape=ellipse]
72 [label="7:CtInvocationImpl@checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME)" shape=ellipse]
73 [label="6:CtBlockImpl@\{
    checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME);
\}" shape=ellipse]
74 [label="8:CtExecutableReferenceImpl@equalsIgnoreCase(java.lang.String)" shape=ellipse]
75 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
76 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
77 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
78 [label="8:CtVirtualElement@equalsIgnoreCase" shape=ellipse]
79 [label="8:CtVariableReadImpl@name" shape=ellipse]
80 [label="8:CtLocalVariableReferenceImpl@name" shape=ellipse]
81 [label="8:CtTypeAccessImpl@SUITE_METHOD_NAME" shape=ellipse]
82 [label="8:CtTypeReferenceImpl@SUITE_METHOD_NAME" shape=ellipse]
83 [label="8:CtInvocationImpl@name.equalsIgnoreCase(SUITE_METHOD_NAME)" shape=ellipse]
84 [label="9:CtExecutableReferenceImpl@checkSuiteMethod(<unknown>,java.lang.String)" shape=ellipse]
85 [label="9:CtTypeReferenceImpl@null" shape=ellipse]
86 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
87 [label="9:CtVirtualElement@checkSuiteMethod" shape=ellipse]
88 [label="9:CtTypeAccessImpl@PlaceHold" shape=ellipse]
89 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
90 [label="9:CtThisAccessImpl@" shape=ellipse]
91 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
92 [label="9:CtVariableReadImpl@aAST" shape=ellipse]
93 [label="9:CtParameterReferenceImpl@aAST" shape=ellipse]
94 [label="9:CtVariableReadImpl@name" shape=ellipse]
95 [label="9:CtLocalVariableReferenceImpl@name" shape=ellipse]
96 [label="9:CtInvocationImpl@checkSuiteMethod(aAST, name)" shape=ellipse]
97 [label="8:CtBlockImpl@\{
    checkSuiteMethod(aAST, name);
\}" shape=ellipse]
98 [label="8:CtIfImpl@if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
    checkSuiteMethod(aAST, name);
\}" shape=ellipse]
99 [label="8:CtBlockImpl@
    if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
        checkSuiteMethod(aAST, name);
    \}
" shape=ellipse]
100 [label="6:CtIfImpl@if (name.equalsIgnoreCase(TEAR_DOWN_METHOD_NAME)) \{
    checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME);
\} else if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
    checkSuiteMethod(aAST, name);
\}" shape=ellipse]
101 [label="6:CtBlockImpl@
    if (name.equalsIgnoreCase(TEAR_DOWN_METHOD_NAME)) \{
        checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME);
    \} else if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
        checkSuiteMethod(aAST, name);
    \}
" shape=ellipse]
102 [label="4:CtIfImpl@if (name.equalsIgnoreCase(SET_UP_METHOD_NAME)) \{
    checkSetUpTearDownMethod(aAST, name, SET_UP_METHOD_NAME);
\} else if (name.equalsIgnoreCase(TEAR_DOWN_METHOD_NAME)) \{
    checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME);
\} else if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
    checkSuiteMethod(aAST, name);
\}" shape=ellipse]
103 [label="2:CtBlockImpl@\{
    String name = aAST.findFirstToken(IDENT).getText();
    if (name.equalsIgnoreCase(SET_UP_METHOD_NAME)) \{
        checkSetUpTearDownMethod(aAST, name, SET_UP_METHOD_NAME);
    \} else if (name.equalsIgnoreCase(TEAR_DOWN_METHOD_NAME)) \{
        checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME);
    \} else if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
        checkSuiteMethod(aAST, name);
    \}
\}" shape=ellipse]
104 [label="2:CtMethodImpl@private void visitMethodDef(DetailAST aAST) \{
    String name = aAST.findFirstToken(IDENT).getText();
    if (name.equalsIgnoreCase(SET_UP_METHOD_NAME)) \{
        checkSetUpTearDownMethod(aAST, name, SET_UP_METHOD_NAME);
    \} else if (name.equalsIgnoreCase(TEAR_DOWN_METHOD_NAME)) \{
        checkSetUpTearDownMethod(aAST, name, TEAR_DOWN_METHOD_NAME);
    \} else if (name.equalsIgnoreCase(SUITE_METHOD_NAME)) \{
        checkSuiteMethod(aAST, name);
    \}
\}" shape=ellipse]
105 [label="3:Insert@INSERT" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
9 -> 10 [label="AST"];
12 -> 13 [label="AST"];
12 -> 18 [label="Data Dep"];
14 -> 15 [label="AST"];
16 -> 11 [label="AST"];
16 -> 12 [label="AST"];
16 -> 9 [label="AST"];
16 -> 14 [label="AST"];
17 -> 8 [label="AST"];
17 -> 16 [label="AST"];
17 -> 6 [label="AST"];
18 -> 25 [label="Define-Use"];
18 -> 41 [label="Define-Use"];
18 -> 52 [label="Define-Use"];
18 -> 68 [label="Define-Use"];
18 -> 79 [label="Define-Use"];
18 -> 94 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 4 [label="AST"];
19 -> 17 [label="AST"];
19 -> 105 [label="Action"];
20 -> 21 [label="AST"];
20 -> 22 [label="AST"];
20 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 28 [label="AST"];
29 -> 24 [label="AST"];
29 -> 25 [label="AST"];
29 -> 20 [label="AST"];
29 -> 27 [label="AST"];
29 -> 46 [label="Control Dep"];
29 -> 45 [label="Control Dep"];
29 -> 30 [label="Control Dep"];
29 -> 37 [label="Control Dep"];
29 -> 35 [label="Control Dep"];
29 -> 39 [label="Control Dep"];
29 -> 41 [label="Control Dep"];
29 -> 43 [label="Control Dep"];
29 -> 101 [label="Control Dep"];
29 -> 100 [label="Control Dep"];
29 -> 56 [label="Control Dep"];
29 -> 47 [label="Control Dep"];
29 -> 52 [label="Control Dep"];
29 -> 54 [label="Control Dep"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
30 -> 33 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 35 [label="AST"];
39 -> 40 [label="AST"];
41 -> 42 [label="AST"];
43 -> 44 [label="AST"];
45 -> 34 [label="AST"];
45 -> 37 [label="AST"];
45 -> 30 [label="AST"];
45 -> 39 [label="AST"];
45 -> 41 [label="AST"];
45 -> 43 [label="AST"];
46 -> 45 [label="AST"];
47 -> 48 [label="AST"];
47 -> 49 [label="AST"];
47 -> 50 [label="AST"];
52 -> 53 [label="AST"];
54 -> 55 [label="AST"];
56 -> 51 [label="AST"];
56 -> 52 [label="AST"];
56 -> 47 [label="AST"];
56 -> 54 [label="AST"];
56 -> 73 [label="Control Dep"];
56 -> 72 [label="Control Dep"];
56 -> 57 [label="Control Dep"];
56 -> 64 [label="Control Dep"];
56 -> 62 [label="Control Dep"];
56 -> 66 [label="Control Dep"];
56 -> 68 [label="Control Dep"];
56 -> 70 [label="Control Dep"];
56 -> 99 [label="Control Dep"];
56 -> 98 [label="Control Dep"];
56 -> 83 [label="Control Dep"];
56 -> 74 [label="Control Dep"];
56 -> 79 [label="Control Dep"];
56 -> 81 [label="Control Dep"];
57 -> 58 [label="AST"];
57 -> 59 [label="AST"];
57 -> 60 [label="AST"];
62 -> 63 [label="AST"];
64 -> 65 [label="AST"];
64 -> 62 [label="AST"];
66 -> 67 [label="AST"];
68 -> 69 [label="AST"];
70 -> 71 [label="AST"];
72 -> 61 [label="AST"];
72 -> 64 [label="AST"];
72 -> 57 [label="AST"];
72 -> 66 [label="AST"];
72 -> 68 [label="AST"];
72 -> 70 [label="AST"];
73 -> 72 [label="AST"];
74 -> 75 [label="AST"];
74 -> 76 [label="AST"];
74 -> 77 [label="AST"];
79 -> 80 [label="AST"];
81 -> 82 [label="AST"];
83 -> 78 [label="AST"];
83 -> 79 [label="AST"];
83 -> 74 [label="AST"];
83 -> 81 [label="AST"];
83 -> 97 [label="Control Dep"];
83 -> 96 [label="Control Dep"];
83 -> 84 [label="Control Dep"];
83 -> 90 [label="Control Dep"];
83 -> 88 [label="Control Dep"];
83 -> 92 [label="Control Dep"];
83 -> 94 [label="Control Dep"];
84 -> 85 [label="AST"];
84 -> 86 [label="AST"];
88 -> 89 [label="AST"];
90 -> 91 [label="AST"];
90 -> 88 [label="AST"];
92 -> 93 [label="AST"];
94 -> 95 [label="AST"];
96 -> 87 [label="AST"];
96 -> 90 [label="AST"];
96 -> 84 [label="AST"];
96 -> 92 [label="AST"];
96 -> 94 [label="AST"];
97 -> 96 [label="AST"];
98 -> 83 [label="AST"];
98 -> 97 [label="AST"];
99 -> 98 [label="AST"];
100 -> 56 [label="AST"];
100 -> 73 [label="AST"];
100 -> 99 [label="AST"];
101 -> 100 [label="AST"];
102 -> 29 [label="AST"];
102 -> 46 [label="AST"];
102 -> 101 [label="AST"];
103 -> 19 [label="AST"];
103 -> 102 [label="AST"];
104 -> 1 [label="AST"];
104 -> 0 [label="AST"];
104 -> 2 [label="AST"];
104 -> 103 [label="AST"];
}