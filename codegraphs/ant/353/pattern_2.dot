digraph "Pattern" {
0 [label="jarHasIndex#?,File#9:DELETE
getManifestFromJar#?,File#9:DELETE" shape=ellipse]
1 [label="jarHasIndex#?,File#9:ze.getName().toUpperCase(ENGLISH).equals(INDEX_NAME)
getManifestFromJar#?,File#9:ze.getName().toUpperCase(ENGLISH).equals(MANIFEST_NAME)" shape=ellipse]
2 [label="jarHasIndex#?,File#7:e.hasMoreElements()
getManifestFromJar#?,File#7:e.hasMoreElements()" shape=ellipse]
3 [label="jarHasIndex#?,File#7:while (e.hasMoreElements()) \{
    ZipEntry ze = ((ZipEntry) (e.nextElement()));
    if (ze.getName().toUpperCase(ENGLISH).equals(INDEX_NAME)) \{
        return true;
    \}
\} 
getManifestFromJar#?,File#7:while (e.hasMoreElements()) \{
    ZipEntry ze = ((ZipEntry) (e.nextElement()));
    if (ze.getName().toUpperCase(ENGLISH).equals(MANIFEST_NAME)) \{
        InputStreamReader isr = new InputStreamReader(zf.getInputStream(ze), \"UTF-8\");
        return getManifest(isr);
    \}
\} " shape=ellipse]
4 [label="jarHasIndex#?,File#7:hasMoreElements
getManifestFromJar#?,File#7:hasMoreElements" shape=ellipse]
5 [label="jarHasIndex#?,File#7:e
getManifestFromJar#?,File#7:e" shape=ellipse]
6 [label="jarHasIndex#?,File#7:hasMoreElements()
getManifestFromJar#?,File#7:hasMoreElements()" shape=ellipse]
7 [label="jarHasIndex#?,File#7:\{
    ZipEntry ze = ((ZipEntry) (e.nextElement()));
    if (ze.getName().toUpperCase(ENGLISH).equals(INDEX_NAME)) \{
        return true;
    \}
\}
getManifestFromJar#?,File#7:\{
    ZipEntry ze = ((ZipEntry) (e.nextElement()));
    if (ze.getName().toUpperCase(ENGLISH).equals(MANIFEST_NAME)) \{
        InputStreamReader isr = new InputStreamReader(zf.getInputStream(ze), \"UTF-8\");
        return getManifest(isr);
    \}
\}" shape=ellipse]
8 [label="jarHasIndex#?,File#8:ZipEntry ze = ((ZipEntry) (e.nextElement()))
getManifestFromJar#?,File#8:ZipEntry ze = ((ZipEntry) (e.nextElement()))" shape=ellipse]
9 [label="jarHasIndex#?,File#8:((ZipEntry) (e.nextElement()))
getManifestFromJar#?,File#8:((ZipEntry) (e.nextElement()))" shape=ellipse]
10 [label="jarHasIndex#?,File#8:nextElement()
getManifestFromJar#?,File#8:nextElement()" shape=ellipse]
11 [label="jarHasIndex#?,File#8:e
getManifestFromJar#?,File#8:e" shape=ellipse]
12 [label="jarHasIndex#?,File#9:if (ze.getName().toUpperCase(ENGLISH).equals(INDEX_NAME)) \{
    return true;
\}
getManifestFromJar#?,File#9:if (ze.getName().toUpperCase(ENGLISH).equals(MANIFEST_NAME)) \{
    InputStreamReader isr = new InputStreamReader(zf.getInputStream(ze), \"UTF-8\");
    return getManifest(isr);
\}" shape=ellipse]
13 [label="jarHasIndex#?,File#9:equals()
getManifestFromJar#?,File#9:equals()" shape=ellipse]
14 [label="jarHasIndex#?,File#9:ze.getName().toUpperCase(ENGLISH)
getManifestFromJar#?,File#9:ze.getName().toUpperCase(ENGLISH)" shape=ellipse]
15 [label="jarHasIndex#?,File#9:toUpperCase()
getManifestFromJar#?,File#9:toUpperCase()" shape=ellipse]
16 [label="jarHasIndex#?,File#9:ze.getName()
getManifestFromJar#?,File#9:ze.getName()" shape=ellipse]
17 [label="jarHasIndex#?,File#9:getName()
getManifestFromJar#?,File#9:getName()" shape=ellipse]
18 [label="jarHasIndex#?,File#9:ze
getManifestFromJar#?,File#9:ze" shape=ellipse]
19 [label="jarHasIndex#?,File#9:ENGLISH
getManifestFromJar#?,File#9:ENGLISH" shape=ellipse]
20 [label="jarHasIndex#?,File#9:INDEX_NAME
getManifestFromJar#?,File#9:MANIFEST_NAME" shape=ellipse]
21 [label="jarHasIndex#?,File#9:equals
getManifestFromJar#?,File#9:equals" shape=ellipse]
22 [label="jarHasIndex#?,File#9:\{
    return true;
\}
getManifestFromJar#?,File#9:\{
    InputStreamReader isr = new InputStreamReader(zf.getInputStream(ze), \"UTF-8\");
    return getManifest(isr);
\}" shape=ellipse]
23 [label="jarHasIndex#?,File#10:return true
getManifestFromJar#?,File#11:return getManifest(isr)" shape=ellipse]
24 [label="jarHasIndex#?,File#10:true" shape=ellipse]
25 [label="jarHasIndex#?,File#-1:boolean
getManifestFromJar#?,File#-1:PlaceHold" shape=ellipse]
26 [label="getManifestFromJar#?,File#10:new InputStreamReader(zf.getInputStream(ze), \"UTF-8\")" shape=ellipse]
27 [label="getManifestFromJar#?,File#10:getInputStream(ZipEntry)" shape=ellipse]
28 [label="getManifestFromJar#?,File#10:isr" shape=ellipse]
29 [label="getManifestFromJar#?,File#11:isr" shape=ellipse]
30 [label="getManifestFromJar#?,File#10:zf.getInputStream(ze)" shape=ellipse]
31 [label="getManifestFromJar#?,File#10:InputStreamReader isr = new InputStreamReader(zf.getInputStream(ze), \"UTF-8\")" shape=ellipse]
32 [label="getManifestFromJar#?,File#10:ze" shape=ellipse]
33 [label="getManifestFromJar#?,File#11:getManifest" shape=ellipse]
34 [label="getManifestFromJar#?,File#-1:InputStreamReader()" shape=ellipse]
35 [label="getManifestFromJar#?,File#5:zf" shape=ellipse]
36 [label="getManifestFromJar#?,File#10:zf" shape=ellipse]
37 [label="getManifestFromJar#?,File#-1:PlaceHold" shape=ellipse]
38 [label="getManifestFromJar#?,File#-1:" shape=ellipse]
39 [label="getManifestFromJar#?,File#10:\"UTF-8\"" shape=ellipse]
40 [label="getManifestFromJar#?,File#-1:ZipFile" shape=ellipse]
41 [label="getManifestFromJar#?,File#-1:ZipEntry" shape=ellipse]
42 [label="getManifestFromJar#?,File#-1:zf" shape=ellipse]
43 [label="getManifestFromJar#?,File#-1:ze" shape=ellipse]
44 [label="getManifestFromJar#?,File#11:getManifest(isr)" shape=ellipse]
45 [label="getManifestFromJar#?,File#8:ze" shape=ellipse]
46 [label="getManifestFromJar#?,File#11:getManifest(<unknown>)" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 21 [label="AST:2"];
1 -> 14 [label="AST:2"];
1 -> 13 [label="AST:2"];
1 -> 20 [label="AST:2"];
1 -> 22 [label="Control Dep:2"];
1 -> 23 [label="Control Dep:2"];
1 -> 24 [label="Control Dep:1"];
1 -> 26 [label="Control Dep:1"];
1 -> 27 [label="Control Dep:1"];
1 -> 29 [label="Control Dep:1"];
1 -> 30 [label="Control Dep:1"];
1 -> 31 [label="Control Dep:1"];
1 -> 32 [label="Control Dep:1"];
1 -> 34 [label="Control Dep:1"];
1 -> 36 [label="Control Dep:1"];
1 -> 37 [label="Control Dep:1"];
1 -> 38 [label="Control Dep:1"];
1 -> 39 [label="Control Dep:1"];
1 -> 44 [label="Control Dep:1"];
1 -> 46 [label="Control Dep:1"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
3 -> 2 [label="AST:2"];
3 -> 7 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 12 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 45 [label="AST:1"];
9 -> 11 [label="AST:2"];
9 -> 10 [label="AST:2"];
11 -> 45 [label="Data Dep:1"];
12 -> 1 [label="AST:2"];
12 -> 22 [label="AST:2"];
14 -> 16 [label="AST:2"];
14 -> 15 [label="AST:2"];
14 -> 19 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 17 [label="AST:2"];
22 -> 23 [label="AST:2"];
22 -> 31 [label="AST:1"];
23 -> 24 [label="AST:1"];
23 -> 44 [label="AST:1"];
24 -> 25 [label="AST:1"];
26 -> 34 [label="AST:1"];
26 -> 30 [label="AST:1"];
26 -> 39 [label="AST:1"];
27 -> 40 [label="AST:1"];
27 -> 41 [label="AST:1"];
28 -> 29 [label="Define Use:1"];
30 -> 27 [label="AST:1"];
30 -> 36 [label="AST:1"];
30 -> 32 [label="AST:1"];
31 -> 26 [label="AST:1"];
31 -> 28 [label="AST:1"];
32 -> 28 [label="Data Dep:1"];
32 -> 43 [label="AST:1"];
35 -> 36 [label="Define Use:1"];
36 -> 28 [label="Data Dep:1"];
36 -> 42 [label="AST:1"];
37 -> 25 [label="AST:1"];
38 -> 37 [label="AST:1"];
44 -> 29 [label="AST:1"];
44 -> 33 [label="AST:1"];
44 -> 38 [label="AST:1"];
44 -> 46 [label="AST:1"];
45 -> 32 [label="Define Use:1"];
45 -> 18 [label="Define Use:1"];
}