digraph "Pattern" {
0 [label="determineOutOfDateClasses#?#26:UPDATE
scanDir#?,File,String[]#14:UPDATE" shape=ellipse]
1 [label="determineOutOfDateClasses#?#26:(info.absoluteFile.lastModified() + TIME_TOLERANCE)
scanDir#?,File,String[]#14:(info.absoluteFile.lastModified() + TIME_TOLERANCE)" shape=ellipse]
2 [label="determineOutOfDateClasses#?#24:e2.hasMoreElements()" shape=ellipse]
3 [label="determineOutOfDateClasses#?#22:info != null
scanDir#?,File,String[]#14:info.absoluteFile" shape=ellipse]
4 [label="determineOutOfDateClasses#?#24:for (Enumeration e2 = dependencies.elements(); e2.hasMoreElements();) \{
    File classpathFile = ((File) (e2.nextElement()));
    if (classpathFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) \{
        log(((\"Class \" + className) + \" is out of date with respect to \") + classpathFile, MSG_DEBUG);
        outOfDateClasses.put(className, className);
        break;
    \}
\}" shape=ellipse]
5 [label="determineOutOfDateClasses#?#24:hasMoreElements
scanDir#?,File,String[]#8:className" shape=ellipse]
6 [label="determineOutOfDateClasses#?#24:e2" shape=ellipse]
7 [label="determineOutOfDateClasses#?#24:hasMoreElements()" shape=ellipse]
8 [label="determineOutOfDateClasses#?#24:\{
    File classpathFile = ((File) (e2.nextElement()));
    if (classpathFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) \{
        log(((\"Class \" + className) + \" is out of date with respect to \") + classpathFile, MSG_DEBUG);
        outOfDateClasses.put(className, className);
        break;
    \}
\}
scanDir#?,File,String[]#14:
    if (srcFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) \{
        outOfDateClasses.put(className, className);
    \}
" shape=ellipse]
9 [label="determineOutOfDateClasses#?#25:File classpathFile = ((File) (e2.nextElement()))
scanDir#?,File,String[]#14:if (srcFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) \{
    outOfDateClasses.put(className, className);
\}" shape=ellipse]
10 [label="determineOutOfDateClasses#?#25:((File) (e2.nextElement()))" shape=ellipse]
11 [label="determineOutOfDateClasses#?#25:nextElement()
scanDir#?,File,String[]#14:lastModified()" shape=ellipse]
12 [label="determineOutOfDateClasses#?#25:e2
scanDir#?,File,String[]#13:className" shape=ellipse]
13 [label="determineOutOfDateClasses#?#26:if (classpathFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) \{
    log(((\"Class \" + className) + \" is out of date with respect to \") + classpathFile, MSG_DEBUG);
    outOfDateClasses.put(className, className);
    break;
\}" shape=ellipse]
14 [label="determineOutOfDateClasses#?#26:classpathFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)" shape=ellipse]
15 [label="determineOutOfDateClasses#?#26:classpathFile.lastModified()
scanDir#?,File,String[]#6:files[i].endsWith(\".java\")" shape=ellipse]
16 [label="determineOutOfDateClasses#?#26:lastModified()" shape=ellipse]
17 [label="determineOutOfDateClasses#?#26:classpathFile" shape=ellipse]
18 [label="determineOutOfDateClasses#?#26:info.absoluteFile.lastModified()" shape=ellipse]
19 [label="determineOutOfDateClasses#?#26:lastModified()
scanDir#?,File,String[]#14:lastModified()" shape=ellipse]
20 [label="determineOutOfDateClasses#?#26:info.absoluteFile
scanDir#?,File,String[]#13:outOfDateClasses" shape=ellipse]
21 [label="determineOutOfDateClasses#?#26:info" shape=ellipse]
22 [label="determineOutOfDateClasses#?#26:TIME_TOLERANCE
scanDir#?,File,String[]#14:TIME_TOLERANCE" shape=ellipse]
23 [label="determineOutOfDateClasses#?#26:MOVE" shape=ellipse]
24 [label="determineOutOfDateClasses#?#26:classpathFile.lastModified() > info.absoluteFile.lastModified()
scanDir#?,File,String[]#14:srcFile.lastModified() > info.absoluteFile.lastModified()" shape=ellipse]
25 [label="determineOutOfDateClasses#?#26:\{
    log(((\"Class \" + className) + \" is out of date with respect to \") + classpathFile, MSG_DEBUG);
    outOfDateClasses.put(className, className);
    break;
\}
scanDir#?,File,String[]#14:\{
    outOfDateClasses.put(className, className);
\}" shape=ellipse]
26 [label="determineOutOfDateClasses#?#27:log(((\"Class \" + className) + \" is out of date with respect to \") + classpathFile, MSG_DEBUG)
scanDir#?,File,String[]#15:outOfDateClasses.put(className, className)" shape=ellipse]
27 [label="determineOutOfDateClasses#?#27:log(<unknown>,<unknown>)
scanDir#?,File,String[]#15:put(java.lang.String,java.lang.String)" shape=ellipse]
28 [label="determineOutOfDateClasses#?#-1:
scanDir#?,File,String[]#15:outOfDateClasses" shape=ellipse]
29 [label="determineOutOfDateClasses#?#-1:PlaceHold" shape=ellipse]
30 [label="determineOutOfDateClasses#?#28:((\"Class \" + className) + \" is out of date with respect to \") + classpathFile" shape=ellipse]
31 [label="determineOutOfDateClasses#?#28:((\"Class \" + className) + \" is out of date with respect to \")" shape=ellipse]
32 [label="determineOutOfDateClasses#?#28:(\"Class \" + className)" shape=ellipse]
33 [label="determineOutOfDateClasses#?#28:\"Class \"" shape=ellipse]
34 [label="determineOutOfDateClasses#?#28:className" shape=ellipse]
35 [label="determineOutOfDateClasses#?#17:className
scanDir#?,File,String[]#13:className" shape=ellipse]
36 [label="determineOutOfDateClasses#?#28:\" is out of date with respect to \"" shape=ellipse]
37 [label="determineOutOfDateClasses#?#28:classpathFile" shape=ellipse]
38 [label="determineOutOfDateClasses#?#25:classpathFile" shape=ellipse]
39 [label="determineOutOfDateClasses#?#29:MSG_DEBUG" shape=ellipse]
40 [label="determineOutOfDateClasses#?#30:outOfDateClasses.put(className, className)" shape=ellipse]
41 [label="determineOutOfDateClasses#?#30:put(java.lang.String,java.lang.String)" shape=ellipse]
42 [label="determineOutOfDateClasses#?#30:outOfDateClasses" shape=ellipse]
43 [label="determineOutOfDateClasses#?#3:outOfDateClasses
scanDir#?,File,String[]#-1:className" shape=ellipse]
44 [label="determineOutOfDateClasses#?#30:className" shape=ellipse]
45 [label="determineOutOfDateClasses#?#30:className" shape=ellipse]
46 [label="determineOutOfDateClasses#?#31:break" shape=ellipse]
47 [label="scanDir#?,File,String[]#12:null" shape=ellipse]
48 [label="scanDir#?,File,String[]#15:className" shape=ellipse]
49 [label="scanDir#?,File,String[]#10:className" shape=ellipse]
50 [label="scanDir#?,File,String[]#12:info == null" shape=ellipse]
51 [label="scanDir#?,File,String[]#14:MOVE" shape=ellipse]
52 [label="scanDir#?,File,String[]#14:srcFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)" shape=ellipse]
53 [label="scanDir#?,File,String[]#12:\{
    outOfDateClasses.put(className, className);
\}" shape=ellipse]
54 [label="scanDir#?,File,String[]#14:srcFile.lastModified()" shape=ellipse]
55 [label="scanDir#?,File,String[]#14:info" shape=ellipse]
56 [label="scanDir#?,File,String[]#13:put(java.lang.String,java.lang.String)" shape=ellipse]
57 [label="scanDir#?,File,String[]#12:if (info == null) \{
    outOfDateClasses.put(className, className);
\} else if (srcFile.lastModified() > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) \{
    outOfDateClasses.put(className, className);
\}" shape=ellipse]
58 [label="scanDir#?,File,String[]#14:info.absoluteFile.lastModified()" shape=ellipse]
59 [label="scanDir#?,File,String[]#12:info" shape=ellipse]
60 [label="scanDir#?,File,String[]#13:outOfDateClasses.put(className, className)" shape=ellipse]
61 [label="scanDir#?,File,String[]#14:srcFile" shape=ellipse]
62 [label="scanDir#?,File,String[]#15:className" shape=ellipse]
0 -> 24 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 18 [label="AST:1"];
1 -> 22 [label="AST:2"];
1 -> 23 [label="Action:1"];
1 -> 51 [label="Action:1"];
1 -> 58 [label="AST:1"];
2 -> 1 [label="Control Dep:1"];
2 -> 5 [label="AST:1"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="AST:1"];
2 -> 8 [label="Control Dep:1"];
2 -> 9 [label="Control Dep:1"];
2 -> 10 [label="Control Dep:1"];
2 -> 11 [label="Control Dep:1"];
2 -> 12 [label="Control Dep:1"];
2 -> 13 [label="Control Dep:1"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:1"];
2 -> 16 [label="Control Dep:1"];
2 -> 17 [label="Control Dep:1"];
2 -> 18 [label="Control Dep:1"];
2 -> 19 [label="Control Dep:1"];
2 -> 20 [label="Control Dep:1"];
2 -> 21 [label="Control Dep:1"];
2 -> 22 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:1"];
3 -> 4 [label="Control Dep:1"];
3 -> 7 [label="Control Dep:1"];
3 -> 6 [label="Control Dep:1"];
3 -> 55 [label="AST:1"];
4 -> 2 [label="AST:1"];
4 -> 8 [label="AST:1"];
5 -> 48 [label="Define Use:1"];
5 -> 62 [label="Define Use:1"];
8 -> 9 [label="AST:2"];
8 -> 13 [label="AST:1"];
9 -> 10 [label="AST:1"];
9 -> 52 [label="AST:1"];
10 -> 12 [label="AST:1"];
10 -> 11 [label="AST:1"];
13 -> 14 [label="AST:1"];
14 -> 1 [label="AST:1"];
14 -> 15 [label="AST:1"];
15 -> 17 [label="AST:1"];
15 -> 16 [label="AST:1"];
15 -> 47 [label="Control Dep:1"];
15 -> 50 [label="Control Dep:1"];
15 -> 57 [label="Control Dep:1"];
15 -> 59 [label="Control Dep:1"];
18 -> 20 [label="AST:1"];
18 -> 19 [label="AST:1"];
20 -> 21 [label="AST:1"];
23 -> 13 [label="Action:1"];
24 -> 25 [label="Control Dep:2"];
24 -> 26 [label="Control Dep:2"];
24 -> 27 [label="Control Dep:2"];
24 -> 28 [label="Control Dep:2"];
24 -> 29 [label="Control Dep:1"];
24 -> 30 [label="Control Dep:1"];
24 -> 31 [label="Control Dep:1"];
24 -> 32 [label="Control Dep:1"];
24 -> 33 [label="Control Dep:1"];
24 -> 34 [label="Control Dep:1"];
24 -> 36 [label="Control Dep:1"];
24 -> 37 [label="Control Dep:1"];
24 -> 39 [label="Control Dep:1"];
24 -> 40 [label="Control Dep:1"];
24 -> 41 [label="Control Dep:1"];
24 -> 42 [label="Control Dep:1"];
24 -> 44 [label="Control Dep:1"];
24 -> 45 [label="Control Dep:1"];
24 -> 46 [label="Control Dep:1"];
24 -> 48 [label="Control Dep:1"];
24 -> 62 [label="Control Dep:1"];
25 -> 26 [label="AST:2"];
25 -> 40 [label="AST:1"];
25 -> 46 [label="AST:1"];
26 -> 28 [label="AST:2"];
26 -> 27 [label="AST:2"];
26 -> 30 [label="AST:1"];
26 -> 39 [label="AST:1"];
26 -> 48 [label="AST:1"];
26 -> 62 [label="AST:1"];
28 -> 29 [label="AST:1"];
30 -> 31 [label="AST:1"];
30 -> 37 [label="AST:1"];
31 -> 32 [label="AST:1"];
31 -> 36 [label="AST:1"];
32 -> 33 [label="AST:1"];
32 -> 34 [label="AST:1"];
35 -> 34 [label="Define Use:1"];
35 -> 44 [label="Define Use:1"];
35 -> 45 [label="Define Use:1"];
38 -> 37 [label="Define Use:1"];
40 -> 42 [label="AST:1"];
40 -> 41 [label="AST:1"];
40 -> 44 [label="AST:1"];
40 -> 45 [label="AST:1"];
43 -> 42 [label="Define Use:1"];
43 -> 48 [label="Define Use:1"];
43 -> 62 [label="Define Use:1"];
49 -> 48 [label="Define Use:1"];
49 -> 43 [label="AST:1"];
49 -> 62 [label="Define Use:1"];
50 -> 47 [label="AST:1"];
50 -> 59 [label="AST:1"];
50 -> 53 [label="Control Dep:1"];
50 -> 60 [label="Control Dep:1"];
50 -> 56 [label="Control Dep:1"];
50 -> 20 [label="Control Dep:1"];
50 -> 12 [label="Control Dep:1"];
50 -> 35 [label="Control Dep:1"];
50 -> 8 [label="Control Dep:1"];
50 -> 9 [label="Control Dep:1"];
50 -> 52 [label="Control Dep:1"];
50 -> 54 [label="Control Dep:1"];
50 -> 11 [label="Control Dep:1"];
50 -> 61 [label="Control Dep:1"];
50 -> 1 [label="Control Dep:1"];
50 -> 58 [label="Control Dep:1"];
50 -> 19 [label="Control Dep:1"];
50 -> 3 [label="Control Dep:1"];
50 -> 55 [label="Control Dep:1"];
50 -> 22 [label="Control Dep:1"];
51 -> 9 [label="Action:1"];
52 -> 54 [label="AST:1"];
52 -> 1 [label="AST:1"];
53 -> 60 [label="AST:1"];
54 -> 61 [label="AST:1"];
54 -> 11 [label="AST:1"];
57 -> 50 [label="AST:1"];
57 -> 53 [label="AST:1"];
57 -> 8 [label="AST:1"];
58 -> 3 [label="AST:1"];
58 -> 19 [label="AST:1"];
60 -> 56 [label="AST:1"];
60 -> 20 [label="AST:1"];
60 -> 12 [label="AST:1"];
60 -> 35 [label="AST:1"];
}