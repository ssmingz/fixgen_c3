digraph "Pattern" {
0 [label="getRef#?,Project#10:INSERT
getRef#?,Project#10:INSERT
getRef#?#10:INSERT
getRef#?,Project#10:INSERT
getRef#?,Project#10:INSERT" shape=ellipse]
1 [label="getRef#?,Project#10:ref.getRefId()
getRef#?,Project#10:ref.getRefId()
getRef#?#10:ref.getRefId()
getRef#?,Project#10:ref.getRefId()
getRef#?,Project#10:ref.getRefId()" shape=ellipse]
2 [label="getRef#?,Project#9:!(o instanceof RegularExpression)
getRef#?,Project#9:!(o instanceof FileSet)
getRef#?#9:!(o instanceof Mapper)
getRef#?,Project#9:!(o instanceof PatternSet)
getRef#?,Project#9:!(o instanceof Substitution)" shape=ellipse]
3 [label="getRef#?,Project#9:if (!(o instanceof RegularExpression)) \{
    String msg = (ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME;
    throw new BuildException(msg);
\} else \{
    return ((RegularExpression) (o));
\}
getRef#?,Project#9:if (!(o instanceof FileSet)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a fileset\";
    throw new BuildException(msg);
\} else \{
    return ((AbstractFileSet) (o));
\}
getRef#?#9:if (!(o instanceof Mapper)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a mapper\";
    throw new BuildException(msg);
\} else \{
    return ((Mapper) (o));
\}
getRef#?,Project#9:if (!(o instanceof PatternSet)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a patternset\";
    throw new BuildException(msg);
\} else \{
    return ((PatternSet) (o));
\}
getRef#?,Project#9:if (!(o instanceof Substitution)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a substitution\";
    throw new BuildException(msg);
\} else \{
    return ((Substitution) (o));
\}" shape=ellipse]
4 [label="getRef#?,Project#-1:boolean
getRef#?,Project#-1:boolean
getRef#?#-1:boolean
getRef#?,Project#-1:boolean
getRef#?,Project#-1:boolean" shape=ellipse]
5 [label="getRef#?,Project#9:(o instanceof RegularExpression)
getRef#?,Project#9:(o instanceof FileSet)
getRef#?#9:(o instanceof Mapper)
getRef#?,Project#9:(o instanceof PatternSet)
getRef#?,Project#9:(o instanceof Substitution)" shape=ellipse]
6 [label="getRef#?,Project#9:\{
    String msg = (ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME;
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a fileset\";
    throw new BuildException(msg);
\}
getRef#?#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a mapper\";
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a patternset\";
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a substitution\";
    throw new BuildException(msg);
\}" shape=ellipse]
7 [label="getRef#?,Project#10:String msg = (ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME
getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a fileset\"
getRef#?#10:String msg = ref.getRefId() + \" doesn\'t denote a mapper\"
getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a patternset\"
getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a substitution\"" shape=ellipse]
8 [label="getRef#?,Project#10:(ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME" shape=ellipse]
9 [label="getRef#?,Project#10:(ref.getRefId() + \" doesn\'t denote a \")" shape=ellipse]
10 [label="getRef#?,Project#10:getRefId()
getRef#?,Project#10:getRefId()
getRef#?#10:getRefId()
getRef#?,Project#10:getRefId()
getRef#?,Project#10:getRefId()" shape=ellipse]
11 [label="getRef#?,Project#10:ref
getRef#?,Project#10:ref
getRef#?#10:ref
getRef#?,Project#10:ref
getRef#?,Project#10:ref" shape=ellipse]
12 [label="getRef#?,Project#10:\" doesn\'t denote a \"
getRef#?,Project#10:\" doesn\'t denote a fileset\"
getRef#?#10:\" doesn\'t denote a mapper\"
getRef#?,Project#10:\" doesn\'t denote a patternset\"
getRef#?,Project#10:\" doesn\'t denote a substitution\"" shape=ellipse]
13 [label="getRef#?,Project#10:DATA_TYPE_NAME
getRef#?,Project#13:((AbstractFileSet) (o))
getRef#?#13:((Mapper) (o))
getRef#?,Project#13:((PatternSet) (o))
getRef#?,Project#13:((Substitution) (o))" shape=ellipse]
14 [label="getRef#?,Project#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)
getRef#?#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)" shape=ellipse]
15 [label="getRef#?,Project#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)
getRef#?#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)" shape=ellipse]
16 [label="getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)" shape=ellipse]
17 [label="getRef#?,Project#11:msg
getRef#?,Project#11:msg
getRef#?#11:msg
getRef#?,Project#11:msg
getRef#?,Project#11:msg" shape=ellipse]
18 [label="getRef#?,Project#12:\{
    return ((RegularExpression) (o));
\}
getRef#?,Project#12:\{
    return ((AbstractFileSet) (o));
\}
getRef#?#12:\{
    return ((Mapper) (o));
\}
getRef#?,Project#12:\{
    return ((PatternSet) (o));
\}
getRef#?,Project#12:\{
    return ((Substitution) (o));
\}" shape=ellipse]
19 [label="getRef#?,Project#13:return ((RegularExpression) (o))" shape=ellipse]
20 [label="getRef#?,Project#13:((RegularExpression) (o))" shape=ellipse]
21 [label="getRef#?,Project#10:getRefId
getRef#?,Project#10:getRefId
getRef#?#10:getRefId
getRef#?,Project#10:getRefId
getRef#?,Project#10:getRefId" shape=ellipse]
22 [label="getRef#?,Project#10:getRefid()
getRef#?,Project#10:getRefid()
getRef#?#10:getRefid()
getRef#?,Project#10:getRefid()
getRef#?,Project#10:getRefid()" shape=ellipse]
23 [label="getRef#?,Project#13:return ((AbstractFileSet) (o))" shape=ellipse]
24 [label="getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a fileset\"" shape=ellipse]
25 [label="getRef#?#13:return ((Mapper) (o))" shape=ellipse]
26 [label="getRef#?#10:ref.getRefId() + \" doesn\'t denote a mapper\"" shape=ellipse]
27 [label="getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a patternset\"" shape=ellipse]
28 [label="getRef#?,Project#13:return ((PatternSet) (o))" shape=ellipse]
29 [label="getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a substitution\"" shape=ellipse]
30 [label="getRef#?,Project#13:return ((Substitution) (o))" shape=ellipse]
0 -> 22 [label="Action:5"];
1 -> 0 [label="Action:5"];
1 -> 21 [label="AST:5"];
1 -> 11 [label="AST:5"];
1 -> 10 [label="AST:5"];
2 -> 1 [label="Control Dep:5"];
2 -> 4 [label="AST:5"];
2 -> 5 [label="AST:5"];
2 -> 6 [label="Control Dep:5"];
2 -> 7 [label="Control Dep:5"];
2 -> 8 [label="Control Dep:1"];
2 -> 9 [label="Control Dep:1"];
2 -> 10 [label="Control Dep:5"];
2 -> 11 [label="Control Dep:5"];
2 -> 12 [label="Control Dep:5"];
2 -> 13 [label="Control Dep:5"];
2 -> 14 [label="Control Dep:5"];
2 -> 15 [label="Control Dep:5"];
2 -> 16 [label="Control Dep:5"];
2 -> 17 [label="Control Dep:5"];
2 -> 18 [label="Control Dep:5"];
2 -> 19 [label="Control Dep:1"];
2 -> 20 [label="Control Dep:1"];
2 -> 23 [label="Control Dep:1"];
2 -> 24 [label="Control Dep:1"];
2 -> 25 [label="Control Dep:1"];
2 -> 26 [label="Control Dep:1"];
2 -> 27 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
2 -> 29 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:1"];
3 -> 2 [label="AST:5"];
3 -> 6 [label="AST:5"];
3 -> 18 [label="AST:5"];
6 -> 7 [label="AST:5"];
6 -> 14 [label="AST:5"];
7 -> 8 [label="AST:1"];
7 -> 24 [label="AST:1"];
7 -> 26 [label="AST:1"];
7 -> 27 [label="AST:1"];
7 -> 29 [label="AST:1"];
8 -> 9 [label="AST:1"];
8 -> 13 [label="AST:1"];
9 -> 1 [label="AST:1"];
9 -> 12 [label="AST:1"];
14 -> 15 [label="AST:5"];
15 -> 16 [label="AST:5"];
15 -> 17 [label="AST:5"];
18 -> 19 [label="AST:1"];
18 -> 23 [label="AST:1"];
18 -> 25 [label="AST:1"];
18 -> 28 [label="AST:1"];
18 -> 30 [label="AST:1"];
19 -> 20 [label="AST:1"];
23 -> 13 [label="AST:1"];
24 -> 1 [label="AST:1"];
24 -> 12 [label="AST:1"];
25 -> 13 [label="AST:1"];
26 -> 1 [label="AST:1"];
26 -> 12 [label="AST:1"];
27 -> 1 [label="AST:1"];
27 -> 12 [label="AST:1"];
28 -> 13 [label="AST:1"];
29 -> 1 [label="AST:1"];
29 -> 12 [label="AST:1"];
30 -> 13 [label="AST:1"];
}