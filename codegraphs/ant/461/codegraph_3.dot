digraph "testTypedAdderAttribute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testTypedAdderAttribute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
5 [label="3:CtLiteralImpl@\"test\"" shape=ellipse]
6 [label="3:CtLiteralImpl@\"test\"" shape=ellipse]
7 [label="3:CtConstructorCallImpl@new DefaultConfiguration(\"test\", \"test\")" shape=ellipse]
8 [label="3:CtVirtualElement@config" shape=ellipse]
9 [label="3:CtLocalVariableImpl@final DefaultConfiguration config = new DefaultConfiguration(\"test\", \"test\")" shape=ellipse]
10 [label="4:CtExecutableReferenceImpl@setAttribute(java.lang.String,java.lang.String)" shape=ellipse]
11 [label="4:CtVirtualElement@setAttribute" shape=ellipse]
12 [label="4:CtVariableReadImpl@config" shape=ellipse]
13 [label="4:CtLiteralImpl@\"my-role1\"" shape=ellipse]
14 [label="4:CtLiteralImpl@\"some value\"" shape=ellipse]
15 [label="4:CtInvocationImpl@config.setAttribute(\"my-role1\", \"some value\")" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@RoleManager" shape=ellipse]
17 [label="5:CtExecutableReferenceImpl@lookup()" shape=ellipse]
18 [label="5:CtVirtualElement@lookup" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@getComponentManager()" shape=ellipse]
20 [label="5:CtVirtualElement@getComponentManager" shape=ellipse]
21 [label="5:CtInvocationImpl@getComponentManager()" shape=ellipse]
22 [label="5:CtTypeAccessImpl@ROLE" shape=ellipse]
23 [label="5:CtInvocationImpl@((RoleManager) (getComponentManager().lookup(ROLE)))" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@RoleManager" shape=ellipse]
25 [label="5:CtVirtualElement@roleMgr" shape=ellipse]
26 [label="5:CtLocalVariableImpl@RoleManager roleMgr = ((RoleManager) (getComponentManager().lookup(ROLE)))" shape=ellipse]
27 [label="6:CtExecutableReferenceImpl@addNameRoleMapping(java.lang.String)" shape=ellipse]
28 [label="6:CtVirtualElement@addNameRoleMapping" shape=ellipse]
29 [label="6:CtVariableReadImpl@roleMgr" shape=ellipse]
30 [label="6:CtLiteralImpl@\"my-role1\"" shape=ellipse]
31 [label="6:CtTypeAccessImpl@ROLE" shape=ellipse]
32 [label="6:CtInvocationImpl@roleMgr.addNameRoleMapping(\"my-role1\", ROLE)" shape=ellipse]
33 [label="7:CtExecutableReferenceImpl@registerConverter(java.lang.Class,java.lang.Class,java.lang.Class)" shape=ellipse]
34 [label="7:CtVirtualElement@registerConverter" shape=ellipse]
35 [label="7:CtFieldReadImpl@StringToMyRole1Converter.class" shape=ellipse]
36 [label="7:CtFieldReadImpl@String.class" shape=ellipse]
37 [label="7:CtFieldReadImpl@MyRole1.class" shape=ellipse]
38 [label="7:CtInvocationImpl@registerConverter(StringToMyRole1Converter.class, String.class, MyRole1.class)" shape=ellipse]
39 [label="8:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
40 [label="8:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
41 [label="8:CtConstructorCallImpl@new ConfigTest6()" shape=ellipse]
42 [label="8:CtVirtualElement@test" shape=ellipse]
43 [label="8:CtLocalVariableImpl@final ConfigTest6 test = new ConfigTest6()" shape=ellipse]
44 [label="9:CtExecutableReferenceImpl@configure(ConfigTest6,DefaultConfiguration)" shape=ellipse]
45 [label="9:CtVirtualElement@configure" shape=ellipse]
46 [label="9:CtFieldReadImpl@m_configurer" shape=ellipse]
47 [label="9:CtVariableReadImpl@test" shape=ellipse]
48 [label="9:CtVariableReadImpl@config" shape=ellipse]
49 [label="9:CtFieldReadImpl@m_context" shape=ellipse]
50 [label="9:CtInvocationImpl@m_configurer.configure(test, config, m_context)" shape=ellipse]
51 [label="10:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
52 [label="10:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
53 [label="10:CtConstructorCallImpl@new ConfigTest6()" shape=ellipse]
54 [label="10:CtVirtualElement@expected" shape=ellipse]
55 [label="10:CtLocalVariableImpl@final ConfigTest6 expected = new ConfigTest6()" shape=ellipse]
56 [label="11:CtExecutableReferenceImpl@add(MyType1)" shape=ellipse]
57 [label="11:CtVirtualElement@add" shape=ellipse]
58 [label="11:CtVariableReadImpl@expected" shape=ellipse]
59 [label="11:CtTypeReferenceImpl@MyType1" shape=ellipse]
60 [label="11:CtConstructorCallImpl@new MyType1()" shape=ellipse]
61 [label="11:CtInvocationImpl@expected.add(new MyType1())" shape=ellipse]
62 [label="12:CtExecutableReferenceImpl@assertEquals(<unknown>,<unknown>)" shape=ellipse]
63 [label="12:CtVirtualElement@assertEquals" shape=ellipse]
64 [label="12:CtVariableReadImpl@expected" shape=ellipse]
65 [label="12:CtVariableReadImpl@test" shape=ellipse]
66 [label="12:CtInvocationImpl@assertEquals(expected, test)" shape=ellipse]
67 [label="2:CtBlockImpl@\{
    final DefaultConfiguration config = new DefaultConfiguration(\"test\", \"test\");
    config.setAttribute(\"my-role1\", \"some value\");
    RoleManager roleMgr = ((RoleManager) (getComponentManager().lookup(ROLE)));
    roleMgr.addNameRoleMapping(\"my-role1\", ROLE);
    registerConverter(StringToMyRole1Converter.class, String.class, MyRole1.class);
    final ConfigTest6 test = new ConfigTest6();
    m_configurer.configure(test, config, m_context);
    final ConfigTest6 expected = new ConfigTest6();
    expected.add(new MyType1());
    assertEquals(expected, test);
\}" shape=ellipse]
68 [label="2:CtMethodImpl@public void testTypedAdderAttribute() throws Exception \{
    final DefaultConfiguration config = new DefaultConfiguration(\"test\", \"test\");
    config.setAttribute(\"my-role1\", \"some value\");
    RoleManager roleMgr = ((RoleManager) (getComponentManager().lookup(ROLE)));
    roleMgr.addNameRoleMapping(\"my-role1\", ROLE);
    registerConverter(StringToMyRole1Converter.class, String.class, MyRole1.class);
    final ConfigTest6 test = new ConfigTest6();
    m_configurer.configure(test, config, m_context);
    final ConfigTest6 expected = new ConfigTest6();
    expected.add(new MyType1());
    assertEquals(expected, test);
\}" shape=ellipse]
69 [label="5:Update@UPDATE" shape=ellipse]
70 [label="5:CtInvocationImpl@getServiceManager()" shape=ellipse]
7 -> 5 [label="AST"];
7 -> 6 [label="AST"];
8 -> 12 [label="Define-Use"];
8 -> 48 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 3 [label="AST"];
9 -> 7 [label="AST"];
15 -> 11 [label="AST"];
15 -> 12 [label="AST"];
15 -> 10 [label="AST"];
15 -> 13 [label="AST"];
15 -> 14 [label="AST"];
21 -> 20 [label="AST"];
21 -> 19 [label="AST"];
21 -> 69 [label="Action"];
23 -> 18 [label="AST"];
23 -> 24 [label="AST"];
23 -> 21 [label="AST"];
23 -> 17 [label="AST"];
23 -> 22 [label="AST"];
25 -> 29 [label="Define-Use"];
26 -> 25 [label="AST"];
26 -> 16 [label="AST"];
26 -> 23 [label="AST"];
32 -> 28 [label="AST"];
32 -> 29 [label="AST"];
32 -> 27 [label="AST"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
38 -> 34 [label="AST"];
38 -> 33 [label="AST"];
38 -> 35 [label="AST"];
38 -> 36 [label="AST"];
38 -> 37 [label="AST"];
42 -> 47 [label="Define-Use"];
42 -> 65 [label="Define-Use"];
43 -> 42 [label="AST"];
43 -> 39 [label="AST"];
43 -> 41 [label="AST"];
50 -> 45 [label="AST"];
50 -> 46 [label="AST"];
50 -> 44 [label="AST"];
50 -> 47 [label="AST"];
50 -> 48 [label="AST"];
50 -> 49 [label="AST"];
54 -> 58 [label="Define-Use"];
54 -> 64 [label="Define-Use"];
55 -> 54 [label="AST"];
55 -> 51 [label="AST"];
55 -> 53 [label="AST"];
61 -> 57 [label="AST"];
61 -> 58 [label="AST"];
61 -> 56 [label="AST"];
61 -> 60 [label="AST"];
66 -> 63 [label="AST"];
66 -> 62 [label="AST"];
66 -> 64 [label="AST"];
66 -> 65 [label="AST"];
67 -> 9 [label="AST"];
67 -> 15 [label="AST"];
67 -> 26 [label="AST"];
67 -> 32 [label="AST"];
67 -> 38 [label="AST"];
67 -> 43 [label="AST"];
67 -> 50 [label="AST"];
67 -> 55 [label="AST"];
67 -> 61 [label="AST"];
67 -> 66 [label="AST"];
68 -> 1 [label="AST"];
68 -> 0 [label="AST"];
68 -> 2 [label="AST"];
68 -> 67 [label="AST"];
69 -> 70 [label="Action"];
}