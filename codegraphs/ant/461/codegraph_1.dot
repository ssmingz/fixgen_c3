digraph "testTypedAdderReference#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testTypedAdderReference" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
5 [label="3:CtLiteralImpl@\"test\"" shape=ellipse]
6 [label="3:CtLiteralImpl@\"test\"" shape=ellipse]
7 [label="3:CtConstructorCallImpl@new DefaultConfiguration(\"test\", \"test\")" shape=ellipse]
8 [label="3:CtVirtualElement@config" shape=ellipse]
9 [label="3:CtLocalVariableImpl@final DefaultConfiguration config = new DefaultConfiguration(\"test\", \"test\")" shape=ellipse]
10 [label="4:CtExecutableReferenceImpl@setAttribute(java.lang.String,java.lang.String)" shape=ellipse]
11 [label="4:CtVirtualElement@setAttribute" shape=ellipse]
12 [label="4:CtVariableReadImpl@config" shape=ellipse]
13 [label="4:CtLiteralImpl@\"my-role1-ref\"" shape=ellipse]
14 [label="4:CtLiteralImpl@\"id\"" shape=ellipse]
15 [label="4:CtInvocationImpl@config.setAttribute(\"my-role1-ref\", \"id\")" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@DefaultConfiguration" shape=ellipse]
18 [label="5:CtLiteralImpl@\"my-role1-ref\"" shape=ellipse]
19 [label="5:CtLiteralImpl@\"test\"" shape=ellipse]
20 [label="5:CtConstructorCallImpl@new DefaultConfiguration(\"my-role1-ref\", \"test\")" shape=ellipse]
21 [label="5:CtVirtualElement@child" shape=ellipse]
22 [label="5:CtLocalVariableImpl@final DefaultConfiguration child = new DefaultConfiguration(\"my-role1-ref\", \"test\")" shape=ellipse]
23 [label="6:CtExecutableReferenceImpl@setAttribute(java.lang.String,java.lang.String)" shape=ellipse]
24 [label="6:CtVirtualElement@setAttribute" shape=ellipse]
25 [label="6:CtVariableReadImpl@child" shape=ellipse]
26 [label="6:CtLiteralImpl@\"id\"" shape=ellipse]
27 [label="6:CtLiteralImpl@\"id2\"" shape=ellipse]
28 [label="6:CtInvocationImpl@child.setAttribute(\"id\", \"id2\")" shape=ellipse]
29 [label="7:CtExecutableReferenceImpl@addChild(DefaultConfiguration)" shape=ellipse]
30 [label="7:CtVirtualElement@addChild" shape=ellipse]
31 [label="7:CtVariableReadImpl@config" shape=ellipse]
32 [label="7:CtVariableReadImpl@child" shape=ellipse]
33 [label="7:CtInvocationImpl@config.addChild(child)" shape=ellipse]
34 [label="8:CtTypeReferenceImpl@RoleManager" shape=ellipse]
35 [label="8:CtExecutableReferenceImpl@lookup()" shape=ellipse]
36 [label="8:CtVirtualElement@lookup" shape=ellipse]
37 [label="8:CtExecutableReferenceImpl@getComponentManager()" shape=ellipse]
38 [label="8:CtVirtualElement@getComponentManager" shape=ellipse]
39 [label="8:CtInvocationImpl@getComponentManager()" shape=ellipse]
40 [label="8:CtTypeAccessImpl@ROLE" shape=ellipse]
41 [label="8:CtInvocationImpl@((RoleManager) (getComponentManager().lookup(ROLE)))" shape=ellipse]
42 [label="8:CtTypeReferenceImpl@RoleManager" shape=ellipse]
43 [label="8:CtVirtualElement@roleMgr" shape=ellipse]
44 [label="8:CtLocalVariableImpl@final RoleManager roleMgr = ((RoleManager) (getComponentManager().lookup(ROLE)))" shape=ellipse]
45 [label="9:CtExecutableReferenceImpl@addNameRoleMapping(java.lang.String,java.lang.String)" shape=ellipse]
46 [label="9:CtVirtualElement@addNameRoleMapping" shape=ellipse]
47 [label="9:CtVariableReadImpl@roleMgr" shape=ellipse]
48 [label="9:CtLiteralImpl@\"my-role1\"" shape=ellipse]
49 [label="9:CtExecutableReferenceImpl@getName()" shape=ellipse]
50 [label="9:CtVirtualElement@getName" shape=ellipse]
51 [label="9:CtFieldReadImpl@MyRole1.class" shape=ellipse]
52 [label="9:CtInvocationImpl@MyRole1.class.getName()" shape=ellipse]
53 [label="9:CtInvocationImpl@roleMgr.addNameRoleMapping(\"my-role1\", MyRole1.class.getName())" shape=ellipse]
54 [label="10:CtExecutableReferenceImpl@setProperty(java.lang.String,MyType1)" shape=ellipse]
55 [label="10:CtVirtualElement@setProperty" shape=ellipse]
56 [label="10:CtFieldReadImpl@m_context" shape=ellipse]
57 [label="10:CtLiteralImpl@\"id\"" shape=ellipse]
58 [label="10:CtTypeReferenceImpl@MyType1" shape=ellipse]
59 [label="10:CtConstructorCallImpl@new MyType1()" shape=ellipse]
60 [label="10:CtInvocationImpl@m_context.setProperty(\"id\", new MyType1())" shape=ellipse]
61 [label="11:CtExecutableReferenceImpl@setProperty(java.lang.String,MyType2)" shape=ellipse]
62 [label="11:CtVirtualElement@setProperty" shape=ellipse]
63 [label="11:CtFieldReadImpl@m_context" shape=ellipse]
64 [label="11:CtLiteralImpl@\"id2\"" shape=ellipse]
65 [label="11:CtTypeReferenceImpl@MyType2" shape=ellipse]
66 [label="11:CtConstructorCallImpl@new MyType2()" shape=ellipse]
67 [label="11:CtInvocationImpl@m_context.setProperty(\"id2\", new MyType2())" shape=ellipse]
68 [label="12:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
69 [label="12:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
70 [label="12:CtConstructorCallImpl@new ConfigTest6()" shape=ellipse]
71 [label="12:CtVirtualElement@test" shape=ellipse]
72 [label="12:CtLocalVariableImpl@final ConfigTest6 test = new ConfigTest6()" shape=ellipse]
73 [label="13:CtExecutableReferenceImpl@configure(ConfigTest6,DefaultConfiguration)" shape=ellipse]
74 [label="13:CtVirtualElement@configure" shape=ellipse]
75 [label="13:CtFieldReadImpl@m_configurer" shape=ellipse]
76 [label="13:CtVariableReadImpl@test" shape=ellipse]
77 [label="13:CtVariableReadImpl@config" shape=ellipse]
78 [label="13:CtFieldReadImpl@m_context" shape=ellipse]
79 [label="13:CtInvocationImpl@m_configurer.configure(test, config, m_context)" shape=ellipse]
80 [label="14:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
81 [label="14:CtTypeReferenceImpl@ConfigTest6" shape=ellipse]
82 [label="14:CtConstructorCallImpl@new ConfigTest6()" shape=ellipse]
83 [label="14:CtVirtualElement@expected" shape=ellipse]
84 [label="14:CtLocalVariableImpl@final ConfigTest6 expected = new ConfigTest6()" shape=ellipse]
85 [label="15:CtExecutableReferenceImpl@add(MyType1)" shape=ellipse]
86 [label="15:CtVirtualElement@add" shape=ellipse]
87 [label="15:CtVariableReadImpl@expected" shape=ellipse]
88 [label="15:CtTypeReferenceImpl@MyType1" shape=ellipse]
89 [label="15:CtConstructorCallImpl@new MyType1()" shape=ellipse]
90 [label="15:CtInvocationImpl@expected.add(new MyType1())" shape=ellipse]
91 [label="16:CtExecutableReferenceImpl@add(MyType2)" shape=ellipse]
92 [label="16:CtVirtualElement@add" shape=ellipse]
93 [label="16:CtVariableReadImpl@expected" shape=ellipse]
94 [label="16:CtTypeReferenceImpl@MyType2" shape=ellipse]
95 [label="16:CtConstructorCallImpl@new MyType2()" shape=ellipse]
96 [label="16:CtInvocationImpl@expected.add(new MyType2())" shape=ellipse]
97 [label="17:CtExecutableReferenceImpl@assertEquals(<unknown>,<unknown>)" shape=ellipse]
98 [label="17:CtVirtualElement@assertEquals" shape=ellipse]
99 [label="17:CtVariableReadImpl@expected" shape=ellipse]
100 [label="17:CtVariableReadImpl@test" shape=ellipse]
101 [label="17:CtInvocationImpl@assertEquals(expected, test)" shape=ellipse]
102 [label="2:CtBlockImpl@\{
    final DefaultConfiguration config = new DefaultConfiguration(\"test\", \"test\");
    config.setAttribute(\"my-role1-ref\", \"id\");
    final DefaultConfiguration child = new DefaultConfiguration(\"my-role1-ref\", \"test\");
    child.setAttribute(\"id\", \"id2\");
    config.addChild(child);
    final RoleManager roleMgr = ((RoleManager) (getComponentManager().lookup(ROLE)));
    roleMgr.addNameRoleMapping(\"my-role1\", MyRole1.class.getName());
    m_context.setProperty(\"id\", new MyType1());
    m_context.setProperty(\"id2\", new MyType2());
    final ConfigTest6 test = new ConfigTest6();
    m_configurer.configure(test, config, m_context);
    final ConfigTest6 expected = new ConfigTest6();
    expected.add(new MyType1());
    expected.add(new MyType2());
    assertEquals(expected, test);
\}" shape=ellipse]
103 [label="2:CtMethodImpl@public void testTypedAdderReference() throws Exception \{
    final DefaultConfiguration config = new DefaultConfiguration(\"test\", \"test\");
    config.setAttribute(\"my-role1-ref\", \"id\");
    final DefaultConfiguration child = new DefaultConfiguration(\"my-role1-ref\", \"test\");
    child.setAttribute(\"id\", \"id2\");
    config.addChild(child);
    final RoleManager roleMgr = ((RoleManager) (getComponentManager().lookup(ROLE)));
    roleMgr.addNameRoleMapping(\"my-role1\", MyRole1.class.getName());
    m_context.setProperty(\"id\", new MyType1());
    m_context.setProperty(\"id2\", new MyType2());
    final ConfigTest6 test = new ConfigTest6();
    m_configurer.configure(test, config, m_context);
    final ConfigTest6 expected = new ConfigTest6();
    expected.add(new MyType1());
    expected.add(new MyType2());
    assertEquals(expected, test);
\}" shape=ellipse]
104 [label="8:Update@UPDATE" shape=ellipse]
105 [label="8:CtInvocationImpl@getServiceManager()" shape=ellipse]
7 -> 5 [label="AST"];
7 -> 6 [label="AST"];
8 -> 12 [label="Define-Use"];
8 -> 31 [label="Define-Use"];
8 -> 77 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 3 [label="AST"];
9 -> 7 [label="AST"];
15 -> 11 [label="AST"];
15 -> 12 [label="AST"];
15 -> 10 [label="AST"];
15 -> 13 [label="AST"];
15 -> 14 [label="AST"];
20 -> 18 [label="AST"];
20 -> 19 [label="AST"];
21 -> 25 [label="Define-Use"];
21 -> 32 [label="Define-Use"];
22 -> 21 [label="AST"];
22 -> 16 [label="AST"];
22 -> 20 [label="AST"];
28 -> 24 [label="AST"];
28 -> 25 [label="AST"];
28 -> 23 [label="AST"];
28 -> 26 [label="AST"];
28 -> 27 [label="AST"];
33 -> 30 [label="AST"];
33 -> 31 [label="AST"];
33 -> 29 [label="AST"];
33 -> 32 [label="AST"];
39 -> 38 [label="AST"];
39 -> 37 [label="AST"];
39 -> 104 [label="Action"];
41 -> 36 [label="AST"];
41 -> 42 [label="AST"];
41 -> 39 [label="AST"];
41 -> 35 [label="AST"];
41 -> 40 [label="AST"];
43 -> 47 [label="Define-Use"];
44 -> 43 [label="AST"];
44 -> 34 [label="AST"];
44 -> 41 [label="AST"];
52 -> 50 [label="AST"];
52 -> 51 [label="AST"];
52 -> 49 [label="AST"];
53 -> 46 [label="AST"];
53 -> 47 [label="AST"];
53 -> 45 [label="AST"];
53 -> 48 [label="AST"];
53 -> 52 [label="AST"];
60 -> 55 [label="AST"];
60 -> 56 [label="AST"];
60 -> 54 [label="AST"];
60 -> 57 [label="AST"];
60 -> 59 [label="AST"];
67 -> 62 [label="AST"];
67 -> 63 [label="AST"];
67 -> 61 [label="AST"];
67 -> 64 [label="AST"];
67 -> 66 [label="AST"];
71 -> 76 [label="Define-Use"];
71 -> 100 [label="Define-Use"];
72 -> 71 [label="AST"];
72 -> 68 [label="AST"];
72 -> 70 [label="AST"];
79 -> 74 [label="AST"];
79 -> 75 [label="AST"];
79 -> 73 [label="AST"];
79 -> 76 [label="AST"];
79 -> 77 [label="AST"];
79 -> 78 [label="AST"];
83 -> 87 [label="Define-Use"];
83 -> 93 [label="Define-Use"];
83 -> 99 [label="Define-Use"];
84 -> 83 [label="AST"];
84 -> 80 [label="AST"];
84 -> 82 [label="AST"];
90 -> 86 [label="AST"];
90 -> 87 [label="AST"];
90 -> 85 [label="AST"];
90 -> 89 [label="AST"];
96 -> 92 [label="AST"];
96 -> 93 [label="AST"];
96 -> 91 [label="AST"];
96 -> 95 [label="AST"];
101 -> 98 [label="AST"];
101 -> 97 [label="AST"];
101 -> 99 [label="AST"];
101 -> 100 [label="AST"];
102 -> 9 [label="AST"];
102 -> 15 [label="AST"];
102 -> 22 [label="AST"];
102 -> 28 [label="AST"];
102 -> 33 [label="AST"];
102 -> 44 [label="AST"];
102 -> 53 [label="AST"];
102 -> 60 [label="AST"];
102 -> 67 [label="AST"];
102 -> 72 [label="AST"];
102 -> 79 [label="AST"];
102 -> 84 [label="AST"];
102 -> 90 [label="AST"];
102 -> 96 [label="AST"];
102 -> 101 [label="AST"];
103 -> 1 [label="AST"];
103 -> 0 [label="AST"];
103 -> 2 [label="AST"];
103 -> 102 [label="AST"];
104 -> 105 [label="Action"];
}