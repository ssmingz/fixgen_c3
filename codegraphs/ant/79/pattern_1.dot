digraph "Pattern" {
0 [label="isValid#?#3:UPDATE
initChecksum#?#6:UPDATE" shape=ellipse]
1 [label="isValid#?#3:\"ADLER\".equalsIgnoreCase(algorithm)
initChecksum#?#6:\"CRC\".equalsIgnoreCase(algorithm)" shape=ellipse]
2 [label="isValid#?#3:\"CRC\".equalsIgnoreCase(algorithm) || \"ADLER\".equalsIgnoreCase(algorithm)" shape=ellipse]
3 [label="isValid#?#3:return \"CRC\".equalsIgnoreCase(algorithm) || \"ADLER\".equalsIgnoreCase(algorithm)
initChecksum#?#8:if (\"ADLER\".equals(algorithm)) \{
    checksum = new Adler32();
\} else \{
    throw new BuildException(new NoSuchAlgorithmException());
\}" shape=ellipse]
4 [label="isValid#?#3:\"CRC\".equalsIgnoreCase(algorithm)" shape=ellipse]
5 [label="isValid#?#3:equalsIgnoreCase
initChecksum#?#6:equalsIgnoreCase" shape=ellipse]
6 [label="isValid#?#3:\"ADLER\"
initChecksum#?#6:\"CRC\"" shape=ellipse]
7 [label="isValid#?#-1:String
initChecksum#?#-1:String" shape=ellipse]
8 [label="isValid#?#3:equalsIgnoreCase(java.lang.String)
initChecksum#?#6:equalsIgnoreCase(java.lang.String)" shape=ellipse]
9 [label="isValid#?#-1:String
initChecksum#?#-1:String" shape=ellipse]
10 [label="isValid#?#-1:boolean
initChecksum#?#-1:boolean" shape=ellipse]
11 [label="isValid#?#-1:String
initChecksum#?#-1:String" shape=ellipse]
12 [label="isValid#?#3:algorithm
initChecksum#?#6:algorithm" shape=ellipse]
13 [label="isValid#?#-1:algorithm
initChecksum#?#-1:algorithm" shape=ellipse]
14 [label="isValid#?#3:\"ADLER\".equals(algorithm)" shape=ellipse]
15 [label="initChecksum#?#8:\"ADLER\".equalsIgnoreCase(algorithm)" shape=ellipse]
16 [label="initChecksum#?#-1:String" shape=ellipse]
17 [label="initChecksum#?#8:equalsIgnoreCase(java.lang.String)" shape=ellipse]
18 [label="initChecksum#?#9:new Adler32()" shape=ellipse]
19 [label="initChecksum#?#6:if (\"CRC\".equalsIgnoreCase(algorithm)) \{
    checksum = new CRC32();
\} else if (\"ADLER\".equalsIgnoreCase(algorithm)) \{
    checksum = new Adler32();
\} else \{
    throw new BuildException(new NoSuchAlgorithmException());
\}" shape=ellipse]
20 [label="initChecksum#?#8:if (\"ADLER\".equalsIgnoreCase(algorithm)) \{
    checksum = new Adler32();
\} else \{
    throw new BuildException(new NoSuchAlgorithmException());
\}" shape=ellipse]
21 [label="initChecksum#?#8:
    if (\"ADLER\".equalsIgnoreCase(algorithm)) \{
        checksum = new Adler32();
    \} else \{
        throw new BuildException(new NoSuchAlgorithmException());
    \}
" shape=ellipse]
22 [label="initChecksum#?#8:
    if (\"ADLER\".equals(algorithm)) \{
        checksum = new Adler32();
    \} else \{
        throw new BuildException(new NoSuchAlgorithmException());
    \}
" shape=ellipse]
23 [label="initChecksum#?#7:checksum = new CRC32()" shape=ellipse]
24 [label="initChecksum#?#-1:NoSuchAlgorithmException()" shape=ellipse]
25 [label="initChecksum#?#7:new CRC32()" shape=ellipse]
26 [label="initChecksum#?#8:UPDATE" shape=ellipse]
27 [label="initChecksum#?#11:new BuildException(new NoSuchAlgorithmException())" shape=ellipse]
28 [label="initChecksum#?#-1:String" shape=ellipse]
29 [label="initChecksum#?#8:\"ADLER\"" shape=ellipse]
30 [label="initChecksum#?#6:\{
    checksum = new CRC32();
\}" shape=ellipse]
31 [label="initChecksum#?#-1:CRC32()" shape=ellipse]
32 [label="initChecksum#?#8:\"ADLER\".equals(algorithm)" shape=ellipse]
33 [label="initChecksum#?#-1:algorithm" shape=ellipse]
34 [label="initChecksum#?#8:equals(java.lang.Object)" shape=ellipse]
35 [label="initChecksum#?#-1:Adler32()" shape=ellipse]
36 [label="initChecksum#?#-1:String" shape=ellipse]
37 [label="initChecksum#?#9:checksum" shape=ellipse]
38 [label="initChecksum#?#-1:boolean" shape=ellipse]
39 [label="initChecksum#?#-1:CRC32" shape=ellipse]
40 [label="initChecksum#?#8:algorithm" shape=ellipse]
41 [label="initChecksum#?#7:CRC32" shape=ellipse]
42 [label="initChecksum#?#9:checksum = new Adler32()" shape=ellipse]
43 [label="initChecksum#?#11:new NoSuchAlgorithmException()" shape=ellipse]
44 [label="initChecksum#?#-1:CRC32()" shape=ellipse]
45 [label="initChecksum#?#11:throw new BuildException(new NoSuchAlgorithmException())" shape=ellipse]
46 [label="initChecksum#?#10:\{
    throw new BuildException(new NoSuchAlgorithmException());
\}" shape=ellipse]
47 [label="initChecksum#?#6:\"CRC\".equals(algorithm)" shape=ellipse]
48 [label="initChecksum#?#-1:BuildException()" shape=ellipse]
49 [label="initChecksum#?#2:\{
    if (checksum != null) \{
        return;
    \}
    if (\"CRC\".equalsIgnoreCase(algorithm)) \{
        checksum = new CRC32();
    \} else if (\"ADLER\".equalsIgnoreCase(algorithm)) \{
        checksum = new Adler32();
    \} else \{
        throw new BuildException(new NoSuchAlgorithmException());
    \}
\}" shape=ellipse]
50 [label="initChecksum#?#7:checksum" shape=ellipse]
51 [label="initChecksum#?#8:\{
    checksum = new Adler32();
\}" shape=ellipse]
0 -> 14 [label="Action:1"];
0 -> 47 [label="Action:1"];
1 -> 0 [label="Action:2"];
1 -> 5 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 12 [label="AST:2"];
1 -> 15 [label="Control Dep:1"];
1 -> 17 [label="Control Dep:1"];
1 -> 20 [label="Control Dep:1"];
1 -> 21 [label="Control Dep:1"];
1 -> 23 [label="Control Dep:1"];
1 -> 25 [label="Control Dep:1"];
1 -> 29 [label="Control Dep:1"];
1 -> 30 [label="Control Dep:1"];
1 -> 40 [label="Control Dep:1"];
1 -> 44 [label="Control Dep:1"];
1 -> 50 [label="Control Dep:1"];
2 -> 1 [label="AST:1"];
2 -> 4 [label="AST:1"];
3 -> 2 [label="AST:1"];
3 -> 32 [label="AST:1"];
6 -> 7 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 10 [label="AST:2"];
8 -> 11 [label="AST:2"];
12 -> 13 [label="AST:2"];
15 -> 29 [label="AST:1"];
15 -> 17 [label="AST:1"];
15 -> 40 [label="AST:1"];
15 -> 51 [label="Control Dep:1"];
15 -> 46 [label="Control Dep:1"];
15 -> 26 [label="Action:1"];
17 -> 16 [label="AST:1"];
17 -> 28 [label="AST:1"];
17 -> 38 [label="AST:1"];
18 -> 35 [label="AST:1"];
19 -> 1 [label="AST:1"];
19 -> 30 [label="AST:1"];
19 -> 21 [label="AST:1"];
20 -> 15 [label="AST:1"];
20 -> 51 [label="AST:1"];
20 -> 46 [label="AST:1"];
21 -> 20 [label="AST:1"];
22 -> 3 [label="AST:1"];
23 -> 50 [label="AST:1"];
23 -> 25 [label="AST:1"];
25 -> 44 [label="AST:1"];
26 -> 32 [label="Action:1"];
27 -> 48 [label="AST:1"];
27 -> 43 [label="AST:1"];
29 -> 36 [label="AST:1"];
30 -> 23 [label="AST:1"];
32 -> 18 [label="Control Dep:1"];
32 -> 24 [label="Control Dep:1"];
32 -> 27 [label="Control Dep:1"];
32 -> 34 [label="AST:1"];
32 -> 42 [label="Control Dep:1"];
32 -> 37 [label="Control Dep:1"];
32 -> 35 [label="Control Dep:1"];
32 -> 45 [label="Control Dep:1"];
32 -> 48 [label="Control Dep:1"];
32 -> 43 [label="Control Dep:1"];
40 -> 33 [label="AST:1"];
42 -> 18 [label="AST:1"];
42 -> 37 [label="AST:1"];
43 -> 24 [label="AST:1"];
44 -> 39 [label="AST:1"];
44 -> 41 [label="AST:1"];
45 -> 27 [label="AST:1"];
47 -> 22 [label="Control Dep:1"];
47 -> 31 [label="Control Dep:1"];
47 -> 32 [label="Control Dep:1"];
47 -> 34 [label="Control Dep:1"];
47 -> 3 [label="Control Dep:1"];
49 -> 19 [label="AST:1"];
}