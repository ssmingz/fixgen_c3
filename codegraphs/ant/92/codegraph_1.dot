digraph "execute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@execute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@TaskException" shape=ellipse]
3 [label="3:CtFieldReadImpl@defaultSetDefined" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@getDir()" shape=ellipse]
5 [label="3:CtVirtualElement@getDir" shape=ellipse]
6 [label="3:CtFieldReadImpl@defaultSet" shape=ellipse]
7 [label="3:CtExecutableReferenceImpl@getProject()" shape=ellipse]
8 [label="3:CtVirtualElement@getProject" shape=ellipse]
9 [label="3:CtInvocationImpl@getProject()" shape=ellipse]
10 [label="3:CtInvocationImpl@defaultSet.getDir(getProject())" shape=ellipse]
11 [label="3:CtLiteralImpl@null" shape=ellipse]
12 [label="3:CtBinaryOperatorImpl@(defaultSet.getDir(getProject()) == null)" shape=ellipse]
13 [label="3:CtBinaryOperatorImpl@defaultSetDefined || (defaultSet.getDir(getProject()) == null)" shape=ellipse]
14 [label="4:CtExecutableReferenceImpl@execute()" shape=ellipse]
15 [label="4:CtVirtualElement@execute" shape=ellipse]
16 [label="4:CtSuperAccessImpl@super" shape=ellipse]
17 [label="4:CtInvocationImpl@super.execute()" shape=ellipse]
18 [label="3:CtBlockImpl@\{
    super.execute();
\}" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@isValidOs()" shape=ellipse]
20 [label="5:CtVirtualElement@isValidOs" shape=ellipse]
21 [label="5:CtInvocationImpl@isValidOs()" shape=ellipse]
22 [label="6:CtExecutableReferenceImpl@setValue()" shape=ellipse]
23 [label="6:CtVirtualElement@setValue" shape=ellipse]
24 [label="6:CtExecutableReferenceImpl@createArg()" shape=ellipse]
25 [label="6:CtVirtualElement@createArg" shape=ellipse]
26 [label="6:CtInvocationImpl@createArg()" shape=ellipse]
27 [label="6:CtExecutableReferenceImpl@getPath()" shape=ellipse]
28 [label="6:CtVirtualElement@getPath" shape=ellipse]
29 [label="6:CtExecutableReferenceImpl@getDir()" shape=ellipse]
30 [label="6:CtVirtualElement@getDir" shape=ellipse]
31 [label="6:CtFieldReadImpl@defaultSet" shape=ellipse]
32 [label="6:CtExecutableReferenceImpl@getProject()" shape=ellipse]
33 [label="6:CtVirtualElement@getProject" shape=ellipse]
34 [label="6:CtInvocationImpl@getProject()" shape=ellipse]
35 [label="6:CtInvocationImpl@defaultSet.getDir(getProject())" shape=ellipse]
36 [label="6:CtInvocationImpl@defaultSet.getDir(getProject()).getPath()" shape=ellipse]
37 [label="6:CtInvocationImpl@createArg().setValue(defaultSet.getDir(getProject()).getPath())" shape=ellipse]
38 [label="7:CtTypeReferenceImpl@Execute" shape=ellipse]
39 [label="7:CtExecutableReferenceImpl@prepareExec()" shape=ellipse]
40 [label="7:CtVirtualElement@prepareExec" shape=ellipse]
41 [label="7:CtInvocationImpl@prepareExec()" shape=ellipse]
42 [label="7:CtVirtualElement@execute" shape=ellipse]
43 [label="7:CtLocalVariableImpl@Execute execute = prepareExec()" shape=ellipse]
44 [label="9:CtExecutableReferenceImpl@setCommandline()" shape=ellipse]
45 [label="9:CtVirtualElement@setCommandline" shape=ellipse]
46 [label="9:CtVariableReadImpl@execute" shape=ellipse]
47 [label="9:CtExecutableReferenceImpl@getCommandline()" shape=ellipse]
48 [label="9:CtVirtualElement@getCommandline" shape=ellipse]
49 [label="9:CtFieldReadImpl@cmdl" shape=ellipse]
50 [label="9:CtInvocationImpl@cmdl.getCommandline()" shape=ellipse]
51 [label="9:CtInvocationImpl@execute.setCommandline(cmdl.getCommandline())" shape=ellipse]
52 [label="10:CtExecutableReferenceImpl@runExecute(<unknown>)" shape=ellipse]
53 [label="10:CtVirtualElement@runExecute" shape=ellipse]
54 [label="10:CtVariableReadImpl@execute" shape=ellipse]
55 [label="10:CtInvocationImpl@runExecute(execute)" shape=ellipse]
56 [label="8:CtBlockImpl@\{
    execute.setCommandline(cmdl.getCommandline());
    runExecute(execute);
\}" shape=ellipse]
57 [label="11:CtVirtualElement@e" shape=ellipse]
58 [label="11:CtTypeReferenceImpl@IOException" shape=ellipse]
59 [label="11:CtCatchVariableImpl@IOException e" shape=ellipse]
60 [label="12:CtTypeReferenceImpl@TaskException" shape=ellipse]
61 [label="12:CtLiteralImpl@\"Execute failed: \"" shape=ellipse]
62 [label="12:CtVariableReadImpl@e" shape=ellipse]
63 [label="12:CtBinaryOperatorImpl@\"Execute failed: \" + e" shape=ellipse]
64 [label="12:CtVariableReadImpl@e" shape=ellipse]
65 [label="12:CtConstructorCallImpl@new TaskException(\"Execute failed: \" + e, e)" shape=ellipse]
66 [label="12:CtThrowImpl@throw new TaskException(\"Execute failed: \" + e, e)" shape=ellipse]
67 [label="11:CtBlockImpl@\{
    throw new TaskException(\"Execute failed: \" + e, e);
\}" shape=ellipse]
68 [label="11:CtCatchImpl@ catch (IOException e) \{
    throw new TaskException(\"Execute failed: \" + e, e);
\}" shape=ellipse]
69 [label="14:CtExecutableReferenceImpl@logFlush()" shape=ellipse]
70 [label="14:CtVirtualElement@logFlush" shape=ellipse]
71 [label="14:CtInvocationImpl@logFlush()" shape=ellipse]
72 [label="13:CtBlockImpl@\{
    logFlush();
\}" shape=ellipse]
73 [label="8:CtTryImpl@try \{
    execute.setCommandline(cmdl.getCommandline());
    runExecute(execute);
\} catch (IOException e) \{
    throw new TaskException(\"Execute failed: \" + e, e);
\} finally \{
    logFlush();
\}" shape=ellipse]
74 [label="5:CtBlockImpl@\{
    createArg().setValue(defaultSet.getDir(getProject()).getPath());
    Execute execute = prepareExec();
    try \{
        execute.setCommandline(cmdl.getCommandline());
        runExecute(execute);
    \} catch (IOException e) \{
        throw new TaskException(\"Execute failed: \" + e, e);
    \} finally \{
        logFlush();
    \}
\}" shape=ellipse]
75 [label="5:CtIfImpl@if (isValidOs()) \{
    createArg().setValue(defaultSet.getDir(getProject()).getPath());
    Execute execute = prepareExec();
    try \{
        execute.setCommandline(cmdl.getCommandline());
        runExecute(execute);
    \} catch (IOException e) \{
        throw new TaskException(\"Execute failed: \" + e, e);
    \} finally \{
        logFlush();
    \}
\}" shape=ellipse]
76 [label="5:CtBlockImpl@
    if (isValidOs()) \{
        createArg().setValue(defaultSet.getDir(getProject()).getPath());
        Execute execute = prepareExec();
        try \{
            execute.setCommandline(cmdl.getCommandline());
            runExecute(execute);
        \} catch (IOException e) \{
            throw new TaskException(\"Execute failed: \" + e, e);
        \} finally \{
            logFlush();
        \}
    \}
" shape=ellipse]
77 [label="3:CtIfImpl@if (defaultSetDefined || (defaultSet.getDir(getProject()) == null)) \{
    super.execute();
\} else if (isValidOs()) \{
    createArg().setValue(defaultSet.getDir(getProject()).getPath());
    Execute execute = prepareExec();
    try \{
        execute.setCommandline(cmdl.getCommandline());
        runExecute(execute);
    \} catch (IOException e) \{
        throw new TaskException(\"Execute failed: \" + e, e);
    \} finally \{
        logFlush();
    \}
\}" shape=ellipse]
78 [label="2:CtBlockImpl@\{
    if (defaultSetDefined || (defaultSet.getDir(getProject()) == null)) \{
        super.execute();
    \} else if (isValidOs()) \{
        createArg().setValue(defaultSet.getDir(getProject()).getPath());
        Execute execute = prepareExec();
        try \{
            execute.setCommandline(cmdl.getCommandline());
            runExecute(execute);
        \} catch (IOException e) \{
            throw new TaskException(\"Execute failed: \" + e, e);
        \} finally \{
            logFlush();
        \}
    \}
\}" shape=ellipse]
79 [label="2:CtMethodImpl@public void execute() throws TaskException \{
    if (defaultSetDefined || (defaultSet.getDir(getProject()) == null)) \{
        super.execute();
    \} else if (isValidOs()) \{
        createArg().setValue(defaultSet.getDir(getProject()).getPath());
        Execute execute = prepareExec();
        try \{
            execute.setCommandline(cmdl.getCommandline());
            runExecute(execute);
        \} catch (IOException e) \{
            throw new TaskException(\"Execute failed: \" + e, e);
        \} finally \{
            logFlush();
        \}
    \}
\}" shape=ellipse]
80 [label="9:Delete@DELETE" shape=ellipse]
81 [label="9:Insert@INSERT" shape=ellipse]
82 [label="9:CtInvocationImpl@getCommand()" shape=ellipse]
9 -> 8 [label="AST"];
9 -> 7 [label="AST"];
10 -> 5 [label="AST"];
10 -> 6 [label="AST"];
10 -> 4 [label="AST"];
10 -> 9 [label="AST"];
12 -> 10 [label="AST"];
12 -> 11 [label="AST"];
13 -> 3 [label="AST"];
13 -> 12 [label="AST"];
13 -> 18 [label="Control Dep"];
13 -> 17 [label="Control Dep"];
13 -> 14 [label="Control Dep"];
13 -> 16 [label="Control Dep"];
13 -> 76 [label="Control Dep"];
13 -> 75 [label="Control Dep"];
13 -> 21 [label="Control Dep"];
13 -> 19 [label="Control Dep"];
17 -> 15 [label="AST"];
17 -> 16 [label="AST"];
17 -> 14 [label="AST"];
18 -> 17 [label="AST"];
21 -> 20 [label="AST"];
21 -> 19 [label="AST"];
21 -> 74 [label="Control Dep"];
21 -> 37 [label="Control Dep"];
21 -> 22 [label="Control Dep"];
21 -> 26 [label="Control Dep"];
21 -> 24 [label="Control Dep"];
21 -> 36 [label="Control Dep"];
21 -> 27 [label="Control Dep"];
21 -> 35 [label="Control Dep"];
21 -> 29 [label="Control Dep"];
21 -> 31 [label="Control Dep"];
21 -> 34 [label="Control Dep"];
21 -> 32 [label="Control Dep"];
21 -> 43 [label="Control Dep"];
21 -> 41 [label="Control Dep"];
21 -> 39 [label="Control Dep"];
21 -> 73 [label="Control Dep"];
21 -> 56 [label="Control Dep"];
21 -> 51 [label="Control Dep"];
21 -> 44 [label="Control Dep"];
21 -> 46 [label="Control Dep"];
21 -> 50 [label="Control Dep"];
21 -> 47 [label="Control Dep"];
21 -> 49 [label="Control Dep"];
21 -> 55 [label="Control Dep"];
21 -> 52 [label="Control Dep"];
21 -> 54 [label="Control Dep"];
21 -> 68 [label="Control Dep"];
21 -> 59 [label="Control Dep"];
21 -> 72 [label="Control Dep"];
21 -> 71 [label="Control Dep"];
21 -> 69 [label="Control Dep"];
26 -> 25 [label="AST"];
26 -> 24 [label="AST"];
34 -> 33 [label="AST"];
34 -> 32 [label="AST"];
35 -> 30 [label="AST"];
35 -> 31 [label="AST"];
35 -> 29 [label="AST"];
35 -> 34 [label="AST"];
36 -> 28 [label="AST"];
36 -> 35 [label="AST"];
36 -> 27 [label="AST"];
37 -> 23 [label="AST"];
37 -> 26 [label="AST"];
37 -> 22 [label="AST"];
37 -> 36 [label="AST"];
41 -> 40 [label="AST"];
41 -> 39 [label="AST"];
42 -> 46 [label="Define-Use"];
42 -> 54 [label="Define-Use"];
43 -> 42 [label="AST"];
43 -> 38 [label="AST"];
43 -> 41 [label="AST"];
49 -> 80 [label="Action"];
50 -> 48 [label="AST"];
50 -> 49 [label="AST"];
50 -> 47 [label="AST"];
50 -> 81 [label="Action"];
51 -> 45 [label="AST"];
51 -> 46 [label="AST"];
51 -> 44 [label="AST"];
51 -> 50 [label="AST"];
55 -> 53 [label="AST"];
55 -> 52 [label="AST"];
55 -> 54 [label="AST"];
56 -> 51 [label="AST"];
56 -> 55 [label="AST"];
57 -> 62 [label="Define-Use"];
57 -> 64 [label="Define-Use"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
59 -> 67 [label="Control Dep"];
59 -> 66 [label="Control Dep"];
59 -> 65 [label="Control Dep"];
59 -> 63 [label="Control Dep"];
59 -> 61 [label="Control Dep"];
59 -> 62 [label="Control Dep"];
59 -> 64 [label="Control Dep"];
63 -> 61 [label="AST"];
63 -> 62 [label="AST"];
65 -> 63 [label="AST"];
65 -> 64 [label="AST"];
66 -> 65 [label="AST"];
67 -> 66 [label="AST"];
68 -> 59 [label="AST"];
68 -> 67 [label="AST"];
71 -> 70 [label="AST"];
71 -> 69 [label="AST"];
72 -> 71 [label="AST"];
73 -> 56 [label="AST"];
73 -> 68 [label="AST"];
73 -> 72 [label="AST"];
74 -> 37 [label="AST"];
74 -> 43 [label="AST"];
74 -> 73 [label="AST"];
75 -> 21 [label="AST"];
75 -> 74 [label="AST"];
76 -> 75 [label="AST"];
77 -> 13 [label="AST"];
77 -> 18 [label="AST"];
77 -> 76 [label="AST"];
78 -> 77 [label="AST"];
79 -> 1 [label="AST"];
79 -> 0 [label="AST"];
79 -> 2 [label="AST"];
79 -> 78 [label="AST"];
81 -> 82 [label="Action"];
}