digraph "Pattern" {
0 [label="taskStarted#?,BuildEvent#9:DELETE
messageLogged#?,BuildEvent#7:DELETE" shape=ellipse]
1 [label="taskStarted#?,BuildEvent#9:if (pos != (-1)) \{
    name = name.substring(pos + 1);
\}
messageLogged#?,BuildEvent#7:if (pos != (-1)) \{
    name = name.substring(pos + 1);
\}" shape=ellipse]
2 [label="taskStarted#?,BuildEvent#2:\{
    Task task = event.getTask();
    TimedElement taskElement = new TimedElement();
    taskElement.startTime = System.currentTimeMillis();
    taskElement.element = doc.createElement(TASK_TAG);
    String name = task.getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    taskElement.element.setAttribute(NAME_ATTR, name);
    taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString());
    tasks.put(task, taskElement);
    getStack().push(taskElement);
\}
messageLogged#?,BuildEvent#4:\{
    String name = event.getTask().getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    String msg = (\"[\" + name) + \"] \";
    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
        out.print(\" \");
    \}
    out.print(msg);
\}" shape=ellipse]
3 [label="taskStarted#?,BuildEvent#2:public void taskStarted(BuildEvent event) \{
    Task task = event.getTask();
    TimedElement taskElement = new TimedElement();
    taskElement.startTime = System.currentTimeMillis();
    taskElement.element = doc.createElement(TASK_TAG);
    String name = task.getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    taskElement.element.setAttribute(NAME_ATTR, name);
    taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString());
    tasks.put(task, taskElement);
    getStack().push(taskElement);
\}" shape=ellipse]
4 [label="taskStarted#?,BuildEvent#3:Task task = event.getTask()
messageLogged#?,BuildEvent#5:String name = event.getTask().getClass().getName()" shape=ellipse]
5 [label="taskStarted#?,BuildEvent#4:TimedElement taskElement = new TimedElement()
messageLogged#?,BuildEvent#6:int pos = name.lastIndexOf(\".\")" shape=ellipse]
6 [label="taskStarted#?,BuildEvent#5:taskElement.startTime = System.currentTimeMillis()
messageLogged#?,BuildEvent#10:String msg = (\"[\" + name) + \"] \"" shape=ellipse]
7 [label="taskStarted#?,BuildEvent#6:taskElement.element = doc.createElement(TASK_TAG)" shape=ellipse]
8 [label="taskStarted#?,BuildEvent#7:String name = task.getClass().getName()" shape=ellipse]
9 [label="taskStarted#?,BuildEvent#8:int pos = name.lastIndexOf(\".\")" shape=ellipse]
10 [label="taskStarted#?,BuildEvent#12:taskElement.element.setAttribute(NAME_ATTR, name)
messageLogged#?,BuildEvent#14:out.print(msg)" shape=ellipse]
11 [label="taskStarted#?,BuildEvent#13:taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString())" shape=ellipse]
12 [label="taskStarted#?,BuildEvent#14:tasks.put(task, taskElement)" shape=ellipse]
13 [label="taskStarted#?,BuildEvent#15:getStack().push(taskElement)" shape=ellipse]
14 [label="taskStarted#?,BuildEvent#9:pos != (-1)
messageLogged#?,BuildEvent#7:pos != (-1)" shape=ellipse]
15 [label="taskStarted#?,BuildEvent#-1:boolean" shape=ellipse]
16 [label="taskStarted#?,BuildEvent#9:pos" shape=ellipse]
17 [label="taskStarted#?,BuildEvent#9:(-1)
messageLogged#?,BuildEvent#7:(-1)" shape=ellipse]
18 [label="taskStarted#?,BuildEvent#9:\{
    name = name.substring(pos + 1);
\}
messageLogged#?,BuildEvent#7:\{
    name = name.substring(pos + 1);
\}" shape=ellipse]
19 [label="taskStarted#?,BuildEvent#10:name = name.substring(pos + 1)
messageLogged#?,BuildEvent#8:name = name.substring(pos + 1)" shape=ellipse]
20 [label="taskStarted#?,BuildEvent#10:name" shape=ellipse]
21 [label="taskStarted#?,BuildEvent#10:name.substring(pos + 1)" shape=ellipse]
22 [label="taskStarted#?,BuildEvent#10:substring(int)" shape=ellipse]
23 [label="taskStarted#?,BuildEvent#10:name" shape=ellipse]
24 [label="taskStarted#?,BuildEvent#10:pos + 1" shape=ellipse]
25 [label="taskStarted#?,BuildEvent#10:pos" shape=ellipse]
26 [label="taskStarted#?,BuildEvent#10:1" shape=ellipse]
27 [label="messageLogged#?,BuildEvent#11:(LEFT_COLUMN_SIZE - msg.length())" shape=ellipse]
28 [label="messageLogged#?,BuildEvent#5:event.getTask()" shape=ellipse]
29 [label="messageLogged#?,BuildEvent#10:\"[\"" shape=ellipse]
30 [label="messageLogged#?,BuildEvent#11:i < (LEFT_COLUMN_SIZE - msg.length())" shape=ellipse]
31 [label="messageLogged#?,BuildEvent#11:for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
    out.print(\" \");
\}" shape=ellipse]
32 [label="messageLogged#?,BuildEvent#11:length()" shape=ellipse]
33 [label="messageLogged#?,BuildEvent#11:0" shape=ellipse]
34 [label="messageLogged#?,BuildEvent#10:name" shape=ellipse]
35 [label="messageLogged#?,BuildEvent#10:(\"[\" + name) + \"] \"" shape=ellipse]
36 [label="messageLogged#?,BuildEvent#11:i" shape=ellipse]
37 [label="messageLogged#?,BuildEvent#5:getTask()" shape=ellipse]
38 [label="messageLogged#?,BuildEvent#4:event.getTask()" shape=ellipse]
39 [label="messageLogged#?,BuildEvent#5:getName()" shape=ellipse]
40 [label="messageLogged#?,BuildEvent#11:msg.length()" shape=ellipse]
41 [label="messageLogged#?,BuildEvent#10:\"] \"" shape=ellipse]
42 [label="messageLogged#?,BuildEvent#7:pos" shape=ellipse]
43 [label="messageLogged#?,BuildEvent#7:1" shape=ellipse]
44 [label="messageLogged#?,BuildEvent#5:event" shape=ellipse]
45 [label="messageLogged#?,BuildEvent#11:int i = 0" shape=ellipse]
46 [label="messageLogged#?,BuildEvent#6:name" shape=ellipse]
47 [label="messageLogged#?,BuildEvent#6:\".\"" shape=ellipse]
48 [label="messageLogged#?,BuildEvent#14:print(java.lang.String)" shape=ellipse]
49 [label="messageLogged#?,BuildEvent#4:event.getTask() != null" shape=ellipse]
50 [label="messageLogged#?,BuildEvent#11:i++" shape=ellipse]
51 [label="messageLogged#?,BuildEvent#4:null" shape=ellipse]
52 [label="messageLogged#?,BuildEvent#3:event.getPriority() <= msgOutputLevel" shape=ellipse]
53 [label="messageLogged#?,BuildEvent#5:getClass()" shape=ellipse]
54 [label="messageLogged#?,BuildEvent#14:msg" shape=ellipse]
55 [label="messageLogged#?,BuildEvent#11:msg" shape=ellipse]
56 [label="messageLogged#?,BuildEvent#10:(\"[\" + name)" shape=ellipse]
57 [label="messageLogged#?,BuildEvent#4:if (event.getTask() != null) \{
    String name = event.getTask().getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    String msg = (\"[\" + name) + \"] \";
    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
        out.print(\" \");
    \}
    out.print(msg);
\}" shape=ellipse]
58 [label="messageLogged#?,BuildEvent#5:event.getTask().getClass()" shape=ellipse]
59 [label="messageLogged#?,BuildEvent#6:name.lastIndexOf(\".\")" shape=ellipse]
60 [label="messageLogged#?,BuildEvent#11:LEFT_COLUMN_SIZE" shape=ellipse]
61 [label="messageLogged#?,BuildEvent#11:i" shape=ellipse]
62 [label="messageLogged#?,BuildEvent#14:out" shape=ellipse]
63 [label="messageLogged#?,BuildEvent#6:lastIndexOf(java.lang.String)" shape=ellipse]
64 [label="messageLogged#?,BuildEvent#5:event.getTask().getClass().getName()" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 14 [label="AST:2"];
1 -> 18 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:1"];
2 -> 8 [label="AST:1"];
2 -> 9 [label="AST:1"];
2 -> 10 [label="AST:2"];
2 -> 11 [label="AST:1"];
2 -> 12 [label="AST:1"];
2 -> 13 [label="AST:1"];
2 -> 31 [label="AST:1"];
3 -> 2 [label="AST:1"];
4 -> 64 [label="AST:1"];
5 -> 59 [label="AST:1"];
6 -> 35 [label="AST:1"];
10 -> 48 [label="AST:1"];
10 -> 54 [label="AST:1"];
10 -> 62 [label="AST:1"];
14 -> 15 [label="AST:1"];
14 -> 16 [label="AST:1"];
14 -> 17 [label="AST:2"];
14 -> 18 [label="Control Dep:2"];
14 -> 19 [label="Control Dep:2"];
14 -> 20 [label="Control Dep:1"];
14 -> 21 [label="Control Dep:1"];
14 -> 22 [label="Control Dep:1"];
14 -> 23 [label="Control Dep:1"];
14 -> 24 [label="Control Dep:1"];
14 -> 25 [label="Control Dep:1"];
14 -> 26 [label="Control Dep:1"];
14 -> 42 [label="AST:1"];
17 -> 43 [label="AST:1"];
18 -> 19 [label="AST:2"];
19 -> 20 [label="AST:1"];
19 -> 21 [label="AST:1"];
21 -> 23 [label="AST:1"];
21 -> 22 [label="AST:1"];
21 -> 24 [label="AST:1"];
23 -> 20 [label="Data Dep:1"];
24 -> 25 [label="AST:1"];
24 -> 26 [label="AST:1"];
25 -> 20 [label="Data Dep:1"];
27 -> 60 [label="AST:1"];
27 -> 40 [label="AST:1"];
28 -> 44 [label="AST:1"];
28 -> 37 [label="AST:1"];
30 -> 27 [label="AST:1"];
30 -> 36 [label="AST:1"];
31 -> 30 [label="AST:1"];
31 -> 45 [label="AST:1"];
31 -> 50 [label="AST:1"];
35 -> 56 [label="AST:1"];
35 -> 41 [label="AST:1"];
40 -> 32 [label="AST:1"];
40 -> 55 [label="AST:1"];
45 -> 33 [label="AST:1"];
49 -> 27 [label="Control Dep:1"];
49 -> 28 [label="Control Dep:1"];
49 -> 29 [label="Control Dep:1"];
49 -> 30 [label="Control Dep:1"];
49 -> 31 [label="Control Dep:1"];
49 -> 32 [label="Control Dep:1"];
49 -> 33 [label="Control Dep:1"];
49 -> 34 [label="Control Dep:1"];
49 -> 35 [label="Control Dep:1"];
49 -> 36 [label="Control Dep:1"];
49 -> 37 [label="Control Dep:1"];
49 -> 38 [label="AST:1"];
49 -> 39 [label="Control Dep:1"];
49 -> 40 [label="Control Dep:1"];
49 -> 41 [label="Control Dep:1"];
49 -> 42 [label="Control Dep:1"];
49 -> 43 [label="Control Dep:1"];
49 -> 44 [label="Control Dep:1"];
49 -> 45 [label="Control Dep:1"];
49 -> 46 [label="Control Dep:1"];
49 -> 47 [label="Control Dep:1"];
49 -> 48 [label="Control Dep:1"];
49 -> 51 [label="AST:1"];
49 -> 2 [label="Control Dep:1"];
49 -> 4 [label="Control Dep:1"];
49 -> 64 [label="Control Dep:1"];
49 -> 58 [label="Control Dep:1"];
49 -> 53 [label="Control Dep:1"];
49 -> 5 [label="Control Dep:1"];
49 -> 59 [label="Control Dep:1"];
49 -> 63 [label="Control Dep:1"];
49 -> 1 [label="Control Dep:1"];
49 -> 14 [label="Control Dep:1"];
49 -> 17 [label="Control Dep:1"];
49 -> 6 [label="Control Dep:1"];
49 -> 56 [label="Control Dep:1"];
49 -> 60 [label="Control Dep:1"];
49 -> 55 [label="Control Dep:1"];
49 -> 50 [label="Control Dep:1"];
49 -> 61 [label="Control Dep:1"];
49 -> 10 [label="Control Dep:1"];
49 -> 62 [label="Control Dep:1"];
49 -> 54 [label="Control Dep:1"];
50 -> 61 [label="AST:1"];
52 -> 38 [label="Control Dep:1"];
52 -> 49 [label="Control Dep:1"];
52 -> 51 [label="Control Dep:1"];
52 -> 57 [label="Control Dep:1"];
56 -> 29 [label="AST:1"];
56 -> 34 [label="AST:1"];
57 -> 49 [label="AST:1"];
57 -> 2 [label="AST:1"];
58 -> 28 [label="AST:1"];
58 -> 53 [label="AST:1"];
59 -> 46 [label="AST:1"];
59 -> 47 [label="AST:1"];
59 -> 63 [label="AST:1"];
64 -> 39 [label="AST:1"];
64 -> 58 [label="AST:1"];
}