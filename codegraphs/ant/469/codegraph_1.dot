digraph "messageLogged#?,BuildEvent" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@messageLogged" shape=ellipse]
2 [label="2:CtParameterImpl@BuildEvent event" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@BuildEvent" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@getPriority()" shape=ellipse]
5 [label="3:CtVirtualElement@getPriority" shape=ellipse]
6 [label="3:CtVariableReadImpl@event" shape=ellipse]
7 [label="3:CtInvocationImpl@event.getPriority()" shape=ellipse]
8 [label="3:CtFieldReadImpl@msgOutputLevel" shape=ellipse]
9 [label="3:CtBinaryOperatorImpl@event.getPriority() <= msgOutputLevel" shape=ellipse]
10 [label="4:CtExecutableReferenceImpl@getTask()" shape=ellipse]
11 [label="4:CtVirtualElement@getTask" shape=ellipse]
12 [label="4:CtVariableReadImpl@event" shape=ellipse]
13 [label="4:CtInvocationImpl@event.getTask()" shape=ellipse]
14 [label="4:CtLiteralImpl@null" shape=ellipse]
15 [label="4:CtBinaryOperatorImpl@event.getTask() != null" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
17 [label="5:CtExecutableReferenceImpl@getName()" shape=ellipse]
18 [label="5:CtVirtualElement@getName" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@getClass()" shape=ellipse]
20 [label="5:CtVirtualElement@getClass" shape=ellipse]
21 [label="5:CtExecutableReferenceImpl@getTask()" shape=ellipse]
22 [label="5:CtVirtualElement@getTask" shape=ellipse]
23 [label="5:CtVariableReadImpl@event" shape=ellipse]
24 [label="5:CtInvocationImpl@event.getTask()" shape=ellipse]
25 [label="5:CtInvocationImpl@event.getTask().getClass()" shape=ellipse]
26 [label="5:CtInvocationImpl@event.getTask().getClass().getName()" shape=ellipse]
27 [label="5:CtVirtualElement@name" shape=ellipse]
28 [label="5:CtLocalVariableImpl@String name = event.getTask().getClass().getName()" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
30 [label="6:CtExecutableReferenceImpl@lastIndexOf(java.lang.String)" shape=ellipse]
31 [label="6:CtVirtualElement@lastIndexOf" shape=ellipse]
32 [label="6:CtVariableReadImpl@name" shape=ellipse]
33 [label="6:CtLiteralImpl@\".\"" shape=ellipse]
34 [label="6:CtInvocationImpl@name.lastIndexOf(\".\")" shape=ellipse]
35 [label="6:CtVirtualElement@pos" shape=ellipse]
36 [label="6:CtLocalVariableImpl@int pos = name.lastIndexOf(\".\")" shape=ellipse]
37 [label="7:CtVariableReadImpl@pos" shape=ellipse]
38 [label="7:CtLiteralImpl@1" shape=ellipse]
39 [label="7:CtUnaryOperatorImpl@(-1)" shape=ellipse]
40 [label="7:CtBinaryOperatorImpl@pos != (-1)" shape=ellipse]
41 [label="8:CtVariableWriteImpl@name" shape=ellipse]
42 [label="8:CtExecutableReferenceImpl@substring(int)" shape=ellipse]
43 [label="8:CtVirtualElement@substring" shape=ellipse]
44 [label="8:CtVariableReadImpl@name" shape=ellipse]
45 [label="8:CtVariableReadImpl@pos" shape=ellipse]
46 [label="8:CtLiteralImpl@1" shape=ellipse]
47 [label="8:CtBinaryOperatorImpl@pos + 1" shape=ellipse]
48 [label="8:CtInvocationImpl@name.substring(pos + 1)" shape=ellipse]
49 [label="8:CtAssignmentImpl@name = name.substring(pos + 1)" shape=ellipse]
50 [label="7:CtBlockImpl@\{
    name = name.substring(pos + 1);
\}" shape=ellipse]
51 [label="7:CtIfImpl@if (pos != (-1)) \{
    name = name.substring(pos + 1);
\}" shape=ellipse]
52 [label="10:CtTypeReferenceImpl@String" shape=ellipse]
53 [label="10:CtLiteralImpl@\"[\"" shape=ellipse]
54 [label="10:CtVariableReadImpl@name" shape=ellipse]
55 [label="10:CtBinaryOperatorImpl@(\"[\" + name)" shape=ellipse]
56 [label="10:CtLiteralImpl@\"] \"" shape=ellipse]
57 [label="10:CtBinaryOperatorImpl@(\"[\" + name) + \"] \"" shape=ellipse]
58 [label="10:CtVirtualElement@msg" shape=ellipse]
59 [label="10:CtLocalVariableImpl@String msg = (\"[\" + name) + \"] \"" shape=ellipse]
60 [label="11:CtTypeReferenceImpl@int" shape=ellipse]
61 [label="11:CtLiteralImpl@0" shape=ellipse]
62 [label="11:CtVirtualElement@i" shape=ellipse]
63 [label="11:CtLocalVariableImpl@int i = 0" shape=ellipse]
64 [label="11:CtVariableReadImpl@i" shape=ellipse]
65 [label="11:CtFieldReadImpl@LEFT_COLUMN_SIZE" shape=ellipse]
66 [label="11:CtExecutableReferenceImpl@length()" shape=ellipse]
67 [label="11:CtVirtualElement@length" shape=ellipse]
68 [label="11:CtVariableReadImpl@msg" shape=ellipse]
69 [label="11:CtInvocationImpl@msg.length()" shape=ellipse]
70 [label="11:CtBinaryOperatorImpl@(LEFT_COLUMN_SIZE - msg.length())" shape=ellipse]
71 [label="11:CtBinaryOperatorImpl@i < (LEFT_COLUMN_SIZE - msg.length())" shape=ellipse]
72 [label="11:CtVariableWriteImpl@i" shape=ellipse]
73 [label="11:CtUnaryOperatorImpl@i++" shape=ellipse]
74 [label="12:CtExecutableReferenceImpl@print(java.lang.String)" shape=ellipse]
75 [label="12:CtVirtualElement@print" shape=ellipse]
76 [label="12:CtFieldReadImpl@out" shape=ellipse]
77 [label="12:CtLiteralImpl@\" \"" shape=ellipse]
78 [label="12:CtInvocationImpl@out.print(\" \")" shape=ellipse]
79 [label="11:CtBlockImpl@\{
    out.print(\" \");
\}" shape=ellipse]
80 [label="11:CtForImpl@for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
    out.print(\" \");
\}" shape=ellipse]
81 [label="14:CtExecutableReferenceImpl@print(java.lang.String)" shape=ellipse]
82 [label="14:CtVirtualElement@print" shape=ellipse]
83 [label="14:CtFieldReadImpl@out" shape=ellipse]
84 [label="14:CtVariableReadImpl@msg" shape=ellipse]
85 [label="14:CtInvocationImpl@out.print(msg)" shape=ellipse]
86 [label="4:CtBlockImpl@\{
    String name = event.getTask().getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    String msg = (\"[\" + name) + \"] \";
    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
        out.print(\" \");
    \}
    out.print(msg);
\}" shape=ellipse]
87 [label="4:CtIfImpl@if (event.getTask() != null) \{
    String name = event.getTask().getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    String msg = (\"[\" + name) + \"] \";
    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
        out.print(\" \");
    \}
    out.print(msg);
\}" shape=ellipse]
88 [label="16:CtExecutableReferenceImpl@println()" shape=ellipse]
89 [label="16:CtVirtualElement@println" shape=ellipse]
90 [label="16:CtFieldReadImpl@out" shape=ellipse]
91 [label="16:CtExecutableReferenceImpl@getMessage()" shape=ellipse]
92 [label="16:CtVirtualElement@getMessage" shape=ellipse]
93 [label="16:CtVariableReadImpl@event" shape=ellipse]
94 [label="16:CtInvocationImpl@event.getMessage()" shape=ellipse]
95 [label="16:CtInvocationImpl@out.println(event.getMessage())" shape=ellipse]
96 [label="3:CtBlockImpl@\{
    if (event.getTask() != null) \{
        String name = event.getTask().getClass().getName();
        int pos = name.lastIndexOf(\".\");
        if (pos != (-1)) \{
            name = name.substring(pos + 1);
        \}
        String msg = (\"[\" + name) + \"] \";
        for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
            out.print(\" \");
        \}
        out.print(msg);
    \}
    out.println(event.getMessage());
\}" shape=ellipse]
97 [label="3:CtIfImpl@if (event.getPriority() <= msgOutputLevel) \{
    if (event.getTask() != null) \{
        String name = event.getTask().getClass().getName();
        int pos = name.lastIndexOf(\".\");
        if (pos != (-1)) \{
            name = name.substring(pos + 1);
        \}
        String msg = (\"[\" + name) + \"] \";
        for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
            out.print(\" \");
        \}
        out.print(msg);
    \}
    out.println(event.getMessage());
\}" shape=ellipse]
98 [label="2:CtBlockImpl@\{
    if (event.getPriority() <= msgOutputLevel) \{
        if (event.getTask() != null) \{
            String name = event.getTask().getClass().getName();
            int pos = name.lastIndexOf(\".\");
            if (pos != (-1)) \{
                name = name.substring(pos + 1);
            \}
            String msg = (\"[\" + name) + \"] \";
            for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
                out.print(\" \");
            \}
            out.print(msg);
        \}
        out.println(event.getMessage());
    \}
\}" shape=ellipse]
99 [label="2:CtMethodImpl@public void messageLogged(BuildEvent event) \{
    if (event.getPriority() <= msgOutputLevel) \{
        if (event.getTask() != null) \{
            String name = event.getTask().getClass().getName();
            int pos = name.lastIndexOf(\".\");
            if (pos != (-1)) \{
                name = name.substring(pos + 1);
            \}
            String msg = (\"[\" + name) + \"] \";
            for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
                out.print(\" \");
            \}
            out.print(msg);
        \}
        out.println(event.getMessage());
    \}
\}" shape=ellipse]
100 [label="5:Update@UPDATE" shape=ellipse]
101 [label="5:CtInvocationImpl@event.getTask().getTaskName()" shape=ellipse]
102 [label="5:Delete@DELETE" shape=ellipse]
103 [label="6:Delete@DELETE" shape=ellipse]
104 [label="7:Delete@DELETE" shape=ellipse]
105 [label="5:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
7 -> 5 [label="AST"];
7 -> 6 [label="AST"];
7 -> 4 [label="AST"];
9 -> 7 [label="AST"];
9 -> 8 [label="AST"];
9 -> 96 [label="Control Dep"];
9 -> 87 [label="Control Dep"];
9 -> 15 [label="Control Dep"];
9 -> 13 [label="Control Dep"];
9 -> 10 [label="Control Dep"];
9 -> 12 [label="Control Dep"];
9 -> 14 [label="Control Dep"];
9 -> 95 [label="Control Dep"];
9 -> 88 [label="Control Dep"];
9 -> 90 [label="Control Dep"];
9 -> 94 [label="Control Dep"];
9 -> 91 [label="Control Dep"];
9 -> 93 [label="Control Dep"];
13 -> 11 [label="AST"];
13 -> 12 [label="AST"];
13 -> 10 [label="AST"];
15 -> 13 [label="AST"];
15 -> 14 [label="AST"];
15 -> 86 [label="Control Dep"];
15 -> 28 [label="Control Dep"];
15 -> 26 [label="Control Dep"];
15 -> 17 [label="Control Dep"];
15 -> 25 [label="Control Dep"];
15 -> 19 [label="Control Dep"];
15 -> 24 [label="Control Dep"];
15 -> 21 [label="Control Dep"];
15 -> 23 [label="Control Dep"];
15 -> 36 [label="Control Dep"];
15 -> 34 [label="Control Dep"];
15 -> 30 [label="Control Dep"];
15 -> 32 [label="Control Dep"];
15 -> 33 [label="Control Dep"];
15 -> 51 [label="Control Dep"];
15 -> 40 [label="Control Dep"];
15 -> 37 [label="Control Dep"];
15 -> 39 [label="Control Dep"];
15 -> 38 [label="Control Dep"];
15 -> 59 [label="Control Dep"];
15 -> 57 [label="Control Dep"];
15 -> 55 [label="Control Dep"];
15 -> 53 [label="Control Dep"];
15 -> 54 [label="Control Dep"];
15 -> 56 [label="Control Dep"];
15 -> 80 [label="Control Dep"];
15 -> 63 [label="Control Dep"];
15 -> 61 [label="Control Dep"];
15 -> 71 [label="Control Dep"];
15 -> 64 [label="Control Dep"];
15 -> 70 [label="Control Dep"];
15 -> 65 [label="Control Dep"];
15 -> 69 [label="Control Dep"];
15 -> 66 [label="Control Dep"];
15 -> 68 [label="Control Dep"];
15 -> 73 [label="Control Dep"];
15 -> 72 [label="Control Dep"];
15 -> 85 [label="Control Dep"];
15 -> 81 [label="Control Dep"];
15 -> 83 [label="Control Dep"];
15 -> 84 [label="Control Dep"];
23 -> 27 [label="Data Dep"];
24 -> 22 [label="AST"];
24 -> 23 [label="AST"];
24 -> 21 [label="AST"];
25 -> 20 [label="AST"];
25 -> 24 [label="AST"];
25 -> 19 [label="AST"];
25 -> 100 [label="Action"];
25 -> 105 [label="Action"];
26 -> 18 [label="AST"];
26 -> 25 [label="AST"];
26 -> 17 [label="AST"];
26 -> 102 [label="Action"];
27 -> 32 [label="Define-Use"];
27 -> 44 [label="Define-Use"];
27 -> 54 [label="Define-Use"];
28 -> 27 [label="AST"];
28 -> 16 [label="AST"];
28 -> 26 [label="AST"];
32 -> 35 [label="Data Dep"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
34 -> 30 [label="AST"];
34 -> 33 [label="AST"];
35 -> 37 [label="Define-Use"];
35 -> 45 [label="Define-Use"];
36 -> 35 [label="AST"];
36 -> 29 [label="AST"];
36 -> 34 [label="AST"];
36 -> 103 [label="Action"];
39 -> 38 [label="AST"];
40 -> 37 [label="AST"];
40 -> 39 [label="AST"];
40 -> 50 [label="Control Dep"];
40 -> 49 [label="Control Dep"];
40 -> 41 [label="Control Dep"];
40 -> 48 [label="Control Dep"];
40 -> 42 [label="Control Dep"];
40 -> 44 [label="Control Dep"];
40 -> 47 [label="Control Dep"];
40 -> 45 [label="Control Dep"];
40 -> 46 [label="Control Dep"];
41 -> 54 [label="Define-Use"];
44 -> 41 [label="Data Dep"];
45 -> 41 [label="Data Dep"];
47 -> 45 [label="AST"];
47 -> 46 [label="AST"];
48 -> 43 [label="AST"];
48 -> 44 [label="AST"];
48 -> 42 [label="AST"];
48 -> 47 [label="AST"];
49 -> 41 [label="AST"];
49 -> 48 [label="AST"];
50 -> 49 [label="AST"];
51 -> 40 [label="AST"];
51 -> 50 [label="AST"];
51 -> 104 [label="Action"];
54 -> 58 [label="Data Dep"];
55 -> 53 [label="AST"];
55 -> 54 [label="AST"];
57 -> 55 [label="AST"];
57 -> 56 [label="AST"];
58 -> 68 [label="Define-Use"];
58 -> 84 [label="Define-Use"];
59 -> 58 [label="AST"];
59 -> 52 [label="AST"];
59 -> 57 [label="AST"];
62 -> 64 [label="Define-Use"];
63 -> 62 [label="AST"];
63 -> 60 [label="AST"];
63 -> 61 [label="AST"];
69 -> 67 [label="AST"];
69 -> 68 [label="AST"];
69 -> 66 [label="AST"];
70 -> 65 [label="AST"];
70 -> 69 [label="AST"];
71 -> 64 [label="AST"];
71 -> 70 [label="AST"];
71 -> 79 [label="Control Dep"];
71 -> 78 [label="Control Dep"];
71 -> 74 [label="Control Dep"];
71 -> 76 [label="Control Dep"];
71 -> 77 [label="Control Dep"];
73 -> 72 [label="AST"];
78 -> 75 [label="AST"];
78 -> 76 [label="AST"];
78 -> 74 [label="AST"];
78 -> 77 [label="AST"];
79 -> 78 [label="AST"];
80 -> 63 [label="AST"];
80 -> 71 [label="AST"];
80 -> 73 [label="AST"];
80 -> 79 [label="AST"];
85 -> 82 [label="AST"];
85 -> 83 [label="AST"];
85 -> 81 [label="AST"];
85 -> 84 [label="AST"];
86 -> 28 [label="AST"];
86 -> 36 [label="AST"];
86 -> 51 [label="AST"];
86 -> 59 [label="AST"];
86 -> 80 [label="AST"];
86 -> 85 [label="AST"];
87 -> 15 [label="AST"];
87 -> 86 [label="AST"];
94 -> 92 [label="AST"];
94 -> 93 [label="AST"];
94 -> 91 [label="AST"];
95 -> 89 [label="AST"];
95 -> 90 [label="AST"];
95 -> 88 [label="AST"];
95 -> 94 [label="AST"];
96 -> 87 [label="AST"];
96 -> 95 [label="AST"];
97 -> 9 [label="AST"];
97 -> 96 [label="AST"];
98 -> 97 [label="AST"];
99 -> 1 [label="AST"];
99 -> 0 [label="AST"];
99 -> 2 [label="AST"];
99 -> 98 [label="AST"];
100 -> 101 [label="Action"];
105 -> 28 [label="Action"];
}