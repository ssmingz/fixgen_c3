digraph "taskStarted#?,BuildEvent" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@taskStarted" shape=ellipse]
2 [label="2:CtParameterImpl@BuildEvent event" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@BuildEvent" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@Task" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@getTask()" shape=ellipse]
6 [label="3:CtVirtualElement@getTask" shape=ellipse]
7 [label="3:CtVariableReadImpl@event" shape=ellipse]
8 [label="3:CtInvocationImpl@event.getTask()" shape=ellipse]
9 [label="3:CtVirtualElement@task" shape=ellipse]
10 [label="3:CtLocalVariableImpl@Task task = event.getTask()" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@TimedElement" shape=ellipse]
12 [label="4:CtTypeReferenceImpl@TimedElement" shape=ellipse]
13 [label="4:CtConstructorCallImpl@new TimedElement()" shape=ellipse]
14 [label="4:CtVirtualElement@taskElement" shape=ellipse]
15 [label="4:CtLocalVariableImpl@TimedElement taskElement = new TimedElement()" shape=ellipse]
16 [label="5:CtFieldWriteImpl@taskElement.startTime" shape=ellipse]
17 [label="5:CtVariableWriteImpl@taskElement" shape=ellipse]
18 [label="5:CtExecutableReferenceImpl@currentTimeMillis()" shape=ellipse]
19 [label="5:CtVirtualElement@currentTimeMillis" shape=ellipse]
20 [label="5:CtTypeAccessImpl@System" shape=ellipse]
21 [label="5:CtInvocationImpl@System.currentTimeMillis()" shape=ellipse]
22 [label="5:CtAssignmentImpl@taskElement.startTime = System.currentTimeMillis()" shape=ellipse]
23 [label="6:CtFieldWriteImpl@taskElement.element" shape=ellipse]
24 [label="6:CtVariableWriteImpl@taskElement" shape=ellipse]
25 [label="6:CtExecutableReferenceImpl@createElement()" shape=ellipse]
26 [label="6:CtVirtualElement@createElement" shape=ellipse]
27 [label="6:CtFieldReadImpl@doc" shape=ellipse]
28 [label="6:CtTypeAccessImpl@TASK_TAG" shape=ellipse]
29 [label="6:CtInvocationImpl@doc.createElement(TASK_TAG)" shape=ellipse]
30 [label="6:CtAssignmentImpl@taskElement.element = doc.createElement(TASK_TAG)" shape=ellipse]
31 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
32 [label="7:CtExecutableReferenceImpl@getName()" shape=ellipse]
33 [label="7:CtVirtualElement@getName" shape=ellipse]
34 [label="7:CtExecutableReferenceImpl@getClass()" shape=ellipse]
35 [label="7:CtVirtualElement@getClass" shape=ellipse]
36 [label="7:CtVariableReadImpl@task" shape=ellipse]
37 [label="7:CtInvocationImpl@task.getClass()" shape=ellipse]
38 [label="7:CtInvocationImpl@task.getClass().getName()" shape=ellipse]
39 [label="7:CtVirtualElement@name" shape=ellipse]
40 [label="7:CtLocalVariableImpl@String name = task.getClass().getName()" shape=ellipse]
41 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
42 [label="8:CtExecutableReferenceImpl@lastIndexOf(java.lang.String)" shape=ellipse]
43 [label="8:CtVirtualElement@lastIndexOf" shape=ellipse]
44 [label="8:CtVariableReadImpl@name" shape=ellipse]
45 [label="8:CtLiteralImpl@\".\"" shape=ellipse]
46 [label="8:CtInvocationImpl@name.lastIndexOf(\".\")" shape=ellipse]
47 [label="8:CtVirtualElement@pos" shape=ellipse]
48 [label="8:CtLocalVariableImpl@int pos = name.lastIndexOf(\".\")" shape=ellipse]
49 [label="9:CtVariableReadImpl@pos" shape=ellipse]
50 [label="9:CtLiteralImpl@1" shape=ellipse]
51 [label="9:CtUnaryOperatorImpl@(-1)" shape=ellipse]
52 [label="9:CtBinaryOperatorImpl@pos != (-1)" shape=ellipse]
53 [label="10:CtVariableWriteImpl@name" shape=ellipse]
54 [label="10:CtExecutableReferenceImpl@substring(int)" shape=ellipse]
55 [label="10:CtVirtualElement@substring" shape=ellipse]
56 [label="10:CtVariableReadImpl@name" shape=ellipse]
57 [label="10:CtVariableReadImpl@pos" shape=ellipse]
58 [label="10:CtLiteralImpl@1" shape=ellipse]
59 [label="10:CtBinaryOperatorImpl@pos + 1" shape=ellipse]
60 [label="10:CtInvocationImpl@name.substring(pos + 1)" shape=ellipse]
61 [label="10:CtAssignmentImpl@name = name.substring(pos + 1)" shape=ellipse]
62 [label="9:CtBlockImpl@\{
    name = name.substring(pos + 1);
\}" shape=ellipse]
63 [label="9:CtIfImpl@if (pos != (-1)) \{
    name = name.substring(pos + 1);
\}" shape=ellipse]
64 [label="12:CtExecutableReferenceImpl@setAttribute(java.lang.String)" shape=ellipse]
65 [label="12:CtVirtualElement@setAttribute" shape=ellipse]
66 [label="12:CtVariableReadImpl@taskElement" shape=ellipse]
67 [label="12:CtLocalVariableReferenceImpl@taskElement" shape=ellipse]
68 [label="12:CtFieldReadImpl@taskElement.element" shape=ellipse]
69 [label="12:CtTypeAccessImpl@NAME_ATTR" shape=ellipse]
70 [label="12:CtVariableReadImpl@name" shape=ellipse]
71 [label="12:CtInvocationImpl@taskElement.element.setAttribute(NAME_ATTR, name)" shape=ellipse]
72 [label="13:CtExecutableReferenceImpl@setAttribute()" shape=ellipse]
73 [label="13:CtVirtualElement@setAttribute" shape=ellipse]
74 [label="13:CtVariableReadImpl@taskElement" shape=ellipse]
75 [label="13:CtLocalVariableReferenceImpl@taskElement" shape=ellipse]
76 [label="13:CtFieldReadImpl@taskElement.element" shape=ellipse]
77 [label="13:CtTypeAccessImpl@LOCATION_ATTR" shape=ellipse]
78 [label="13:CtExecutableReferenceImpl@toString()" shape=ellipse]
79 [label="13:CtVirtualElement@toString" shape=ellipse]
80 [label="13:CtExecutableReferenceImpl@getLocation()" shape=ellipse]
81 [label="13:CtVirtualElement@getLocation" shape=ellipse]
82 [label="13:CtExecutableReferenceImpl@getTask()" shape=ellipse]
83 [label="13:CtVirtualElement@getTask" shape=ellipse]
84 [label="13:CtVariableReadImpl@event" shape=ellipse]
85 [label="13:CtInvocationImpl@event.getTask()" shape=ellipse]
86 [label="13:CtInvocationImpl@event.getTask().getLocation()" shape=ellipse]
87 [label="13:CtInvocationImpl@event.getTask().getLocation().toString()" shape=ellipse]
88 [label="13:CtInvocationImpl@taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString())" shape=ellipse]
89 [label="14:CtExecutableReferenceImpl@put(Task,TimedElement)" shape=ellipse]
90 [label="14:CtVirtualElement@put" shape=ellipse]
91 [label="14:CtFieldReadImpl@tasks" shape=ellipse]
92 [label="14:CtVariableReadImpl@task" shape=ellipse]
93 [label="14:CtVariableReadImpl@taskElement" shape=ellipse]
94 [label="14:CtInvocationImpl@tasks.put(task, taskElement)" shape=ellipse]
95 [label="15:CtExecutableReferenceImpl@push(TimedElement)" shape=ellipse]
96 [label="15:CtVirtualElement@push" shape=ellipse]
97 [label="15:CtExecutableReferenceImpl@getStack()" shape=ellipse]
98 [label="15:CtVirtualElement@getStack" shape=ellipse]
99 [label="15:CtInvocationImpl@getStack()" shape=ellipse]
100 [label="15:CtVariableReadImpl@taskElement" shape=ellipse]
101 [label="15:CtInvocationImpl@getStack().push(taskElement)" shape=ellipse]
102 [label="2:CtBlockImpl@\{
    Task task = event.getTask();
    TimedElement taskElement = new TimedElement();
    taskElement.startTime = System.currentTimeMillis();
    taskElement.element = doc.createElement(TASK_TAG);
    String name = task.getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    taskElement.element.setAttribute(NAME_ATTR, name);
    taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString());
    tasks.put(task, taskElement);
    getStack().push(taskElement);
\}" shape=ellipse]
103 [label="2:CtMethodImpl@public void taskStarted(BuildEvent event) \{
    Task task = event.getTask();
    TimedElement taskElement = new TimedElement();
    taskElement.startTime = System.currentTimeMillis();
    taskElement.element = doc.createElement(TASK_TAG);
    String name = task.getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    taskElement.element.setAttribute(NAME_ATTR, name);
    taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString());
    tasks.put(task, taskElement);
    getStack().push(taskElement);
\}" shape=ellipse]
104 [label="7:Update@UPDATE" shape=ellipse]
105 [label="7:CtInvocationImpl@event.getTask().getTaskName()" shape=ellipse]
106 [label="7:Update@UPDATE" shape=ellipse]
107 [label="7:CtInvocationImpl@event.getTask()" shape=ellipse]
108 [label="7:Update@UPDATE" shape=ellipse]
109 [label="7:CtVariableReadImpl@event" shape=ellipse]
110 [label="8:Delete@DELETE" shape=ellipse]
111 [label="9:Delete@DELETE" shape=ellipse]
2 -> 3 [label="AST"];
7 -> 9 [label="Data Dep"];
8 -> 6 [label="AST"];
8 -> 7 [label="AST"];
8 -> 5 [label="AST"];
9 -> 36 [label="Define-Use"];
9 -> 92 [label="Define-Use"];
10 -> 9 [label="AST"];
10 -> 4 [label="AST"];
10 -> 8 [label="AST"];
14 -> 66 [label="Define-Use"];
14 -> 74 [label="Define-Use"];
14 -> 93 [label="Define-Use"];
14 -> 100 [label="Define-Use"];
15 -> 14 [label="AST"];
15 -> 11 [label="AST"];
15 -> 13 [label="AST"];
16 -> 17 [label="AST"];
21 -> 19 [label="AST"];
21 -> 20 [label="AST"];
21 -> 18 [label="AST"];
22 -> 16 [label="AST"];
22 -> 21 [label="AST"];
23 -> 24 [label="AST"];
27 -> 23 [label="Data Dep"];
29 -> 26 [label="AST"];
29 -> 27 [label="AST"];
29 -> 25 [label="AST"];
29 -> 28 [label="AST"];
30 -> 23 [label="AST"];
30 -> 29 [label="AST"];
36 -> 39 [label="Data Dep"];
36 -> 108 [label="Action"];
37 -> 35 [label="AST"];
37 -> 36 [label="AST"];
37 -> 34 [label="AST"];
37 -> 106 [label="Action"];
38 -> 33 [label="AST"];
38 -> 37 [label="AST"];
38 -> 32 [label="AST"];
38 -> 104 [label="Action"];
39 -> 44 [label="Define-Use"];
39 -> 56 [label="Define-Use"];
39 -> 70 [label="Define-Use"];
40 -> 39 [label="AST"];
40 -> 31 [label="AST"];
40 -> 38 [label="AST"];
44 -> 47 [label="Data Dep"];
46 -> 43 [label="AST"];
46 -> 44 [label="AST"];
46 -> 42 [label="AST"];
46 -> 45 [label="AST"];
47 -> 49 [label="Define-Use"];
47 -> 57 [label="Define-Use"];
48 -> 47 [label="AST"];
48 -> 41 [label="AST"];
48 -> 46 [label="AST"];
48 -> 110 [label="Action"];
51 -> 50 [label="AST"];
52 -> 49 [label="AST"];
52 -> 51 [label="AST"];
52 -> 62 [label="Control Dep"];
52 -> 61 [label="Control Dep"];
52 -> 53 [label="Control Dep"];
52 -> 60 [label="Control Dep"];
52 -> 54 [label="Control Dep"];
52 -> 56 [label="Control Dep"];
52 -> 59 [label="Control Dep"];
52 -> 57 [label="Control Dep"];
52 -> 58 [label="Control Dep"];
53 -> 70 [label="Define-Use"];
56 -> 53 [label="Data Dep"];
57 -> 53 [label="Data Dep"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
60 -> 55 [label="AST"];
60 -> 56 [label="AST"];
60 -> 54 [label="AST"];
60 -> 59 [label="AST"];
61 -> 53 [label="AST"];
61 -> 60 [label="AST"];
62 -> 61 [label="AST"];
63 -> 52 [label="AST"];
63 -> 62 [label="AST"];
63 -> 111 [label="Action"];
66 -> 67 [label="AST"];
68 -> 66 [label="AST"];
71 -> 65 [label="AST"];
71 -> 68 [label="AST"];
71 -> 64 [label="AST"];
71 -> 69 [label="AST"];
71 -> 70 [label="AST"];
74 -> 75 [label="AST"];
76 -> 74 [label="AST"];
85 -> 83 [label="AST"];
85 -> 84 [label="AST"];
85 -> 82 [label="AST"];
86 -> 81 [label="AST"];
86 -> 85 [label="AST"];
86 -> 80 [label="AST"];
87 -> 79 [label="AST"];
87 -> 86 [label="AST"];
87 -> 78 [label="AST"];
88 -> 73 [label="AST"];
88 -> 76 [label="AST"];
88 -> 72 [label="AST"];
88 -> 77 [label="AST"];
88 -> 87 [label="AST"];
94 -> 90 [label="AST"];
94 -> 91 [label="AST"];
94 -> 89 [label="AST"];
94 -> 92 [label="AST"];
94 -> 93 [label="AST"];
99 -> 98 [label="AST"];
99 -> 97 [label="AST"];
101 -> 96 [label="AST"];
101 -> 99 [label="AST"];
101 -> 95 [label="AST"];
101 -> 100 [label="AST"];
102 -> 10 [label="AST"];
102 -> 15 [label="AST"];
102 -> 22 [label="AST"];
102 -> 30 [label="AST"];
102 -> 40 [label="AST"];
102 -> 48 [label="AST"];
102 -> 63 [label="AST"];
102 -> 71 [label="AST"];
102 -> 88 [label="AST"];
102 -> 94 [label="AST"];
102 -> 101 [label="AST"];
103 -> 1 [label="AST"];
103 -> 0 [label="AST"];
103 -> 2 [label="AST"];
103 -> 102 [label="AST"];
104 -> 105 [label="Action"];
105 -> 107 [label="AST"];
106 -> 107 [label="Action"];
107 -> 109 [label="AST"];
108 -> 109 [label="Action"];
}