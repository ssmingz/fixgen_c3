digraph "Pattern" {
0 [label="taskStarted#?,BuildEvent#7:UPDATE" shape=ellipse]
1 [label="taskStarted#?,BuildEvent#7:task
messageLogged#?,BuildEvent#5:String name = event.getTask().getClass().getName()" shape=ellipse]
2 [label="taskStarted#?,BuildEvent#3:task" shape=ellipse]
3 [label="taskStarted#?,BuildEvent#3:Task task = event.getTask()
messageLogged#?,BuildEvent#10:String msg = (\"[\" + name) + \"] \"" shape=ellipse]
4 [label="taskStarted#?,BuildEvent#3:event
messageLogged#?,BuildEvent#5:event" shape=ellipse]
5 [label="taskStarted#?,BuildEvent#14:task
messageLogged#?,BuildEvent#11:msg" shape=ellipse]
6 [label="taskStarted#?,BuildEvent#7:task.getClass()" shape=ellipse]
7 [label="taskStarted#?,BuildEvent#7:task.getClass().getName()
messageLogged#?,BuildEvent#5:event.getTask().getClass()" shape=ellipse]
8 [label="taskStarted#?,BuildEvent#7:getClass
messageLogged#?,BuildEvent#5:getName" shape=ellipse]
9 [label="taskStarted#?,BuildEvent#7:getClass()
messageLogged#?,BuildEvent#5:getTask()" shape=ellipse]
10 [label="taskStarted#?,BuildEvent#7:UPDATE" shape=ellipse]
11 [label="taskStarted#?,BuildEvent#-1:task" shape=ellipse]
12 [label="taskStarted#?,BuildEvent#7:name" shape=ellipse]
13 [label="taskStarted#?,BuildEvent#7:String name = task.getClass().getName()" shape=ellipse]
14 [label="taskStarted#?,BuildEvent#8:name
messageLogged#?,BuildEvent#6:int pos = name.lastIndexOf(\".\")" shape=ellipse]
15 [label="taskStarted#?,BuildEvent#10:name
messageLogged#?,BuildEvent#11:int i = 0" shape=ellipse]
16 [label="taskStarted#?,BuildEvent#12:name
messageLogged#?,BuildEvent#11:LEFT_COLUMN_SIZE" shape=ellipse]
17 [label="taskStarted#?,BuildEvent#7:event
messageLogged#?,BuildEvent#14:out" shape=ellipse]
18 [label="taskStarted#?,BuildEvent#7:name" shape=ellipse]
19 [label="messageLogged#?,BuildEvent#11:for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
    out.print(\" \");
\}" shape=ellipse]
20 [label="messageLogged#?,BuildEvent#5:getName()" shape=ellipse]
21 [label="messageLogged#?,BuildEvent#6:name" shape=ellipse]
22 [label="messageLogged#?,BuildEvent#5:DELETE" shape=ellipse]
23 [label="messageLogged#?,BuildEvent#5:getClass()" shape=ellipse]
24 [label="messageLogged#?,BuildEvent#14:msg" shape=ellipse]
25 [label="messageLogged#?,BuildEvent#4:event.getTask()" shape=ellipse]
26 [label="messageLogged#?,BuildEvent#11:i" shape=ellipse]
27 [label="messageLogged#?,BuildEvent#4:if (event.getTask() != null) \{
    String name = event.getTask().getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    String msg = (\"[\" + name) + \"] \";
    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
        out.print(\" \");
    \}
    out.print(msg);
\}" shape=ellipse]
28 [label="messageLogged#?,BuildEvent#7:(-1)" shape=ellipse]
29 [label="messageLogged#?,BuildEvent#4:null" shape=ellipse]
30 [label="messageLogged#?,BuildEvent#7:pos != (-1)" shape=ellipse]
31 [label="messageLogged#?,BuildEvent#10:\"[\"" shape=ellipse]
32 [label="messageLogged#?,BuildEvent#5:event.getTask()" shape=ellipse]
33 [label="messageLogged#?,BuildEvent#10:\"] \"" shape=ellipse]
34 [label="messageLogged#?,BuildEvent#6:name.lastIndexOf(\".\")" shape=ellipse]
35 [label="messageLogged#?,BuildEvent#4:event.getTask() != null" shape=ellipse]
36 [label="messageLogged#?,BuildEvent#6:lastIndexOf(java.lang.String)" shape=ellipse]
37 [label="messageLogged#?,BuildEvent#7:pos" shape=ellipse]
38 [label="messageLogged#?,BuildEvent#11:i < (LEFT_COLUMN_SIZE - msg.length())" shape=ellipse]
39 [label="messageLogged#?,BuildEvent#7:if (pos != (-1)) \{
    name = name.substring(pos + 1);
\}" shape=ellipse]
40 [label="messageLogged#?,BuildEvent#10:(\"[\" + name)" shape=ellipse]
41 [label="messageLogged#?,BuildEvent#11:0" shape=ellipse]
42 [label="messageLogged#?,BuildEvent#11:msg.length()" shape=ellipse]
43 [label="messageLogged#?,BuildEvent#3:event.getPriority() <= msgOutputLevel" shape=ellipse]
44 [label="messageLogged#?,BuildEvent#10:(\"[\" + name) + \"] \"" shape=ellipse]
45 [label="messageLogged#?,BuildEvent#7:1" shape=ellipse]
46 [label="messageLogged#?,BuildEvent#11:length()" shape=ellipse]
47 [label="messageLogged#?,BuildEvent#14:out.print(msg)" shape=ellipse]
48 [label="messageLogged#?,BuildEvent#5:event.getTask().getClass().getName()" shape=ellipse]
49 [label="messageLogged#?,BuildEvent#6:\".\"" shape=ellipse]
50 [label="messageLogged#?,BuildEvent#14:print(java.lang.String)" shape=ellipse]
51 [label="messageLogged#?,BuildEvent#10:name" shape=ellipse]
52 [label="messageLogged#?,BuildEvent#11:i++" shape=ellipse]
53 [label="messageLogged#?,BuildEvent#11:i" shape=ellipse]
54 [label="messageLogged#?,BuildEvent#11:(LEFT_COLUMN_SIZE - msg.length())" shape=ellipse]
55 [label="messageLogged#?,BuildEvent#4:\{
    String name = event.getTask().getClass().getName();
    int pos = name.lastIndexOf(\".\");
    if (pos != (-1)) \{
        name = name.substring(pos + 1);
    \}
    String msg = (\"[\" + name) + \"] \";
    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) \{
        out.print(\" \");
    \}
    out.print(msg);
\}" shape=ellipse]
0 -> 17 [label="Action:1"];
1 -> 0 [label="Action:1"];
1 -> 11 [label="AST:1"];
1 -> 12 [label="Data Dep:1"];
1 -> 48 [label="AST:1"];
2 -> 1 [label="Define Use:1"];
2 -> 5 [label="Define Use:1"];
3 -> 2 [label="AST:1"];
3 -> 44 [label="AST:1"];
4 -> 2 [label="Data Dep:1"];
6 -> 1 [label="AST:1"];
6 -> 8 [label="AST:1"];
6 -> 9 [label="AST:1"];
6 -> 10 [label="Action:1"];
7 -> 6 [label="AST:1"];
7 -> 23 [label="AST:1"];
7 -> 32 [label="AST:1"];
12 -> 14 [label="Define Use:1"];
12 -> 15 [label="Define Use:1"];
12 -> 16 [label="Define Use:1"];
13 -> 7 [label="AST:1"];
13 -> 12 [label="AST:1"];
14 -> 34 [label="AST:1"];
15 -> 41 [label="AST:1"];
17 -> 18 [label="Data Dep:1"];
19 -> 15 [label="AST:1"];
19 -> 38 [label="AST:1"];
19 -> 52 [label="AST:1"];
27 -> 35 [label="AST:1"];
27 -> 55 [label="AST:1"];
28 -> 45 [label="AST:1"];
30 -> 28 [label="AST:1"];
30 -> 37 [label="AST:1"];
32 -> 4 [label="AST:1"];
32 -> 9 [label="AST:1"];
34 -> 21 [label="AST:1"];
34 -> 36 [label="AST:1"];
34 -> 49 [label="AST:1"];
35 -> 19 [label="Control Dep:1"];
35 -> 20 [label="Control Dep:1"];
35 -> 21 [label="Control Dep:1"];
35 -> 23 [label="Control Dep:1"];
35 -> 24 [label="Control Dep:1"];
35 -> 25 [label="AST:1"];
35 -> 26 [label="Control Dep:1"];
35 -> 28 [label="Control Dep:1"];
35 -> 29 [label="AST:1"];
35 -> 30 [label="Control Dep:1"];
35 -> 31 [label="Control Dep:1"];
35 -> 32 [label="Control Dep:1"];
35 -> 33 [label="Control Dep:1"];
35 -> 34 [label="Control Dep:1"];
35 -> 55 [label="Control Dep:1"];
35 -> 1 [label="Control Dep:1"];
35 -> 48 [label="Control Dep:1"];
35 -> 7 [label="Control Dep:1"];
35 -> 9 [label="Control Dep:1"];
35 -> 4 [label="Control Dep:1"];
35 -> 14 [label="Control Dep:1"];
35 -> 36 [label="Control Dep:1"];
35 -> 49 [label="Control Dep:1"];
35 -> 39 [label="Control Dep:1"];
35 -> 37 [label="Control Dep:1"];
35 -> 45 [label="Control Dep:1"];
35 -> 3 [label="Control Dep:1"];
35 -> 44 [label="Control Dep:1"];
35 -> 40 [label="Control Dep:1"];
35 -> 51 [label="Control Dep:1"];
35 -> 15 [label="Control Dep:1"];
35 -> 41 [label="Control Dep:1"];
35 -> 38 [label="Control Dep:1"];
35 -> 54 [label="Control Dep:1"];
35 -> 16 [label="Control Dep:1"];
35 -> 42 [label="Control Dep:1"];
35 -> 46 [label="Control Dep:1"];
35 -> 5 [label="Control Dep:1"];
35 -> 52 [label="Control Dep:1"];
35 -> 53 [label="Control Dep:1"];
35 -> 47 [label="Control Dep:1"];
35 -> 50 [label="Control Dep:1"];
35 -> 17 [label="Control Dep:1"];
38 -> 26 [label="AST:1"];
38 -> 54 [label="AST:1"];
39 -> 30 [label="AST:1"];
40 -> 31 [label="AST:1"];
40 -> 51 [label="AST:1"];
42 -> 5 [label="AST:1"];
42 -> 46 [label="AST:1"];
43 -> 25 [label="Control Dep:1"];
43 -> 27 [label="Control Dep:1"];
43 -> 29 [label="Control Dep:1"];
43 -> 35 [label="Control Dep:1"];
44 -> 33 [label="AST:1"];
44 -> 40 [label="AST:1"];
47 -> 24 [label="AST:1"];
47 -> 17 [label="AST:1"];
47 -> 50 [label="AST:1"];
48 -> 20 [label="AST:1"];
48 -> 22 [label="Action:1"];
48 -> 8 [label="AST:1"];
48 -> 7 [label="AST:1"];
52 -> 53 [label="AST:1"];
54 -> 42 [label="AST:1"];
54 -> 16 [label="AST:1"];
55 -> 19 [label="AST:1"];
55 -> 39 [label="AST:1"];
55 -> 47 [label="AST:1"];
55 -> 1 [label="AST:1"];
55 -> 14 [label="AST:1"];
55 -> 3 [label="AST:1"];
}