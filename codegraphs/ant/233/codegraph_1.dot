digraph "getBaseDir#?" {
0 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
1 [label="2:CtVirtualElement@getBaseDir" shape=ellipse]
2 [label="3:CtFieldReadImpl@baseDir" shape=ellipse]
3 [label="3:CtLiteralImpl@null" shape=ellipse]
4 [label="3:CtBinaryOperatorImpl@baseDir == null" shape=ellipse]
5 [label="5:CtExecutableReferenceImpl@setBasedir(java.lang.String)" shape=ellipse]
6 [label="5:CtVirtualElement@setBasedir" shape=ellipse]
7 [label="5:CtLiteralImpl@\".\"" shape=ellipse]
8 [label="5:CtInvocationImpl@setBasedir(\".\")" shape=ellipse]
9 [label="4:CtBlockImpl@\{
    setBasedir(\".\");
\}" shape=ellipse]
10 [label="6:CtVirtualElement@ex" shape=ellipse]
11 [label="6:CtTypeReferenceImpl@BuildException" shape=ellipse]
12 [label="6:CtCatchVariableImpl@BuildException ex" shape=ellipse]
13 [label="7:CtExecutableReferenceImpl@printStackTrace()" shape=ellipse]
14 [label="7:CtVirtualElement@printStackTrace" shape=ellipse]
15 [label="7:CtVariableReadImpl@ex" shape=ellipse]
16 [label="7:CtInvocationImpl@ex.printStackTrace()" shape=ellipse]
17 [label="6:CtBlockImpl@\{
    ex.printStackTrace();
\}" shape=ellipse]
18 [label="6:CtCatchImpl@ catch (BuildException ex) \{
    ex.printStackTrace();
\}" shape=ellipse]
19 [label="4:CtTryImpl@try \{
    setBasedir(\".\");
\} catch (BuildException ex) \{
    ex.printStackTrace();
\}" shape=ellipse]
20 [label="3:CtBlockImpl@\{
    try \{
        setBasedir(\".\");
    \} catch (BuildException ex) \{
        ex.printStackTrace();
    \}
\}" shape=ellipse]
21 [label="3:CtIfImpl@if (baseDir == null) \{
    try \{
        setBasedir(\".\");
    \} catch (BuildException ex) \{
        ex.printStackTrace();
    \}
\}" shape=ellipse]
22 [label="10:CtFieldReadImpl@baseDir" shape=ellipse]
23 [label="10:CtReturnImpl@return baseDir" shape=ellipse]
24 [label="2:CtBlockImpl@\{
    if (baseDir == null) \{
        try \{
            setBasedir(\".\");
        \} catch (BuildException ex) \{
            ex.printStackTrace();
        \}
    \}
    return baseDir;
\}" shape=ellipse]
25 [label="2:CtMethodImpl@public File getBaseDir() \{
    if (baseDir == null) \{
        try \{
            setBasedir(\".\");
        \} catch (BuildException ex) \{
            ex.printStackTrace();
        \}
    \}
    return baseDir;
\}" shape=ellipse]
26 [label="6:Insert@INSERT" shape=ellipse]
27 [label="6:CtVirtualElement@" shape=ellipse]
4 -> 2 [label="AST"];
4 -> 3 [label="AST"];
4 -> 20 [label="Control Dep"];
4 -> 19 [label="Control Dep"];
4 -> 9 [label="Control Dep"];
4 -> 8 [label="Control Dep"];
4 -> 5 [label="Control Dep"];
4 -> 7 [label="Control Dep"];
4 -> 18 [label="Control Dep"];
4 -> 12 [label="Control Dep"];
8 -> 6 [label="AST"];
8 -> 5 [label="AST"];
8 -> 7 [label="AST"];
9 -> 8 [label="AST"];
10 -> 15 [label="Define-Use"];
12 -> 10 [label="AST"];
12 -> 11 [label="AST"];
12 -> 17 [label="Control Dep"];
12 -> 16 [label="Control Dep"];
12 -> 13 [label="Control Dep"];
12 -> 15 [label="Control Dep"];
12 -> 26 [label="Action"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
16 -> 13 [label="AST"];
17 -> 16 [label="AST"];
18 -> 12 [label="AST"];
18 -> 17 [label="AST"];
19 -> 9 [label="AST"];
19 -> 18 [label="AST"];
20 -> 19 [label="AST"];
21 -> 4 [label="AST"];
21 -> 20 [label="AST"];
23 -> 22 [label="AST"];
24 -> 21 [label="AST"];
24 -> 23 [label="AST"];
25 -> 1 [label="AST"];
25 -> 0 [label="AST"];
25 -> 24 [label="AST"];
26 -> 27 [label="Action"];
}