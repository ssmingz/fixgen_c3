digraph "Pattern" {
0 [label="testPropertyExpansion#?#7:INSERT
testCaseInsensitive#?#6:INSERT" shape=ellipse]
1 [label="testPropertyExpansion#?#5:getLog()
testCaseInsensitive#?#5:getLog()" shape=ellipse]
2 [label="testPropertyExpansion#?#5:getLog().indexOf(\"As nested text: it worked\")
testCaseInsensitive#?#5:getLog().indexOf(\"world\")" shape=ellipse]
3 [label="testPropertyExpansion#?#5:getLog().indexOf(\"As nested text: it worked\") > (-1)
testCaseInsensitive#?#5:getLog().indexOf(\"world\") > (-1)" shape=ellipse]
4 [label="testPropertyExpansion#?#5:indexOf
testCaseInsensitive#?#5:indexOf" shape=ellipse]
5 [label="testPropertyExpansion#?#5:indexOf(java.lang.String)
testCaseInsensitive#?#5:indexOf(java.lang.String)" shape=ellipse]
6 [label="testPropertyExpansion#?#5:\"As nested text: it worked\"
testCaseInsensitive#?#5:\"world\"" shape=ellipse]
7 [label="testPropertyExpansion#?#5:getLog
testCaseInsensitive#?#5:getLog" shape=ellipse]
8 [label="testPropertyExpansion#?#-1:
testCaseInsensitive#?#-1:" shape=ellipse]
9 [label="testPropertyExpansion#?#-1:PlaceHold
testCaseInsensitive#?#-1:PlaceHold" shape=ellipse]
10 [label="testPropertyExpansion#?#-1:PlaceHold
testCaseInsensitive#?#-1:PlaceHold" shape=ellipse]
11 [label="testPropertyExpansion#?#5:getLog()
testCaseInsensitive#?#5:getLog()" shape=ellipse]
12 [label="testPropertyExpansion#?#7:buildRule
testCaseInsensitive#?#6:buildRule" shape=ellipse]
0 -> 12 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 7 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 11 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
3 -> 2 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 10 [label="AST:2"];
}