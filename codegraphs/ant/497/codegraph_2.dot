digraph "setIgnore#?,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@setIgnore" shape=ellipse]
2 [label="2:CtParameterImpl@String ignoreString" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@log(java.lang.String)" shape=ellipse]
5 [label="3:CtVirtualElement@log" shape=ellipse]
6 [label="3:CtFieldReadImpl@project" shape=ellipse]
7 [label="4:CtLiteralImpl@\"The ignore attribute is deprecated.\"" shape=ellipse]
8 [label="4:CtLiteralImpl@\"Please use the excludes attribute.\"" shape=ellipse]
9 [label="4:CtBinaryOperatorImpl@\"The ignore attribute is deprecated.\" + \"Please use the excludes attribute.\"" shape=ellipse]
10 [label="4:CtTypeAccessImpl@MSG_WARN" shape=ellipse]
11 [label="3:CtInvocationImpl@project.log(\"The ignore attribute is deprecated.\" + \"Please use the excludes attribute.\", MSG_WARN)" shape=ellipse]
12 [label="5:CtVariableReadImpl@ignoreString" shape=ellipse]
13 [label="5:CtLiteralImpl@null" shape=ellipse]
14 [label="5:CtBinaryOperatorImpl@(ignoreString != null)" shape=ellipse]
15 [label="5:CtExecutableReferenceImpl@length()" shape=ellipse]
16 [label="5:CtVirtualElement@length" shape=ellipse]
17 [label="5:CtVariableReadImpl@ignoreString" shape=ellipse]
18 [label="5:CtInvocationImpl@ignoreString.length()" shape=ellipse]
19 [label="5:CtLiteralImpl@0" shape=ellipse]
20 [label="5:CtBinaryOperatorImpl@(ignoreString.length() > 0)" shape=ellipse]
21 [label="5:CtBinaryOperatorImpl@(ignoreString != null) && (ignoreString.length() > 0)" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@Vector" shape=ellipse]
23 [label="6:CtTypeReferenceImpl@Vector" shape=ellipse]
24 [label="6:CtConstructorCallImpl@new Vector()" shape=ellipse]
25 [label="6:CtVirtualElement@tmpExcludes" shape=ellipse]
26 [label="6:CtLocalVariableImpl@Vector tmpExcludes = new Vector()" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@StringTokenizer" shape=ellipse]
28 [label="7:CtTypeReferenceImpl@StringTokenizer" shape=ellipse]
29 [label="7:CtVariableReadImpl@ignoreString" shape=ellipse]
30 [label="7:CtLiteralImpl@\", \"" shape=ellipse]
31 [label="7:CtLiteralImpl@false" shape=ellipse]
32 [label="7:CtConstructorCallImpl@new StringTokenizer(ignoreString, \", \", false)" shape=ellipse]
33 [label="7:CtVirtualElement@tok" shape=ellipse]
34 [label="7:CtLocalVariableImpl@StringTokenizer tok = new StringTokenizer(ignoreString, \", \", false)" shape=ellipse]
35 [label="8:CtExecutableReferenceImpl@hasMoreTokens()" shape=ellipse]
36 [label="8:CtVirtualElement@hasMoreTokens" shape=ellipse]
37 [label="8:CtVariableReadImpl@tok" shape=ellipse]
38 [label="8:CtInvocationImpl@tok.hasMoreTokens()" shape=ellipse]
39 [label="9:CtExecutableReferenceImpl@setName()" shape=ellipse]
40 [label="9:CtVirtualElement@setName" shape=ellipse]
41 [label="9:CtExecutableReferenceImpl@createExclude()" shape=ellipse]
42 [label="9:CtVirtualElement@createExclude" shape=ellipse]
43 [label="9:CtInvocationImpl@createExclude()" shape=ellipse]
44 [label="9:CtLiteralImpl@\"**/\"" shape=ellipse]
45 [label="9:CtExecutableReferenceImpl@trim()" shape=ellipse]
46 [label="9:CtVirtualElement@trim" shape=ellipse]
47 [label="9:CtExecutableReferenceImpl@nextToken()" shape=ellipse]
48 [label="9:CtVirtualElement@nextToken" shape=ellipse]
49 [label="9:CtVariableReadImpl@tok" shape=ellipse]
50 [label="9:CtInvocationImpl@tok.nextToken()" shape=ellipse]
51 [label="9:CtInvocationImpl@tok.nextToken().trim()" shape=ellipse]
52 [label="9:CtBinaryOperatorImpl@(\"**/\" + tok.nextToken().trim())" shape=ellipse]
53 [label="9:CtLiteralImpl@\"/**\"" shape=ellipse]
54 [label="9:CtBinaryOperatorImpl@(\"**/\" + tok.nextToken().trim()) + \"/**\"" shape=ellipse]
55 [label="9:CtInvocationImpl@createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\")" shape=ellipse]
56 [label="8:CtBlockImpl@\{
    createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\");
\}" shape=ellipse]
57 [label="8:CtWhileImpl@while (tok.hasMoreTokens()) \{
    createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\");
\} " shape=ellipse]
58 [label="5:CtBlockImpl@\{
    Vector tmpExcludes = new Vector();
    StringTokenizer tok = new StringTokenizer(ignoreString, \", \", false);
    while (tok.hasMoreTokens()) \{
        createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\");
    \} 
\}" shape=ellipse]
59 [label="5:CtIfImpl@if ((ignoreString != null) && (ignoreString.length() > 0)) \{
    Vector tmpExcludes = new Vector();
    StringTokenizer tok = new StringTokenizer(ignoreString, \", \", false);
    while (tok.hasMoreTokens()) \{
        createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\");
    \} 
\}" shape=ellipse]
60 [label="2:CtBlockImpl@\{
    project.log(\"The ignore attribute is deprecated.\" + \"Please use the excludes attribute.\", MSG_WARN);
    if ((ignoreString != null) && (ignoreString.length() > 0)) \{
        Vector tmpExcludes = new Vector();
        StringTokenizer tok = new StringTokenizer(ignoreString, \", \", false);
        while (tok.hasMoreTokens()) \{
            createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\");
        \} 
    \}
\}" shape=ellipse]
61 [label="2:CtMethodImpl@public void setIgnore(String ignoreString) \{
    project.log(\"The ignore attribute is deprecated.\" + \"Please use the excludes attribute.\", MSG_WARN);
    if ((ignoreString != null) && (ignoreString.length() > 0)) \{
        Vector tmpExcludes = new Vector();
        StringTokenizer tok = new StringTokenizer(ignoreString, \", \", false);
        while (tok.hasMoreTokens()) \{
            createExclude().setName((\"**/\" + tok.nextToken().trim()) + \"/**\");
        \} 
    \}
\}" shape=ellipse]
62 [label="3:Delete@DELETE" shape=ellipse]
2 -> 3 [label="AST"];
6 -> 62 [label="Action"];
9 -> 7 [label="AST"];
9 -> 8 [label="AST"];
11 -> 5 [label="AST"];
11 -> 6 [label="AST"];
11 -> 4 [label="AST"];
11 -> 9 [label="AST"];
11 -> 10 [label="AST"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
18 -> 16 [label="AST"];
18 -> 17 [label="AST"];
18 -> 15 [label="AST"];
20 -> 18 [label="AST"];
20 -> 19 [label="AST"];
21 -> 14 [label="AST"];
21 -> 20 [label="AST"];
21 -> 58 [label="Control Dep"];
21 -> 26 [label="Control Dep"];
21 -> 24 [label="Control Dep"];
21 -> 34 [label="Control Dep"];
21 -> 32 [label="Control Dep"];
21 -> 29 [label="Control Dep"];
21 -> 30 [label="Control Dep"];
21 -> 31 [label="Control Dep"];
21 -> 57 [label="Control Dep"];
21 -> 38 [label="Control Dep"];
21 -> 35 [label="Control Dep"];
21 -> 37 [label="Control Dep"];
26 -> 25 [label="AST"];
26 -> 22 [label="AST"];
26 -> 24 [label="AST"];
29 -> 33 [label="Data Dep"];
32 -> 29 [label="AST"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
33 -> 37 [label="Define-Use"];
33 -> 49 [label="Define-Use"];
34 -> 33 [label="AST"];
34 -> 27 [label="AST"];
34 -> 32 [label="AST"];
38 -> 36 [label="AST"];
38 -> 37 [label="AST"];
38 -> 35 [label="AST"];
38 -> 56 [label="Control Dep"];
38 -> 55 [label="Control Dep"];
38 -> 39 [label="Control Dep"];
38 -> 43 [label="Control Dep"];
38 -> 41 [label="Control Dep"];
38 -> 54 [label="Control Dep"];
38 -> 52 [label="Control Dep"];
38 -> 44 [label="Control Dep"];
38 -> 51 [label="Control Dep"];
38 -> 45 [label="Control Dep"];
38 -> 50 [label="Control Dep"];
38 -> 47 [label="Control Dep"];
38 -> 49 [label="Control Dep"];
38 -> 53 [label="Control Dep"];
43 -> 42 [label="AST"];
43 -> 41 [label="AST"];
50 -> 48 [label="AST"];
50 -> 49 [label="AST"];
50 -> 47 [label="AST"];
51 -> 46 [label="AST"];
51 -> 50 [label="AST"];
51 -> 45 [label="AST"];
52 -> 44 [label="AST"];
52 -> 51 [label="AST"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
55 -> 40 [label="AST"];
55 -> 43 [label="AST"];
55 -> 39 [label="AST"];
55 -> 54 [label="AST"];
56 -> 55 [label="AST"];
57 -> 38 [label="AST"];
57 -> 56 [label="AST"];
58 -> 26 [label="AST"];
58 -> 34 [label="AST"];
58 -> 57 [label="AST"];
59 -> 21 [label="AST"];
59 -> 58 [label="AST"];
60 -> 11 [label="AST"];
60 -> 59 [label="AST"];
61 -> 1 [label="AST"];
61 -> 0 [label="AST"];
61 -> 2 [label="AST"];
61 -> 60 [label="AST"];
}