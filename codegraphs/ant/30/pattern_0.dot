digraph "Pattern" {
0 [label="setFiltertrace#?,boolean#3:DELETE
setHaltonfailure#?,boolean#3:DELETE
setHaltonerror#?,boolean#3:DELETE
setFork#?,boolean#3:DELETE" shape=ellipse]
1 [label="setFiltertrace#?,boolean#3:Enumeration e = allTests()
setHaltonfailure#?,boolean#3:Enumeration e = allTests()
setHaltonerror#?,boolean#3:Enumeration e = allTests()
setFork#?,boolean#3:Enumeration e = allTests()" shape=ellipse]
2 [label="setFiltertrace#?,boolean#2:\{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setFiltertrace(value);
    \} 
\}
setHaltonfailure#?,boolean#2:\{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setHaltonfailure(value);
    \} 
\}
setHaltonerror#?,boolean#2:\{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setHaltonerror(value);
    \} 
\}
setFork#?,boolean#2:\{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setFork(value);
    \} 
\}" shape=ellipse]
3 [label="setFiltertrace#?,boolean#2:public void setFiltertrace(boolean value) \{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setFiltertrace(value);
    \} 
\}
setHaltonfailure#?,boolean#2:public void setHaltonfailure(boolean value) \{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setHaltonfailure(value);
    \} 
\}
setHaltonerror#?,boolean#2:public void setHaltonerror(boolean value) \{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setHaltonerror(value);
    \} 
\}
setFork#?,boolean#2:public void setFork(boolean value) \{
    Enumeration e = allTests();
    while (e.hasMoreElements()) \{
        BaseTest test = ((BaseTest) (e.nextElement()));
        test.setFork(value);
    \} 
\}" shape=ellipse]
4 [label="setFiltertrace#?,boolean#4:while (e.hasMoreElements()) \{
    BaseTest test = ((BaseTest) (e.nextElement()));
    test.setFiltertrace(value);
\} 
setHaltonfailure#?,boolean#4:while (e.hasMoreElements()) \{
    BaseTest test = ((BaseTest) (e.nextElement()));
    test.setHaltonfailure(value);
\} 
setHaltonerror#?,boolean#4:while (e.hasMoreElements()) \{
    BaseTest test = ((BaseTest) (e.nextElement()));
    test.setHaltonerror(value);
\} 
setFork#?,boolean#4:while (e.hasMoreElements()) \{
    BaseTest test = ((BaseTest) (e.nextElement()));
    test.setFork(value);
\} " shape=ellipse]
5 [label="setFiltertrace#?,boolean#3:e
setHaltonfailure#?,boolean#3:e
setHaltonerror#?,boolean#3:e
setFork#?,boolean#3:e" shape=ellipse]
6 [label="setFiltertrace#?,boolean#-1:
setHaltonfailure#?,boolean#-1:
setHaltonerror#?,boolean#-1:
setFork#?,boolean#-1:" shape=ellipse]
7 [label="setFiltertrace#?,boolean#4:e
setHaltonfailure#?,boolean#4:e
setHaltonerror#?,boolean#4:e
setFork#?,boolean#4:e" shape=ellipse]
8 [label="setFiltertrace#?,boolean#5:e
setHaltonfailure#?,boolean#5:e
setHaltonerror#?,boolean#5:e
setFork#?,boolean#5:e" shape=ellipse]
9 [label="setFiltertrace#?,boolean#3:Enumeration
setHaltonfailure#?,boolean#3:Enumeration
setHaltonerror#?,boolean#3:Enumeration
setFork#?,boolean#3:Enumeration" shape=ellipse]
10 [label="setFiltertrace#?,boolean#-1:
setHaltonfailure#?,boolean#-1:
setHaltonerror#?,boolean#-1:
setFork#?,boolean#-1:" shape=ellipse]
11 [label="setFiltertrace#?,boolean#3:allTests()
setHaltonfailure#?,boolean#3:allTests()
setHaltonerror#?,boolean#3:allTests()
setFork#?,boolean#3:allTests()" shape=ellipse]
12 [label="setFiltertrace#?,boolean#3:allTests
setHaltonfailure#?,boolean#3:allTests
setHaltonerror#?,boolean#3:allTests
setFork#?,boolean#3:allTests" shape=ellipse]
13 [label="setFiltertrace#?,boolean#3:allTests()
setHaltonfailure#?,boolean#3:allTests()
setHaltonerror#?,boolean#3:allTests()
setFork#?,boolean#3:allTests()" shape=ellipse]
1 -> 0 [label="Action:4"];
1 -> 5 [label="AST:4"];
1 -> 9 [label="AST:4"];
1 -> 11 [label="AST:4"];
2 -> 1 [label="AST:4"];
2 -> 4 [label="AST:4"];
3 -> 2 [label="AST:4"];
5 -> 7 [label="Define Use:4"];
5 -> 8 [label="Define Use:4"];
6 -> 5 [label="Data Dep:4"];
9 -> 10 [label="AST:4"];
11 -> 6 [label="AST:4"];
11 -> 12 [label="AST:4"];
11 -> 13 [label="AST:4"];
}