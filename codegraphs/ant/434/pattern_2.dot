digraph "Pattern" {
0 [label="getFiles#?,File,DirectoryScanner#5:DELETE
getDirs#?,File,DirectoryScanner#5:DELETE" shape=ellipse]
1 [label="getFiles#?,File,DirectoryScanner#5:mapper
getDirs#?,File,DirectoryScanner#5:mapper" shape=ellipse]
2 [label="getFiles#?,File,DirectoryScanner#3:mapper != null
getDirs#?,File,DirectoryScanner#3:mapper != null" shape=ellipse]
3 [label="getFiles#?,File,DirectoryScanner#3:if (mapper != null) \{
    SourceFileScanner sfs = new SourceFileScanner(this);
    return sfs.restrict(ds.getIncludedFiles(), baseDir, destDir, mapper);
\} else \{
    return ds.getIncludedFiles();
\}
getDirs#?,File,DirectoryScanner#3:if (mapper != null) \{
    SourceFileScanner sfs = new SourceFileScanner(this);
    return sfs.restrict(ds.getIncludedDirectories(), baseDir, destDir, mapper);
\} else \{
    return ds.getIncludedDirectories();
\}" shape=ellipse]
4 [label="getFiles#?,File,DirectoryScanner#3:mapper
getDirs#?,File,DirectoryScanner#3:mapper" shape=ellipse]
5 [label="getFiles#?,File,DirectoryScanner#3:null
getDirs#?,File,DirectoryScanner#3:null" shape=ellipse]
6 [label="getFiles#?,File,DirectoryScanner#3:\{
    SourceFileScanner sfs = new SourceFileScanner(this);
    return sfs.restrict(ds.getIncludedFiles(), baseDir, destDir, mapper);
\}
getDirs#?,File,DirectoryScanner#3:\{
    SourceFileScanner sfs = new SourceFileScanner(this);
    return sfs.restrict(ds.getIncludedDirectories(), baseDir, destDir, mapper);
\}" shape=ellipse]
7 [label="getFiles#?,File,DirectoryScanner#4:SourceFileScanner sfs = new SourceFileScanner(this)
getDirs#?,File,DirectoryScanner#4:SourceFileScanner sfs = new SourceFileScanner(this)" shape=ellipse]
8 [label="getFiles#?,File,DirectoryScanner#4:new SourceFileScanner(this)
getDirs#?,File,DirectoryScanner#4:new SourceFileScanner(this)" shape=ellipse]
9 [label="getFiles#?,File,DirectoryScanner#-1:SourceFileScanner(PlaceHold)
getDirs#?,File,DirectoryScanner#-1:SourceFileScanner(PlaceHold)" shape=ellipse]
10 [label="getFiles#?,File,DirectoryScanner#4:this
getDirs#?,File,DirectoryScanner#4:this" shape=ellipse]
11 [label="getFiles#?,File,DirectoryScanner#-1:PlaceHold
getDirs#?,File,DirectoryScanner#-1:PlaceHold" shape=ellipse]
12 [label="getFiles#?,File,DirectoryScanner#5:return sfs.restrict(ds.getIncludedFiles(), baseDir, destDir, mapper)
getDirs#?,File,DirectoryScanner#5:return sfs.restrict(ds.getIncludedDirectories(), baseDir, destDir, mapper)" shape=ellipse]
13 [label="getFiles#?,File,DirectoryScanner#5:sfs.restrict(ds.getIncludedFiles(), baseDir, destDir, mapper)
getDirs#?,File,DirectoryScanner#5:sfs.restrict(ds.getIncludedDirectories(), baseDir, destDir, mapper)" shape=ellipse]
14 [label="getFiles#?,File,DirectoryScanner#5:restrict(File)
getDirs#?,File,DirectoryScanner#5:restrict(File)" shape=ellipse]
15 [label="getFiles#?,File,DirectoryScanner#5:sfs
getDirs#?,File,DirectoryScanner#5:sfs" shape=ellipse]
16 [label="getFiles#?,File,DirectoryScanner#5:ds.getIncludedFiles()
getDirs#?,File,DirectoryScanner#5:ds.getIncludedDirectories()" shape=ellipse]
17 [label="getFiles#?,File,DirectoryScanner#5:getIncludedFiles()
getDirs#?,File,DirectoryScanner#5:getIncludedDirectories()" shape=ellipse]
18 [label="getFiles#?,File,DirectoryScanner#5:ds
getDirs#?,File,DirectoryScanner#5:ds" shape=ellipse]
19 [label="getFiles#?,File,DirectoryScanner#5:baseDir
getDirs#?,File,DirectoryScanner#5:baseDir" shape=ellipse]
20 [label="getFiles#?,File,DirectoryScanner#5:destDir
getDirs#?,File,DirectoryScanner#5:destDir" shape=ellipse]
21 [label="getFiles#?,File,DirectoryScanner#6:\{
    return ds.getIncludedFiles();
\}
getDirs#?,File,DirectoryScanner#6:\{
    return ds.getIncludedDirectories();
\}" shape=ellipse]
22 [label="getFiles#?,File,DirectoryScanner#7:return ds.getIncludedFiles()
getDirs#?,File,DirectoryScanner#7:return ds.getIncludedDirectories()" shape=ellipse]
23 [label="getFiles#?,File,DirectoryScanner#7:ds.getIncludedFiles()
getDirs#?,File,DirectoryScanner#7:ds.getIncludedDirectories()" shape=ellipse]
24 [label="getFiles#?,File,DirectoryScanner#7:getIncludedFiles()
getDirs#?,File,DirectoryScanner#7:getIncludedDirectories()" shape=ellipse]
25 [label="getFiles#?,File,DirectoryScanner#7:ds
getDirs#?,File,DirectoryScanner#7:ds" shape=ellipse]
26 [label="getFiles#?,File,DirectoryScanner#-1:mapper
getDirs#?,File,DirectoryScanner#-1:mapper" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 26 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="Control Dep:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:2"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:2"];
3 -> 2 [label="AST:2"];
3 -> 6 [label="AST:2"];
3 -> 21 [label="AST:2"];
6 -> 7 [label="AST:2"];
6 -> 12 [label="AST:2"];
7 -> 8 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 10 [label="AST:2"];
10 -> 11 [label="AST:2"];
12 -> 13 [label="AST:2"];
13 -> 1 [label="AST:2"];
13 -> 15 [label="AST:2"];
13 -> 14 [label="AST:2"];
13 -> 16 [label="AST:2"];
13 -> 19 [label="AST:2"];
13 -> 20 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 17 [label="AST:2"];
21 -> 22 [label="AST:2"];
22 -> 23 [label="AST:2"];
23 -> 25 [label="AST:2"];
23 -> 24 [label="AST:2"];
}