digraph "toExtension#?" {
0 [label="2:CtTypeReferenceImpl@Extension" shape=ellipse]
1 [label="2:CtVirtualElement@toExtension" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
3 [label="3:CtLiteralImpl@null" shape=ellipse]
4 [label="3:CtFieldReadImpl@extensionName" shape=ellipse]
5 [label="3:CtBinaryOperatorImpl@null == extensionName" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
7 [label="4:CtLiteralImpl@\"Extension is missing name.\"" shape=ellipse]
8 [label="4:CtVirtualElement@message" shape=ellipse]
9 [label="4:CtLocalVariableImpl@final String message = \"Extension is missing name.\"" shape=ellipse]
10 [label="5:CtTypeReferenceImpl@BuildException" shape=ellipse]
11 [label="5:CtVariableReadImpl@message" shape=ellipse]
12 [label="5:CtConstructorCallImpl@new BuildException(message)" shape=ellipse]
13 [label="5:CtThrowImpl@throw new BuildException(message)" shape=ellipse]
14 [label="3:CtBlockImpl@\{
    final String message = \"Extension is missing name.\";
    throw new BuildException(message);
\}" shape=ellipse]
15 [label="3:CtIfImpl@if (null == extensionName) \{
    final String message = \"Extension is missing name.\";
    throw new BuildException(message);
\}" shape=ellipse]
16 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
17 [label="7:CtLiteralImpl@null" shape=ellipse]
18 [label="7:CtVirtualElement@specificationVersionString" shape=ellipse]
19 [label="7:CtLocalVariableImpl@String specificationVersionString = null" shape=ellipse]
20 [label="8:CtLiteralImpl@null" shape=ellipse]
21 [label="8:CtFieldReadImpl@specificationVersion" shape=ellipse]
22 [label="8:CtBinaryOperatorImpl@null != specificationVersion" shape=ellipse]
23 [label="9:CtVariableWriteImpl@specificationVersionString" shape=ellipse]
24 [label="9:CtExecutableReferenceImpl@toString()" shape=ellipse]
25 [label="9:CtVirtualElement@toString" shape=ellipse]
26 [label="9:CtFieldReadImpl@specificationVersion" shape=ellipse]
27 [label="9:CtInvocationImpl@specificationVersion.toString()" shape=ellipse]
28 [label="9:CtAssignmentImpl@specificationVersionString = specificationVersion.toString()" shape=ellipse]
29 [label="8:CtBlockImpl@\{
    specificationVersionString = specificationVersion.toString();
\}" shape=ellipse]
30 [label="8:CtIfImpl@if (null != specificationVersion) \{
    specificationVersionString = specificationVersion.toString();
\}" shape=ellipse]
31 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
32 [label="11:CtLiteralImpl@null" shape=ellipse]
33 [label="11:CtVirtualElement@implementationVersionString" shape=ellipse]
34 [label="11:CtLocalVariableImpl@String implementationVersionString = null" shape=ellipse]
35 [label="12:CtLiteralImpl@null" shape=ellipse]
36 [label="12:CtFieldReadImpl@implementationVersion" shape=ellipse]
37 [label="12:CtBinaryOperatorImpl@null != implementationVersion" shape=ellipse]
38 [label="13:CtVariableWriteImpl@implementationVersionString" shape=ellipse]
39 [label="13:CtExecutableReferenceImpl@toString()" shape=ellipse]
40 [label="13:CtVirtualElement@toString" shape=ellipse]
41 [label="13:CtFieldReadImpl@implementationVersion" shape=ellipse]
42 [label="13:CtInvocationImpl@implementationVersion.toString()" shape=ellipse]
43 [label="13:CtAssignmentImpl@implementationVersionString = implementationVersion.toString()" shape=ellipse]
44 [label="12:CtBlockImpl@\{
    implementationVersionString = implementationVersion.toString();
\}" shape=ellipse]
45 [label="12:CtIfImpl@if (null != implementationVersion) \{
    implementationVersionString = implementationVersion.toString();
\}" shape=ellipse]
46 [label="15:CtTypeReferenceImpl@Extension" shape=ellipse]
47 [label="16:CtFieldReadImpl@extensionName" shape=ellipse]
48 [label="17:CtVariableReadImpl@specificationVersionString" shape=ellipse]
49 [label="18:CtFieldReadImpl@specificationVendor" shape=ellipse]
50 [label="19:CtVariableReadImpl@implementationVersionString" shape=ellipse]
51 [label="20:CtFieldReadImpl@implementationVendor" shape=ellipse]
52 [label="21:CtFieldReadImpl@implementationVendorID" shape=ellipse]
53 [label="22:CtFieldReadImpl@implementationURL" shape=ellipse]
54 [label="15:CtConstructorCallImpl@new Extension(extensionName, specificationVersionString, specificationVendor, implementationVersionString, implementationVendor, implementationVendorID, implementationURL)" shape=ellipse]
55 [label="15:CtReturnImpl@return new Extension(extensionName, specificationVersionString, specificationVendor, implementationVersionString, implementationVendor, implementationVendorID, implementationURL)" shape=ellipse]
56 [label="2:CtBlockImpl@\{
    if (null == extensionName) \{
        final String message = \"Extension is missing name.\";
        throw new BuildException(message);
    \}
    String specificationVersionString = null;
    if (null != specificationVersion) \{
        specificationVersionString = specificationVersion.toString();
    \}
    String implementationVersionString = null;
    if (null != implementationVersion) \{
        implementationVersionString = implementationVersion.toString();
    \}
    return new Extension(extensionName, specificationVersionString, specificationVendor, implementationVersionString, implementationVendor, implementationVendorID, implementationURL);
\}" shape=ellipse]
57 [label="2:CtMethodImpl@Extension toExtension() throws BuildException \{
    if (null == extensionName) \{
        final String message = \"Extension is missing name.\";
        throw new BuildException(message);
    \}
    String specificationVersionString = null;
    if (null != specificationVersion) \{
        specificationVersionString = specificationVersion.toString();
    \}
    String implementationVersionString = null;
    if (null != implementationVersion) \{
        implementationVersionString = implementationVersion.toString();
    \}
    return new Extension(extensionName, specificationVersionString, specificationVendor, implementationVersionString, implementationVendor, implementationVendorID, implementationURL);
\}" shape=ellipse]
58 [label="3:Insert@INSERT" shape=ellipse]
59 [label="3:CtIfImpl@if (isReference()) \{
    return ((ExtensionAdapter) (getCheckedRef())).toExtension();
\}" shape=ellipse]
60 [label="6:Insert@INSERT" shape=ellipse]
61 [label="6:CtInvocationImpl@dieOnCircularReference()" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 4 [label="AST"];
5 -> 14 [label="Control Dep"];
5 -> 9 [label="Control Dep"];
5 -> 7 [label="Control Dep"];
5 -> 13 [label="Control Dep"];
5 -> 12 [label="Control Dep"];
5 -> 11 [label="Control Dep"];
8 -> 11 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 6 [label="AST"];
9 -> 7 [label="AST"];
12 -> 11 [label="AST"];
13 -> 12 [label="AST"];
14 -> 9 [label="AST"];
14 -> 13 [label="AST"];
15 -> 5 [label="AST"];
15 -> 14 [label="AST"];
18 -> 48 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 16 [label="AST"];
19 -> 17 [label="AST"];
22 -> 20 [label="AST"];
22 -> 21 [label="AST"];
22 -> 29 [label="Control Dep"];
22 -> 28 [label="Control Dep"];
22 -> 23 [label="Control Dep"];
22 -> 27 [label="Control Dep"];
22 -> 24 [label="Control Dep"];
22 -> 26 [label="Control Dep"];
23 -> 48 [label="Define-Use"];
26 -> 23 [label="Data Dep"];
27 -> 25 [label="AST"];
27 -> 26 [label="AST"];
27 -> 24 [label="AST"];
28 -> 23 [label="AST"];
28 -> 27 [label="AST"];
29 -> 28 [label="AST"];
30 -> 22 [label="AST"];
30 -> 29 [label="AST"];
33 -> 50 [label="Define-Use"];
34 -> 33 [label="AST"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
37 -> 35 [label="AST"];
37 -> 36 [label="AST"];
37 -> 44 [label="Control Dep"];
37 -> 43 [label="Control Dep"];
37 -> 38 [label="Control Dep"];
37 -> 42 [label="Control Dep"];
37 -> 39 [label="Control Dep"];
37 -> 41 [label="Control Dep"];
38 -> 50 [label="Define-Use"];
41 -> 38 [label="Data Dep"];
42 -> 40 [label="AST"];
42 -> 41 [label="AST"];
42 -> 39 [label="AST"];
43 -> 38 [label="AST"];
43 -> 42 [label="AST"];
44 -> 43 [label="AST"];
45 -> 37 [label="AST"];
45 -> 44 [label="AST"];
54 -> 47 [label="AST"];
54 -> 48 [label="AST"];
54 -> 49 [label="AST"];
54 -> 50 [label="AST"];
54 -> 51 [label="AST"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
55 -> 54 [label="AST"];
56 -> 15 [label="AST"];
56 -> 19 [label="AST"];
56 -> 30 [label="AST"];
56 -> 34 [label="AST"];
56 -> 45 [label="AST"];
56 -> 55 [label="AST"];
57 -> 1 [label="AST"];
57 -> 0 [label="AST"];
57 -> 2 [label="AST"];
57 -> 56 [label="AST"];
57 -> 58 [label="Action"];
57 -> 60 [label="Action"];
58 -> 59 [label="Action"];
60 -> 61 [label="Action"];
}