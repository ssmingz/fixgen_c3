digraph "createTask#?,String,ExecutionFrame" {
0 [label="2:CtTypeReferenceImpl@Task" shape=ellipse]
1 [label="2:CtVirtualElement@createTask" shape=ellipse]
2 [label="2:CtParameterImpl@final String name" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="2:CtParameterImpl@final ExecutionFrame frame" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@ExecutionFrame" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@TaskException" shape=ellipse]
7 [label="5:CtTypeReferenceImpl@TypeFactory" shape=ellipse]
8 [label="5:CtExecutableReferenceImpl@getFactory()" shape=ellipse]
9 [label="5:CtVirtualElement@getFactory" shape=ellipse]
10 [label="5:CtExecutableReferenceImpl@getTypeManager()" shape=ellipse]
11 [label="5:CtVirtualElement@getTypeManager" shape=ellipse]
12 [label="5:CtVariableReadImpl@frame" shape=ellipse]
13 [label="5:CtInvocationImpl@frame.getTypeManager()" shape=ellipse]
14 [label="5:CtTypeAccessImpl@ROLE" shape=ellipse]
15 [label="5:CtInvocationImpl@frame.getTypeManager().getFactory(ROLE)" shape=ellipse]
16 [label="5:CtVirtualElement@factory" shape=ellipse]
17 [label="5:CtLocalVariableImpl@final TypeFactory factory = frame.getTypeManager().getFactory(ROLE)" shape=ellipse]
18 [label="6:CtExecutableReferenceImpl@create(java.lang.String)" shape=ellipse]
19 [label="6:CtVirtualElement@create" shape=ellipse]
20 [label="6:CtVariableReadImpl@factory" shape=ellipse]
21 [label="6:CtVariableReadImpl@name" shape=ellipse]
22 [label="6:CtInvocationImpl@((Task) (factory.create(name)))" shape=ellipse]
23 [label="6:CtTypeReferenceImpl@Task" shape=ellipse]
24 [label="6:CtReturnImpl@return ((Task) (factory.create(name)))" shape=ellipse]
25 [label="4:CtBlockImpl@\{
    final TypeFactory factory = frame.getTypeManager().getFactory(ROLE);
    return ((Task) (factory.create(name)));
\}" shape=ellipse]
26 [label="7:CtVirtualElement@te" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@TypeException" shape=ellipse]
28 [label="7:CtCatchVariableImpl@final TypeException te" shape=ellipse]
29 [label="8:CtTypeReferenceImpl@TaskException" shape=ellipse]
30 [label="8:CtLiteralImpl@\"Unable to create task \"" shape=ellipse]
31 [label="8:CtVariableReadImpl@name" shape=ellipse]
32 [label="8:CtBinaryOperatorImpl@\"Unable to create task \" + name" shape=ellipse]
33 [label="8:CtVariableReadImpl@te" shape=ellipse]
34 [label="8:CtConstructorCallImpl@new TaskException(\"Unable to create task \" + name, te)" shape=ellipse]
35 [label="8:CtThrowImpl@throw new TaskException(\"Unable to create task \" + name, te)" shape=ellipse]
36 [label="7:CtBlockImpl@\{
    throw new TaskException(\"Unable to create task \" + name, te);
\}" shape=ellipse]
37 [label="7:CtCatchImpl@ catch (final TypeException te) \{
    throw new TaskException(\"Unable to create task \" + name, te);
\}" shape=ellipse]
38 [label="4:CtTryImpl@try \{
    final TypeFactory factory = frame.getTypeManager().getFactory(ROLE);
    return ((Task) (factory.create(name)));
\} catch (final TypeException te) \{
    throw new TaskException(\"Unable to create task \" + name, te);
\}" shape=ellipse]
39 [label="3:CtBlockImpl@\{
    try \{
        final TypeFactory factory = frame.getTypeManager().getFactory(ROLE);
        return ((Task) (factory.create(name)));
    \} catch (final TypeException te) \{
        throw new TaskException(\"Unable to create task \" + name, te);
    \}
\}" shape=ellipse]
40 [label="2:CtMethodImpl@protected final Task createTask(final String name, final ExecutionFrame frame) throws TaskException \{
    try \{
        final TypeFactory factory = frame.getTypeManager().getFactory(ROLE);
        return ((Task) (factory.create(name)));
    \} catch (final TypeException te) \{
        throw new TaskException(\"Unable to create task \" + name, te);
    \}
\}" shape=ellipse]
41 [label="8:Update@UPDATE" shape=ellipse]
42 [label="9:CtVariableReadImpl@message" shape=ellipse]
43 [label="8:Delete@DELETE" shape=ellipse]
44 [label="8:Insert@INSERT" shape=ellipse]
45 [label="8:CtLocalVariableImpl@final String message = REZ.getString(\"no-create.error\", name)" shape=ellipse]
46 [label="8:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
12 -> 16 [label="Data Dep"];
13 -> 11 [label="AST"];
13 -> 12 [label="AST"];
13 -> 10 [label="AST"];
15 -> 9 [label="AST"];
15 -> 13 [label="AST"];
15 -> 8 [label="AST"];
15 -> 14 [label="AST"];
16 -> 20 [label="Define-Use"];
17 -> 16 [label="AST"];
17 -> 7 [label="AST"];
17 -> 15 [label="AST"];
22 -> 19 [label="AST"];
22 -> 23 [label="AST"];
22 -> 20 [label="AST"];
22 -> 18 [label="AST"];
22 -> 21 [label="AST"];
24 -> 22 [label="AST"];
25 -> 17 [label="AST"];
25 -> 24 [label="AST"];
26 -> 33 [label="Define-Use"];
28 -> 26 [label="AST"];
28 -> 27 [label="AST"];
28 -> 36 [label="Control Dep"];
28 -> 35 [label="Control Dep"];
28 -> 34 [label="Control Dep"];
28 -> 32 [label="Control Dep"];
28 -> 30 [label="Control Dep"];
28 -> 31 [label="Control Dep"];
28 -> 33 [label="Control Dep"];
31 -> 41 [label="Action"];
31 -> 46 [label="Action"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
32 -> 43 [label="Action"];
34 -> 32 [label="AST"];
34 -> 33 [label="AST"];
35 -> 34 [label="AST"];
36 -> 35 [label="AST"];
37 -> 28 [label="AST"];
37 -> 36 [label="AST"];
37 -> 44 [label="Action"];
38 -> 25 [label="AST"];
38 -> 37 [label="AST"];
39 -> 38 [label="AST"];
40 -> 1 [label="AST"];
40 -> 0 [label="AST"];
40 -> 2 [label="AST"];
40 -> 4 [label="AST"];
40 -> 6 [label="AST"];
40 -> 39 [label="AST"];
41 -> 42 [label="Action"];
44 -> 45 [label="Action"];
46 -> 34 [label="Action"];
}