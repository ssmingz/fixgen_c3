digraph "getToolsJar#?" {
0 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
1 [label="2:CtVirtualElement@getToolsJar" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
3 [label="3:CtLiteralImpl@false" shape=ellipse]
4 [label="3:CtVirtualElement@toolsJarAvailable" shape=ellipse]
5 [label="3:CtLocalVariableImpl@boolean toolsJarAvailable = false" shape=ellipse]
6 [label="5:CtExecutableReferenceImpl@forName(java.lang.String)" shape=ellipse]
7 [label="5:CtVirtualElement@forName" shape=ellipse]
8 [label="5:CtTypeAccessImpl@Class" shape=ellipse]
9 [label="5:CtLiteralImpl@\"com.sun.tools.javac.Main\"" shape=ellipse]
10 [label="5:CtInvocationImpl@Class.forName(\"com.sun.tools.javac.Main\")" shape=ellipse]
11 [label="6:CtVariableWriteImpl@toolsJarAvailable" shape=ellipse]
12 [label="6:CtLiteralImpl@true" shape=ellipse]
13 [label="6:CtAssignmentImpl@toolsJarAvailable = true" shape=ellipse]
14 [label="4:CtBlockImpl@\{
    Class.forName(\"com.sun.tools.javac.Main\");
    toolsJarAvailable = true;
\}" shape=ellipse]
15 [label="7:CtVirtualElement@e" shape=ellipse]
16 [label="7:CtTypeReferenceImpl@Exception" shape=ellipse]
17 [label="7:CtCatchVariableImpl@Exception e" shape=ellipse]
18 [label="9:CtExecutableReferenceImpl@forName(java.lang.String)" shape=ellipse]
19 [label="9:CtVirtualElement@forName" shape=ellipse]
20 [label="9:CtTypeAccessImpl@Class" shape=ellipse]
21 [label="9:CtLiteralImpl@\"sun.tools.javac.Main\"" shape=ellipse]
22 [label="9:CtInvocationImpl@Class.forName(\"sun.tools.javac.Main\")" shape=ellipse]
23 [label="10:CtVariableWriteImpl@toolsJarAvailable" shape=ellipse]
24 [label="10:CtLiteralImpl@true" shape=ellipse]
25 [label="10:CtAssignmentImpl@toolsJarAvailable = true" shape=ellipse]
26 [label="8:CtBlockImpl@\{
    Class.forName(\"sun.tools.javac.Main\");
    toolsJarAvailable = true;
\}" shape=ellipse]
27 [label="11:CtVirtualElement@e2" shape=ellipse]
28 [label="11:CtTypeReferenceImpl@Exception" shape=ellipse]
29 [label="11:CtCatchVariableImpl@Exception e2" shape=ellipse]
30 [label="11:CtBlockImpl@\{
\}" shape=ellipse]
31 [label="11:CtCatchImpl@ catch (Exception e2) \{
\}" shape=ellipse]
32 [label="8:CtTryImpl@try \{
    Class.forName(\"sun.tools.javac.Main\");
    toolsJarAvailable = true;
\} catch (Exception e2) \{
\}" shape=ellipse]
33 [label="7:CtBlockImpl@\{
    try \{
        Class.forName(\"sun.tools.javac.Main\");
        toolsJarAvailable = true;
    \} catch (Exception e2) \{
    \}
\}" shape=ellipse]
34 [label="7:CtCatchImpl@ catch (Exception e) \{
    try \{
        Class.forName(\"sun.tools.javac.Main\");
        toolsJarAvailable = true;
    \} catch (Exception e2) \{
    \}
\}" shape=ellipse]
35 [label="4:CtTryImpl@try \{
    Class.forName(\"com.sun.tools.javac.Main\");
    toolsJarAvailable = true;
\} catch (Exception e) \{
    try \{
        Class.forName(\"sun.tools.javac.Main\");
        toolsJarAvailable = true;
    \} catch (Exception e2) \{
    \}
\}" shape=ellipse]
36 [label="14:CtVariableReadImpl@toolsJarAvailable" shape=ellipse]
37 [label="15:CtLiteralImpl@null" shape=ellipse]
38 [label="15:CtReturnImpl@return null" shape=ellipse]
39 [label="14:CtBlockImpl@\{
    return null;
\}" shape=ellipse]
40 [label="14:CtIfImpl@if (toolsJarAvailable) \{
    return null;
\}" shape=ellipse]
41 [label="17:CtTypeReferenceImpl@String" shape=ellipse]
42 [label="17:CtFieldReadImpl@File.separator" shape=ellipse]
43 [label="17:CtLiteralImpl@\"lib\"" shape=ellipse]
44 [label="17:CtBinaryOperatorImpl@(File.separator + \"lib\")" shape=ellipse]
45 [label="17:CtFieldReadImpl@File.separator" shape=ellipse]
46 [label="17:CtBinaryOperatorImpl@((File.separator + \"lib\") + File.separator)" shape=ellipse]
47 [label="17:CtLiteralImpl@\"tools.jar\"" shape=ellipse]
48 [label="17:CtBinaryOperatorImpl@((File.separator + \"lib\") + File.separator) + \"tools.jar\"" shape=ellipse]
49 [label="17:CtVirtualElement@libToolsJar" shape=ellipse]
50 [label="17:CtLocalVariableImpl@String libToolsJar = ((File.separator + \"lib\") + File.separator) + \"tools.jar\"" shape=ellipse]
51 [label="18:CtTypeReferenceImpl@String" shape=ellipse]
52 [label="18:CtExecutableReferenceImpl@getProperty(java.lang.String)" shape=ellipse]
53 [label="18:CtVirtualElement@getProperty" shape=ellipse]
54 [label="18:CtTypeAccessImpl@System" shape=ellipse]
55 [label="18:CtLiteralImpl@\"java.home\"" shape=ellipse]
56 [label="18:CtInvocationImpl@System.getProperty(\"java.home\")" shape=ellipse]
57 [label="18:CtVirtualElement@javaHome" shape=ellipse]
58 [label="18:CtLocalVariableImpl@String javaHome = System.getProperty(\"java.home\")" shape=ellipse]
59 [label="19:CtTypeReferenceImpl@File" shape=ellipse]
60 [label="19:CtTypeReferenceImpl@File" shape=ellipse]
61 [label="19:CtVariableReadImpl@javaHome" shape=ellipse]
62 [label="19:CtVariableReadImpl@libToolsJar" shape=ellipse]
63 [label="19:CtBinaryOperatorImpl@javaHome + libToolsJar" shape=ellipse]
64 [label="19:CtConstructorCallImpl@new File(javaHome + libToolsJar)" shape=ellipse]
65 [label="19:CtVirtualElement@toolsJar" shape=ellipse]
66 [label="19:CtLocalVariableImpl@File toolsJar = new File(javaHome + libToolsJar)" shape=ellipse]
67 [label="20:CtExecutableReferenceImpl@exists()" shape=ellipse]
68 [label="20:CtVirtualElement@exists" shape=ellipse]
69 [label="20:CtVariableReadImpl@toolsJar" shape=ellipse]
70 [label="20:CtInvocationImpl@toolsJar.exists()" shape=ellipse]
71 [label="21:CtVariableReadImpl@toolsJar" shape=ellipse]
72 [label="21:CtReturnImpl@return toolsJar" shape=ellipse]
73 [label="20:CtBlockImpl@\{
    return toolsJar;
\}" shape=ellipse]
74 [label="20:CtIfImpl@if (toolsJar.exists()) \{
    return toolsJar;
\}" shape=ellipse]
75 [label="23:CtExecutableReferenceImpl@endsWith()" shape=ellipse]
76 [label="23:CtVirtualElement@endsWith" shape=ellipse]
77 [label="23:CtExecutableReferenceImpl@toLowerCase(java.util.Locale)" shape=ellipse]
78 [label="23:CtVirtualElement@toLowerCase" shape=ellipse]
79 [label="23:CtVariableReadImpl@javaHome" shape=ellipse]
80 [label="23:CtTypeAccessImpl@US" shape=ellipse]
81 [label="23:CtInvocationImpl@javaHome.toLowerCase(US)" shape=ellipse]
82 [label="23:CtFieldReadImpl@File.separator" shape=ellipse]
83 [label="23:CtLiteralImpl@\"jre\"" shape=ellipse]
84 [label="23:CtBinaryOperatorImpl@File.separator + \"jre\"" shape=ellipse]
85 [label="23:CtInvocationImpl@javaHome.toLowerCase(US).endsWith(File.separator + \"jre\")" shape=ellipse]
86 [label="24:CtVariableWriteImpl@javaHome" shape=ellipse]
87 [label="24:CtExecutableReferenceImpl@substring(int,int)" shape=ellipse]
88 [label="24:CtVirtualElement@substring" shape=ellipse]
89 [label="24:CtVariableReadImpl@javaHome" shape=ellipse]
90 [label="24:CtLiteralImpl@0" shape=ellipse]
91 [label="24:CtExecutableReferenceImpl@length()" shape=ellipse]
92 [label="24:CtVirtualElement@length" shape=ellipse]
93 [label="24:CtVariableReadImpl@javaHome" shape=ellipse]
94 [label="24:CtInvocationImpl@javaHome.length()" shape=ellipse]
95 [label="24:CtExecutableReferenceImpl@length()" shape=ellipse]
96 [label="24:CtVirtualElement@length" shape=ellipse]
97 [label="24:CtLiteralImpl@\"/jre\"" shape=ellipse]
98 [label="24:CtInvocationImpl@\"/jre\".length()" shape=ellipse]
99 [label="24:CtBinaryOperatorImpl@javaHome.length() - \"/jre\".length()" shape=ellipse]
100 [label="24:CtInvocationImpl@javaHome.substring(0, javaHome.length() - \"/jre\".length())" shape=ellipse]
101 [label="24:CtAssignmentImpl@javaHome = javaHome.substring(0, javaHome.length() - \"/jre\".length())" shape=ellipse]
102 [label="25:CtVariableWriteImpl@toolsJar" shape=ellipse]
103 [label="25:CtTypeReferenceImpl@File" shape=ellipse]
104 [label="25:CtVariableReadImpl@javaHome" shape=ellipse]
105 [label="25:CtVariableReadImpl@libToolsJar" shape=ellipse]
106 [label="25:CtBinaryOperatorImpl@javaHome + libToolsJar" shape=ellipse]
107 [label="25:CtConstructorCallImpl@new File(javaHome + libToolsJar)" shape=ellipse]
108 [label="25:CtAssignmentImpl@toolsJar = new File(javaHome + libToolsJar)" shape=ellipse]
109 [label="23:CtBlockImpl@\{
    javaHome = javaHome.substring(0, javaHome.length() - \"/jre\".length());
    toolsJar = new File(javaHome + libToolsJar);
\}" shape=ellipse]
110 [label="23:CtIfImpl@if (javaHome.toLowerCase(US).endsWith(File.separator + \"jre\")) \{
    javaHome = javaHome.substring(0, javaHome.length() - \"/jre\".length());
    toolsJar = new File(javaHome + libToolsJar);
\}" shape=ellipse]
111 [label="27:CtExecutableReferenceImpl@exists()" shape=ellipse]
112 [label="27:CtVirtualElement@exists" shape=ellipse]
113 [label="27:CtVariableReadImpl@toolsJar" shape=ellipse]
114 [label="27:CtInvocationImpl@toolsJar.exists()" shape=ellipse]
115 [label="27:CtUnaryOperatorImpl@!toolsJar.exists()" shape=ellipse]
116 [label="28:CtExecutableReferenceImpl@println(char[])" shape=ellipse]
117 [label="28:CtVirtualElement@println" shape=ellipse]
118 [label="28:CtTypeAccessImpl@System" shape=ellipse]
119 [label="28:CtFieldReadImpl@System.out" shape=ellipse]
120 [label="28:CtFieldReferenceImpl@java.lang.System.out" shape=ellipse]
121 [label="29:CtLiteralImpl@\"Unable to locate tools.jar. \"" shape=ellipse]
122 [label="29:CtLiteralImpl@\"Expected to find it in \"" shape=ellipse]
123 [label="29:CtBinaryOperatorImpl@(\"Unable to locate tools.jar. \" + \"Expected to find it in \")" shape=ellipse]
124 [label="29:CtExecutableReferenceImpl@getPath()" shape=ellipse]
125 [label="29:CtVirtualElement@getPath" shape=ellipse]
126 [label="29:CtVariableReadImpl@toolsJar" shape=ellipse]
127 [label="29:CtInvocationImpl@toolsJar.getPath()" shape=ellipse]
128 [label="29:CtBinaryOperatorImpl@(\"Unable to locate tools.jar. \" + \"Expected to find it in \") + toolsJar.getPath()" shape=ellipse]
129 [label="28:CtInvocationImpl@System.out.println((\"Unable to locate tools.jar. \" + \"Expected to find it in \") + toolsJar.getPath())" shape=ellipse]
130 [label="30:CtLiteralImpl@null" shape=ellipse]
131 [label="30:CtReturnImpl@return null" shape=ellipse]
132 [label="27:CtBlockImpl@\{
    System.out.println((\"Unable to locate tools.jar. \" + \"Expected to find it in \") + toolsJar.getPath());
    return null;
\}" shape=ellipse]
133 [label="27:CtIfImpl@if (!toolsJar.exists()) \{
    System.out.println((\"Unable to locate tools.jar. \" + \"Expected to find it in \") + toolsJar.getPath());
    return null;
\}" shape=ellipse]
134 [label="32:CtVariableReadImpl@toolsJar" shape=ellipse]
135 [label="32:CtReturnImpl@return toolsJar" shape=ellipse]
136 [label="2:CtBlockImpl@\{
    boolean toolsJarAvailable = false;
    try \{
        Class.forName(\"com.sun.tools.javac.Main\");
        toolsJarAvailable = true;
    \} catch (Exception e) \{
        try \{
            Class.forName(\"sun.tools.javac.Main\");
            toolsJarAvailable = true;
        \} catch (Exception e2) \{
        \}
    \}
    if (toolsJarAvailable) \{
        return null;
    \}
    String libToolsJar = ((File.separator + \"lib\") + File.separator) + \"tools.jar\";
    String javaHome = System.getProperty(\"java.home\");
    File toolsJar = new File(javaHome + libToolsJar);
    if (toolsJar.exists()) \{
        return toolsJar;
    \}
    if (javaHome.toLowerCase(US).endsWith(File.separator + \"jre\")) \{
        javaHome = javaHome.substring(0, javaHome.length() - \"/jre\".length());
        toolsJar = new File(javaHome + libToolsJar);
    \}
    if (!toolsJar.exists()) \{
        System.out.println((\"Unable to locate tools.jar. \" + \"Expected to find it in \") + toolsJar.getPath());
        return null;
    \}
    return toolsJar;
\}" shape=ellipse]
137 [label="2:CtMethodImpl@public static File getToolsJar() \{
    boolean toolsJarAvailable = false;
    try \{
        Class.forName(\"com.sun.tools.javac.Main\");
        toolsJarAvailable = true;
    \} catch (Exception e) \{
        try \{
            Class.forName(\"sun.tools.javac.Main\");
            toolsJarAvailable = true;
        \} catch (Exception e2) \{
        \}
    \}
    if (toolsJarAvailable) \{
        return null;
    \}
    String libToolsJar = ((File.separator + \"lib\") + File.separator) + \"tools.jar\";
    String javaHome = System.getProperty(\"java.home\");
    File toolsJar = new File(javaHome + libToolsJar);
    if (toolsJar.exists()) \{
        return toolsJar;
    \}
    if (javaHome.toLowerCase(US).endsWith(File.separator + \"jre\")) \{
        javaHome = javaHome.substring(0, javaHome.length() - \"/jre\".length());
        toolsJar = new File(javaHome + libToolsJar);
    \}
    if (!toolsJar.exists()) \{
        System.out.println((\"Unable to locate tools.jar. \" + \"Expected to find it in \") + toolsJar.getPath());
        return null;
    \}
    return toolsJar;
\}" shape=ellipse]
138 [label="23:Update@UPDATE" shape=ellipse]
139 [label="23:CtTypeAccessImpl@ENGLISH" shape=ellipse]
5 -> 4 [label="AST"];
5 -> 2 [label="AST"];
5 -> 3 [label="AST"];
10 -> 7 [label="AST"];
10 -> 8 [label="AST"];
10 -> 6 [label="AST"];
10 -> 9 [label="AST"];
13 -> 11 [label="AST"];
13 -> 12 [label="AST"];
14 -> 10 [label="AST"];
14 -> 13 [label="AST"];
17 -> 15 [label="AST"];
17 -> 16 [label="AST"];
17 -> 33 [label="Control Dep"];
17 -> 32 [label="Control Dep"];
17 -> 26 [label="Control Dep"];
17 -> 22 [label="Control Dep"];
17 -> 18 [label="Control Dep"];
17 -> 20 [label="Control Dep"];
17 -> 21 [label="Control Dep"];
17 -> 25 [label="Control Dep"];
17 -> 23 [label="Control Dep"];
17 -> 24 [label="Control Dep"];
17 -> 31 [label="Control Dep"];
17 -> 29 [label="Control Dep"];
22 -> 19 [label="AST"];
22 -> 20 [label="AST"];
22 -> 18 [label="AST"];
22 -> 21 [label="AST"];
23 -> 36 [label="Define-Use"];
25 -> 23 [label="AST"];
25 -> 24 [label="AST"];
26 -> 22 [label="AST"];
26 -> 25 [label="AST"];
29 -> 27 [label="AST"];
29 -> 28 [label="AST"];
29 -> 30 [label="Control Dep"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
32 -> 26 [label="AST"];
32 -> 31 [label="AST"];
33 -> 32 [label="AST"];
34 -> 17 [label="AST"];
34 -> 33 [label="AST"];
35 -> 14 [label="AST"];
35 -> 34 [label="AST"];
36 -> 39 [label="Control Dep"];
36 -> 38 [label="Control Dep"];
36 -> 37 [label="Control Dep"];
38 -> 37 [label="AST"];
39 -> 38 [label="AST"];
40 -> 36 [label="AST"];
40 -> 39 [label="AST"];
42 -> 49 [label="Data Dep"];
44 -> 42 [label="AST"];
44 -> 43 [label="AST"];
45 -> 49 [label="Data Dep"];
46 -> 44 [label="AST"];
46 -> 45 [label="AST"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
49 -> 62 [label="Define-Use"];
49 -> 105 [label="Define-Use"];
50 -> 49 [label="AST"];
50 -> 41 [label="AST"];
50 -> 48 [label="AST"];
56 -> 53 [label="AST"];
56 -> 54 [label="AST"];
56 -> 52 [label="AST"];
56 -> 55 [label="AST"];
57 -> 61 [label="Define-Use"];
57 -> 79 [label="Define-Use"];
57 -> 89 [label="Define-Use"];
57 -> 93 [label="Define-Use"];
57 -> 104 [label="Define-Use"];
58 -> 57 [label="AST"];
58 -> 51 [label="AST"];
58 -> 56 [label="AST"];
61 -> 65 [label="Data Dep"];
62 -> 65 [label="Data Dep"];
63 -> 61 [label="AST"];
63 -> 62 [label="AST"];
64 -> 63 [label="AST"];
65 -> 69 [label="Define-Use"];
65 -> 71 [label="Define-Use"];
65 -> 113 [label="Define-Use"];
65 -> 126 [label="Define-Use"];
65 -> 134 [label="Define-Use"];
66 -> 65 [label="AST"];
66 -> 59 [label="AST"];
66 -> 64 [label="AST"];
70 -> 68 [label="AST"];
70 -> 69 [label="AST"];
70 -> 67 [label="AST"];
70 -> 73 [label="Control Dep"];
70 -> 72 [label="Control Dep"];
70 -> 71 [label="Control Dep"];
72 -> 71 [label="AST"];
73 -> 72 [label="AST"];
74 -> 70 [label="AST"];
74 -> 73 [label="AST"];
80 -> 138 [label="Action"];
81 -> 78 [label="AST"];
81 -> 79 [label="AST"];
81 -> 77 [label="AST"];
81 -> 80 [label="AST"];
84 -> 82 [label="AST"];
84 -> 83 [label="AST"];
85 -> 76 [label="AST"];
85 -> 81 [label="AST"];
85 -> 75 [label="AST"];
85 -> 84 [label="AST"];
85 -> 109 [label="Control Dep"];
85 -> 101 [label="Control Dep"];
85 -> 86 [label="Control Dep"];
85 -> 100 [label="Control Dep"];
85 -> 87 [label="Control Dep"];
85 -> 89 [label="Control Dep"];
85 -> 90 [label="Control Dep"];
85 -> 99 [label="Control Dep"];
85 -> 94 [label="Control Dep"];
85 -> 91 [label="Control Dep"];
85 -> 93 [label="Control Dep"];
85 -> 98 [label="Control Dep"];
85 -> 95 [label="Control Dep"];
85 -> 97 [label="Control Dep"];
85 -> 108 [label="Control Dep"];
85 -> 102 [label="Control Dep"];
85 -> 107 [label="Control Dep"];
85 -> 106 [label="Control Dep"];
85 -> 104 [label="Control Dep"];
85 -> 105 [label="Control Dep"];
86 -> 104 [label="Define-Use"];
89 -> 86 [label="Data Dep"];
93 -> 86 [label="Data Dep"];
94 -> 92 [label="AST"];
94 -> 93 [label="AST"];
94 -> 91 [label="AST"];
98 -> 96 [label="AST"];
98 -> 97 [label="AST"];
98 -> 95 [label="AST"];
99 -> 94 [label="AST"];
99 -> 98 [label="AST"];
100 -> 88 [label="AST"];
100 -> 89 [label="AST"];
100 -> 87 [label="AST"];
100 -> 90 [label="AST"];
100 -> 99 [label="AST"];
101 -> 86 [label="AST"];
101 -> 100 [label="AST"];
102 -> 113 [label="Define-Use"];
102 -> 126 [label="Define-Use"];
102 -> 134 [label="Define-Use"];
104 -> 102 [label="Data Dep"];
105 -> 102 [label="Data Dep"];
106 -> 104 [label="AST"];
106 -> 105 [label="AST"];
107 -> 106 [label="AST"];
108 -> 102 [label="AST"];
108 -> 107 [label="AST"];
109 -> 101 [label="AST"];
109 -> 108 [label="AST"];
110 -> 85 [label="AST"];
110 -> 109 [label="AST"];
114 -> 112 [label="AST"];
114 -> 113 [label="AST"];
114 -> 111 [label="AST"];
115 -> 114 [label="AST"];
115 -> 132 [label="Control Dep"];
115 -> 129 [label="Control Dep"];
115 -> 116 [label="Control Dep"];
115 -> 119 [label="Control Dep"];
115 -> 118 [label="Control Dep"];
115 -> 128 [label="Control Dep"];
115 -> 123 [label="Control Dep"];
115 -> 121 [label="Control Dep"];
115 -> 122 [label="Control Dep"];
115 -> 127 [label="Control Dep"];
115 -> 124 [label="Control Dep"];
115 -> 126 [label="Control Dep"];
115 -> 131 [label="Control Dep"];
115 -> 130 [label="Control Dep"];
119 -> 118 [label="AST"];
119 -> 120 [label="AST"];
123 -> 121 [label="AST"];
123 -> 122 [label="AST"];
127 -> 125 [label="AST"];
127 -> 126 [label="AST"];
127 -> 124 [label="AST"];
128 -> 123 [label="AST"];
128 -> 127 [label="AST"];
129 -> 117 [label="AST"];
129 -> 119 [label="AST"];
129 -> 116 [label="AST"];
129 -> 128 [label="AST"];
131 -> 130 [label="AST"];
132 -> 129 [label="AST"];
132 -> 131 [label="AST"];
133 -> 115 [label="AST"];
133 -> 132 [label="AST"];
135 -> 134 [label="AST"];
136 -> 5 [label="AST"];
136 -> 35 [label="AST"];
136 -> 40 [label="AST"];
136 -> 50 [label="AST"];
136 -> 58 [label="AST"];
136 -> 66 [label="AST"];
136 -> 74 [label="AST"];
136 -> 110 [label="AST"];
136 -> 133 [label="AST"];
136 -> 135 [label="AST"];
137 -> 1 [label="AST"];
137 -> 0 [label="AST"];
137 -> 136 [label="AST"];
138 -> 139 [label="Action"];
}