digraph "setReplace#?,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@setReplace" shape=ellipse]
2 [label="2:CtParameterImpl@String replace" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="3:CtFieldReadImpl@subs" shape=ellipse]
5 [label="3:CtLiteralImpl@null" shape=ellipse]
6 [label="3:CtBinaryOperatorImpl@subs != null" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@BuildException" shape=ellipse]
8 [label="4:CtLiteralImpl@\"Only one substitution expression is allowed\"" shape=ellipse]
9 [label="4:CtConstructorCallImpl@new BuildException(\"Only one substitution expression is allowed\")" shape=ellipse]
10 [label="4:CtThrowImpl@throw new BuildException(\"Only one substitution expression is allowed\")" shape=ellipse]
11 [label="3:CtBlockImpl@\{
    throw new BuildException(\"Only one substitution expression is allowed\");
\}" shape=ellipse]
12 [label="3:CtIfImpl@if (subs != null) \{
    throw new BuildException(\"Only one substitution expression is allowed\");
\}" shape=ellipse]
13 [label="6:CtFieldWriteImpl@subs" shape=ellipse]
14 [label="6:CtTypeReferenceImpl@Substitution" shape=ellipse]
15 [label="6:CtConstructorCallImpl@new Substitution()" shape=ellipse]
16 [label="6:CtAssignmentImpl@subs = new Substitution()" shape=ellipse]
17 [label="7:CtExecutableReferenceImpl@setExpression(java.lang.String)" shape=ellipse]
18 [label="7:CtVirtualElement@setExpression" shape=ellipse]
19 [label="7:CtFieldReadImpl@subs" shape=ellipse]
20 [label="7:CtVariableReadImpl@replace" shape=ellipse]
21 [label="7:CtInvocationImpl@subs.setExpression(replace)" shape=ellipse]
22 [label="2:CtBlockImpl@\{
    if (subs != null) \{
        throw new BuildException(\"Only one substitution expression is allowed\");
    \}
    subs = new Substitution();
    subs.setExpression(replace);
\}" shape=ellipse]
23 [label="2:CtMethodImpl@public void setReplace(String replace) \{
    if (subs != null) \{
        throw new BuildException(\"Only one substitution expression is allowed\");
    \}
    subs = new Substitution();
    subs.setExpression(replace);
\}" shape=ellipse]
24 [label="4:Update@UPDATE" shape=ellipse]
25 [label="4:CtConstructorCallImpl@new TaskException(\"Only one substitution expression is allowed\")" shape=ellipse]
2 -> 3 [label="AST"];
6 -> 4 [label="AST"];
6 -> 5 [label="AST"];
6 -> 11 [label="Control Dep"];
6 -> 10 [label="Control Dep"];
6 -> 9 [label="Control Dep"];
6 -> 8 [label="Control Dep"];
9 -> 8 [label="AST"];
9 -> 24 [label="Action"];
10 -> 9 [label="AST"];
11 -> 10 [label="AST"];
12 -> 6 [label="AST"];
12 -> 11 [label="AST"];
13 -> 19 [label="Define-Use"];
16 -> 13 [label="AST"];
16 -> 15 [label="AST"];
21 -> 18 [label="AST"];
21 -> 19 [label="AST"];
21 -> 17 [label="AST"];
21 -> 20 [label="AST"];
22 -> 12 [label="AST"];
22 -> 16 [label="AST"];
22 -> 21 [label="AST"];
23 -> 1 [label="AST"];
23 -> 0 [label="AST"];
23 -> 2 [label="AST"];
23 -> 22 [label="AST"];
24 -> 25 [label="Action"];
}