digraph "printUsage#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@printUsage" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
3 [label="3:CtExecutableReferenceImpl@getProperty(java.lang.String)" shape=ellipse]
4 [label="3:CtVirtualElement@getProperty" shape=ellipse]
5 [label="3:CtTypeAccessImpl@System" shape=ellipse]
6 [label="3:CtLiteralImpl@\"line.separator\"" shape=ellipse]
7 [label="3:CtInvocationImpl@System.getProperty(\"line.separator\")" shape=ellipse]
8 [label="3:CtVirtualElement@lSep" shape=ellipse]
9 [label="3:CtLocalVariableImpl@String lSep = System.getProperty(\"line.separator\")" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@StringBuffer" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@StringBuffer" shape=ellipse]
12 [label="4:CtConstructorCallImpl@new StringBuffer()" shape=ellipse]
13 [label="4:CtVirtualElement@msg" shape=ellipse]
14 [label="4:CtLocalVariableImpl@StringBuffer msg = new StringBuffer()" shape=ellipse]
15 [label="5:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
16 [label="5:CtVirtualElement@append" shape=ellipse]
17 [label="5:CtVariableReadImpl@msg" shape=ellipse]
18 [label="5:CtLiteralImpl@\"ant [options] [target [target2 [target3] ...]]\"" shape=ellipse]
19 [label="5:CtVariableReadImpl@lSep" shape=ellipse]
20 [label="5:CtBinaryOperatorImpl@\"ant [options] [target [target2 [target3] ...]]\" + lSep" shape=ellipse]
21 [label="5:CtInvocationImpl@msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep)" shape=ellipse]
22 [label="6:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
23 [label="6:CtVirtualElement@append" shape=ellipse]
24 [label="6:CtVariableReadImpl@msg" shape=ellipse]
25 [label="6:CtLiteralImpl@\"Options: \"" shape=ellipse]
26 [label="6:CtVariableReadImpl@lSep" shape=ellipse]
27 [label="6:CtBinaryOperatorImpl@\"Options: \" + lSep" shape=ellipse]
28 [label="6:CtInvocationImpl@msg.append(\"Options: \" + lSep)" shape=ellipse]
29 [label="7:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
30 [label="7:CtVirtualElement@append" shape=ellipse]
31 [label="7:CtVariableReadImpl@msg" shape=ellipse]
32 [label="7:CtLiteralImpl@\"  -help                  print this message\"" shape=ellipse]
33 [label="7:CtVariableReadImpl@lSep" shape=ellipse]
34 [label="7:CtBinaryOperatorImpl@\"  -help                  print this message\" + lSep" shape=ellipse]
35 [label="7:CtInvocationImpl@msg.append(\"  -help                  print this message\" + lSep)" shape=ellipse]
36 [label="8:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
37 [label="8:CtVirtualElement@append" shape=ellipse]
38 [label="8:CtVariableReadImpl@msg" shape=ellipse]
39 [label="8:CtLiteralImpl@\"  -projecthelp           print project help information\"" shape=ellipse]
40 [label="8:CtVariableReadImpl@lSep" shape=ellipse]
41 [label="8:CtBinaryOperatorImpl@\"  -projecthelp           print project help information\" + lSep" shape=ellipse]
42 [label="8:CtInvocationImpl@msg.append(\"  -projecthelp           print project help information\" + lSep)" shape=ellipse]
43 [label="9:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
44 [label="9:CtVirtualElement@append" shape=ellipse]
45 [label="9:CtVariableReadImpl@msg" shape=ellipse]
46 [label="9:CtLiteralImpl@\"  -version               print the version information and exit\"" shape=ellipse]
47 [label="9:CtVariableReadImpl@lSep" shape=ellipse]
48 [label="9:CtBinaryOperatorImpl@\"  -version               print the version information and exit\" + lSep" shape=ellipse]
49 [label="9:CtInvocationImpl@msg.append(\"  -version               print the version information and exit\" + lSep)" shape=ellipse]
50 [label="10:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
51 [label="10:CtVirtualElement@append" shape=ellipse]
52 [label="10:CtVariableReadImpl@msg" shape=ellipse]
53 [label="10:CtLiteralImpl@\"  -quiet                 be extra quiet\"" shape=ellipse]
54 [label="10:CtVariableReadImpl@lSep" shape=ellipse]
55 [label="10:CtBinaryOperatorImpl@\"  -quiet                 be extra quiet\" + lSep" shape=ellipse]
56 [label="10:CtInvocationImpl@msg.append(\"  -quiet                 be extra quiet\" + lSep)" shape=ellipse]
57 [label="11:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
58 [label="11:CtVirtualElement@append" shape=ellipse]
59 [label="11:CtVariableReadImpl@msg" shape=ellipse]
60 [label="11:CtLiteralImpl@\"  -verbose               be extra verbose\"" shape=ellipse]
61 [label="11:CtVariableReadImpl@lSep" shape=ellipse]
62 [label="11:CtBinaryOperatorImpl@\"  -verbose               be extra verbose\" + lSep" shape=ellipse]
63 [label="11:CtInvocationImpl@msg.append(\"  -verbose               be extra verbose\" + lSep)" shape=ellipse]
64 [label="12:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
65 [label="12:CtVirtualElement@append" shape=ellipse]
66 [label="12:CtVariableReadImpl@msg" shape=ellipse]
67 [label="12:CtLiteralImpl@\"  -emacs                 produce logging information without adornments\"" shape=ellipse]
68 [label="12:CtVariableReadImpl@lSep" shape=ellipse]
69 [label="12:CtBinaryOperatorImpl@\"  -emacs                 produce logging information without adornments\" + lSep" shape=ellipse]
70 [label="12:CtInvocationImpl@msg.append(\"  -emacs                 produce logging information without adornments\" + lSep)" shape=ellipse]
71 [label="13:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
72 [label="13:CtVirtualElement@append" shape=ellipse]
73 [label="13:CtVariableReadImpl@msg" shape=ellipse]
74 [label="13:CtLiteralImpl@\"  -logfile <file>        use given file for log\"" shape=ellipse]
75 [label="13:CtVariableReadImpl@lSep" shape=ellipse]
76 [label="13:CtBinaryOperatorImpl@\"  -logfile <file>        use given file for log\" + lSep" shape=ellipse]
77 [label="13:CtInvocationImpl@msg.append(\"  -logfile <file>        use given file for log\" + lSep)" shape=ellipse]
78 [label="14:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
79 [label="14:CtVirtualElement@append" shape=ellipse]
80 [label="14:CtVariableReadImpl@msg" shape=ellipse]
81 [label="14:CtLiteralImpl@\"  -logger <classname>    the class which is to perform logging\"" shape=ellipse]
82 [label="14:CtVariableReadImpl@lSep" shape=ellipse]
83 [label="14:CtBinaryOperatorImpl@\"  -logger <classname>    the class which is to perform logging\" + lSep" shape=ellipse]
84 [label="14:CtInvocationImpl@msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep)" shape=ellipse]
85 [label="15:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
86 [label="15:CtVirtualElement@append" shape=ellipse]
87 [label="15:CtVariableReadImpl@msg" shape=ellipse]
88 [label="15:CtLiteralImpl@\"  -listener <classname>  add an instance of class as a project listener\"" shape=ellipse]
89 [label="15:CtVariableReadImpl@lSep" shape=ellipse]
90 [label="15:CtBinaryOperatorImpl@\"  -listener <classname>  add an instance of class as a project listener\" + lSep" shape=ellipse]
91 [label="15:CtInvocationImpl@msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep)" shape=ellipse]
92 [label="16:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
93 [label="16:CtVirtualElement@append" shape=ellipse]
94 [label="16:CtVariableReadImpl@msg" shape=ellipse]
95 [label="16:CtLiteralImpl@\"  -buildfile <file>      use given buildfile\"" shape=ellipse]
96 [label="16:CtVariableReadImpl@lSep" shape=ellipse]
97 [label="16:CtBinaryOperatorImpl@\"  -buildfile <file>      use given buildfile\" + lSep" shape=ellipse]
98 [label="16:CtInvocationImpl@msg.append(\"  -buildfile <file>      use given buildfile\" + lSep)" shape=ellipse]
99 [label="17:CtExecutableReferenceImpl@append(java.lang.String)" shape=ellipse]
100 [label="17:CtVirtualElement@append" shape=ellipse]
101 [label="17:CtVariableReadImpl@msg" shape=ellipse]
102 [label="17:CtLiteralImpl@\"  -D<property>=<value>   use value for given property\"" shape=ellipse]
103 [label="17:CtVariableReadImpl@lSep" shape=ellipse]
104 [label="17:CtBinaryOperatorImpl@\"  -D<property>=<value>   use value for given property\" + lSep" shape=ellipse]
105 [label="17:CtInvocationImpl@msg.append(\"  -D<property>=<value>   use value for given property\" + lSep)" shape=ellipse]
106 [label="18:CtExecutableReferenceImpl@println(java.lang.String)" shape=ellipse]
107 [label="18:CtVirtualElement@println" shape=ellipse]
108 [label="18:CtTypeAccessImpl@System" shape=ellipse]
109 [label="18:CtFieldReadImpl@System.out" shape=ellipse]
110 [label="18:CtFieldReferenceImpl@java.lang.System.out" shape=ellipse]
111 [label="18:CtExecutableReferenceImpl@toString()" shape=ellipse]
112 [label="18:CtVirtualElement@toString" shape=ellipse]
113 [label="18:CtVariableReadImpl@msg" shape=ellipse]
114 [label="18:CtInvocationImpl@msg.toString()" shape=ellipse]
115 [label="18:CtInvocationImpl@System.out.println(msg.toString())" shape=ellipse]
116 [label="2:CtBlockImpl@\{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -projecthelp           print project help information\" + lSep);
    msg.append(\"  -version               print the version information and exit\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);
    msg.append(\"  -logfile <file>        use given file for log\" + lSep);
    msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);
    msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}" shape=ellipse]
117 [label="2:CtMethodImpl@private static void printUsage() \{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -projecthelp           print project help information\" + lSep);
    msg.append(\"  -version               print the version information and exit\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);
    msg.append(\"  -logfile <file>        use given file for log\" + lSep);
    msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);
    msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}" shape=ellipse]
118 [label="12:Insert@INSERT" shape=ellipse]
119 [label="12:CtInvocationImpl@msg.append(\"  -debug                 print debugging information\" + lSep)" shape=ellipse]
7 -> 4 [label="AST"];
7 -> 5 [label="AST"];
7 -> 3 [label="AST"];
7 -> 6 [label="AST"];
8 -> 19 [label="Define-Use"];
8 -> 26 [label="Define-Use"];
8 -> 33 [label="Define-Use"];
8 -> 40 [label="Define-Use"];
8 -> 47 [label="Define-Use"];
8 -> 54 [label="Define-Use"];
8 -> 61 [label="Define-Use"];
8 -> 68 [label="Define-Use"];
8 -> 75 [label="Define-Use"];
8 -> 82 [label="Define-Use"];
8 -> 89 [label="Define-Use"];
8 -> 96 [label="Define-Use"];
8 -> 103 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 2 [label="AST"];
9 -> 7 [label="AST"];
13 -> 17 [label="Define-Use"];
13 -> 24 [label="Define-Use"];
13 -> 31 [label="Define-Use"];
13 -> 38 [label="Define-Use"];
13 -> 45 [label="Define-Use"];
13 -> 52 [label="Define-Use"];
13 -> 59 [label="Define-Use"];
13 -> 66 [label="Define-Use"];
13 -> 73 [label="Define-Use"];
13 -> 80 [label="Define-Use"];
13 -> 87 [label="Define-Use"];
13 -> 94 [label="Define-Use"];
13 -> 101 [label="Define-Use"];
13 -> 113 [label="Define-Use"];
14 -> 13 [label="AST"];
14 -> 10 [label="AST"];
14 -> 12 [label="AST"];
20 -> 18 [label="AST"];
20 -> 19 [label="AST"];
21 -> 16 [label="AST"];
21 -> 17 [label="AST"];
21 -> 15 [label="AST"];
21 -> 20 [label="AST"];
27 -> 25 [label="AST"];
27 -> 26 [label="AST"];
28 -> 23 [label="AST"];
28 -> 24 [label="AST"];
28 -> 22 [label="AST"];
28 -> 27 [label="AST"];
34 -> 32 [label="AST"];
34 -> 33 [label="AST"];
35 -> 30 [label="AST"];
35 -> 31 [label="AST"];
35 -> 29 [label="AST"];
35 -> 34 [label="AST"];
41 -> 39 [label="AST"];
41 -> 40 [label="AST"];
42 -> 37 [label="AST"];
42 -> 38 [label="AST"];
42 -> 36 [label="AST"];
42 -> 41 [label="AST"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
49 -> 44 [label="AST"];
49 -> 45 [label="AST"];
49 -> 43 [label="AST"];
49 -> 48 [label="AST"];
55 -> 53 [label="AST"];
55 -> 54 [label="AST"];
56 -> 51 [label="AST"];
56 -> 52 [label="AST"];
56 -> 50 [label="AST"];
56 -> 55 [label="AST"];
62 -> 60 [label="AST"];
62 -> 61 [label="AST"];
63 -> 58 [label="AST"];
63 -> 59 [label="AST"];
63 -> 57 [label="AST"];
63 -> 62 [label="AST"];
69 -> 67 [label="AST"];
69 -> 68 [label="AST"];
70 -> 65 [label="AST"];
70 -> 66 [label="AST"];
70 -> 64 [label="AST"];
70 -> 69 [label="AST"];
76 -> 74 [label="AST"];
76 -> 75 [label="AST"];
77 -> 72 [label="AST"];
77 -> 73 [label="AST"];
77 -> 71 [label="AST"];
77 -> 76 [label="AST"];
83 -> 81 [label="AST"];
83 -> 82 [label="AST"];
84 -> 79 [label="AST"];
84 -> 80 [label="AST"];
84 -> 78 [label="AST"];
84 -> 83 [label="AST"];
90 -> 88 [label="AST"];
90 -> 89 [label="AST"];
91 -> 86 [label="AST"];
91 -> 87 [label="AST"];
91 -> 85 [label="AST"];
91 -> 90 [label="AST"];
97 -> 95 [label="AST"];
97 -> 96 [label="AST"];
98 -> 93 [label="AST"];
98 -> 94 [label="AST"];
98 -> 92 [label="AST"];
98 -> 97 [label="AST"];
104 -> 102 [label="AST"];
104 -> 103 [label="AST"];
105 -> 100 [label="AST"];
105 -> 101 [label="AST"];
105 -> 99 [label="AST"];
105 -> 104 [label="AST"];
109 -> 108 [label="AST"];
109 -> 110 [label="AST"];
114 -> 112 [label="AST"];
114 -> 113 [label="AST"];
114 -> 111 [label="AST"];
115 -> 107 [label="AST"];
115 -> 109 [label="AST"];
115 -> 106 [label="AST"];
115 -> 114 [label="AST"];
116 -> 9 [label="AST"];
116 -> 14 [label="AST"];
116 -> 21 [label="AST"];
116 -> 28 [label="AST"];
116 -> 35 [label="AST"];
116 -> 42 [label="AST"];
116 -> 49 [label="AST"];
116 -> 56 [label="AST"];
116 -> 63 [label="AST"];
116 -> 70 [label="AST"];
116 -> 77 [label="AST"];
116 -> 84 [label="AST"];
116 -> 91 [label="AST"];
116 -> 98 [label="AST"];
116 -> 105 [label="AST"];
116 -> 115 [label="AST"];
117 -> 1 [label="AST"];
117 -> 0 [label="AST"];
117 -> 116 [label="AST"];
117 -> 118 [label="Action"];
118 -> 119 [label="Action"];
}