digraph "Pattern" {
0 [label="printUsage#?#10:INSERT
printUsage#?#12:INSERT
printUsage#?#8:INSERT" shape=ellipse]
1 [label="printUsage#?#2:private static void printUsage() \{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}
printUsage#?#2:private static void printUsage() \{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -projecthelp           print project help information\" + lSep);
    msg.append(\"  -version               print the version information and exit\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);
    msg.append(\"  -logfile <file>        use given file for log\" + lSep);
    msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);
    msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}
printUsage#?#2:private static void printUsage() \{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -version               print the version information and exit\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);
    msg.append(\"  -logfile <file>        use given file for log\" + lSep);
    msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);
    msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}" shape=ellipse]
2 [label="printUsage#?#2:printUsage
printUsage#?#2:printUsage
printUsage#?#2:printUsage" shape=ellipse]
3 [label="printUsage#?#2:void
printUsage#?#2:void
printUsage#?#2:void" shape=ellipse]
4 [label="printUsage#?#2:\{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}
printUsage#?#2:\{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -projecthelp           print project help information\" + lSep);
    msg.append(\"  -version               print the version information and exit\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);
    msg.append(\"  -logfile <file>        use given file for log\" + lSep);
    msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);
    msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}
printUsage#?#2:\{
    String lSep = System.getProperty(\"line.separator\");
    StringBuffer msg = new StringBuffer();
    msg.append(\"ant [options] [target]\" + lSep);
    msg.append(\"Options: \" + lSep);
    msg.append(\"  -help                  print this message\" + lSep);
    msg.append(\"  -version               print the version information and exit\" + lSep);
    msg.append(\"  -quiet                 be extra quiet\" + lSep);
    msg.append(\"  -verbose               be extra verbose\" + lSep);
    msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);
    msg.append(\"  -logfile <file>        use given file for log\" + lSep);
    msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);
    msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);
    msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);
    msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);
    System.out.println(msg.toString());
\}" shape=ellipse]
5 [label="printUsage#?#3:String lSep = System.getProperty(\"line.separator\")
printUsage#?#3:String lSep = System.getProperty(\"line.separator\")
printUsage#?#3:String lSep = System.getProperty(\"line.separator\")" shape=ellipse]
6 [label="printUsage#?#4:StringBuffer msg = new StringBuffer()
printUsage#?#4:StringBuffer msg = new StringBuffer()
printUsage#?#4:StringBuffer msg = new StringBuffer()" shape=ellipse]
7 [label="printUsage#?#5:msg.append(\"ant [options] [target]\" + lSep)
printUsage#?#5:msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep)
printUsage#?#5:msg.append(\"ant [options] [target]\" + lSep)" shape=ellipse]
8 [label="printUsage#?#6:msg.append(\"Options: \" + lSep)
printUsage#?#6:msg.append(\"Options: \" + lSep)
printUsage#?#6:msg.append(\"Options: \" + lSep)" shape=ellipse]
9 [label="printUsage#?#7:msg.append(\"  -help                  print this message\" + lSep)
printUsage#?#7:msg.append(\"  -help                  print this message\" + lSep)
printUsage#?#7:msg.append(\"  -help                  print this message\" + lSep)" shape=ellipse]
10 [label="printUsage#?#8:msg.append(\"  -quiet                 be extra quiet\" + lSep)
printUsage#?#10:msg.append(\"  -quiet                 be extra quiet\" + lSep)
printUsage#?#9:msg.append(\"  -quiet                 be extra quiet\" + lSep)" shape=ellipse]
11 [label="printUsage#?#9:msg.append(\"  -verbose               be extra verbose\" + lSep)
printUsage#?#11:msg.append(\"  -verbose               be extra verbose\" + lSep)
printUsage#?#10:msg.append(\"  -verbose               be extra verbose\" + lSep)" shape=ellipse]
12 [label="printUsage#?#10:msg.append(\"  -buildfile <file>      use given buildfile\" + lSep)
printUsage#?#16:msg.append(\"  -buildfile <file>      use given buildfile\" + lSep)
printUsage#?#15:msg.append(\"  -buildfile <file>      use given buildfile\" + lSep)" shape=ellipse]
13 [label="printUsage#?#11:msg.append(\"  -D<property>=<value>   use value for given property\" + lSep)
printUsage#?#17:msg.append(\"  -D<property>=<value>   use value for given property\" + lSep)
printUsage#?#16:msg.append(\"  -D<property>=<value>   use value for given property\" + lSep)" shape=ellipse]
14 [label="printUsage#?#12:System.out.println(msg.toString())
printUsage#?#18:System.out.println(msg.toString())
printUsage#?#17:System.out.println(msg.toString())" shape=ellipse]
15 [label="printUsage#?#2:static
printUsage#?#2:static
printUsage#?#2:static" shape=ellipse]
16 [label="printUsage#?#2:private
printUsage#?#2:private
printUsage#?#2:private" shape=ellipse]
17 [label="printUsage#?#2:VE: Modifiers_Method
printUsage#?#2:VE: Modifiers_Method
printUsage#?#2:VE: Modifiers_Method" shape=ellipse]
18 [label="printUsage#?#10:msg.append(\"  -logfile <file>        use given file for log\" + lSep)
printUsage#?#12:msg.append(\"  -debug                 print debugging information\" + lSep)
printUsage#?#8:msg.append(\"  -projecthelp           print project help information\" + lSep)" shape=ellipse]
19 [label="printUsage#?#8:msg.append(\"  -projecthelp           print project help information\" + lSep)" shape=ellipse]
20 [label="printUsage#?#9:msg.append(\"  -version               print the version information and exit\" + lSep)" shape=ellipse]
21 [label="printUsage#?#12:msg.append(\"  -emacs                 produce logging information without adornments\" + lSep)" shape=ellipse]
22 [label="printUsage#?#14:msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep)" shape=ellipse]
23 [label="printUsage#?#15:msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep)" shape=ellipse]
24 [label="printUsage#?#13:msg.append(\"  -logfile <file>        use given file for log\" + lSep)" shape=ellipse]
25 [label="printUsage#?#12:msg.append(\"  -logfile <file>        use given file for log\" + lSep)" shape=ellipse]
26 [label="printUsage#?#13:msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep)" shape=ellipse]
27 [label="printUsage#?#11:msg.append(\"  -emacs                 produce logging information without adornments\" + lSep)" shape=ellipse]
28 [label="printUsage#?#8:msg.append(\"  -version               print the version information and exit\" + lSep)" shape=ellipse]
29 [label="printUsage#?#14:msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep)" shape=ellipse]
0 -> 18 [label="Action:3"];
1 -> 0 [label="Action:3"];
1 -> 2 [label="AST:3"];
1 -> 3 [label="AST:3"];
1 -> 4 [label="AST:3"];
1 -> 15 [label="AST:3"];
1 -> 16 [label="AST:3"];
1 -> 17 [label="AST:3"];
4 -> 5 [label="AST:3"];
4 -> 6 [label="AST:3"];
4 -> 7 [label="AST:3"];
4 -> 8 [label="AST:3"];
4 -> 9 [label="AST:3"];
4 -> 10 [label="AST:3"];
4 -> 11 [label="AST:3"];
4 -> 12 [label="AST:3"];
4 -> 13 [label="AST:3"];
4 -> 14 [label="AST:3"];
4 -> 19 [label="AST:1"];
4 -> 20 [label="AST:1"];
4 -> 21 [label="AST:1"];
4 -> 22 [label="AST:1"];
4 -> 23 [label="AST:1"];
4 -> 24 [label="AST:1"];
4 -> 25 [label="AST:1"];
4 -> 26 [label="AST:1"];
4 -> 27 [label="AST:1"];
4 -> 28 [label="AST:1"];
4 -> 29 [label="AST:1"];
}