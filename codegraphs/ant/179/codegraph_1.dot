digraph "testFileResourceWithFilter#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testFileResourceWithFilter" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@executeTarget(java.lang.String)" shape=ellipse]
3 [label="3:CtVirtualElement@executeTarget" shape=ellipse]
4 [label="3:CtLiteralImpl@\"testFileResourceWithFilter\"" shape=ellipse]
5 [label="3:CtInvocationImpl@executeTarget(\"testFileResourceWithFilter\")" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@File" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@File" shape=ellipse]
8 [label="4:CtExecutableReferenceImpl@getProperty(java.lang.String)" shape=ellipse]
9 [label="4:CtVirtualElement@getProperty" shape=ellipse]
10 [label="4:CtExecutableReferenceImpl@getProject()" shape=ellipse]
11 [label="4:CtVirtualElement@getProject" shape=ellipse]
12 [label="4:CtInvocationImpl@getProject()" shape=ellipse]
13 [label="4:CtLiteralImpl@\"to.dir\"" shape=ellipse]
14 [label="4:CtInvocationImpl@getProject().getProperty(\"to.dir\")" shape=ellipse]
15 [label="4:CtLiteralImpl@\"/fileNR.txt\"" shape=ellipse]
16 [label="4:CtBinaryOperatorImpl@getProject().getProperty(\"to.dir\") + \"/fileNR.txt\"" shape=ellipse]
17 [label="4:CtConstructorCallImpl@new File(getProject().getProperty(\"to.dir\") + \"/fileNR.txt\")" shape=ellipse]
18 [label="4:CtVirtualElement@file1" shape=ellipse]
19 [label="4:CtLocalVariableImpl@File file1 = new File(getProject().getProperty(\"to.dir\") + \"/fileNR.txt\")" shape=ellipse]
20 [label="5:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
21 [label="5:CtVirtualElement@assertTrue" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@exists()" shape=ellipse]
23 [label="5:CtVirtualElement@exists" shape=ellipse]
24 [label="5:CtVariableReadImpl@file1" shape=ellipse]
25 [label="5:CtInvocationImpl@file1.exists()" shape=ellipse]
26 [label="5:CtInvocationImpl@assertTrue(file1.exists())" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
28 [label="7:CtExecutableReferenceImpl@readFully(FileReader)" shape=ellipse]
29 [label="7:CtVirtualElement@readFully" shape=ellipse]
30 [label="7:CtTypeAccessImpl@FileUtils" shape=ellipse]
31 [label="7:CtTypeReferenceImpl@FileReader" shape=ellipse]
32 [label="7:CtVariableReadImpl@file1" shape=ellipse]
33 [label="7:CtConstructorCallImpl@new FileReader(file1)" shape=ellipse]
34 [label="7:CtInvocationImpl@FileUtils.readFully(new FileReader(file1))" shape=ellipse]
35 [label="7:CtVirtualElement@file1Content" shape=ellipse]
36 [label="7:CtLocalVariableImpl@String file1Content = FileUtils.readFully(new FileReader(file1))" shape=ellipse]
37 [label="8:CtExecutableReferenceImpl@assertEquals(java.lang.String,java.lang.String)" shape=ellipse]
38 [label="8:CtVirtualElement@assertEquals" shape=ellipse]
39 [label="8:CtLiteralImpl@\"This is file 42\"" shape=ellipse]
40 [label="8:CtVariableReadImpl@file1Content" shape=ellipse]
41 [label="8:CtInvocationImpl@assertEquals(\"This is file 42\", file1Content)" shape=ellipse]
42 [label="6:CtBlockImpl@\{
    String file1Content = FileUtils.readFully(new FileReader(file1));
    assertEquals(\"This is file 42\", file1Content);
\}" shape=ellipse]
43 [label="9:CtVirtualElement@e" shape=ellipse]
44 [label="9:CtTypeReferenceImpl@IOException" shape=ellipse]
45 [label="9:CtCatchVariableImpl@IOException e" shape=ellipse]
46 [label="9:CtBlockImpl@\{
\}" shape=ellipse]
47 [label="9:CtCatchImpl@ catch (IOException e) \{
\}" shape=ellipse]
48 [label="6:CtTryImpl@try \{
    String file1Content = FileUtils.readFully(new FileReader(file1));
    assertEquals(\"This is file 42\", file1Content);
\} catch (IOException e) \{
\}" shape=ellipse]
49 [label="2:CtBlockImpl@\{
    executeTarget(\"testFileResourceWithFilter\");
    File file1 = new File(getProject().getProperty(\"to.dir\") + \"/fileNR.txt\");
    assertTrue(file1.exists());
    try \{
        String file1Content = FileUtils.readFully(new FileReader(file1));
        assertEquals(\"This is file 42\", file1Content);
    \} catch (IOException e) \{
    \}
\}" shape=ellipse]
50 [label="2:CtMethodImpl@public void testFileResourceWithFilter() \{
    executeTarget(\"testFileResourceWithFilter\");
    File file1 = new File(getProject().getProperty(\"to.dir\") + \"/fileNR.txt\");
    assertTrue(file1.exists());
    try \{
        String file1Content = FileUtils.readFully(new FileReader(file1));
        assertEquals(\"This is file 42\", file1Content);
    \} catch (IOException e) \{
    \}
\}" shape=ellipse]
51 [label="2:Insert@INSERT" shape=ellipse]
52 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
53 [label="4:Insert@INSERT" shape=ellipse]
54 [label="4:CtFieldReadImpl@buildRule" shape=ellipse]
55 [label="5:Insert@INSERT" shape=ellipse]
56 [label="5:CtFieldReadImpl@buildRule" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 2 [label="AST"];
5 -> 4 [label="AST"];
5 -> 53 [label="Action"];
12 -> 11 [label="AST"];
12 -> 10 [label="AST"];
12 -> 55 [label="Action"];
14 -> 9 [label="AST"];
14 -> 12 [label="AST"];
14 -> 8 [label="AST"];
14 -> 13 [label="AST"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
17 -> 16 [label="AST"];
18 -> 24 [label="Define-Use"];
18 -> 32 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 6 [label="AST"];
19 -> 17 [label="AST"];
25 -> 23 [label="AST"];
25 -> 24 [label="AST"];
25 -> 22 [label="AST"];
26 -> 21 [label="AST"];
26 -> 20 [label="AST"];
26 -> 25 [label="AST"];
32 -> 35 [label="Data Dep"];
33 -> 32 [label="AST"];
34 -> 29 [label="AST"];
34 -> 30 [label="AST"];
34 -> 28 [label="AST"];
34 -> 33 [label="AST"];
35 -> 40 [label="Define-Use"];
36 -> 35 [label="AST"];
36 -> 27 [label="AST"];
36 -> 34 [label="AST"];
41 -> 38 [label="AST"];
41 -> 37 [label="AST"];
41 -> 39 [label="AST"];
41 -> 40 [label="AST"];
42 -> 36 [label="AST"];
42 -> 41 [label="AST"];
45 -> 43 [label="AST"];
45 -> 44 [label="AST"];
45 -> 46 [label="Control Dep"];
47 -> 45 [label="AST"];
47 -> 46 [label="AST"];
48 -> 42 [label="AST"];
48 -> 47 [label="AST"];
49 -> 5 [label="AST"];
49 -> 19 [label="AST"];
49 -> 26 [label="AST"];
49 -> 48 [label="AST"];
50 -> 1 [label="AST"];
50 -> 0 [label="AST"];
50 -> 49 [label="AST"];
50 -> 51 [label="Action"];
51 -> 52 [label="Action"];
53 -> 54 [label="Action"];
55 -> 56 [label="Action"];
}