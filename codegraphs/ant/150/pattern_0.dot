digraph "Pattern" {
0 [label="execute#?,Project#23:INSERT
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#13:INSERT" shape=ellipse]
1 [label="execute#?,Project#19:\{
    AntClassLoader loader = new AntClassLoader(project, classpath, false);
    loader.setIsolated(true);
    target = loader.forceLoadClass(classname);
\}
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#11:\{
    testClass = loader.loadClass(test.getName());
\}" shape=ellipse]
2 [label="execute#?,Project#17:classpath == null
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#9:loader == null" shape=ellipse]
3 [label="execute#?,Project#17:if (classpath == null) \{
    target = Class.forName(classname);
\} else \{
    AntClassLoader loader = new AntClassLoader(project, classpath, false);
    loader.setIsolated(true);
    target = loader.forceLoadClass(classname);
\}
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#9:if (loader == null) \{
    testClass = Class.forName(test.getName());
\} else \{
    testClass = loader.loadClass(test.getName());
\}" shape=ellipse]
4 [label="execute#?,Project#17:classpath
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#9:loader" shape=ellipse]
5 [label="execute#?,Project#17:null
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#9:null" shape=ellipse]
6 [label="execute#?,Project#17:\{
    target = Class.forName(classname);
\}
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#9:\{
    testClass = Class.forName(test.getName());
\}" shape=ellipse]
7 [label="execute#?,Project#18:target = Class.forName(classname)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:testClass = Class.forName(test.getName())" shape=ellipse]
8 [label="execute#?,Project#18:target
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:testClass" shape=ellipse]
9 [label="execute#?,Project#18:Class.forName(classname)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:Class.forName(test.getName())" shape=ellipse]
10 [label="execute#?,Project#18:forName(java.lang.String)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:forName(java.lang.String)" shape=ellipse]
11 [label="execute#?,Project#18:Class
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:Class" shape=ellipse]
12 [label="execute#?,Project#18:classname" shape=ellipse]
13 [label="execute#?,Project#20:AntClassLoader loader = new AntClassLoader(project, classpath, false)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:testClass = loader.loadClass(test.getName())" shape=ellipse]
14 [label="execute#?,Project#20:new AntClassLoader(project, classpath, false)" shape=ellipse]
15 [label="execute#?,Project#-1:AntClassLoader()
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:loadClass(java.lang.String)" shape=ellipse]
16 [label="execute#?,Project#20:project
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:loader" shape=ellipse]
17 [label="execute#?,Project#20:classpath
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:test" shape=ellipse]
18 [label="execute#?,Project#20:false" shape=ellipse]
19 [label="execute#?,Project#21:loader.setIsolated(true)" shape=ellipse]
20 [label="execute#?,Project#21:setIsolated(boolean)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:getName()" shape=ellipse]
21 [label="execute#?,Project#21:loader" shape=ellipse]
22 [label="execute#?,Project#21:true" shape=ellipse]
23 [label="execute#?,Project#22:target = loader.forceLoadClass(classname)" shape=ellipse]
24 [label="execute#?,Project#22:target" shape=ellipse]
25 [label="execute#?,Project#22:loader.forceLoadClass(classname)" shape=ellipse]
26 [label="execute#?,Project#22:forceLoadClass(java.lang.String)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:getName()" shape=ellipse]
27 [label="execute#?,Project#22:loader" shape=ellipse]
28 [label="execute#?,Project#22:classname" shape=ellipse]
29 [label="execute#?,Project#23:AntClassLoader.initializeClass(target)
JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#13:AntClassLoader.initializeClass(testClass)" shape=ellipse]
30 [label="JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:test.getName()" shape=ellipse]
31 [label="JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#-1:boolean" shape=ellipse]
32 [label="JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:loader.loadClass(test.getName())" shape=ellipse]
33 [label="JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:test" shape=ellipse]
34 [label="JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#10:test.getName()" shape=ellipse]
35 [label="JUnitTestRunner#?,JUnitTest,boolean,boolean,ClassLoader#12:testClass" shape=ellipse]
0 -> 29 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 13 [label="AST:2"];
1 -> 19 [label="AST:1"];
1 -> 23 [label="AST:1"];
2 -> 1 [label="Control Dep:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="Control Dep:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:1"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:1"];
2 -> 19 [label="Control Dep:1"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:1"];
2 -> 22 [label="Control Dep:1"];
2 -> 23 [label="Control Dep:1"];
2 -> 24 [label="Control Dep:1"];
2 -> 25 [label="Control Dep:1"];
2 -> 26 [label="Control Dep:2"];
2 -> 27 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:1"];
2 -> 31 [label="AST:1"];
2 -> 32 [label="Control Dep:1"];
2 -> 33 [label="Control Dep:1"];
2 -> 34 [label="Control Dep:1"];
2 -> 35 [label="Control Dep:1"];
3 -> 1 [label="AST:2"];
3 -> 2 [label="AST:2"];
3 -> 6 [label="AST:2"];
6 -> 7 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 9 [label="AST:2"];
9 -> 11 [label="AST:2"];
9 -> 10 [label="AST:2"];
9 -> 12 [label="AST:1"];
9 -> 34 [label="AST:1"];
12 -> 8 [label="Data Dep:1"];
13 -> 14 [label="AST:1"];
13 -> 32 [label="AST:1"];
13 -> 35 [label="AST:1"];
14 -> 15 [label="AST:1"];
14 -> 16 [label="AST:1"];
14 -> 17 [label="AST:1"];
14 -> 18 [label="AST:1"];
16 -> 35 [label="Data Dep:1"];
17 -> 35 [label="Data Dep:1"];
19 -> 21 [label="AST:1"];
19 -> 20 [label="AST:1"];
19 -> 22 [label="AST:1"];
23 -> 24 [label="AST:1"];
23 -> 25 [label="AST:1"];
25 -> 27 [label="AST:1"];
25 -> 26 [label="AST:1"];
25 -> 28 [label="AST:1"];
27 -> 24 [label="Data Dep:1"];
28 -> 24 [label="Data Dep:1"];
30 -> 17 [label="AST:1"];
30 -> 26 [label="AST:1"];
32 -> 30 [label="AST:1"];
32 -> 16 [label="AST:1"];
32 -> 15 [label="AST:1"];
33 -> 8 [label="Data Dep:1"];
34 -> 33 [label="AST:1"];
34 -> 20 [label="AST:1"];
}