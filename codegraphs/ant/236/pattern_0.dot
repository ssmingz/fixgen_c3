digraph "Pattern" {
0 [label="zipFile#?,File,ZipOutputStream,String,int#9:UPDATE
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#16:UPDATE" shape=ellipse]
1 [label="zipFile#?,File,ZipOutputStream,String,int#9:logOnFirstPass(((((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \") + archiveType) + \" task)\", MSG_WARN)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#16:logOnFirstPass(((((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME) + \" which will\") + \" be replaced by a newly generated one.\", MSG_WARN)" shape=ellipse]
2 [label="zipFile#?,File,ZipOutputStream,String,int#6:((deploymentDescriptor != null) || (!FILE_UTILS.fileNameEquals(deploymentDescriptor, file))) || descriptorAdded
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#15:INDEX_NAME.equalsIgnoreCase(vPath) && index" shape=ellipse]
3 [label="zipFile#?,File,ZipOutputStream,String,int#5:XML_DESCRIPTOR_PATH.equals(vPathLowerCase)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#11:MANIFEST_NAME.equalsIgnoreCase(vPath)" shape=ellipse]
4 [label="zipFile#?,File,ZipOutputStream,String,int#6:if (((deploymentDescriptor != null) || (!FILE_UTILS.fileNameEquals(deploymentDescriptor, file))) || descriptorAdded) \{
    logOnFirstPass(((((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \") + archiveType) + \" task)\", MSG_WARN);
\} else \{
    super.zipFile(file, zOut, vPath, mode);
    descriptorAdded = true;
\}
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#15:if (INDEX_NAME.equalsIgnoreCase(vPath) && index) \{
    logOnFirstPass(((((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME) + \" which will\") + \" be replaced by a newly generated one.\", MSG_WARN);
\} else \{
    if (index && (vPath.indexOf(\"/\") == (-1))) \{
        rootEntries.addElement(vPath);
    \}
    super.zipFile(is, zOut, vPath, lastModified, fromArchive, mode, extra);
\}" shape=ellipse]
5 [label="zipFile#?,File,ZipOutputStream,String,int#6:((deploymentDescriptor != null) || (!FILE_UTILS.fileNameEquals(deploymentDescriptor, file)))
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#15:index" shape=ellipse]
6 [label="zipFile#?,File,ZipOutputStream,String,int#8:descriptorAdded" shape=ellipse]
7 [label="zipFile#?,File,ZipOutputStream,String,int#8:\{
    logOnFirstPass(((((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \") + archiveType) + \" task)\", MSG_WARN);
\}
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#15:\{
    logOnFirstPass(((((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME) + \" which will\") + \" be replaced by a newly generated one.\", MSG_WARN);
\}" shape=ellipse]
8 [label="zipFile#?,File,ZipOutputStream,String,int#9:logOnFirstPass(<unknown>,<unknown>)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#16:logOnFirstPass(<unknown>,<unknown>)" shape=ellipse]
9 [label="zipFile#?,File,ZipOutputStream,String,int#-1:
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#-1:" shape=ellipse]
10 [label="zipFile#?,File,ZipOutputStream,String,int#-1:PlaceHold
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#-1:PlaceHold" shape=ellipse]
11 [label="zipFile#?,File,ZipOutputStream,String,int#10:((((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \") + archiveType) + \" task)\"
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:((((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME) + \" which will\") + \" be replaced by a newly generated one.\"" shape=ellipse]
12 [label="zipFile#?,File,ZipOutputStream,String,int#10:((((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \") + archiveType)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:((((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME) + \" which will\")" shape=ellipse]
13 [label="zipFile#?,File,ZipOutputStream,String,int#10:(((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \")
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:(((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME)" shape=ellipse]
14 [label="zipFile#?,File,ZipOutputStream,String,int#10:((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\")
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:((\"Warning: selected \" + archiveType) + \" files include a \")" shape=ellipse]
15 [label="zipFile#?,File,ZipOutputStream,String,int#10:(((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:(\"Warning: selected \" + archiveType)" shape=ellipse]
16 [label="zipFile#?,File,ZipOutputStream,String,int#10:((\"Warning: selected \" + archiveType) + \" files include a \")
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:archiveType" shape=ellipse]
17 [label="zipFile#?,File,ZipOutputStream,String,int#10:(\"Warning: selected \" + archiveType)" shape=ellipse]
18 [label="zipFile#?,File,ZipOutputStream,String,int#10:\"Warning: selected \"
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:index" shape=ellipse]
19 [label="zipFile#?,File,ZipOutputStream,String,int#10:archiveType
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:fromArchive" shape=ellipse]
20 [label="zipFile#?,File,ZipOutputStream,String,int#10:\" files include a \"" shape=ellipse]
21 [label="zipFile#?,File,ZipOutputStream,String,int#10:XML_DESCRIPTOR_PATH
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:\"Warning: selected \"" shape=ellipse]
22 [label="zipFile#?,File,ZipOutputStream,String,int#11:\" which will\"
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:\" files include a \"" shape=ellipse]
23 [label="zipFile#?,File,ZipOutputStream,String,int#12:\" be ignored (please use appxml attribute to \"
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#17:INDEX_NAME" shape=ellipse]
24 [label="zipFile#?,File,ZipOutputStream,String,int#13:archiveType
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#18:\" which will\"" shape=ellipse]
25 [label="zipFile#?,File,ZipOutputStream,String,int#14:\" task)\"
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#19:\" be replaced by a newly generated one.\"" shape=ellipse]
26 [label="zipFile#?,File,ZipOutputStream,String,int#15:MSG_WARN
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#20:MSG_WARN" shape=ellipse]
27 [label="zipFile#?,File,ZipOutputStream,String,int#16:\{
    super.zipFile(file, zOut, vPath, mode);
    descriptorAdded = true;
\}
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#21:\{
    if (index && (vPath.indexOf(\"/\") == (-1))) \{
        rootEntries.addElement(vPath);
    \}
    super.zipFile(is, zOut, vPath, lastModified, fromArchive, mode, extra);
\}" shape=ellipse]
28 [label="zipFile#?,File,ZipOutputStream,String,int#17:super.zipFile(file, zOut, vPath, mode)" shape=ellipse]
29 [label="zipFile#?,File,ZipOutputStream,String,int#17:zipFile(File,ZipOutputStream,java.lang.String,int)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:zipFile(InputStream,ZipOutputStream,java.lang.String,long,File,int,ZipExtraField[])" shape=ellipse]
30 [label="zipFile#?,File,ZipOutputStream,String,int#17:super
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:super" shape=ellipse]
31 [label="zipFile#?,File,ZipOutputStream,String,int#17:file
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:lastModified" shape=ellipse]
32 [label="zipFile#?,File,ZipOutputStream,String,int#17:zOut
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:zOut" shape=ellipse]
33 [label="zipFile#?,File,ZipOutputStream,String,int#17:vPath
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:vPath" shape=ellipse]
34 [label="zipFile#?,File,ZipOutputStream,String,int#17:mode
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:mode" shape=ellipse]
35 [label="zipFile#?,File,ZipOutputStream,String,int#18:descriptorAdded = true
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:if (index && (vPath.indexOf(\"/\") == (-1))) \{
    rootEntries.addElement(vPath);
\}" shape=ellipse]
36 [label="zipFile#?,File,ZipOutputStream,String,int#18:descriptorAdded" shape=ellipse]
37 [label="zipFile#?,File,ZipOutputStream,String,int#18:true" shape=ellipse]
38 [label="zipFile#?,File,ZipOutputStream,String,int#9:logOnFirstPass
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#16:logOnFirstPass" shape=ellipse]
39 [label="zipFile#?,File,ZipOutputStream,String,int#9:logWhenWriting(((((((\"Warning: selected \" + archiveType) + \" files include a \") + XML_DESCRIPTOR_PATH) + \" which will\") + \" be ignored (please use appxml attribute to \") + archiveType) + \" task)\", MSG_WARN)
zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#16:logWhenWriting(((((\"Warning: selected \" + archiveType) + \" files include a \") + INDEX_NAME) + \" which will\") + \" be replaced by a newly generated one.\", MSG_WARN)" shape=ellipse]
40 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#15:INDEX_NAME.equalsIgnoreCase(vPath)" shape=ellipse]
41 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:(vPath.indexOf(\"/\") == (-1))" shape=ellipse]
42 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:vPath.indexOf(\"/\")" shape=ellipse]
43 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:indexOf(java.lang.String)" shape=ellipse]
44 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:(-1)" shape=ellipse]
45 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:super.zipFile(is, zOut, vPath, lastModified, fromArchive, mode, extra)" shape=ellipse]
46 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:vPath" shape=ellipse]
47 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:\"/\"" shape=ellipse]
48 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:is" shape=ellipse]
49 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#25:extra" shape=ellipse]
50 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:index && (vPath.indexOf(\"/\") == (-1))" shape=ellipse]
51 [label="zipFile#?,InputStream,ZipOutputStream,String,long,File,int,ZipExtraField[]#22:1" shape=ellipse]
0 -> 39 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 38 [label="AST:2"];
1 -> 9 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 11 [label="AST:2"];
1 -> 26 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:1"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:1"];
2 -> 21 [label="Control Dep:2"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:2"];
2 -> 26 [label="Control Dep:2"];
2 -> 27 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:1"];
2 -> 29 [label="Control Dep:2"];
2 -> 30 [label="Control Dep:2"];
2 -> 31 [label="Control Dep:2"];
2 -> 32 [label="Control Dep:2"];
2 -> 33 [label="Control Dep:2"];
2 -> 34 [label="Control Dep:2"];
2 -> 35 [label="Control Dep:2"];
2 -> 36 [label="Control Dep:1"];
2 -> 37 [label="Control Dep:1"];
2 -> 40 [label="AST:1"];
2 -> 41 [label="Control Dep:1"];
2 -> 42 [label="Control Dep:1"];
2 -> 43 [label="Control Dep:1"];
2 -> 44 [label="Control Dep:1"];
2 -> 45 [label="Control Dep:1"];
2 -> 46 [label="Control Dep:1"];
2 -> 47 [label="Control Dep:1"];
2 -> 48 [label="Control Dep:1"];
2 -> 49 [label="Control Dep:1"];
2 -> 50 [label="Control Dep:1"];
2 -> 51 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 5 [label="Control Dep:2"];
3 -> 6 [label="Control Dep:1"];
3 -> 40 [label="Control Dep:1"];
4 -> 2 [label="AST:2"];
4 -> 7 [label="AST:2"];
4 -> 27 [label="AST:2"];
7 -> 1 [label="AST:2"];
9 -> 10 [label="AST:2"];
11 -> 12 [label="AST:2"];
11 -> 25 [label="AST:2"];
12 -> 13 [label="AST:2"];
12 -> 24 [label="AST:2"];
13 -> 14 [label="AST:2"];
13 -> 23 [label="AST:2"];
14 -> 15 [label="AST:2"];
14 -> 22 [label="AST:2"];
15 -> 16 [label="AST:2"];
15 -> 21 [label="AST:2"];
16 -> 17 [label="AST:1"];
16 -> 20 [label="AST:1"];
17 -> 18 [label="AST:1"];
17 -> 19 [label="AST:1"];
27 -> 28 [label="AST:1"];
27 -> 35 [label="AST:2"];
27 -> 45 [label="AST:1"];
28 -> 30 [label="AST:1"];
28 -> 29 [label="AST:1"];
28 -> 31 [label="AST:1"];
28 -> 32 [label="AST:1"];
28 -> 33 [label="AST:1"];
28 -> 34 [label="AST:1"];
35 -> 36 [label="AST:1"];
35 -> 37 [label="AST:1"];
35 -> 50 [label="AST:1"];
41 -> 42 [label="AST:1"];
41 -> 44 [label="AST:1"];
42 -> 33 [label="AST:1"];
42 -> 43 [label="AST:1"];
42 -> 47 [label="AST:1"];
44 -> 51 [label="AST:1"];
45 -> 30 [label="AST:1"];
45 -> 29 [label="AST:1"];
45 -> 48 [label="AST:1"];
45 -> 32 [label="AST:1"];
45 -> 46 [label="AST:1"];
45 -> 31 [label="AST:1"];
45 -> 19 [label="AST:1"];
45 -> 34 [label="AST:1"];
45 -> 49 [label="AST:1"];
50 -> 41 [label="AST:1"];
50 -> 18 [label="AST:1"];
}