digraph "doValidate#?,File" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@doValidate" shape=ellipse]
2 [label="2:CtParameterImpl@File afile" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
4 [label="4:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
5 [label="4:CtVirtualElement@log" shape=ellipse]
6 [label="4:CtLiteralImpl@\"Validating \"" shape=ellipse]
7 [label="4:CtExecutableReferenceImpl@getName()" shape=ellipse]
8 [label="4:CtVirtualElement@getName" shape=ellipse]
9 [label="4:CtVariableReadImpl@afile" shape=ellipse]
10 [label="4:CtInvocationImpl@afile.getName()" shape=ellipse]
11 [label="4:CtBinaryOperatorImpl@(\"Validating \" + afile.getName())" shape=ellipse]
12 [label="4:CtLiteralImpl@\"... \"" shape=ellipse]
13 [label="4:CtBinaryOperatorImpl@(\"Validating \" + afile.getName()) + \"... \"" shape=ellipse]
14 [label="4:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
15 [label="4:CtInvocationImpl@log((\"Validating \" + afile.getName()) + \"... \", MSG_VERBOSE)" shape=ellipse]
16 [label="5:CtExecutableReferenceImpl@init(File)" shape=ellipse]
17 [label="5:CtVirtualElement@init" shape=ellipse]
18 [label="5:CtFieldReadImpl@errorHandler" shape=ellipse]
19 [label="5:CtVariableReadImpl@afile" shape=ellipse]
20 [label="5:CtInvocationImpl@errorHandler.init(afile)" shape=ellipse]
21 [label="6:CtTypeReferenceImpl@InputSource" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@InputSource" shape=ellipse]
23 [label="6:CtTypeReferenceImpl@FileInputStream" shape=ellipse]
24 [label="6:CtVariableReadImpl@afile" shape=ellipse]
25 [label="6:CtConstructorCallImpl@new FileInputStream(afile)" shape=ellipse]
26 [label="6:CtConstructorCallImpl@new InputSource(new FileInputStream(afile))" shape=ellipse]
27 [label="6:CtVirtualElement@is" shape=ellipse]
28 [label="6:CtLocalVariableImpl@InputSource is = new InputSource(new FileInputStream(afile))" shape=ellipse]
29 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
30 [label="7:CtExecutableReferenceImpl@toURI()" shape=ellipse]
31 [label="7:CtVirtualElement@toURI" shape=ellipse]
32 [label="7:CtFieldReadImpl@fu" shape=ellipse]
33 [label="7:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
34 [label="7:CtVirtualElement@getAbsolutePath" shape=ellipse]
35 [label="7:CtVariableReadImpl@afile" shape=ellipse]
36 [label="7:CtInvocationImpl@afile.getAbsolutePath()" shape=ellipse]
37 [label="7:CtInvocationImpl@fu.toURI(afile.getAbsolutePath())" shape=ellipse]
38 [label="7:CtVirtualElement@uri" shape=ellipse]
39 [label="7:CtLocalVariableImpl@String uri = fu.toURI(afile.getAbsolutePath())" shape=ellipse]
40 [label="8:CtExecutableReferenceImpl@setSystemId(java.lang.String)" shape=ellipse]
41 [label="8:CtVirtualElement@setSystemId" shape=ellipse]
42 [label="8:CtVariableReadImpl@is" shape=ellipse]
43 [label="8:CtVariableReadImpl@uri" shape=ellipse]
44 [label="8:CtInvocationImpl@is.setSystemId(uri)" shape=ellipse]
45 [label="9:CtExecutableReferenceImpl@parse(InputSource)" shape=ellipse]
46 [label="9:CtVirtualElement@parse" shape=ellipse]
47 [label="9:CtFieldReadImpl@xmlReader" shape=ellipse]
48 [label="9:CtVariableReadImpl@is" shape=ellipse]
49 [label="9:CtInvocationImpl@xmlReader.parse(is)" shape=ellipse]
50 [label="3:CtBlockImpl@\{
    log((\"Validating \" + afile.getName()) + \"... \", MSG_VERBOSE);
    errorHandler.init(afile);
    InputSource is = new InputSource(new FileInputStream(afile));
    String uri = fu.toURI(afile.getAbsolutePath());
    is.setSystemId(uri);
    xmlReader.parse(is);
\}" shape=ellipse]
51 [label="10:CtVirtualElement@ex" shape=ellipse]
52 [label="10:CtTypeReferenceImpl@SAXException" shape=ellipse]
53 [label="10:CtCatchVariableImpl@SAXException ex" shape=ellipse]
54 [label="11:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
55 [label="11:CtVirtualElement@log" shape=ellipse]
56 [label="11:CtLiteralImpl@\"Caught when validating: \"" shape=ellipse]
57 [label="11:CtExecutableReferenceImpl@toString()" shape=ellipse]
58 [label="11:CtVirtualElement@toString" shape=ellipse]
59 [label="11:CtVariableReadImpl@ex" shape=ellipse]
60 [label="11:CtInvocationImpl@ex.toString()" shape=ellipse]
61 [label="11:CtBinaryOperatorImpl@\"Caught when validating: \" + ex.toString()" shape=ellipse]
62 [label="11:CtTypeAccessImpl@MSG_DEBUG" shape=ellipse]
63 [label="11:CtInvocationImpl@log(\"Caught when validating: \" + ex.toString(), MSG_DEBUG)" shape=ellipse]
64 [label="12:CtFieldReadImpl@failOnError" shape=ellipse]
65 [label="13:CtTypeReferenceImpl@BuildException" shape=ellipse]
66 [label="13:CtLiteralImpl@\"Could not validate document \"" shape=ellipse]
67 [label="13:CtVariableReadImpl@afile" shape=ellipse]
68 [label="13:CtBinaryOperatorImpl@\"Could not validate document \" + afile" shape=ellipse]
69 [label="13:CtConstructorCallImpl@new BuildException(\"Could not validate document \" + afile)" shape=ellipse]
70 [label="13:CtThrowImpl@throw new BuildException(\"Could not validate document \" + afile)" shape=ellipse]
71 [label="12:CtBlockImpl@\{
    throw new BuildException(\"Could not validate document \" + afile);
\}" shape=ellipse]
72 [label="15:CtExecutableReferenceImpl@log(<unknown>)" shape=ellipse]
73 [label="15:CtVirtualElement@log" shape=ellipse]
74 [label="15:CtLiteralImpl@\"Could not validate document \"" shape=ellipse]
75 [label="15:CtVariableReadImpl@afile" shape=ellipse]
76 [label="15:CtBinaryOperatorImpl@(\"Could not validate document \" + afile)" shape=ellipse]
77 [label="15:CtLiteralImpl@\": \"" shape=ellipse]
78 [label="15:CtBinaryOperatorImpl@((\"Could not validate document \" + afile) + \": \")" shape=ellipse]
79 [label="15:CtExecutableReferenceImpl@toString()" shape=ellipse]
80 [label="15:CtVirtualElement@toString" shape=ellipse]
81 [label="15:CtVariableReadImpl@ex" shape=ellipse]
82 [label="15:CtInvocationImpl@ex.toString()" shape=ellipse]
83 [label="15:CtBinaryOperatorImpl@((\"Could not validate document \" + afile) + \": \") + ex.toString()" shape=ellipse]
84 [label="15:CtInvocationImpl@log(((\"Could not validate document \" + afile) + \": \") + ex.toString())" shape=ellipse]
85 [label="14:CtBlockImpl@\{
    log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
\}" shape=ellipse]
86 [label="12:CtIfImpl@if (failOnError) \{
    throw new BuildException(\"Could not validate document \" + afile);
\} else \{
    log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
\}" shape=ellipse]
87 [label="10:CtBlockImpl@\{
    log(\"Caught when validating: \" + ex.toString(), MSG_DEBUG);
    if (failOnError) \{
        throw new BuildException(\"Could not validate document \" + afile);
    \} else \{
        log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
    \}
\}" shape=ellipse]
88 [label="10:CtCatchImpl@ catch (SAXException ex) \{
    log(\"Caught when validating: \" + ex.toString(), MSG_DEBUG);
    if (failOnError) \{
        throw new BuildException(\"Could not validate document \" + afile);
    \} else \{
        log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
    \}
\}" shape=ellipse]
89 [label="17:CtVirtualElement@ex" shape=ellipse]
90 [label="17:CtTypeReferenceImpl@IOException" shape=ellipse]
91 [label="17:CtCatchVariableImpl@IOException ex" shape=ellipse]
92 [label="18:CtTypeReferenceImpl@BuildException" shape=ellipse]
93 [label="18:CtLiteralImpl@\"Could not validate document \"" shape=ellipse]
94 [label="18:CtVariableReadImpl@afile" shape=ellipse]
95 [label="18:CtBinaryOperatorImpl@\"Could not validate document \" + afile" shape=ellipse]
96 [label="18:CtVariableReadImpl@ex" shape=ellipse]
97 [label="18:CtConstructorCallImpl@new BuildException(\"Could not validate document \" + afile, ex)" shape=ellipse]
98 [label="18:CtThrowImpl@throw new BuildException(\"Could not validate document \" + afile, ex)" shape=ellipse]
99 [label="17:CtBlockImpl@\{
    throw new BuildException(\"Could not validate document \" + afile, ex);
\}" shape=ellipse]
100 [label="17:CtCatchImpl@ catch (IOException ex) \{
    throw new BuildException(\"Could not validate document \" + afile, ex);
\}" shape=ellipse]
101 [label="3:CtTryImpl@try \{
    log((\"Validating \" + afile.getName()) + \"... \", MSG_VERBOSE);
    errorHandler.init(afile);
    InputSource is = new InputSource(new FileInputStream(afile));
    String uri = fu.toURI(afile.getAbsolutePath());
    is.setSystemId(uri);
    xmlReader.parse(is);
\} catch (SAXException ex) \{
    log(\"Caught when validating: \" + ex.toString(), MSG_DEBUG);
    if (failOnError) \{
        throw new BuildException(\"Could not validate document \" + afile);
    \} else \{
        log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
    \}
\} catch (IOException ex) \{
    throw new BuildException(\"Could not validate document \" + afile, ex);
\}" shape=ellipse]
102 [label="20:CtExecutableReferenceImpl@getFailure()" shape=ellipse]
103 [label="20:CtVirtualElement@getFailure" shape=ellipse]
104 [label="20:CtFieldReadImpl@errorHandler" shape=ellipse]
105 [label="20:CtInvocationImpl@errorHandler.getFailure()" shape=ellipse]
106 [label="21:CtFieldReadImpl@failOnError" shape=ellipse]
107 [label="22:CtTypeReferenceImpl@BuildException" shape=ellipse]
108 [label="22:CtVariableReadImpl@afile" shape=ellipse]
109 [label="22:CtLiteralImpl@\" is not a valid XML document.\"" shape=ellipse]
110 [label="22:CtBinaryOperatorImpl@afile + \" is not a valid XML document.\"" shape=ellipse]
111 [label="22:CtConstructorCallImpl@new BuildException(afile + \" is not a valid XML document.\")" shape=ellipse]
112 [label="22:CtThrowImpl@throw new BuildException(afile + \" is not a valid XML document.\")" shape=ellipse]
113 [label="21:CtBlockImpl@\{
    throw new BuildException(afile + \" is not a valid XML document.\");
\}" shape=ellipse]
114 [label="24:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
115 [label="24:CtVirtualElement@log" shape=ellipse]
116 [label="24:CtVariableReadImpl@afile" shape=ellipse]
117 [label="24:CtLiteralImpl@\" is not a valid XML document\"" shape=ellipse]
118 [label="24:CtBinaryOperatorImpl@afile + \" is not a valid XML document\"" shape=ellipse]
119 [label="24:CtTypeAccessImpl@MSG_ERR" shape=ellipse]
120 [label="24:CtInvocationImpl@log(afile + \" is not a valid XML document\", MSG_ERR)" shape=ellipse]
121 [label="23:CtBlockImpl@\{
    log(afile + \" is not a valid XML document\", MSG_ERR);
\}" shape=ellipse]
122 [label="21:CtIfImpl@if (failOnError) \{
    throw new BuildException(afile + \" is not a valid XML document.\");
\} else \{
    log(afile + \" is not a valid XML document\", MSG_ERR);
\}" shape=ellipse]
123 [label="20:CtBlockImpl@\{
    if (failOnError) \{
        throw new BuildException(afile + \" is not a valid XML document.\");
    \} else \{
        log(afile + \" is not a valid XML document\", MSG_ERR);
    \}
\}" shape=ellipse]
124 [label="20:CtIfImpl@if (errorHandler.getFailure()) \{
    if (failOnError) \{
        throw new BuildException(afile + \" is not a valid XML document.\");
    \} else \{
        log(afile + \" is not a valid XML document\", MSG_ERR);
    \}
\}" shape=ellipse]
125 [label="2:CtBlockImpl@\{
    try \{
        log((\"Validating \" + afile.getName()) + \"... \", MSG_VERBOSE);
        errorHandler.init(afile);
        InputSource is = new InputSource(new FileInputStream(afile));
        String uri = fu.toURI(afile.getAbsolutePath());
        is.setSystemId(uri);
        xmlReader.parse(is);
    \} catch (SAXException ex) \{
        log(\"Caught when validating: \" + ex.toString(), MSG_DEBUG);
        if (failOnError) \{
            throw new BuildException(\"Could not validate document \" + afile);
        \} else \{
            log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
        \}
    \} catch (IOException ex) \{
        throw new BuildException(\"Could not validate document \" + afile, ex);
    \}
    if (errorHandler.getFailure()) \{
        if (failOnError) \{
            throw new BuildException(afile + \" is not a valid XML document.\");
        \} else \{
            log(afile + \" is not a valid XML document\", MSG_ERR);
        \}
    \}
\}" shape=ellipse]
126 [label="2:CtMethodImpl@private void doValidate(File afile) \{
    try \{
        log((\"Validating \" + afile.getName()) + \"... \", MSG_VERBOSE);
        errorHandler.init(afile);
        InputSource is = new InputSource(new FileInputStream(afile));
        String uri = fu.toURI(afile.getAbsolutePath());
        is.setSystemId(uri);
        xmlReader.parse(is);
    \} catch (SAXException ex) \{
        log(\"Caught when validating: \" + ex.toString(), MSG_DEBUG);
        if (failOnError) \{
            throw new BuildException(\"Could not validate document \" + afile);
        \} else \{
            log(((\"Could not validate document \" + afile) + \": \") + ex.toString());
        \}
    \} catch (IOException ex) \{
        throw new BuildException(\"Could not validate document \" + afile, ex);
    \}
    if (errorHandler.getFailure()) \{
        if (failOnError) \{
            throw new BuildException(afile + \" is not a valid XML document.\");
        \} else \{
            log(afile + \" is not a valid XML document\", MSG_ERR);
        \}
    \}
\}" shape=ellipse]
127 [label="7:Delete@DELETE" shape=ellipse]
128 [label="7:Insert@INSERT" shape=ellipse]
129 [label="7:CtTypeAccessImpl@FILE_UTILS" shape=ellipse]
2 -> 3 [label="AST"];
10 -> 8 [label="AST"];
10 -> 9 [label="AST"];
10 -> 7 [label="AST"];
11 -> 6 [label="AST"];
11 -> 10 [label="AST"];
13 -> 11 [label="AST"];
13 -> 12 [label="AST"];
15 -> 5 [label="AST"];
15 -> 4 [label="AST"];
15 -> 13 [label="AST"];
15 -> 14 [label="AST"];
20 -> 17 [label="AST"];
20 -> 18 [label="AST"];
20 -> 16 [label="AST"];
20 -> 19 [label="AST"];
24 -> 27 [label="Data Dep"];
25 -> 24 [label="AST"];
26 -> 25 [label="AST"];
27 -> 42 [label="Define-Use"];
27 -> 48 [label="Define-Use"];
28 -> 27 [label="AST"];
28 -> 21 [label="AST"];
28 -> 26 [label="AST"];
32 -> 38 [label="Data Dep"];
32 -> 127 [label="Action"];
35 -> 38 [label="Data Dep"];
36 -> 34 [label="AST"];
36 -> 35 [label="AST"];
36 -> 33 [label="AST"];
37 -> 31 [label="AST"];
37 -> 32 [label="AST"];
37 -> 30 [label="AST"];
37 -> 36 [label="AST"];
37 -> 128 [label="Action"];
38 -> 43 [label="Define-Use"];
39 -> 38 [label="AST"];
39 -> 29 [label="AST"];
39 -> 37 [label="AST"];
44 -> 41 [label="AST"];
44 -> 42 [label="AST"];
44 -> 40 [label="AST"];
44 -> 43 [label="AST"];
49 -> 46 [label="AST"];
49 -> 47 [label="AST"];
49 -> 45 [label="AST"];
49 -> 48 [label="AST"];
50 -> 15 [label="AST"];
50 -> 20 [label="AST"];
50 -> 28 [label="AST"];
50 -> 39 [label="AST"];
50 -> 44 [label="AST"];
50 -> 49 [label="AST"];
51 -> 59 [label="Define-Use"];
51 -> 81 [label="Define-Use"];
53 -> 51 [label="AST"];
53 -> 52 [label="AST"];
53 -> 87 [label="Control Dep"];
53 -> 63 [label="Control Dep"];
53 -> 54 [label="Control Dep"];
53 -> 61 [label="Control Dep"];
53 -> 56 [label="Control Dep"];
53 -> 60 [label="Control Dep"];
53 -> 57 [label="Control Dep"];
53 -> 59 [label="Control Dep"];
53 -> 62 [label="Control Dep"];
53 -> 86 [label="Control Dep"];
53 -> 64 [label="Control Dep"];
60 -> 58 [label="AST"];
60 -> 59 [label="AST"];
60 -> 57 [label="AST"];
61 -> 56 [label="AST"];
61 -> 60 [label="AST"];
63 -> 55 [label="AST"];
63 -> 54 [label="AST"];
63 -> 61 [label="AST"];
63 -> 62 [label="AST"];
64 -> 71 [label="Control Dep"];
64 -> 70 [label="Control Dep"];
64 -> 69 [label="Control Dep"];
64 -> 68 [label="Control Dep"];
64 -> 66 [label="Control Dep"];
64 -> 67 [label="Control Dep"];
64 -> 85 [label="Control Dep"];
64 -> 84 [label="Control Dep"];
64 -> 72 [label="Control Dep"];
64 -> 83 [label="Control Dep"];
64 -> 78 [label="Control Dep"];
64 -> 76 [label="Control Dep"];
64 -> 74 [label="Control Dep"];
64 -> 75 [label="Control Dep"];
64 -> 77 [label="Control Dep"];
64 -> 82 [label="Control Dep"];
64 -> 79 [label="Control Dep"];
64 -> 81 [label="Control Dep"];
68 -> 66 [label="AST"];
68 -> 67 [label="AST"];
69 -> 68 [label="AST"];
70 -> 69 [label="AST"];
71 -> 70 [label="AST"];
76 -> 74 [label="AST"];
76 -> 75 [label="AST"];
78 -> 76 [label="AST"];
78 -> 77 [label="AST"];
82 -> 80 [label="AST"];
82 -> 81 [label="AST"];
82 -> 79 [label="AST"];
83 -> 78 [label="AST"];
83 -> 82 [label="AST"];
84 -> 73 [label="AST"];
84 -> 72 [label="AST"];
84 -> 83 [label="AST"];
85 -> 84 [label="AST"];
86 -> 64 [label="AST"];
86 -> 71 [label="AST"];
86 -> 85 [label="AST"];
87 -> 63 [label="AST"];
87 -> 86 [label="AST"];
88 -> 53 [label="AST"];
88 -> 87 [label="AST"];
89 -> 96 [label="Define-Use"];
91 -> 89 [label="AST"];
91 -> 90 [label="AST"];
91 -> 99 [label="Control Dep"];
91 -> 98 [label="Control Dep"];
91 -> 97 [label="Control Dep"];
91 -> 95 [label="Control Dep"];
91 -> 93 [label="Control Dep"];
91 -> 94 [label="Control Dep"];
91 -> 96 [label="Control Dep"];
95 -> 93 [label="AST"];
95 -> 94 [label="AST"];
97 -> 95 [label="AST"];
97 -> 96 [label="AST"];
98 -> 97 [label="AST"];
99 -> 98 [label="AST"];
100 -> 91 [label="AST"];
100 -> 99 [label="AST"];
101 -> 50 [label="AST"];
101 -> 88 [label="AST"];
101 -> 100 [label="AST"];
105 -> 103 [label="AST"];
105 -> 104 [label="AST"];
105 -> 102 [label="AST"];
105 -> 123 [label="Control Dep"];
105 -> 122 [label="Control Dep"];
105 -> 106 [label="Control Dep"];
106 -> 113 [label="Control Dep"];
106 -> 112 [label="Control Dep"];
106 -> 111 [label="Control Dep"];
106 -> 110 [label="Control Dep"];
106 -> 108 [label="Control Dep"];
106 -> 109 [label="Control Dep"];
106 -> 121 [label="Control Dep"];
106 -> 120 [label="Control Dep"];
106 -> 114 [label="Control Dep"];
106 -> 118 [label="Control Dep"];
106 -> 116 [label="Control Dep"];
106 -> 117 [label="Control Dep"];
106 -> 119 [label="Control Dep"];
110 -> 108 [label="AST"];
110 -> 109 [label="AST"];
111 -> 110 [label="AST"];
112 -> 111 [label="AST"];
113 -> 112 [label="AST"];
118 -> 116 [label="AST"];
118 -> 117 [label="AST"];
120 -> 115 [label="AST"];
120 -> 114 [label="AST"];
120 -> 118 [label="AST"];
120 -> 119 [label="AST"];
121 -> 120 [label="AST"];
122 -> 106 [label="AST"];
122 -> 113 [label="AST"];
122 -> 121 [label="AST"];
123 -> 122 [label="AST"];
124 -> 105 [label="AST"];
124 -> 123 [label="AST"];
125 -> 101 [label="AST"];
125 -> 124 [label="AST"];
126 -> 1 [label="AST"];
126 -> 0 [label="AST"];
126 -> 2 [label="AST"];
126 -> 125 [label="AST"];
128 -> 129 [label="Action"];
}