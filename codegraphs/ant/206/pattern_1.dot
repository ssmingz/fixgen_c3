digraph "Pattern" {
0 [label="testExitAndOtherException#?#2:INSERT
testSingleExit#?#2:INSERT" shape=ellipse]
1 [label="testExitAndOtherException#?#2:public void testExitAndOtherException() \{
    try \{
        executeTarget(\"testExitAndOtherException\");
    \} catch (ExitStatusException ex) \{
        assertEquals(42, ex.getStatus());
    \}
\}
testSingleExit#?#2:public void testSingleExit() \{
    try \{
        executeTarget(\"testSingleExit\");
    \} catch (ExitStatusException ex) \{
        assertEquals(42, ex.getStatus());
    \}
\}" shape=ellipse]
2 [label="testExitAndOtherException#?#2:testExitAndOtherException
testSingleExit#?#2:VE: Modifiers_Method" shape=ellipse]
3 [label="testExitAndOtherException#?#2:void
testSingleExit#?#2:void" shape=ellipse]
4 [label="testExitAndOtherException#?#2:\{
    try \{
        executeTarget(\"testExitAndOtherException\");
    \} catch (ExitStatusException ex) \{
        assertEquals(42, ex.getStatus());
    \}
\}
testSingleExit#?#2:\{
    try \{
        executeTarget(\"testSingleExit\");
    \} catch (ExitStatusException ex) \{
        assertEquals(42, ex.getStatus());
    \}
\}" shape=ellipse]
5 [label="testExitAndOtherException#?#3:try \{
    executeTarget(\"testExitAndOtherException\");
\} catch (ExitStatusException ex) \{
    assertEquals(42, ex.getStatus());
\}
testSingleExit#?#3:try \{
    executeTarget(\"testSingleExit\");
\} catch (ExitStatusException ex) \{
    assertEquals(42, ex.getStatus());
\}" shape=ellipse]
6 [label="testExitAndOtherException#?#2:VE: Modifiers_Method
testSingleExit#?#2:testSingleExit" shape=ellipse]
7 [label="testExitAndOtherException#?#2:public
testSingleExit#?#2:public" shape=ellipse]
8 [label="testExitAndOtherException#?#2:@Test
testSingleExit#?#2:@Test" shape=ellipse]
0 -> 8 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 2 [label="AST:2"];
1 -> 3 [label="AST:2"];
1 -> 4 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
4 -> 5 [label="AST:2"];
}