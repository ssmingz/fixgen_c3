digraph "testForkXml#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testForkXml" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@expectLogContaining(java.lang.String,java.lang.String)" shape=ellipse]
3 [label="3:CtVirtualElement@expectLogContaining" shape=ellipse]
4 [label="3:CtLiteralImpl@\"fork-xml\"" shape=ellipse]
5 [label="3:CtLiteralImpl@\"<Package>java.lang</Package>\"" shape=ellipse]
6 [label="3:CtInvocationImpl@expectLogContaining(\"fork-xml\", \"<Package>java.lang</Package>\")" shape=ellipse]
7 [label="2:CtBlockImpl@\{
    expectLogContaining(\"fork-xml\", \"<Package>java.lang</Package>\");
\}" shape=ellipse]
8 [label="2:CtMethodImpl@public void testForkXml() \{
    expectLogContaining(\"fork-xml\", \"<Package>java.lang</Package>\");
\}" shape=ellipse]
9 [label="3:Update@UPDATE" shape=ellipse]
10 [label="3:CtLiteralImpl@\"<DependsUpon>\"" shape=ellipse]
5 -> 9 [label="Action"];
6 -> 3 [label="AST"];
6 -> 2 [label="AST"];
6 -> 4 [label="AST"];
6 -> 5 [label="AST"];
7 -> 6 [label="AST"];
8 -> 1 [label="AST"];
8 -> 0 [label="AST"];
8 -> 7 [label="AST"];
9 -> 10 [label="Action"];
}