digraph "getClassLoaderFromJar#?,File" {
0 [label="2:CtTypeReferenceImpl@ClassLoader" shape=ellipse]
1 [label="2:CtVirtualElement@getClassLoaderFromJar" shape=ellipse]
2 [label="2:CtParameterImpl@File classjar" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@IOException" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@TaskException" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@Path" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@Path" shape=ellipse]
8 [label="3:CtConstructorCallImpl@new Path()" shape=ellipse]
9 [label="3:CtVirtualElement@lookupPath" shape=ellipse]
10 [label="3:CtLocalVariableImpl@Path lookupPath = new Path()" shape=ellipse]
11 [label="4:CtExecutableReferenceImpl@setLocation(File)" shape=ellipse]
12 [label="4:CtVirtualElement@setLocation" shape=ellipse]
13 [label="4:CtVariableReadImpl@lookupPath" shape=ellipse]
14 [label="4:CtVariableReadImpl@classjar" shape=ellipse]
15 [label="4:CtInvocationImpl@lookupPath.setLocation(classjar)" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@Path" shape=ellipse]
17 [label="5:CtExecutableReferenceImpl@getCombinedClasspath()" shape=ellipse]
18 [label="5:CtVirtualElement@getCombinedClasspath" shape=ellipse]
19 [label="5:CtInvocationImpl@getCombinedClasspath()" shape=ellipse]
20 [label="5:CtVirtualElement@classpath" shape=ellipse]
21 [label="5:CtLocalVariableImpl@Path classpath = getCombinedClasspath()" shape=ellipse]
22 [label="6:CtVariableReadImpl@classpath" shape=ellipse]
23 [label="6:CtLiteralImpl@null" shape=ellipse]
24 [label="6:CtBinaryOperatorImpl@classpath != null" shape=ellipse]
25 [label="7:CtExecutableReferenceImpl@append(Path)" shape=ellipse]
26 [label="7:CtVirtualElement@append" shape=ellipse]
27 [label="7:CtVariableReadImpl@lookupPath" shape=ellipse]
28 [label="7:CtVariableReadImpl@classpath" shape=ellipse]
29 [label="7:CtInvocationImpl@lookupPath.append(classpath)" shape=ellipse]
30 [label="6:CtBlockImpl@\{
    lookupPath.append(classpath);
\}" shape=ellipse]
31 [label="6:CtIfImpl@if (classpath != null) \{
    lookupPath.append(classpath);
\}" shape=ellipse]
32 [label="9:CtTypeReferenceImpl@URLClassLoader" shape=ellipse]
33 [label="9:CtExecutableReferenceImpl@toURLs()" shape=ellipse]
34 [label="9:CtVirtualElement@toURLs" shape=ellipse]
35 [label="9:CtVariableReadImpl@lookupPath" shape=ellipse]
36 [label="9:CtInvocationImpl@lookupPath.toURLs()" shape=ellipse]
37 [label="9:CtConstructorCallImpl@new URLClassLoader(lookupPath.toURLs())" shape=ellipse]
38 [label="9:CtReturnImpl@return new URLClassLoader(lookupPath.toURLs())" shape=ellipse]
39 [label="2:CtBlockImpl@\{
    Path lookupPath = new Path();
    lookupPath.setLocation(classjar);
    Path classpath = getCombinedClasspath();
    if (classpath != null) \{
        lookupPath.append(classpath);
    \}
    return new URLClassLoader(lookupPath.toURLs());
\}" shape=ellipse]
40 [label="2:CtMethodImpl@protected ClassLoader getClassLoaderFromJar(File classjar) throws IOException, TaskException \{
    Path lookupPath = new Path();
    lookupPath.setLocation(classjar);
    Path classpath = getCombinedClasspath();
    if (classpath != null) \{
        lookupPath.append(classpath);
    \}
    return new URLClassLoader(lookupPath.toURLs());
\}" shape=ellipse]
41 [label="9:Update@UPDATE" shape=ellipse]
42 [label="10:CtVariableReadImpl@urls" shape=ellipse]
43 [label="9:Delete@DELETE" shape=ellipse]
44 [label="9:Insert@INSERT" shape=ellipse]
45 [label="9:CtLocalVariableImpl@final URL[] urls = PathUtil.toURLs(lookupPath)" shape=ellipse]
46 [label="9:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
9 -> 13 [label="Define-Use"];
9 -> 27 [label="Define-Use"];
9 -> 35 [label="Define-Use"];
10 -> 9 [label="AST"];
10 -> 6 [label="AST"];
10 -> 8 [label="AST"];
15 -> 12 [label="AST"];
15 -> 13 [label="AST"];
15 -> 11 [label="AST"];
15 -> 14 [label="AST"];
19 -> 18 [label="AST"];
19 -> 17 [label="AST"];
20 -> 22 [label="Define-Use"];
20 -> 28 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 16 [label="AST"];
21 -> 19 [label="AST"];
24 -> 22 [label="AST"];
24 -> 23 [label="AST"];
24 -> 30 [label="Control Dep"];
24 -> 29 [label="Control Dep"];
24 -> 25 [label="Control Dep"];
24 -> 27 [label="Control Dep"];
24 -> 28 [label="Control Dep"];
29 -> 26 [label="AST"];
29 -> 27 [label="AST"];
29 -> 25 [label="AST"];
29 -> 28 [label="AST"];
30 -> 29 [label="AST"];
31 -> 24 [label="AST"];
31 -> 30 [label="AST"];
35 -> 41 [label="Action"];
35 -> 46 [label="Action"];
36 -> 34 [label="AST"];
36 -> 35 [label="AST"];
36 -> 33 [label="AST"];
36 -> 43 [label="Action"];
37 -> 36 [label="AST"];
38 -> 37 [label="AST"];
39 -> 10 [label="AST"];
39 -> 15 [label="AST"];
39 -> 21 [label="AST"];
39 -> 31 [label="AST"];
39 -> 38 [label="AST"];
40 -> 1 [label="AST"];
40 -> 0 [label="AST"];
40 -> 2 [label="AST"];
40 -> 4 [label="AST"];
40 -> 5 [label="AST"];
40 -> 39 [label="AST"];
40 -> 44 [label="Action"];
41 -> 42 [label="Action"];
44 -> 45 [label="Action"];
46 -> 37 [label="Action"];
}