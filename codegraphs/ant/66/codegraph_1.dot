digraph "taskFinished#?,BuildEvent" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@taskFinished" shape=ellipse]
2 [label="2:CtParameterImpl@BuildEvent event" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@BuildEvent" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@long" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@currentTimeMillis()" shape=ellipse]
6 [label="3:CtVirtualElement@currentTimeMillis" shape=ellipse]
7 [label="3:CtTypeAccessImpl@System" shape=ellipse]
8 [label="3:CtInvocationImpl@System.currentTimeMillis()" shape=ellipse]
9 [label="3:CtFieldReadImpl@taskStartTime" shape=ellipse]
10 [label="3:CtBinaryOperatorImpl@System.currentTimeMillis() - taskStartTime" shape=ellipse]
11 [label="3:CtVirtualElement@totalTime" shape=ellipse]
12 [label="3:CtLocalVariableImpl@long totalTime = System.currentTimeMillis() - taskStartTime" shape=ellipse]
13 [label="4:CtExecutableReferenceImpl@setAttribute()" shape=ellipse]
14 [label="4:CtVirtualElement@setAttribute" shape=ellipse]
15 [label="4:CtFieldReadImpl@taskElement" shape=ellipse]
16 [label="4:CtTypeAccessImpl@TIME_ATTR" shape=ellipse]
17 [label="4:CtExecutableReferenceImpl@formatTime(long)" shape=ellipse]
18 [label="4:CtVirtualElement@formatTime" shape=ellipse]
19 [label="4:CtVariableReadImpl@totalTime" shape=ellipse]
20 [label="4:CtInvocationImpl@formatTime(totalTime)" shape=ellipse]
21 [label="4:CtInvocationImpl@taskElement.setAttribute(TIME_ATTR, formatTime(totalTime))" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@appendChild()" shape=ellipse]
23 [label="5:CtVirtualElement@appendChild" shape=ellipse]
24 [label="5:CtFieldReadImpl@targetElement" shape=ellipse]
25 [label="5:CtFieldReadImpl@taskElement" shape=ellipse]
26 [label="5:CtInvocationImpl@targetElement.appendChild(taskElement)" shape=ellipse]
27 [label="6:CtFieldWriteImpl@taskElement" shape=ellipse]
28 [label="6:CtLiteralImpl@null" shape=ellipse]
29 [label="6:CtAssignmentImpl@taskElement = null" shape=ellipse]
30 [label="7:CtExecutableReferenceImpl@isEmpty()" shape=ellipse]
31 [label="7:CtVirtualElement@isEmpty" shape=ellipse]
32 [label="7:CtFieldReadImpl@taskStack" shape=ellipse]
33 [label="7:CtInvocationImpl@taskStack.isEmpty()" shape=ellipse]
34 [label="7:CtUnaryOperatorImpl@!taskStack.isEmpty()" shape=ellipse]
35 [label="8:CtFieldWriteImpl@taskStartTime" shape=ellipse]
36 [label="8:CtExecutableReferenceImpl@longValue()" shape=ellipse]
37 [label="8:CtVirtualElement@longValue" shape=ellipse]
38 [label="8:CtExecutableReferenceImpl@pop()" shape=ellipse]
39 [label="8:CtVirtualElement@pop" shape=ellipse]
40 [label="8:CtFieldReadImpl@taskTimeStack" shape=ellipse]
41 [label="8:CtInvocationImpl@((Long) (taskTimeStack.pop()))" shape=ellipse]
42 [label="8:CtTypeReferenceImpl@Long" shape=ellipse]
43 [label="8:CtInvocationImpl@((Long) (taskTimeStack.pop())).longValue()" shape=ellipse]
44 [label="8:CtAssignmentImpl@taskStartTime = ((Long) (taskTimeStack.pop())).longValue()" shape=ellipse]
45 [label="9:CtFieldWriteImpl@taskElement" shape=ellipse]
46 [label="9:CtExecutableReferenceImpl@pop()" shape=ellipse]
47 [label="9:CtVirtualElement@pop" shape=ellipse]
48 [label="9:CtFieldReadImpl@taskStack" shape=ellipse]
49 [label="9:CtInvocationImpl@((Element) (taskStack.pop()))" shape=ellipse]
50 [label="9:CtTypeReferenceImpl@Element" shape=ellipse]
51 [label="9:CtAssignmentImpl@taskElement = ((Element) (taskStack.pop()))" shape=ellipse]
52 [label="7:CtBlockImpl@\{
    taskStartTime = ((Long) (taskTimeStack.pop())).longValue();
    taskElement = ((Element) (taskStack.pop()));
\}" shape=ellipse]
53 [label="7:CtIfImpl@if (!taskStack.isEmpty()) \{
    taskStartTime = ((Long) (taskTimeStack.pop())).longValue();
    taskElement = ((Element) (taskStack.pop()));
\}" shape=ellipse]
54 [label="2:CtBlockImpl@\{
    long totalTime = System.currentTimeMillis() - taskStartTime;
    taskElement.setAttribute(TIME_ATTR, formatTime(totalTime));
    targetElement.appendChild(taskElement);
    taskElement = null;
    if (!taskStack.isEmpty()) \{
        taskStartTime = ((Long) (taskTimeStack.pop())).longValue();
        taskElement = ((Element) (taskStack.pop()));
    \}
\}" shape=ellipse]
55 [label="2:CtMethodImpl@public void taskFinished(BuildEvent event) \{
    long totalTime = System.currentTimeMillis() - taskStartTime;
    taskElement.setAttribute(TIME_ATTR, formatTime(totalTime));
    targetElement.appendChild(taskElement);
    taskElement = null;
    if (!taskStack.isEmpty()) \{
        taskStartTime = ((Long) (taskTimeStack.pop())).longValue();
        taskElement = ((Element) (taskStack.pop()));
    \}
\}" shape=ellipse]
56 [label="4:CtTypeAccessImpl@DefaultLogger" shape=ellipse]
2 -> 3 [label="AST"];
8 -> 6 [label="AST"];
8 -> 7 [label="AST"];
8 -> 5 [label="AST"];
9 -> 11 [label="Data Dep"];
10 -> 8 [label="AST"];
10 -> 9 [label="AST"];
11 -> 19 [label="Define-Use"];
12 -> 11 [label="AST"];
12 -> 4 [label="AST"];
12 -> 10 [label="AST"];
20 -> 18 [label="AST"];
20 -> 17 [label="AST"];
20 -> 19 [label="AST"];
21 -> 14 [label="AST"];
21 -> 15 [label="AST"];
21 -> 13 [label="AST"];
21 -> 16 [label="AST"];
21 -> 20 [label="AST"];
26 -> 23 [label="AST"];
26 -> 24 [label="AST"];
26 -> 22 [label="AST"];
26 -> 25 [label="AST"];
29 -> 27 [label="AST"];
29 -> 28 [label="AST"];
33 -> 31 [label="AST"];
33 -> 32 [label="AST"];
33 -> 30 [label="AST"];
34 -> 33 [label="AST"];
34 -> 52 [label="Control Dep"];
34 -> 44 [label="Control Dep"];
34 -> 35 [label="Control Dep"];
34 -> 43 [label="Control Dep"];
34 -> 36 [label="Control Dep"];
34 -> 41 [label="Control Dep"];
34 -> 38 [label="Control Dep"];
34 -> 40 [label="Control Dep"];
34 -> 51 [label="Control Dep"];
34 -> 45 [label="Control Dep"];
34 -> 49 [label="Control Dep"];
34 -> 46 [label="Control Dep"];
34 -> 48 [label="Control Dep"];
40 -> 35 [label="Data Dep"];
41 -> 39 [label="AST"];
41 -> 42 [label="AST"];
41 -> 40 [label="AST"];
41 -> 38 [label="AST"];
43 -> 37 [label="AST"];
43 -> 41 [label="AST"];
43 -> 36 [label="AST"];
44 -> 35 [label="AST"];
44 -> 43 [label="AST"];
48 -> 45 [label="Data Dep"];
49 -> 47 [label="AST"];
49 -> 50 [label="AST"];
49 -> 48 [label="AST"];
49 -> 46 [label="AST"];
51 -> 45 [label="AST"];
51 -> 49 [label="AST"];
52 -> 44 [label="AST"];
52 -> 51 [label="AST"];
53 -> 34 [label="AST"];
53 -> 52 [label="AST"];
54 -> 12 [label="AST"];
54 -> 21 [label="AST"];
54 -> 26 [label="AST"];
54 -> 29 [label="AST"];
54 -> 53 [label="AST"];
55 -> 1 [label="AST"];
55 -> 0 [label="AST"];
55 -> 2 [label="AST"];
55 -> 54 [label="AST"];
}