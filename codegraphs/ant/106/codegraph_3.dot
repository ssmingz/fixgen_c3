digraph "createListFile#?,Vector" {
0 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
1 [label="2:CtVirtualElement@createListFile" shape=ellipse]
2 [label="2:CtParameterImpl@Vector files" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Vector" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@IOException" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
6 [label="3:CtExecutableReferenceImpl@createTempFile(java.lang.String,java.lang.String,<unknown>)" shape=ellipse]
7 [label="3:CtVirtualElement@createTempFile" shape=ellipse]
8 [label="3:CtFieldReadImpl@fileUtils" shape=ellipse]
9 [label="3:CtLiteralImpl@\"ant\"" shape=ellipse]
10 [label="3:CtLiteralImpl@\"\"" shape=ellipse]
11 [label="3:CtLiteralImpl@null" shape=ellipse]
12 [label="3:CtInvocationImpl@fileUtils.createTempFile(\"ant\", \"\", null)" shape=ellipse]
13 [label="3:CtVirtualElement@listFile" shape=ellipse]
14 [label="3:CtLocalVariableImpl@File listFile = fileUtils.createTempFile(\"ant\", \"\", null)" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
17 [label="4:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
18 [label="4:CtVariableReadImpl@listFile" shape=ellipse]
19 [label="4:CtConstructorCallImpl@new FileOutputStream(listFile)" shape=ellipse]
20 [label="4:CtConstructorCallImpl@new PrintWriter(new FileOutputStream(listFile))" shape=ellipse]
21 [label="4:CtVirtualElement@writer" shape=ellipse]
22 [label="4:CtLocalVariableImpl@PrintWriter writer = new PrintWriter(new FileOutputStream(listFile))" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
24 [label="5:CtLiteralImpl@0" shape=ellipse]
25 [label="5:CtVirtualElement@i" shape=ellipse]
26 [label="5:CtLocalVariableImpl@int i = 0" shape=ellipse]
27 [label="5:CtVariableReadImpl@i" shape=ellipse]
28 [label="5:CtExecutableReferenceImpl@size()" shape=ellipse]
29 [label="5:CtVirtualElement@size" shape=ellipse]
30 [label="5:CtVariableReadImpl@files" shape=ellipse]
31 [label="5:CtInvocationImpl@files.size()" shape=ellipse]
32 [label="5:CtBinaryOperatorImpl@i < files.size()" shape=ellipse]
33 [label="5:CtVariableWriteImpl@i" shape=ellipse]
34 [label="5:CtUnaryOperatorImpl@i++" shape=ellipse]
35 [label="6:CtExecutableReferenceImpl@println()" shape=ellipse]
36 [label="6:CtVirtualElement@println" shape=ellipse]
37 [label="6:CtVariableReadImpl@writer" shape=ellipse]
38 [label="6:CtExecutableReferenceImpl@toString()" shape=ellipse]
39 [label="6:CtVirtualElement@toString" shape=ellipse]
40 [label="6:CtExecutableReferenceImpl@elementAt(int)" shape=ellipse]
41 [label="6:CtVirtualElement@elementAt" shape=ellipse]
42 [label="6:CtVariableReadImpl@files" shape=ellipse]
43 [label="6:CtVariableReadImpl@i" shape=ellipse]
44 [label="6:CtInvocationImpl@files.elementAt(i)" shape=ellipse]
45 [label="6:CtInvocationImpl@files.elementAt(i).toString()" shape=ellipse]
46 [label="6:CtInvocationImpl@writer.println(files.elementAt(i).toString())" shape=ellipse]
47 [label="5:CtBlockImpl@\{
    writer.println(files.elementAt(i).toString());
\}" shape=ellipse]
48 [label="5:CtForImpl@for (int i = 0; i < files.size(); i++) \{
    writer.println(files.elementAt(i).toString());
\}" shape=ellipse]
49 [label="8:CtExecutableReferenceImpl@close()" shape=ellipse]
50 [label="8:CtVirtualElement@close" shape=ellipse]
51 [label="8:CtVariableReadImpl@writer" shape=ellipse]
52 [label="8:CtInvocationImpl@writer.close()" shape=ellipse]
53 [label="9:CtVariableReadImpl@listFile" shape=ellipse]
54 [label="9:CtReturnImpl@return listFile" shape=ellipse]
55 [label="2:CtBlockImpl@\{
    File listFile = fileUtils.createTempFile(\"ant\", \"\", null);
    PrintWriter writer = new PrintWriter(new FileOutputStream(listFile));
    for (int i = 0; i < files.size(); i++) \{
        writer.println(files.elementAt(i).toString());
    \}
    writer.close();
    return listFile;
\}" shape=ellipse]
56 [label="2:CtMethodImpl@protected File createListFile(Vector files) throws IOException \{
    File listFile = fileUtils.createTempFile(\"ant\", \"\", null);
    PrintWriter writer = new PrintWriter(new FileOutputStream(listFile));
    for (int i = 0; i < files.size(); i++) \{
        writer.println(files.elementAt(i).toString());
    \}
    writer.close();
    return listFile;
\}" shape=ellipse]
57 [label="3:Delete@DELETE" shape=ellipse]
58 [label="3:Delete@DELETE" shape=ellipse]
59 [label="3:Insert@INSERT" shape=ellipse]
60 [label="3:CtTypeAccessImpl@File" shape=ellipse]
61 [label="3:Insert@INSERT" shape=ellipse]
62 [label="3:CtInvocationImpl@getBaseDirectory()" shape=ellipse]
2 -> 3 [label="AST"];
8 -> 13 [label="Data Dep"];
8 -> 57 [label="Action"];
11 -> 58 [label="Action"];
12 -> 7 [label="AST"];
12 -> 8 [label="AST"];
12 -> 6 [label="AST"];
12 -> 9 [label="AST"];
12 -> 10 [label="AST"];
12 -> 11 [label="AST"];
12 -> 59 [label="Action"];
12 -> 61 [label="Action"];
13 -> 18 [label="Define-Use"];
13 -> 53 [label="Define-Use"];
14 -> 13 [label="AST"];
14 -> 5 [label="AST"];
14 -> 12 [label="AST"];
18 -> 21 [label="Data Dep"];
19 -> 18 [label="AST"];
20 -> 19 [label="AST"];
21 -> 37 [label="Define-Use"];
21 -> 51 [label="Define-Use"];
22 -> 21 [label="AST"];
22 -> 15 [label="AST"];
22 -> 20 [label="AST"];
25 -> 27 [label="Define-Use"];
26 -> 25 [label="AST"];
26 -> 23 [label="AST"];
26 -> 24 [label="AST"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
31 -> 28 [label="AST"];
32 -> 27 [label="AST"];
32 -> 31 [label="AST"];
32 -> 47 [label="Control Dep"];
32 -> 46 [label="Control Dep"];
32 -> 35 [label="Control Dep"];
32 -> 37 [label="Control Dep"];
32 -> 45 [label="Control Dep"];
32 -> 38 [label="Control Dep"];
32 -> 44 [label="Control Dep"];
32 -> 40 [label="Control Dep"];
32 -> 42 [label="Control Dep"];
32 -> 43 [label="Control Dep"];
33 -> 43 [label="Define-Use"];
34 -> 33 [label="AST"];
44 -> 41 [label="AST"];
44 -> 42 [label="AST"];
44 -> 40 [label="AST"];
44 -> 43 [label="AST"];
45 -> 39 [label="AST"];
45 -> 44 [label="AST"];
45 -> 38 [label="AST"];
46 -> 36 [label="AST"];
46 -> 37 [label="AST"];
46 -> 35 [label="AST"];
46 -> 45 [label="AST"];
47 -> 46 [label="AST"];
48 -> 26 [label="AST"];
48 -> 32 [label="AST"];
48 -> 34 [label="AST"];
48 -> 47 [label="AST"];
52 -> 50 [label="AST"];
52 -> 51 [label="AST"];
52 -> 49 [label="AST"];
54 -> 53 [label="AST"];
55 -> 14 [label="AST"];
55 -> 22 [label="AST"];
55 -> 48 [label="AST"];
55 -> 52 [label="AST"];
55 -> 54 [label="AST"];
56 -> 1 [label="AST"];
56 -> 0 [label="AST"];
56 -> 2 [label="AST"];
56 -> 4 [label="AST"];
56 -> 55 [label="AST"];
59 -> 60 [label="Action"];
61 -> 62 [label="Action"];
}