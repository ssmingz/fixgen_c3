digraph "execute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@execute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@XSLTProcessor" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@getProcessor()" shape=ellipse]
5 [label="3:CtVirtualElement@getProcessor" shape=ellipse]
6 [label="3:CtTypeAccessImpl@XSLTProcessorFactory" shape=ellipse]
7 [label="3:CtInvocationImpl@XSLTProcessorFactory.getProcessor()" shape=ellipse]
8 [label="3:CtVirtualElement@processor" shape=ellipse]
9 [label="3:CtLocalVariableImpl@XSLTProcessor processor = XSLTProcessorFactory.getProcessor()" shape=ellipse]
10 [label="4:CtExecutableReferenceImpl@setStylesheetParam(java.lang.String)" shape=ellipse]
11 [label="4:CtVirtualElement@setStylesheetParam" shape=ellipse]
12 [label="4:CtVariableReadImpl@processor" shape=ellipse]
13 [label="4:CtLiteralImpl@\"output.dir\"" shape=ellipse]
14 [label="4:CtLiteralImpl@\"'\"" shape=ellipse]
15 [label="4:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
16 [label="4:CtVirtualElement@getAbsolutePath" shape=ellipse]
17 [label="4:CtFieldReadImpl@toDir" shape=ellipse]
18 [label="4:CtInvocationImpl@toDir.getAbsolutePath()" shape=ellipse]
19 [label="4:CtBinaryOperatorImpl@(\"'\" + toDir.getAbsolutePath())" shape=ellipse]
20 [label="4:CtLiteralImpl@\"'\"" shape=ellipse]
21 [label="4:CtBinaryOperatorImpl@(\"'\" + toDir.getAbsolutePath()) + \"'\"" shape=ellipse]
22 [label="4:CtInvocationImpl@processor.setStylesheetParam(\"output.dir\", (\"'\" + toDir.getAbsolutePath()) + \"'\")" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@XSLTInputSource" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@XSLTInputSource" shape=ellipse]
25 [label="5:CtFieldReadImpl@caller.document" shape=ellipse]
26 [label="5:CtConstructorCallImpl@new XSLTInputSource(caller.document)" shape=ellipse]
27 [label="5:CtVirtualElement@xml_src" shape=ellipse]
28 [label="5:CtLocalVariableImpl@XSLTInputSource xml_src = new XSLTInputSource(caller.document)" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
30 [label="6:CtExecutableReferenceImpl@getStylesheetSystemId()" shape=ellipse]
31 [label="6:CtVirtualElement@getStylesheetSystemId" shape=ellipse]
32 [label="6:CtFieldReadImpl@caller" shape=ellipse]
33 [label="6:CtInvocationImpl@caller.getStylesheetSystemId()" shape=ellipse]
34 [label="6:CtVirtualElement@system_id" shape=ellipse]
35 [label="6:CtLocalVariableImpl@String system_id = caller.getStylesheetSystemId()" shape=ellipse]
36 [label="7:CtTypeReferenceImpl@XSLTInputSource" shape=ellipse]
37 [label="7:CtTypeReferenceImpl@XSLTInputSource" shape=ellipse]
38 [label="7:CtVariableReadImpl@system_id" shape=ellipse]
39 [label="7:CtConstructorCallImpl@new XSLTInputSource(system_id)" shape=ellipse]
40 [label="7:CtVirtualElement@xsl_src" shape=ellipse]
41 [label="7:CtLocalVariableImpl@XSLTInputSource xsl_src = new XSLTInputSource(system_id)" shape=ellipse]
42 [label="8:CtTypeReferenceImpl@OutputStream" shape=ellipse]
43 [label="8:CtExecutableReferenceImpl@getOutputStream()" shape=ellipse]
44 [label="8:CtVirtualElement@getOutputStream" shape=ellipse]
45 [label="8:CtInvocationImpl@getOutputStream()" shape=ellipse]
46 [label="8:CtVirtualElement@os" shape=ellipse]
47 [label="8:CtLocalVariableImpl@OutputStream os = getOutputStream()" shape=ellipse]
48 [label="9:CtTypeReferenceImpl@XSLTResultTarget" shape=ellipse]
49 [label="9:CtTypeReferenceImpl@XSLTResultTarget" shape=ellipse]
50 [label="9:CtVariableReadImpl@os" shape=ellipse]
51 [label="9:CtConstructorCallImpl@new XSLTResultTarget(os)" shape=ellipse]
52 [label="9:CtVirtualElement@target" shape=ellipse]
53 [label="9:CtLocalVariableImpl@XSLTResultTarget target = new XSLTResultTarget(os)" shape=ellipse]
54 [label="10:CtExecutableReferenceImpl@process(XSLTInputSource,XSLTInputSource,XSLTResultTarget)" shape=ellipse]
55 [label="10:CtVirtualElement@process" shape=ellipse]
56 [label="10:CtVariableReadImpl@processor" shape=ellipse]
57 [label="10:CtVariableReadImpl@xml_src" shape=ellipse]
58 [label="10:CtVariableReadImpl@xsl_src" shape=ellipse]
59 [label="10:CtVariableReadImpl@target" shape=ellipse]
60 [label="10:CtInvocationImpl@processor.process(xml_src, xsl_src, target)" shape=ellipse]
61 [label="2:CtBlockImpl@\{
    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();
    processor.setStylesheetParam(\"output.dir\", (\"'\" + toDir.getAbsolutePath()) + \"'\");
    XSLTInputSource xml_src = new XSLTInputSource(caller.document);
    String system_id = caller.getStylesheetSystemId();
    XSLTInputSource xsl_src = new XSLTInputSource(system_id);
    OutputStream os = getOutputStream();
    XSLTResultTarget target = new XSLTResultTarget(os);
    processor.process(xml_src, xsl_src, target);
\}" shape=ellipse]
62 [label="2:CtMethodImpl@void execute() throws Exception \{
    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();
    processor.setStylesheetParam(\"output.dir\", (\"'\" + toDir.getAbsolutePath()) + \"'\");
    XSLTInputSource xml_src = new XSLTInputSource(caller.document);
    String system_id = caller.getStylesheetSystemId();
    XSLTInputSource xsl_src = new XSLTInputSource(system_id);
    OutputStream os = getOutputStream();
    XSLTResultTarget target = new XSLTResultTarget(os);
    processor.process(xml_src, xsl_src, target);
\}" shape=ellipse]
63 [label="5:Update@UPDATE" shape=ellipse]
64 [label="5:CtFieldReadImpl@caller" shape=ellipse]
65 [label="4:Update@UPDATE" shape=ellipse]
66 [label="4:CtFieldReadImpl@caller" shape=ellipse]
67 [label="5:Insert@INSERT" shape=ellipse]
68 [label="5:CtInvocationImpl@caller.getDocument()" shape=ellipse]
69 [label="4:Insert@INSERT" shape=ellipse]
70 [label="4:CtInvocationImpl@caller.getToDir()" shape=ellipse]
71 [label="5:Move@MOVE" shape=ellipse]
72 [label="4:Move@MOVE" shape=ellipse]
7 -> 5 [label="AST"];
7 -> 6 [label="AST"];
7 -> 4 [label="AST"];
8 -> 12 [label="Define-Use"];
8 -> 56 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 3 [label="AST"];
9 -> 7 [label="AST"];
17 -> 65 [label="Action"];
17 -> 72 [label="Action"];
18 -> 16 [label="AST"];
18 -> 17 [label="AST"];
18 -> 15 [label="AST"];
18 -> 69 [label="Action"];
19 -> 14 [label="AST"];
19 -> 18 [label="AST"];
21 -> 19 [label="AST"];
21 -> 20 [label="AST"];
22 -> 11 [label="AST"];
22 -> 12 [label="AST"];
22 -> 10 [label="AST"];
22 -> 13 [label="AST"];
22 -> 21 [label="AST"];
25 -> 27 [label="Data Dep"];
25 -> 63 [label="Action"];
25 -> 71 [label="Action"];
26 -> 25 [label="AST"];
26 -> 67 [label="Action"];
27 -> 57 [label="Define-Use"];
28 -> 27 [label="AST"];
28 -> 23 [label="AST"];
28 -> 26 [label="AST"];
32 -> 34 [label="Data Dep"];
33 -> 31 [label="AST"];
33 -> 32 [label="AST"];
33 -> 30 [label="AST"];
34 -> 38 [label="Define-Use"];
35 -> 34 [label="AST"];
35 -> 29 [label="AST"];
35 -> 33 [label="AST"];
38 -> 40 [label="Data Dep"];
39 -> 38 [label="AST"];
40 -> 58 [label="Define-Use"];
41 -> 40 [label="AST"];
41 -> 36 [label="AST"];
41 -> 39 [label="AST"];
45 -> 44 [label="AST"];
45 -> 43 [label="AST"];
46 -> 50 [label="Define-Use"];
47 -> 46 [label="AST"];
47 -> 42 [label="AST"];
47 -> 45 [label="AST"];
50 -> 52 [label="Data Dep"];
51 -> 50 [label="AST"];
52 -> 59 [label="Define-Use"];
53 -> 52 [label="AST"];
53 -> 48 [label="AST"];
53 -> 51 [label="AST"];
60 -> 55 [label="AST"];
60 -> 56 [label="AST"];
60 -> 54 [label="AST"];
60 -> 57 [label="AST"];
60 -> 58 [label="AST"];
60 -> 59 [label="AST"];
61 -> 9 [label="AST"];
61 -> 22 [label="AST"];
61 -> 28 [label="AST"];
61 -> 35 [label="AST"];
61 -> 41 [label="AST"];
61 -> 47 [label="AST"];
61 -> 53 [label="AST"];
61 -> 60 [label="AST"];
62 -> 1 [label="AST"];
62 -> 0 [label="AST"];
62 -> 2 [label="AST"];
62 -> 61 [label="AST"];
63 -> 64 [label="Action"];
65 -> 66 [label="Action"];
67 -> 68 [label="Action"];
68 -> 64 [label="AST"];
69 -> 70 [label="Action"];
70 -> 66 [label="AST"];
71 -> 68 [label="Action"];
72 -> 70 [label="Action"];
}