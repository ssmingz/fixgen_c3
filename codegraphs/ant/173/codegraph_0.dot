digraph "createParamFile#?" {
0 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
1 [label="2:CtVirtualElement@createParamFile" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@TaskException" shape=ellipse]
3 [label="3:CtVirtualElement@File[]" shape=ellipse]
4 [label="3:CtArrayTypeReferenceImpl@File[]" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@getSnapshots()" shape=ellipse]
6 [label="3:CtVirtualElement@getSnapshots" shape=ellipse]
7 [label="3:CtInvocationImpl@getSnapshots()" shape=ellipse]
8 [label="3:CtVirtualElement@snapshots" shape=ellipse]
9 [label="3:CtLocalVariableImpl@File[] snapshots = getSnapshots()" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@File" shape=ellipse]
11 [label="4:CtExecutableReferenceImpl@createTmpFile()" shape=ellipse]
12 [label="4:CtVirtualElement@createTmpFile" shape=ellipse]
13 [label="4:CtInvocationImpl@createTmpFile()" shape=ellipse]
14 [label="4:CtVirtualElement@file" shape=ellipse]
15 [label="4:CtLocalVariableImpl@File file = createTmpFile()" shape=ellipse]
16 [label="5:CtTypeReferenceImpl@FileWriter" shape=ellipse]
17 [label="5:CtLiteralImpl@null" shape=ellipse]
18 [label="5:CtVirtualElement@fw" shape=ellipse]
19 [label="5:CtLocalVariableImpl@FileWriter fw = null" shape=ellipse]
20 [label="7:CtVariableWriteImpl@fw" shape=ellipse]
21 [label="7:CtTypeReferenceImpl@FileWriter" shape=ellipse]
22 [label="7:CtVariableReadImpl@file" shape=ellipse]
23 [label="7:CtConstructorCallImpl@new FileWriter(file)" shape=ellipse]
24 [label="7:CtAssignmentImpl@fw = new FileWriter(file)" shape=ellipse]
25 [label="8:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
26 [label="8:CtTypeReferenceImpl@PrintWriter" shape=ellipse]
27 [label="8:CtVariableReadImpl@fw" shape=ellipse]
28 [label="8:CtConstructorCallImpl@new PrintWriter(fw)" shape=ellipse]
29 [label="8:CtVirtualElement@pw" shape=ellipse]
30 [label="8:CtLocalVariableImpl@PrintWriter pw = new PrintWriter(fw)" shape=ellipse]
31 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
32 [label="9:CtLiteralImpl@0" shape=ellipse]
33 [label="9:CtVirtualElement@i" shape=ellipse]
34 [label="9:CtLocalVariableImpl@int i = 0" shape=ellipse]
35 [label="9:CtVariableReadImpl@i" shape=ellipse]
36 [label="9:CtVariableReadImpl@snapshots" shape=ellipse]
37 [label="9:CtLocalVariableReferenceImpl@snapshots" shape=ellipse]
38 [label="9:CtFieldReadImpl@snapshots.length" shape=ellipse]
39 [label="9:CtBinaryOperatorImpl@i < snapshots.length" shape=ellipse]
40 [label="9:CtVariableWriteImpl@i" shape=ellipse]
41 [label="9:CtUnaryOperatorImpl@i++" shape=ellipse]
42 [label="10:CtExecutableReferenceImpl@println()" shape=ellipse]
43 [label="10:CtVirtualElement@println" shape=ellipse]
44 [label="10:CtVariableReadImpl@pw" shape=ellipse]
45 [label="10:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
46 [label="10:CtVirtualElement@getAbsolutePath" shape=ellipse]
47 [label="10:CtVariableReadImpl@snapshots" shape=ellipse]
48 [label="10:CtVariableReadImpl@i" shape=ellipse]
49 [label="10:CtArrayReadImpl@snapshots[i]" shape=ellipse]
50 [label="10:CtInvocationImpl@snapshots[i].getAbsolutePath()" shape=ellipse]
51 [label="10:CtInvocationImpl@pw.println(snapshots[i].getAbsolutePath())" shape=ellipse]
52 [label="9:CtBlockImpl@\{
    pw.println(snapshots[i].getAbsolutePath());
\}" shape=ellipse]
53 [label="9:CtForImpl@for (int i = 0; i < snapshots.length; i++) \{
    pw.println(snapshots[i].getAbsolutePath());
\}" shape=ellipse]
54 [label="12:CtExecutableReferenceImpl@println()" shape=ellipse]
55 [label="12:CtVirtualElement@println" shape=ellipse]
56 [label="12:CtVariableReadImpl@pw" shape=ellipse]
57 [label="12:CtExecutableReferenceImpl@resolveFile(<unknown>)" shape=ellipse]
58 [label="12:CtVirtualElement@resolveFile" shape=ellipse]
59 [label="12:CtExecutableReferenceImpl@getPath()" shape=ellipse]
60 [label="12:CtVirtualElement@getPath" shape=ellipse]
61 [label="12:CtFieldReadImpl@tofile" shape=ellipse]
62 [label="12:CtInvocationImpl@tofile.getPath()" shape=ellipse]
63 [label="12:CtInvocationImpl@resolveFile(tofile.getPath())" shape=ellipse]
64 [label="12:CtInvocationImpl@pw.println(resolveFile(tofile.getPath()))" shape=ellipse]
65 [label="13:CtExecutableReferenceImpl@flush()" shape=ellipse]
66 [label="13:CtVirtualElement@flush" shape=ellipse]
67 [label="13:CtVariableReadImpl@pw" shape=ellipse]
68 [label="13:CtInvocationImpl@pw.flush()" shape=ellipse]
69 [label="6:CtBlockImpl@\{
    fw = new FileWriter(file);
    PrintWriter pw = new PrintWriter(fw);
    for (int i = 0; i < snapshots.length; i++) \{
        pw.println(snapshots[i].getAbsolutePath());
    \}
    pw.println(resolveFile(tofile.getPath()));
    pw.flush();
\}" shape=ellipse]
70 [label="14:CtVirtualElement@e" shape=ellipse]
71 [label="14:CtTypeReferenceImpl@IOException" shape=ellipse]
72 [label="14:CtCatchVariableImpl@IOException e" shape=ellipse]
73 [label="15:CtTypeReferenceImpl@TaskException" shape=ellipse]
74 [label="15:CtLiteralImpl@\"I/O error while writing to \"" shape=ellipse]
75 [label="15:CtVariableReadImpl@file" shape=ellipse]
76 [label="15:CtBinaryOperatorImpl@\"I/O error while writing to \" + file" shape=ellipse]
77 [label="15:CtVariableReadImpl@e" shape=ellipse]
78 [label="15:CtConstructorCallImpl@new TaskException(\"I/O error while writing to \" + file, e)" shape=ellipse]
79 [label="15:CtThrowImpl@throw new TaskException(\"I/O error while writing to \" + file, e)" shape=ellipse]
80 [label="14:CtBlockImpl@\{
    throw new TaskException(\"I/O error while writing to \" + file, e);
\}" shape=ellipse]
81 [label="14:CtCatchImpl@ catch (IOException e) \{
    throw new TaskException(\"I/O error while writing to \" + file, e);
\}" shape=ellipse]
82 [label="17:CtVariableReadImpl@fw" shape=ellipse]
83 [label="17:CtLiteralImpl@null" shape=ellipse]
84 [label="17:CtBinaryOperatorImpl@fw != null" shape=ellipse]
85 [label="19:CtExecutableReferenceImpl@close()" shape=ellipse]
86 [label="19:CtVirtualElement@close" shape=ellipse]
87 [label="19:CtVariableReadImpl@fw" shape=ellipse]
88 [label="19:CtInvocationImpl@fw.close()" shape=ellipse]
89 [label="18:CtBlockImpl@\{
    fw.close();
\}" shape=ellipse]
90 [label="20:CtVirtualElement@ignored" shape=ellipse]
91 [label="20:CtTypeReferenceImpl@IOException" shape=ellipse]
92 [label="20:CtCatchVariableImpl@IOException ignored" shape=ellipse]
93 [label="20:CtBlockImpl@\{
\}" shape=ellipse]
94 [label="20:CtCatchImpl@ catch (IOException ignored) \{
\}" shape=ellipse]
95 [label="18:CtTryImpl@try \{
    fw.close();
\} catch (IOException ignored) \{
\}" shape=ellipse]
96 [label="17:CtBlockImpl@\{
    try \{
        fw.close();
    \} catch (IOException ignored) \{
    \}
\}" shape=ellipse]
97 [label="17:CtIfImpl@if (fw != null) \{
    try \{
        fw.close();
    \} catch (IOException ignored) \{
    \}
\}" shape=ellipse]
98 [label="16:CtBlockImpl@\{
    if (fw != null) \{
        try \{
            fw.close();
        \} catch (IOException ignored) \{
        \}
    \}
\}" shape=ellipse]
99 [label="6:CtTryImpl@try \{
    fw = new FileWriter(file);
    PrintWriter pw = new PrintWriter(fw);
    for (int i = 0; i < snapshots.length; i++) \{
        pw.println(snapshots[i].getAbsolutePath());
    \}
    pw.println(resolveFile(tofile.getPath()));
    pw.flush();
\} catch (IOException e) \{
    throw new TaskException(\"I/O error while writing to \" + file, e);
\} finally \{
    if (fw != null) \{
        try \{
            fw.close();
        \} catch (IOException ignored) \{
        \}
    \}
\}" shape=ellipse]
100 [label="24:CtVariableReadImpl@file" shape=ellipse]
101 [label="24:CtReturnImpl@return file" shape=ellipse]
102 [label="2:CtBlockImpl@\{
    File[] snapshots = getSnapshots();
    File file = createTmpFile();
    FileWriter fw = null;
    try \{
        fw = new FileWriter(file);
        PrintWriter pw = new PrintWriter(fw);
        for (int i = 0; i < snapshots.length; i++) \{
            pw.println(snapshots[i].getAbsolutePath());
        \}
        pw.println(resolveFile(tofile.getPath()));
        pw.flush();
    \} catch (IOException e) \{
        throw new TaskException(\"I/O error while writing to \" + file, e);
    \} finally \{
        if (fw != null) \{
            try \{
                fw.close();
            \} catch (IOException ignored) \{
            \}
        \}
    \}
    return file;
\}" shape=ellipse]
103 [label="2:CtMethodImpl@protected File createParamFile() throws TaskException \{
    File[] snapshots = getSnapshots();
    File file = createTmpFile();
    FileWriter fw = null;
    try \{
        fw = new FileWriter(file);
        PrintWriter pw = new PrintWriter(fw);
        for (int i = 0; i < snapshots.length; i++) \{
            pw.println(snapshots[i].getAbsolutePath());
        \}
        pw.println(resolveFile(tofile.getPath()));
        pw.flush();
    \} catch (IOException e) \{
        throw new TaskException(\"I/O error while writing to \" + file, e);
    \} finally \{
        if (fw != null) \{
            try \{
                fw.close();
            \} catch (IOException ignored) \{
            \}
        \}
    \}
    return file;
\}" shape=ellipse]
104 [label="12:Insert@INSERT" shape=ellipse]
105 [label="12:CtInvocationImpl@getContext()" shape=ellipse]
4 -> 3 [label="AST"];
7 -> 6 [label="AST"];
7 -> 5 [label="AST"];
8 -> 36 [label="Define-Use"];
8 -> 47 [label="Define-Use"];
8 -> 49 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 4 [label="AST"];
9 -> 7 [label="AST"];
13 -> 12 [label="AST"];
13 -> 11 [label="AST"];
14 -> 22 [label="Define-Use"];
14 -> 75 [label="Define-Use"];
14 -> 100 [label="Define-Use"];
15 -> 14 [label="AST"];
15 -> 10 [label="AST"];
15 -> 13 [label="AST"];
19 -> 18 [label="AST"];
19 -> 16 [label="AST"];
19 -> 17 [label="AST"];
20 -> 27 [label="Define-Use"];
20 -> 82 [label="Define-Use"];
20 -> 87 [label="Define-Use"];
22 -> 20 [label="Data Dep"];
23 -> 22 [label="AST"];
24 -> 20 [label="AST"];
24 -> 23 [label="AST"];
27 -> 29 [label="Data Dep"];
28 -> 27 [label="AST"];
29 -> 44 [label="Define-Use"];
29 -> 56 [label="Define-Use"];
29 -> 67 [label="Define-Use"];
30 -> 29 [label="AST"];
30 -> 25 [label="AST"];
30 -> 28 [label="AST"];
33 -> 35 [label="Define-Use"];
34 -> 33 [label="AST"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
36 -> 37 [label="AST"];
38 -> 36 [label="AST"];
39 -> 35 [label="AST"];
39 -> 38 [label="AST"];
39 -> 52 [label="Control Dep"];
39 -> 51 [label="Control Dep"];
39 -> 42 [label="Control Dep"];
39 -> 44 [label="Control Dep"];
39 -> 50 [label="Control Dep"];
39 -> 45 [label="Control Dep"];
39 -> 49 [label="Control Dep"];
39 -> 47 [label="Control Dep"];
39 -> 48 [label="Control Dep"];
40 -> 48 [label="Define-Use"];
41 -> 40 [label="AST"];
49 -> 47 [label="AST"];
49 -> 48 [label="AST"];
50 -> 46 [label="AST"];
50 -> 49 [label="AST"];
50 -> 45 [label="AST"];
51 -> 43 [label="AST"];
51 -> 44 [label="AST"];
51 -> 42 [label="AST"];
51 -> 50 [label="AST"];
52 -> 51 [label="AST"];
53 -> 34 [label="AST"];
53 -> 39 [label="AST"];
53 -> 41 [label="AST"];
53 -> 52 [label="AST"];
62 -> 60 [label="AST"];
62 -> 61 [label="AST"];
62 -> 59 [label="AST"];
63 -> 58 [label="AST"];
63 -> 57 [label="AST"];
63 -> 62 [label="AST"];
63 -> 104 [label="Action"];
64 -> 55 [label="AST"];
64 -> 56 [label="AST"];
64 -> 54 [label="AST"];
64 -> 63 [label="AST"];
68 -> 66 [label="AST"];
68 -> 67 [label="AST"];
68 -> 65 [label="AST"];
69 -> 24 [label="AST"];
69 -> 30 [label="AST"];
69 -> 53 [label="AST"];
69 -> 64 [label="AST"];
69 -> 68 [label="AST"];
70 -> 77 [label="Define-Use"];
72 -> 70 [label="AST"];
72 -> 71 [label="AST"];
72 -> 80 [label="Control Dep"];
72 -> 79 [label="Control Dep"];
72 -> 78 [label="Control Dep"];
72 -> 76 [label="Control Dep"];
72 -> 74 [label="Control Dep"];
72 -> 75 [label="Control Dep"];
72 -> 77 [label="Control Dep"];
76 -> 74 [label="AST"];
76 -> 75 [label="AST"];
78 -> 76 [label="AST"];
78 -> 77 [label="AST"];
79 -> 78 [label="AST"];
80 -> 79 [label="AST"];
81 -> 72 [label="AST"];
81 -> 80 [label="AST"];
84 -> 82 [label="AST"];
84 -> 83 [label="AST"];
84 -> 96 [label="Control Dep"];
84 -> 95 [label="Control Dep"];
84 -> 89 [label="Control Dep"];
84 -> 88 [label="Control Dep"];
84 -> 85 [label="Control Dep"];
84 -> 87 [label="Control Dep"];
84 -> 94 [label="Control Dep"];
84 -> 92 [label="Control Dep"];
88 -> 86 [label="AST"];
88 -> 87 [label="AST"];
88 -> 85 [label="AST"];
89 -> 88 [label="AST"];
92 -> 90 [label="AST"];
92 -> 91 [label="AST"];
92 -> 93 [label="Control Dep"];
94 -> 92 [label="AST"];
94 -> 93 [label="AST"];
95 -> 89 [label="AST"];
95 -> 94 [label="AST"];
96 -> 95 [label="AST"];
97 -> 84 [label="AST"];
97 -> 96 [label="AST"];
98 -> 97 [label="AST"];
99 -> 69 [label="AST"];
99 -> 81 [label="AST"];
99 -> 98 [label="AST"];
101 -> 100 [label="AST"];
102 -> 9 [label="AST"];
102 -> 15 [label="AST"];
102 -> 19 [label="AST"];
102 -> 99 [label="AST"];
102 -> 101 [label="AST"];
103 -> 1 [label="AST"];
103 -> 0 [label="AST"];
103 -> 2 [label="AST"];
103 -> 102 [label="AST"];
104 -> 105 [label="Action"];
}