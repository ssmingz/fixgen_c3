digraph "startTestSuite#?,JUnitTest" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@startTestSuite" shape=ellipse]
2 [label="2:CtParameterImpl@JUnitTest suite" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@JUnitTest" shape=ellipse]
4 [label="3:CtFieldWriteImpl@doc" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@newDocument()" shape=ellipse]
6 [label="3:CtVirtualElement@newDocument" shape=ellipse]
7 [label="3:CtExecutableReferenceImpl@getDocumentBuilder()" shape=ellipse]
8 [label="3:CtVirtualElement@getDocumentBuilder" shape=ellipse]
9 [label="3:CtInvocationImpl@getDocumentBuilder()" shape=ellipse]
10 [label="3:CtInvocationImpl@getDocumentBuilder().newDocument()" shape=ellipse]
11 [label="3:CtAssignmentImpl@doc = getDocumentBuilder().newDocument()" shape=ellipse]
12 [label="4:CtFieldWriteImpl@rootElement" shape=ellipse]
13 [label="4:CtExecutableReferenceImpl@createElement()" shape=ellipse]
14 [label="4:CtVirtualElement@createElement" shape=ellipse]
15 [label="4:CtFieldReadImpl@doc" shape=ellipse]
16 [label="4:CtTypeAccessImpl@TESTSUITE" shape=ellipse]
17 [label="4:CtInvocationImpl@doc.createElement(TESTSUITE)" shape=ellipse]
18 [label="4:CtAssignmentImpl@rootElement = doc.createElement(TESTSUITE)" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@setAttribute()" shape=ellipse]
20 [label="5:CtVirtualElement@setAttribute" shape=ellipse]
21 [label="5:CtFieldReadImpl@rootElement" shape=ellipse]
22 [label="5:CtTypeAccessImpl@ATTR_NAME" shape=ellipse]
23 [label="5:CtExecutableReferenceImpl@getName()" shape=ellipse]
24 [label="5:CtVirtualElement@getName" shape=ellipse]
25 [label="5:CtVariableReadImpl@suite" shape=ellipse]
26 [label="5:CtInvocationImpl@suite.getName()" shape=ellipse]
27 [label="5:CtInvocationImpl@rootElement.setAttribute(ATTR_NAME, suite.getName())" shape=ellipse]
28 [label="6:CtTypeReferenceImpl@Element" shape=ellipse]
29 [label="6:CtExecutableReferenceImpl@createElement()" shape=ellipse]
30 [label="6:CtVirtualElement@createElement" shape=ellipse]
31 [label="6:CtFieldReadImpl@doc" shape=ellipse]
32 [label="6:CtTypeAccessImpl@PROPERTIES" shape=ellipse]
33 [label="6:CtInvocationImpl@doc.createElement(PROPERTIES)" shape=ellipse]
34 [label="6:CtVirtualElement@propsElement" shape=ellipse]
35 [label="6:CtLocalVariableImpl@Element propsElement = doc.createElement(PROPERTIES)" shape=ellipse]
36 [label="7:CtExecutableReferenceImpl@appendChild(Element)" shape=ellipse]
37 [label="7:CtVirtualElement@appendChild" shape=ellipse]
38 [label="7:CtFieldReadImpl@rootElement" shape=ellipse]
39 [label="7:CtVariableReadImpl@propsElement" shape=ellipse]
40 [label="7:CtInvocationImpl@rootElement.appendChild(propsElement)" shape=ellipse]
41 [label="8:CtTypeReferenceImpl@Properties" shape=ellipse]
42 [label="8:CtExecutableReferenceImpl@getProperties()" shape=ellipse]
43 [label="8:CtVirtualElement@getProperties" shape=ellipse]
44 [label="8:CtVariableReadImpl@suite" shape=ellipse]
45 [label="8:CtInvocationImpl@suite.getProperties()" shape=ellipse]
46 [label="8:CtVirtualElement@props" shape=ellipse]
47 [label="8:CtLocalVariableImpl@Properties props = suite.getProperties()" shape=ellipse]
48 [label="9:CtVariableReadImpl@props" shape=ellipse]
49 [label="9:CtLiteralImpl@null" shape=ellipse]
50 [label="9:CtBinaryOperatorImpl@props != null" shape=ellipse]
51 [label="10:CtTypeReferenceImpl@Enumeration" shape=ellipse]
52 [label="10:CtExecutableReferenceImpl@propertyNames()" shape=ellipse]
53 [label="10:CtVirtualElement@propertyNames" shape=ellipse]
54 [label="10:CtVariableReadImpl@props" shape=ellipse]
55 [label="10:CtInvocationImpl@props.propertyNames()" shape=ellipse]
56 [label="10:CtVirtualElement@e" shape=ellipse]
57 [label="10:CtLocalVariableImpl@Enumeration e = props.propertyNames()" shape=ellipse]
58 [label="11:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
59 [label="11:CtVirtualElement@hasMoreElements" shape=ellipse]
60 [label="11:CtVariableReadImpl@e" shape=ellipse]
61 [label="11:CtInvocationImpl@e.hasMoreElements()" shape=ellipse]
62 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
63 [label="12:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
64 [label="12:CtVirtualElement@nextElement" shape=ellipse]
65 [label="12:CtVariableReadImpl@e" shape=ellipse]
66 [label="12:CtInvocationImpl@((String) (e.nextElement()))" shape=ellipse]
67 [label="12:CtTypeReferenceImpl@String" shape=ellipse]
68 [label="12:CtVirtualElement@name" shape=ellipse]
69 [label="12:CtLocalVariableImpl@String name = ((String) (e.nextElement()))" shape=ellipse]
70 [label="13:CtTypeReferenceImpl@Element" shape=ellipse]
71 [label="13:CtExecutableReferenceImpl@createElement()" shape=ellipse]
72 [label="13:CtVirtualElement@createElement" shape=ellipse]
73 [label="13:CtFieldReadImpl@doc" shape=ellipse]
74 [label="13:CtTypeAccessImpl@PROPERTY" shape=ellipse]
75 [label="13:CtInvocationImpl@doc.createElement(PROPERTY)" shape=ellipse]
76 [label="13:CtVirtualElement@propElement" shape=ellipse]
77 [label="13:CtLocalVariableImpl@Element propElement = doc.createElement(PROPERTY)" shape=ellipse]
78 [label="14:CtExecutableReferenceImpl@setAttribute(java.lang.String)" shape=ellipse]
79 [label="14:CtVirtualElement@setAttribute" shape=ellipse]
80 [label="14:CtVariableReadImpl@propElement" shape=ellipse]
81 [label="14:CtTypeAccessImpl@ATTR_NAME" shape=ellipse]
82 [label="14:CtVariableReadImpl@name" shape=ellipse]
83 [label="14:CtInvocationImpl@propElement.setAttribute(ATTR_NAME, name)" shape=ellipse]
84 [label="15:CtExecutableReferenceImpl@setAttribute()" shape=ellipse]
85 [label="15:CtVirtualElement@setAttribute" shape=ellipse]
86 [label="15:CtVariableReadImpl@propElement" shape=ellipse]
87 [label="15:CtTypeAccessImpl@ATTR_VALUE" shape=ellipse]
88 [label="15:CtExecutableReferenceImpl@getProperty(java.lang.String)" shape=ellipse]
89 [label="15:CtVirtualElement@getProperty" shape=ellipse]
90 [label="15:CtVariableReadImpl@props" shape=ellipse]
91 [label="15:CtVariableReadImpl@name" shape=ellipse]
92 [label="15:CtInvocationImpl@props.getProperty(name)" shape=ellipse]
93 [label="15:CtInvocationImpl@propElement.setAttribute(ATTR_VALUE, props.getProperty(name))" shape=ellipse]
94 [label="16:CtExecutableReferenceImpl@appendChild(Element)" shape=ellipse]
95 [label="16:CtVirtualElement@appendChild" shape=ellipse]
96 [label="16:CtVariableReadImpl@propsElement" shape=ellipse]
97 [label="16:CtVariableReadImpl@propElement" shape=ellipse]
98 [label="16:CtInvocationImpl@propsElement.appendChild(propElement)" shape=ellipse]
99 [label="11:CtBlockImpl@\{
    String name = ((String) (e.nextElement()));
    Element propElement = doc.createElement(PROPERTY);
    propElement.setAttribute(ATTR_NAME, name);
    propElement.setAttribute(ATTR_VALUE, props.getProperty(name));
    propsElement.appendChild(propElement);
\}" shape=ellipse]
100 [label="11:CtWhileImpl@while (e.hasMoreElements()) \{
    String name = ((String) (e.nextElement()));
    Element propElement = doc.createElement(PROPERTY);
    propElement.setAttribute(ATTR_NAME, name);
    propElement.setAttribute(ATTR_VALUE, props.getProperty(name));
    propsElement.appendChild(propElement);
\} " shape=ellipse]
101 [label="9:CtBlockImpl@\{
    Enumeration e = props.propertyNames();
    while (e.hasMoreElements()) \{
        String name = ((String) (e.nextElement()));
        Element propElement = doc.createElement(PROPERTY);
        propElement.setAttribute(ATTR_NAME, name);
        propElement.setAttribute(ATTR_VALUE, props.getProperty(name));
        propsElement.appendChild(propElement);
    \} 
\}" shape=ellipse]
102 [label="9:CtIfImpl@if (props != null) \{
    Enumeration e = props.propertyNames();
    while (e.hasMoreElements()) \{
        String name = ((String) (e.nextElement()));
        Element propElement = doc.createElement(PROPERTY);
        propElement.setAttribute(ATTR_NAME, name);
        propElement.setAttribute(ATTR_VALUE, props.getProperty(name));
        propsElement.appendChild(propElement);
    \} 
\}" shape=ellipse]
103 [label="2:CtBlockImpl@\{
    doc = getDocumentBuilder().newDocument();
    rootElement = doc.createElement(TESTSUITE);
    rootElement.setAttribute(ATTR_NAME, suite.getName());
    Element propsElement = doc.createElement(PROPERTIES);
    rootElement.appendChild(propsElement);
    Properties props = suite.getProperties();
    if (props != null) \{
        Enumeration e = props.propertyNames();
        while (e.hasMoreElements()) \{
            String name = ((String) (e.nextElement()));
            Element propElement = doc.createElement(PROPERTY);
            propElement.setAttribute(ATTR_NAME, name);
            propElement.setAttribute(ATTR_VALUE, props.getProperty(name));
            propsElement.appendChild(propElement);
        \} 
    \}
\}" shape=ellipse]
104 [label="2:CtMethodImpl@public void startTestSuite(JUnitTest suite) \{
    doc = getDocumentBuilder().newDocument();
    rootElement = doc.createElement(TESTSUITE);
    rootElement.setAttribute(ATTR_NAME, suite.getName());
    Element propsElement = doc.createElement(PROPERTIES);
    rootElement.appendChild(propsElement);
    Properties props = suite.getProperties();
    if (props != null) \{
        Enumeration e = props.propertyNames();
        while (e.hasMoreElements()) \{
            String name = ((String) (e.nextElement()));
            Element propElement = doc.createElement(PROPERTY);
            propElement.setAttribute(ATTR_NAME, name);
            propElement.setAttribute(ATTR_VALUE, props.getProperty(name));
            propsElement.appendChild(propElement);
        \} 
    \}
\}" shape=ellipse]
105 [label="10:Update@UPDATE" shape=ellipse]
106 [label="10:CtTypeReferenceImpl@Iterator" shape=ellipse]
107 [label="11:Update@UPDATE" shape=ellipse]
108 [label="11:CtInvocationImpl@e.hasNext()" shape=ellipse]
109 [label="12:Update@UPDATE" shape=ellipse]
110 [label="12:CtInvocationImpl@((String) (e.next()))" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 15 [label="Define-Use"];
4 -> 31 [label="Define-Use"];
4 -> 73 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 7 [label="AST"];
10 -> 6 [label="AST"];
10 -> 9 [label="AST"];
10 -> 5 [label="AST"];
11 -> 4 [label="AST"];
11 -> 10 [label="AST"];
12 -> 21 [label="Define-Use"];
12 -> 38 [label="Define-Use"];
15 -> 12 [label="Data Dep"];
17 -> 14 [label="AST"];
17 -> 15 [label="AST"];
17 -> 13 [label="AST"];
17 -> 16 [label="AST"];
18 -> 12 [label="AST"];
18 -> 17 [label="AST"];
26 -> 24 [label="AST"];
26 -> 25 [label="AST"];
26 -> 23 [label="AST"];
27 -> 20 [label="AST"];
27 -> 21 [label="AST"];
27 -> 19 [label="AST"];
27 -> 22 [label="AST"];
27 -> 26 [label="AST"];
31 -> 34 [label="Data Dep"];
33 -> 30 [label="AST"];
33 -> 31 [label="AST"];
33 -> 29 [label="AST"];
33 -> 32 [label="AST"];
34 -> 39 [label="Define-Use"];
34 -> 96 [label="Define-Use"];
35 -> 34 [label="AST"];
35 -> 28 [label="AST"];
35 -> 33 [label="AST"];
40 -> 37 [label="AST"];
40 -> 38 [label="AST"];
40 -> 36 [label="AST"];
40 -> 39 [label="AST"];
44 -> 46 [label="Data Dep"];
45 -> 43 [label="AST"];
45 -> 44 [label="AST"];
45 -> 42 [label="AST"];
46 -> 48 [label="Define-Use"];
46 -> 54 [label="Define-Use"];
46 -> 90 [label="Define-Use"];
47 -> 46 [label="AST"];
47 -> 41 [label="AST"];
47 -> 45 [label="AST"];
50 -> 48 [label="AST"];
50 -> 49 [label="AST"];
50 -> 101 [label="Control Dep"];
50 -> 57 [label="Control Dep"];
50 -> 55 [label="Control Dep"];
50 -> 52 [label="Control Dep"];
50 -> 54 [label="Control Dep"];
50 -> 100 [label="Control Dep"];
50 -> 61 [label="Control Dep"];
50 -> 58 [label="Control Dep"];
50 -> 60 [label="Control Dep"];
51 -> 105 [label="Action"];
54 -> 56 [label="Data Dep"];
55 -> 53 [label="AST"];
55 -> 54 [label="AST"];
55 -> 52 [label="AST"];
56 -> 60 [label="Define-Use"];
56 -> 65 [label="Define-Use"];
57 -> 56 [label="AST"];
57 -> 51 [label="AST"];
57 -> 55 [label="AST"];
61 -> 59 [label="AST"];
61 -> 60 [label="AST"];
61 -> 58 [label="AST"];
61 -> 99 [label="Control Dep"];
61 -> 69 [label="Control Dep"];
61 -> 66 [label="Control Dep"];
61 -> 63 [label="Control Dep"];
61 -> 65 [label="Control Dep"];
61 -> 77 [label="Control Dep"];
61 -> 75 [label="Control Dep"];
61 -> 71 [label="Control Dep"];
61 -> 73 [label="Control Dep"];
61 -> 74 [label="Control Dep"];
61 -> 83 [label="Control Dep"];
61 -> 78 [label="Control Dep"];
61 -> 80 [label="Control Dep"];
61 -> 81 [label="Control Dep"];
61 -> 82 [label="Control Dep"];
61 -> 93 [label="Control Dep"];
61 -> 84 [label="Control Dep"];
61 -> 86 [label="Control Dep"];
61 -> 87 [label="Control Dep"];
61 -> 92 [label="Control Dep"];
61 -> 88 [label="Control Dep"];
61 -> 90 [label="Control Dep"];
61 -> 91 [label="Control Dep"];
61 -> 98 [label="Control Dep"];
61 -> 94 [label="Control Dep"];
61 -> 96 [label="Control Dep"];
61 -> 97 [label="Control Dep"];
61 -> 107 [label="Action"];
65 -> 68 [label="Data Dep"];
66 -> 64 [label="AST"];
66 -> 67 [label="AST"];
66 -> 65 [label="AST"];
66 -> 63 [label="AST"];
66 -> 109 [label="Action"];
68 -> 82 [label="Define-Use"];
68 -> 91 [label="Define-Use"];
69 -> 68 [label="AST"];
69 -> 62 [label="AST"];
69 -> 66 [label="AST"];
73 -> 76 [label="Data Dep"];
75 -> 72 [label="AST"];
75 -> 73 [label="AST"];
75 -> 71 [label="AST"];
75 -> 74 [label="AST"];
76 -> 80 [label="Define-Use"];
76 -> 86 [label="Define-Use"];
76 -> 97 [label="Define-Use"];
77 -> 76 [label="AST"];
77 -> 70 [label="AST"];
77 -> 75 [label="AST"];
83 -> 79 [label="AST"];
83 -> 80 [label="AST"];
83 -> 78 [label="AST"];
83 -> 81 [label="AST"];
83 -> 82 [label="AST"];
92 -> 89 [label="AST"];
92 -> 90 [label="AST"];
92 -> 88 [label="AST"];
92 -> 91 [label="AST"];
93 -> 85 [label="AST"];
93 -> 86 [label="AST"];
93 -> 84 [label="AST"];
93 -> 87 [label="AST"];
93 -> 92 [label="AST"];
98 -> 95 [label="AST"];
98 -> 96 [label="AST"];
98 -> 94 [label="AST"];
98 -> 97 [label="AST"];
99 -> 69 [label="AST"];
99 -> 77 [label="AST"];
99 -> 83 [label="AST"];
99 -> 93 [label="AST"];
99 -> 98 [label="AST"];
100 -> 61 [label="AST"];
100 -> 99 [label="AST"];
101 -> 57 [label="AST"];
101 -> 100 [label="AST"];
102 -> 50 [label="AST"];
102 -> 101 [label="AST"];
103 -> 11 [label="AST"];
103 -> 18 [label="AST"];
103 -> 27 [label="AST"];
103 -> 35 [label="AST"];
103 -> 40 [label="AST"];
103 -> 47 [label="AST"];
103 -> 102 [label="AST"];
104 -> 1 [label="AST"];
104 -> 0 [label="AST"];
104 -> 2 [label="AST"];
104 -> 103 [label="AST"];
105 -> 106 [label="Action"];
107 -> 108 [label="Action"];
108 -> 110 [label="Control Dep"];
109 -> 110 [label="Action"];
}