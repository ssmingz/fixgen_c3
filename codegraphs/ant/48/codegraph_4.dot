digraph "addVendorFiles#?,Hashtable,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@addVendorFiles" shape=ellipse]
2 [label="2:CtParameterImpl@Hashtable ejbFiles" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Hashtable" shape=ellipse]
4 [label="2:CtParameterImpl@String ddPrefix" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
8 [label="3:CtExecutableReferenceImpl@getConfig()" shape=ellipse]
9 [label="3:CtVirtualElement@getConfig" shape=ellipse]
10 [label="3:CtInvocationImpl@getConfig()" shape=ellipse]
11 [label="3:CtFieldReadImpl@getConfig().descriptorDir" shape=ellipse]
12 [label="3:CtVariableReadImpl@ddPrefix" shape=ellipse]
13 [label="3:CtFieldReadImpl@WL_DD" shape=ellipse]
14 [label="3:CtBinaryOperatorImpl@ddPrefix + WL_DD" shape=ellipse]
15 [label="3:CtConstructorCallImpl@new File(getConfig().descriptorDir, ddPrefix + WL_DD)" shape=ellipse]
16 [label="3:CtVirtualElement@weblogicDD" shape=ellipse]
17 [label="3:CtLocalVariableImpl@File weblogicDD = new File(getConfig().descriptorDir, ddPrefix + WL_DD)" shape=ellipse]
18 [label="4:CtExecutableReferenceImpl@exists()" shape=ellipse]
19 [label="4:CtVirtualElement@exists" shape=ellipse]
20 [label="4:CtVariableReadImpl@weblogicDD" shape=ellipse]
21 [label="4:CtInvocationImpl@weblogicDD.exists()" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@put(File)" shape=ellipse]
23 [label="5:CtVirtualElement@put" shape=ellipse]
24 [label="5:CtVariableReadImpl@ejbFiles" shape=ellipse]
25 [label="5:CtFieldReadImpl@META_DIR" shape=ellipse]
26 [label="5:CtFieldReadImpl@WL_DD" shape=ellipse]
27 [label="5:CtBinaryOperatorImpl@META_DIR + WL_DD" shape=ellipse]
28 [label="5:CtVariableReadImpl@weblogicDD" shape=ellipse]
29 [label="5:CtInvocationImpl@ejbFiles.put(META_DIR + WL_DD, weblogicDD)" shape=ellipse]
30 [label="4:CtBlockImpl@\{
    ejbFiles.put(META_DIR + WL_DD, weblogicDD);
\}" shape=ellipse]
31 [label="7:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
32 [label="7:CtVirtualElement@log" shape=ellipse]
33 [label="8:CtLiteralImpl@\"Unable to locate weblogic deployment descriptor. It was expected to be in \"" shape=ellipse]
34 [label="9:CtExecutableReferenceImpl@getPath()" shape=ellipse]
35 [label="9:CtVirtualElement@getPath" shape=ellipse]
36 [label="9:CtVariableReadImpl@weblogicDD" shape=ellipse]
37 [label="9:CtInvocationImpl@weblogicDD.getPath()" shape=ellipse]
38 [label="8:CtBinaryOperatorImpl@\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + weblogicDD.getPath()" shape=ellipse]
39 [label="10:CtTypeAccessImpl@MSG_WARN" shape=ellipse]
40 [label="7:CtInvocationImpl@log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + weblogicDD.getPath(), MSG_WARN)" shape=ellipse]
41 [label="11:CtReturnImpl@return" shape=ellipse]
42 [label="6:CtBlockImpl@\{
    log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + weblogicDD.getPath(), MSG_WARN);
    return;
\}" shape=ellipse]
43 [label="4:CtIfImpl@if (weblogicDD.exists()) \{
    ejbFiles.put(META_DIR + WL_DD, weblogicDD);
\} else \{
    log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + weblogicDD.getPath(), MSG_WARN);
    return;
\}" shape=ellipse]
44 [label="13:CtFieldReadImpl@newCMP" shape=ellipse]
45 [label="13:CtUnaryOperatorImpl@!newCMP" shape=ellipse]
46 [label="14:CtExecutableReferenceImpl@log(java.lang.String,<unknown>)" shape=ellipse]
47 [label="14:CtVirtualElement@log" shape=ellipse]
48 [label="14:CtLiteralImpl@\"The old method for locating CMP files has been DEPRECATED.\"" shape=ellipse]
49 [label="14:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
50 [label="14:CtInvocationImpl@log(\"The old method for locating CMP files has been DEPRECATED.\", MSG_VERBOSE)" shape=ellipse]
51 [label="15:CtExecutableReferenceImpl@log(java.lang.String,<unknown>)" shape=ellipse]
52 [label="15:CtVirtualElement@log" shape=ellipse]
53 [label="16:CtLiteralImpl@\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \"" shape=ellipse]
54 [label="17:CtLiteralImpl@\"to use the new CMP descriptor inclusion mechanism. \"" shape=ellipse]
55 [label="16:CtBinaryOperatorImpl@\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \" + \"to use the new CMP descriptor inclusion mechanism. \"" shape=ellipse]
56 [label="18:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
57 [label="15:CtInvocationImpl@log(\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \" + \"to use the new CMP descriptor inclusion mechanism. \", MSG_VERBOSE)" shape=ellipse]
58 [label="19:CtTypeReferenceImpl@File" shape=ellipse]
59 [label="19:CtTypeReferenceImpl@File" shape=ellipse]
60 [label="19:CtExecutableReferenceImpl@getConfig()" shape=ellipse]
61 [label="19:CtVirtualElement@getConfig" shape=ellipse]
62 [label="19:CtInvocationImpl@getConfig()" shape=ellipse]
63 [label="19:CtFieldReadImpl@getConfig().descriptorDir" shape=ellipse]
64 [label="19:CtVariableReadImpl@ddPrefix" shape=ellipse]
65 [label="19:CtFieldReadImpl@WL_CMP_DD" shape=ellipse]
66 [label="19:CtBinaryOperatorImpl@ddPrefix + WL_CMP_DD" shape=ellipse]
67 [label="19:CtConstructorCallImpl@new File(getConfig().descriptorDir, ddPrefix + WL_CMP_DD)" shape=ellipse]
68 [label="19:CtVirtualElement@weblogicCMPDD" shape=ellipse]
69 [label="19:CtLocalVariableImpl@File weblogicCMPDD = new File(getConfig().descriptorDir, ddPrefix + WL_CMP_DD)" shape=ellipse]
70 [label="20:CtExecutableReferenceImpl@exists()" shape=ellipse]
71 [label="20:CtVirtualElement@exists" shape=ellipse]
72 [label="20:CtVariableReadImpl@weblogicCMPDD" shape=ellipse]
73 [label="20:CtInvocationImpl@weblogicCMPDD.exists()" shape=ellipse]
74 [label="21:CtExecutableReferenceImpl@put(File)" shape=ellipse]
75 [label="21:CtVirtualElement@put" shape=ellipse]
76 [label="21:CtVariableReadImpl@ejbFiles" shape=ellipse]
77 [label="21:CtFieldReadImpl@META_DIR" shape=ellipse]
78 [label="21:CtFieldReadImpl@WL_CMP_DD" shape=ellipse]
79 [label="21:CtBinaryOperatorImpl@META_DIR + WL_CMP_DD" shape=ellipse]
80 [label="21:CtVariableReadImpl@weblogicCMPDD" shape=ellipse]
81 [label="21:CtInvocationImpl@ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD)" shape=ellipse]
82 [label="20:CtBlockImpl@\{
    ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD);
\}" shape=ellipse]
83 [label="20:CtIfImpl@if (weblogicCMPDD.exists()) \{
    ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD);
\}" shape=ellipse]
84 [label="13:CtBlockImpl@\{
    log(\"The old method for locating CMP files has been DEPRECATED.\", MSG_VERBOSE);
    log(\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \" + \"to use the new CMP descriptor inclusion mechanism. \", MSG_VERBOSE);
    File weblogicCMPDD = new File(getConfig().descriptorDir, ddPrefix + WL_CMP_DD);
    if (weblogicCMPDD.exists()) \{
        ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD);
    \}
\}" shape=ellipse]
85 [label="25:CtTypeReferenceImpl@File" shape=ellipse]
86 [label="25:CtExecutableReferenceImpl@get()" shape=ellipse]
87 [label="25:CtVirtualElement@get" shape=ellipse]
88 [label="25:CtVariableReadImpl@ejbFiles" shape=ellipse]
89 [label="25:CtFieldReadImpl@META_DIR" shape=ellipse]
90 [label="25:CtFieldReadImpl@EJB_DD" shape=ellipse]
91 [label="25:CtBinaryOperatorImpl@META_DIR + EJB_DD" shape=ellipse]
92 [label="25:CtInvocationImpl@((File) (ejbFiles.get(META_DIR + EJB_DD)))" shape=ellipse]
93 [label="25:CtTypeReferenceImpl@File" shape=ellipse]
94 [label="25:CtVirtualElement@ejbDescriptor" shape=ellipse]
95 [label="25:CtLocalVariableImpl@File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)))" shape=ellipse]
96 [label="26:CtTypeReferenceImpl@SAXParserFactory" shape=ellipse]
97 [label="26:CtExecutableReferenceImpl@newInstance()" shape=ellipse]
98 [label="26:CtVirtualElement@newInstance" shape=ellipse]
99 [label="26:CtTypeAccessImpl@SAXParserFactory" shape=ellipse]
100 [label="26:CtInvocationImpl@SAXParserFactory.newInstance()" shape=ellipse]
101 [label="26:CtVirtualElement@saxParserFactory" shape=ellipse]
102 [label="26:CtLocalVariableImpl@SAXParserFactory saxParserFactory = SAXParserFactory.newInstance()" shape=ellipse]
103 [label="27:CtExecutableReferenceImpl@setValidating(boolean)" shape=ellipse]
104 [label="27:CtVirtualElement@setValidating" shape=ellipse]
105 [label="27:CtVariableReadImpl@saxParserFactory" shape=ellipse]
106 [label="27:CtLiteralImpl@true" shape=ellipse]
107 [label="27:CtInvocationImpl@saxParserFactory.setValidating(true)" shape=ellipse]
108 [label="28:CtTypeReferenceImpl@SAXParser" shape=ellipse]
109 [label="28:CtExecutableReferenceImpl@newSAXParser()" shape=ellipse]
110 [label="28:CtVirtualElement@newSAXParser" shape=ellipse]
111 [label="28:CtVariableReadImpl@saxParserFactory" shape=ellipse]
112 [label="28:CtInvocationImpl@saxParserFactory.newSAXParser()" shape=ellipse]
113 [label="28:CtVirtualElement@saxParser" shape=ellipse]
114 [label="28:CtLocalVariableImpl@SAXParser saxParser = saxParserFactory.newSAXParser()" shape=ellipse]
115 [label="29:CtTypeReferenceImpl@DescriptorHandler" shape=ellipse]
116 [label="29:CtExecutableReferenceImpl@getWeblogicDescriptorHandler(<unknown>)" shape=ellipse]
117 [label="29:CtVirtualElement@getWeblogicDescriptorHandler" shape=ellipse]
118 [label="29:CtExecutableReferenceImpl@getParentFile()" shape=ellipse]
119 [label="29:CtVirtualElement@getParentFile" shape=ellipse]
120 [label="29:CtVariableReadImpl@ejbDescriptor" shape=ellipse]
121 [label="29:CtInvocationImpl@ejbDescriptor.getParentFile()" shape=ellipse]
122 [label="29:CtInvocationImpl@getWeblogicDescriptorHandler(ejbDescriptor.getParentFile())" shape=ellipse]
123 [label="29:CtVirtualElement@handler" shape=ellipse]
124 [label="29:CtLocalVariableImpl@DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile())" shape=ellipse]
125 [label="30:CtExecutableReferenceImpl@parse(InputSource,DescriptorHandler)" shape=ellipse]
126 [label="30:CtVirtualElement@parse" shape=ellipse]
127 [label="30:CtVariableReadImpl@saxParser" shape=ellipse]
128 [label="30:CtTypeReferenceImpl@InputSource" shape=ellipse]
129 [label="30:CtTypeReferenceImpl@FileInputStream" shape=ellipse]
130 [label="30:CtVariableReadImpl@weblogicDD" shape=ellipse]
131 [label="30:CtConstructorCallImpl@new FileInputStream(weblogicDD)" shape=ellipse]
132 [label="30:CtConstructorCallImpl@new InputSource(new FileInputStream(weblogicDD))" shape=ellipse]
133 [label="30:CtVariableReadImpl@handler" shape=ellipse]
134 [label="30:CtInvocationImpl@saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler)" shape=ellipse]
135 [label="31:CtTypeReferenceImpl@Hashtable" shape=ellipse]
136 [label="31:CtExecutableReferenceImpl@getFiles()" shape=ellipse]
137 [label="31:CtVirtualElement@getFiles" shape=ellipse]
138 [label="31:CtVariableReadImpl@handler" shape=ellipse]
139 [label="31:CtInvocationImpl@handler.getFiles()" shape=ellipse]
140 [label="31:CtVirtualElement@ht" shape=ellipse]
141 [label="31:CtLocalVariableImpl@Hashtable ht = handler.getFiles()" shape=ellipse]
142 [label="32:CtTypeReferenceImpl@Enumeration" shape=ellipse]
143 [label="32:CtExecutableReferenceImpl@keys()" shape=ellipse]
144 [label="32:CtVirtualElement@keys" shape=ellipse]
145 [label="32:CtVariableReadImpl@ht" shape=ellipse]
146 [label="32:CtInvocationImpl@ht.keys()" shape=ellipse]
147 [label="32:CtVirtualElement@e" shape=ellipse]
148 [label="32:CtLocalVariableImpl@Enumeration e = ht.keys()" shape=ellipse]
149 [label="33:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
150 [label="33:CtVirtualElement@hasMoreElements" shape=ellipse]
151 [label="33:CtVariableReadImpl@e" shape=ellipse]
152 [label="33:CtInvocationImpl@e.hasMoreElements()" shape=ellipse]
153 [label="34:CtTypeReferenceImpl@String" shape=ellipse]
154 [label="34:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
155 [label="34:CtVirtualElement@nextElement" shape=ellipse]
156 [label="34:CtVariableReadImpl@e" shape=ellipse]
157 [label="34:CtInvocationImpl@((String) (e.nextElement()))" shape=ellipse]
158 [label="34:CtTypeReferenceImpl@String" shape=ellipse]
159 [label="34:CtVirtualElement@key" shape=ellipse]
160 [label="34:CtLocalVariableImpl@String key = ((String) (e.nextElement()))" shape=ellipse]
161 [label="35:CtExecutableReferenceImpl@put(java.lang.String)" shape=ellipse]
162 [label="35:CtVirtualElement@put" shape=ellipse]
163 [label="35:CtVariableReadImpl@ejbFiles" shape=ellipse]
164 [label="35:CtVariableReadImpl@key" shape=ellipse]
165 [label="35:CtExecutableReferenceImpl@get(java.lang.String)" shape=ellipse]
166 [label="35:CtVirtualElement@get" shape=ellipse]
167 [label="35:CtVariableReadImpl@ht" shape=ellipse]
168 [label="35:CtVariableReadImpl@key" shape=ellipse]
169 [label="35:CtInvocationImpl@ht.get(key)" shape=ellipse]
170 [label="35:CtInvocationImpl@ejbFiles.put(key, ht.get(key))" shape=ellipse]
171 [label="33:CtBlockImpl@\{
    String key = ((String) (e.nextElement()));
    ejbFiles.put(key, ht.get(key));
\}" shape=ellipse]
172 [label="33:CtWhileImpl@while (e.hasMoreElements()) \{
    String key = ((String) (e.nextElement()));
    ejbFiles.put(key, ht.get(key));
\} " shape=ellipse]
173 [label="24:CtBlockImpl@\{
    File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)));
    SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
    saxParserFactory.setValidating(true);
    SAXParser saxParser = saxParserFactory.newSAXParser();
    DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile());
    saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler);
    Hashtable ht = handler.getFiles();
    Enumeration e = ht.keys();
    while (e.hasMoreElements()) \{
        String key = ((String) (e.nextElement()));
        ejbFiles.put(key, ht.get(key));
    \} 
\}" shape=ellipse]
174 [label="37:CtVirtualElement@e" shape=ellipse]
175 [label="37:CtTypeReferenceImpl@Exception" shape=ellipse]
176 [label="37:CtCatchVariableImpl@Exception e" shape=ellipse]
177 [label="38:CtTypeReferenceImpl@String" shape=ellipse]
178 [label="38:CtLiteralImpl@\"Exception while adding Vendor specific files: \"" shape=ellipse]
179 [label="38:CtExecutableReferenceImpl@toString()" shape=ellipse]
180 [label="38:CtVirtualElement@toString" shape=ellipse]
181 [label="38:CtVariableReadImpl@e" shape=ellipse]
182 [label="38:CtInvocationImpl@e.toString()" shape=ellipse]
183 [label="38:CtBinaryOperatorImpl@\"Exception while adding Vendor specific files: \" + e.toString()" shape=ellipse]
184 [label="38:CtVirtualElement@msg" shape=ellipse]
185 [label="38:CtLocalVariableImpl@String msg = \"Exception while adding Vendor specific files: \" + e.toString()" shape=ellipse]
186 [label="39:CtTypeReferenceImpl@TaskException" shape=ellipse]
187 [label="39:CtVariableReadImpl@msg" shape=ellipse]
188 [label="39:CtVariableReadImpl@e" shape=ellipse]
189 [label="39:CtConstructorCallImpl@new TaskException(msg, e)" shape=ellipse]
190 [label="39:CtThrowImpl@throw new TaskException(msg, e)" shape=ellipse]
191 [label="37:CtBlockImpl@\{
    String msg = \"Exception while adding Vendor specific files: \" + e.toString();
    throw new TaskException(msg, e);
\}" shape=ellipse]
192 [label="37:CtCatchImpl@ catch (Exception e) \{
    String msg = \"Exception while adding Vendor specific files: \" + e.toString();
    throw new TaskException(msg, e);
\}" shape=ellipse]
193 [label="24:CtTryImpl@try \{
    File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)));
    SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
    saxParserFactory.setValidating(true);
    SAXParser saxParser = saxParserFactory.newSAXParser();
    DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile());
    saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler);
    Hashtable ht = handler.getFiles();
    Enumeration e = ht.keys();
    while (e.hasMoreElements()) \{
        String key = ((String) (e.nextElement()));
        ejbFiles.put(key, ht.get(key));
    \} 
\} catch (Exception e) \{
    String msg = \"Exception while adding Vendor specific files: \" + e.toString();
    throw new TaskException(msg, e);
\}" shape=ellipse]
194 [label="23:CtBlockImpl@\{
    try \{
        File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)));
        SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
        saxParserFactory.setValidating(true);
        SAXParser saxParser = saxParserFactory.newSAXParser();
        DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile());
        saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler);
        Hashtable ht = handler.getFiles();
        Enumeration e = ht.keys();
        while (e.hasMoreElements()) \{
            String key = ((String) (e.nextElement()));
            ejbFiles.put(key, ht.get(key));
        \} 
    \} catch (Exception e) \{
        String msg = \"Exception while adding Vendor specific files: \" + e.toString();
        throw new TaskException(msg, e);
    \}
\}" shape=ellipse]
195 [label="13:CtIfImpl@if (!newCMP) \{
    log(\"The old method for locating CMP files has been DEPRECATED.\", MSG_VERBOSE);
    log(\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \" + \"to use the new CMP descriptor inclusion mechanism. \", MSG_VERBOSE);
    File weblogicCMPDD = new File(getConfig().descriptorDir, ddPrefix + WL_CMP_DD);
    if (weblogicCMPDD.exists()) \{
        ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD);
    \}
\} else \{
    try \{
        File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)));
        SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
        saxParserFactory.setValidating(true);
        SAXParser saxParser = saxParserFactory.newSAXParser();
        DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile());
        saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler);
        Hashtable ht = handler.getFiles();
        Enumeration e = ht.keys();
        while (e.hasMoreElements()) \{
            String key = ((String) (e.nextElement()));
            ejbFiles.put(key, ht.get(key));
        \} 
    \} catch (Exception e) \{
        String msg = \"Exception while adding Vendor specific files: \" + e.toString();
        throw new TaskException(msg, e);
    \}
\}" shape=ellipse]
196 [label="2:CtBlockImpl@\{
    File weblogicDD = new File(getConfig().descriptorDir, ddPrefix + WL_DD);
    if (weblogicDD.exists()) \{
        ejbFiles.put(META_DIR + WL_DD, weblogicDD);
    \} else \{
        log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + weblogicDD.getPath(), MSG_WARN);
        return;
    \}
    if (!newCMP) \{
        log(\"The old method for locating CMP files has been DEPRECATED.\", MSG_VERBOSE);
        log(\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \" + \"to use the new CMP descriptor inclusion mechanism. \", MSG_VERBOSE);
        File weblogicCMPDD = new File(getConfig().descriptorDir, ddPrefix + WL_CMP_DD);
        if (weblogicCMPDD.exists()) \{
            ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD);
        \}
    \} else \{
        try \{
            File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)));
            SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
            saxParserFactory.setValidating(true);
            SAXParser saxParser = saxParserFactory.newSAXParser();
            DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile());
            saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler);
            Hashtable ht = handler.getFiles();
            Enumeration e = ht.keys();
            while (e.hasMoreElements()) \{
                String key = ((String) (e.nextElement()));
                ejbFiles.put(key, ht.get(key));
            \} 
        \} catch (Exception e) \{
            String msg = \"Exception while adding Vendor specific files: \" + e.toString();
            throw new TaskException(msg, e);
        \}
    \}
\}" shape=ellipse]
197 [label="2:CtMethodImpl@protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix) \{
    File weblogicDD = new File(getConfig().descriptorDir, ddPrefix + WL_DD);
    if (weblogicDD.exists()) \{
        ejbFiles.put(META_DIR + WL_DD, weblogicDD);
    \} else \{
        log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + weblogicDD.getPath(), MSG_WARN);
        return;
    \}
    if (!newCMP) \{
        log(\"The old method for locating CMP files has been DEPRECATED.\", MSG_VERBOSE);
        log(\"Please adjust your weblogic descriptor and set newCMP=\\"true\\" \" + \"to use the new CMP descriptor inclusion mechanism. \", MSG_VERBOSE);
        File weblogicCMPDD = new File(getConfig().descriptorDir, ddPrefix + WL_CMP_DD);
        if (weblogicCMPDD.exists()) \{
            ejbFiles.put(META_DIR + WL_CMP_DD, weblogicCMPDD);
        \}
    \} else \{
        try \{
            File ejbDescriptor = ((File) (ejbFiles.get(META_DIR + EJB_DD)));
            SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
            saxParserFactory.setValidating(true);
            SAXParser saxParser = saxParserFactory.newSAXParser();
            DescriptorHandler handler = getWeblogicDescriptorHandler(ejbDescriptor.getParentFile());
            saxParser.parse(new InputSource(new FileInputStream(weblogicDD)), handler);
            Hashtable ht = handler.getFiles();
            Enumeration e = ht.keys();
            while (e.hasMoreElements()) \{
                String key = ((String) (e.nextElement()));
                ejbFiles.put(key, ht.get(key));
            \} 
        \} catch (Exception e) \{
            String msg = \"Exception while adding Vendor specific files: \" + e.toString();
            throw new TaskException(msg, e);
        \}
    \}
\}" shape=ellipse]
198 [label="32:Update@UPDATE" shape=ellipse]
199 [label="32:CtTypeReferenceImpl@Iterator" shape=ellipse]
200 [label="33:Update@UPDATE" shape=ellipse]
201 [label="33:CtInvocationImpl@e.hasNext()" shape=ellipse]
202 [label="34:Update@UPDATE" shape=ellipse]
203 [label="34:CtInvocationImpl@((String) (e.next()))" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
10 -> 9 [label="AST"];
10 -> 8 [label="AST"];
11 -> 10 [label="AST"];
11 -> 16 [label="Data Dep"];
12 -> 16 [label="Data Dep"];
13 -> 16 [label="Data Dep"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
15 -> 11 [label="AST"];
15 -> 14 [label="AST"];
16 -> 20 [label="Define-Use"];
16 -> 28 [label="Define-Use"];
16 -> 36 [label="Define-Use"];
16 -> 130 [label="Define-Use"];
17 -> 16 [label="AST"];
17 -> 6 [label="AST"];
17 -> 15 [label="AST"];
21 -> 19 [label="AST"];
21 -> 20 [label="AST"];
21 -> 18 [label="AST"];
21 -> 30 [label="Control Dep"];
21 -> 29 [label="Control Dep"];
21 -> 22 [label="Control Dep"];
21 -> 24 [label="Control Dep"];
21 -> 27 [label="Control Dep"];
21 -> 25 [label="Control Dep"];
21 -> 26 [label="Control Dep"];
21 -> 28 [label="Control Dep"];
21 -> 42 [label="Control Dep"];
21 -> 40 [label="Control Dep"];
21 -> 31 [label="Control Dep"];
21 -> 38 [label="Control Dep"];
21 -> 33 [label="Control Dep"];
21 -> 37 [label="Control Dep"];
21 -> 34 [label="Control Dep"];
21 -> 36 [label="Control Dep"];
21 -> 39 [label="Control Dep"];
21 -> 41 [label="Control Dep"];
27 -> 25 [label="AST"];
27 -> 26 [label="AST"];
29 -> 23 [label="AST"];
29 -> 24 [label="AST"];
29 -> 22 [label="AST"];
29 -> 27 [label="AST"];
29 -> 28 [label="AST"];
30 -> 29 [label="AST"];
37 -> 35 [label="AST"];
37 -> 36 [label="AST"];
37 -> 34 [label="AST"];
38 -> 33 [label="AST"];
38 -> 37 [label="AST"];
40 -> 32 [label="AST"];
40 -> 31 [label="AST"];
40 -> 38 [label="AST"];
40 -> 39 [label="AST"];
42 -> 40 [label="AST"];
42 -> 41 [label="AST"];
43 -> 21 [label="AST"];
43 -> 30 [label="AST"];
43 -> 42 [label="AST"];
45 -> 44 [label="AST"];
45 -> 84 [label="Control Dep"];
45 -> 50 [label="Control Dep"];
45 -> 46 [label="Control Dep"];
45 -> 48 [label="Control Dep"];
45 -> 49 [label="Control Dep"];
45 -> 57 [label="Control Dep"];
45 -> 51 [label="Control Dep"];
45 -> 55 [label="Control Dep"];
45 -> 53 [label="Control Dep"];
45 -> 54 [label="Control Dep"];
45 -> 56 [label="Control Dep"];
45 -> 69 [label="Control Dep"];
45 -> 67 [label="Control Dep"];
45 -> 63 [label="Control Dep"];
45 -> 62 [label="Control Dep"];
45 -> 60 [label="Control Dep"];
45 -> 66 [label="Control Dep"];
45 -> 64 [label="Control Dep"];
45 -> 65 [label="Control Dep"];
45 -> 83 [label="Control Dep"];
45 -> 73 [label="Control Dep"];
45 -> 70 [label="Control Dep"];
45 -> 72 [label="Control Dep"];
45 -> 194 [label="Control Dep"];
45 -> 193 [label="Control Dep"];
45 -> 173 [label="Control Dep"];
45 -> 95 [label="Control Dep"];
45 -> 92 [label="Control Dep"];
45 -> 86 [label="Control Dep"];
45 -> 88 [label="Control Dep"];
45 -> 91 [label="Control Dep"];
45 -> 89 [label="Control Dep"];
45 -> 90 [label="Control Dep"];
45 -> 102 [label="Control Dep"];
45 -> 100 [label="Control Dep"];
45 -> 97 [label="Control Dep"];
45 -> 99 [label="Control Dep"];
45 -> 107 [label="Control Dep"];
45 -> 103 [label="Control Dep"];
45 -> 105 [label="Control Dep"];
45 -> 106 [label="Control Dep"];
45 -> 114 [label="Control Dep"];
45 -> 112 [label="Control Dep"];
45 -> 109 [label="Control Dep"];
45 -> 111 [label="Control Dep"];
45 -> 124 [label="Control Dep"];
45 -> 122 [label="Control Dep"];
45 -> 116 [label="Control Dep"];
45 -> 121 [label="Control Dep"];
45 -> 118 [label="Control Dep"];
45 -> 120 [label="Control Dep"];
45 -> 134 [label="Control Dep"];
45 -> 125 [label="Control Dep"];
45 -> 127 [label="Control Dep"];
45 -> 132 [label="Control Dep"];
45 -> 131 [label="Control Dep"];
45 -> 130 [label="Control Dep"];
45 -> 133 [label="Control Dep"];
45 -> 141 [label="Control Dep"];
45 -> 139 [label="Control Dep"];
45 -> 136 [label="Control Dep"];
45 -> 138 [label="Control Dep"];
45 -> 148 [label="Control Dep"];
45 -> 146 [label="Control Dep"];
45 -> 143 [label="Control Dep"];
45 -> 145 [label="Control Dep"];
45 -> 172 [label="Control Dep"];
45 -> 152 [label="Control Dep"];
45 -> 149 [label="Control Dep"];
45 -> 151 [label="Control Dep"];
45 -> 192 [label="Control Dep"];
45 -> 176 [label="Control Dep"];
50 -> 47 [label="AST"];
50 -> 46 [label="AST"];
50 -> 48 [label="AST"];
50 -> 49 [label="AST"];
55 -> 53 [label="AST"];
55 -> 54 [label="AST"];
57 -> 52 [label="AST"];
57 -> 51 [label="AST"];
57 -> 55 [label="AST"];
57 -> 56 [label="AST"];
62 -> 61 [label="AST"];
62 -> 60 [label="AST"];
63 -> 62 [label="AST"];
63 -> 68 [label="Data Dep"];
64 -> 68 [label="Data Dep"];
65 -> 68 [label="Data Dep"];
66 -> 64 [label="AST"];
66 -> 65 [label="AST"];
67 -> 63 [label="AST"];
67 -> 66 [label="AST"];
68 -> 72 [label="Define-Use"];
68 -> 80 [label="Define-Use"];
69 -> 68 [label="AST"];
69 -> 58 [label="AST"];
69 -> 67 [label="AST"];
73 -> 71 [label="AST"];
73 -> 72 [label="AST"];
73 -> 70 [label="AST"];
73 -> 82 [label="Control Dep"];
73 -> 81 [label="Control Dep"];
73 -> 74 [label="Control Dep"];
73 -> 76 [label="Control Dep"];
73 -> 79 [label="Control Dep"];
73 -> 77 [label="Control Dep"];
73 -> 78 [label="Control Dep"];
73 -> 80 [label="Control Dep"];
79 -> 77 [label="AST"];
79 -> 78 [label="AST"];
81 -> 75 [label="AST"];
81 -> 76 [label="AST"];
81 -> 74 [label="AST"];
81 -> 79 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
83 -> 73 [label="AST"];
83 -> 82 [label="AST"];
84 -> 50 [label="AST"];
84 -> 57 [label="AST"];
84 -> 69 [label="AST"];
84 -> 83 [label="AST"];
88 -> 94 [label="Data Dep"];
89 -> 94 [label="Data Dep"];
90 -> 94 [label="Data Dep"];
91 -> 89 [label="AST"];
91 -> 90 [label="AST"];
92 -> 87 [label="AST"];
92 -> 93 [label="AST"];
92 -> 88 [label="AST"];
92 -> 86 [label="AST"];
92 -> 91 [label="AST"];
94 -> 120 [label="Define-Use"];
95 -> 94 [label="AST"];
95 -> 85 [label="AST"];
95 -> 92 [label="AST"];
100 -> 98 [label="AST"];
100 -> 99 [label="AST"];
100 -> 97 [label="AST"];
101 -> 105 [label="Define-Use"];
101 -> 111 [label="Define-Use"];
102 -> 101 [label="AST"];
102 -> 96 [label="AST"];
102 -> 100 [label="AST"];
107 -> 104 [label="AST"];
107 -> 105 [label="AST"];
107 -> 103 [label="AST"];
107 -> 106 [label="AST"];
111 -> 113 [label="Data Dep"];
112 -> 110 [label="AST"];
112 -> 111 [label="AST"];
112 -> 109 [label="AST"];
113 -> 127 [label="Define-Use"];
114 -> 113 [label="AST"];
114 -> 108 [label="AST"];
114 -> 112 [label="AST"];
120 -> 123 [label="Data Dep"];
121 -> 119 [label="AST"];
121 -> 120 [label="AST"];
121 -> 118 [label="AST"];
122 -> 117 [label="AST"];
122 -> 116 [label="AST"];
122 -> 121 [label="AST"];
123 -> 133 [label="Define-Use"];
123 -> 138 [label="Define-Use"];
124 -> 123 [label="AST"];
124 -> 115 [label="AST"];
124 -> 122 [label="AST"];
131 -> 130 [label="AST"];
132 -> 131 [label="AST"];
134 -> 126 [label="AST"];
134 -> 127 [label="AST"];
134 -> 125 [label="AST"];
134 -> 132 [label="AST"];
134 -> 133 [label="AST"];
138 -> 140 [label="Data Dep"];
139 -> 137 [label="AST"];
139 -> 138 [label="AST"];
139 -> 136 [label="AST"];
140 -> 145 [label="Define-Use"];
140 -> 167 [label="Define-Use"];
141 -> 140 [label="AST"];
141 -> 135 [label="AST"];
141 -> 139 [label="AST"];
142 -> 198 [label="Action"];
145 -> 147 [label="Data Dep"];
146 -> 144 [label="AST"];
146 -> 145 [label="AST"];
146 -> 143 [label="AST"];
147 -> 151 [label="Define-Use"];
147 -> 156 [label="Define-Use"];
147 -> 181 [label="Define-Use"];
147 -> 188 [label="Define-Use"];
148 -> 147 [label="AST"];
148 -> 142 [label="AST"];
148 -> 146 [label="AST"];
152 -> 150 [label="AST"];
152 -> 151 [label="AST"];
152 -> 149 [label="AST"];
152 -> 171 [label="Control Dep"];
152 -> 160 [label="Control Dep"];
152 -> 157 [label="Control Dep"];
152 -> 154 [label="Control Dep"];
152 -> 156 [label="Control Dep"];
152 -> 170 [label="Control Dep"];
152 -> 161 [label="Control Dep"];
152 -> 163 [label="Control Dep"];
152 -> 164 [label="Control Dep"];
152 -> 169 [label="Control Dep"];
152 -> 165 [label="Control Dep"];
152 -> 167 [label="Control Dep"];
152 -> 168 [label="Control Dep"];
152 -> 200 [label="Action"];
156 -> 159 [label="Data Dep"];
157 -> 155 [label="AST"];
157 -> 158 [label="AST"];
157 -> 156 [label="AST"];
157 -> 154 [label="AST"];
157 -> 202 [label="Action"];
159 -> 164 [label="Define-Use"];
159 -> 168 [label="Define-Use"];
160 -> 159 [label="AST"];
160 -> 153 [label="AST"];
160 -> 157 [label="AST"];
169 -> 166 [label="AST"];
169 -> 167 [label="AST"];
169 -> 165 [label="AST"];
169 -> 168 [label="AST"];
170 -> 162 [label="AST"];
170 -> 163 [label="AST"];
170 -> 161 [label="AST"];
170 -> 164 [label="AST"];
170 -> 169 [label="AST"];
171 -> 160 [label="AST"];
171 -> 170 [label="AST"];
172 -> 152 [label="AST"];
172 -> 171 [label="AST"];
173 -> 95 [label="AST"];
173 -> 102 [label="AST"];
173 -> 107 [label="AST"];
173 -> 114 [label="AST"];
173 -> 124 [label="AST"];
173 -> 134 [label="AST"];
173 -> 141 [label="AST"];
173 -> 148 [label="AST"];
173 -> 172 [label="AST"];
174 -> 181 [label="Define-Use"];
174 -> 188 [label="Define-Use"];
176 -> 174 [label="AST"];
176 -> 175 [label="AST"];
176 -> 191 [label="Control Dep"];
176 -> 185 [label="Control Dep"];
176 -> 183 [label="Control Dep"];
176 -> 178 [label="Control Dep"];
176 -> 182 [label="Control Dep"];
176 -> 179 [label="Control Dep"];
176 -> 181 [label="Control Dep"];
176 -> 190 [label="Control Dep"];
176 -> 189 [label="Control Dep"];
176 -> 187 [label="Control Dep"];
176 -> 188 [label="Control Dep"];
181 -> 184 [label="Data Dep"];
182 -> 180 [label="AST"];
182 -> 181 [label="AST"];
182 -> 179 [label="AST"];
183 -> 178 [label="AST"];
183 -> 182 [label="AST"];
184 -> 187 [label="Define-Use"];
185 -> 184 [label="AST"];
185 -> 177 [label="AST"];
185 -> 183 [label="AST"];
189 -> 187 [label="AST"];
189 -> 188 [label="AST"];
190 -> 189 [label="AST"];
191 -> 185 [label="AST"];
191 -> 190 [label="AST"];
192 -> 176 [label="AST"];
192 -> 191 [label="AST"];
193 -> 173 [label="AST"];
193 -> 192 [label="AST"];
194 -> 193 [label="AST"];
195 -> 45 [label="AST"];
195 -> 84 [label="AST"];
195 -> 194 [label="AST"];
196 -> 17 [label="AST"];
196 -> 43 [label="AST"];
196 -> 195 [label="AST"];
197 -> 1 [label="AST"];
197 -> 0 [label="AST"];
197 -> 2 [label="AST"];
197 -> 4 [label="AST"];
197 -> 196 [label="AST"];
198 -> 199 [label="Action"];
200 -> 201 [label="Action"];
201 -> 203 [label="Control Dep"];
202 -> 203 [label="Action"];
}