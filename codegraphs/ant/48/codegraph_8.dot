digraph "createAttributes#?,MetricsElement" {
0 [label="2:CtTypeReferenceImpl@Attributes" shape=ellipse]
1 [label="2:CtVirtualElement@createAttributes" shape=ellipse]
2 [label="2:CtParameterImpl@MetricsElement elem" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@MetricsElement" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@AttributesImpl" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@AttributesImpl" shape=ellipse]
6 [label="3:CtConstructorCallImpl@new AttributesImpl()" shape=ellipse]
7 [label="3:CtVirtualElement@impl" shape=ellipse]
8 [label="3:CtLocalVariableImpl@AttributesImpl impl = new AttributesImpl()" shape=ellipse]
9 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
10 [label="4:CtLiteralImpl@0" shape=ellipse]
11 [label="4:CtVirtualElement@i" shape=ellipse]
12 [label="4:CtLocalVariableImpl@int i = 0" shape=ellipse]
13 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
14 [label="5:CtFieldReadImpl@ATTRIBUTES" shape=ellipse]
15 [label="5:CtVariableWriteImpl@i" shape=ellipse]
16 [label="5:CtUnaryOperatorImpl@i++" shape=ellipse]
17 [label="5:CtArrayReadImpl@ATTRIBUTES[i++]" shape=ellipse]
18 [label="5:CtVirtualElement@name" shape=ellipse]
19 [label="5:CtLocalVariableImpl@String name = ATTRIBUTES[i++]" shape=ellipse]
20 [label="6:CtExecutableReferenceImpl@addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" shape=ellipse]
21 [label="6:CtVirtualElement@addAttribute" shape=ellipse]
22 [label="6:CtVariableReadImpl@impl" shape=ellipse]
23 [label="6:CtLiteralImpl@\"\"" shape=ellipse]
24 [label="6:CtVariableReadImpl@name" shape=ellipse]
25 [label="6:CtVariableReadImpl@name" shape=ellipse]
26 [label="6:CtLiteralImpl@\"CDATA\"" shape=ellipse]
27 [label="6:CtExecutableReferenceImpl@getName()" shape=ellipse]
28 [label="6:CtVirtualElement@getName" shape=ellipse]
29 [label="6:CtVariableReadImpl@elem" shape=ellipse]
30 [label="6:CtInvocationImpl@elem.getName()" shape=ellipse]
31 [label="6:CtInvocationImpl@impl.addAttribute(\"\", name, name, \"CDATA\", elem.getName())" shape=ellipse]
32 [label="7:CtTypeReferenceImpl@Enumeration" shape=ellipse]
33 [label="7:CtExecutableReferenceImpl@getMetrics()" shape=ellipse]
34 [label="7:CtVirtualElement@getMetrics" shape=ellipse]
35 [label="7:CtVariableReadImpl@elem" shape=ellipse]
36 [label="7:CtInvocationImpl@elem.getMetrics()" shape=ellipse]
37 [label="7:CtVirtualElement@metrics" shape=ellipse]
38 [label="7:CtLocalVariableImpl@Enumeration metrics = elem.getMetrics()" shape=ellipse]
39 [label="8:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
40 [label="8:CtVirtualElement@hasMoreElements" shape=ellipse]
41 [label="8:CtVariableReadImpl@metrics" shape=ellipse]
42 [label="8:CtInvocationImpl@metrics.hasMoreElements()" shape=ellipse]
43 [label="8:CtVariableWriteImpl@i" shape=ellipse]
44 [label="8:CtUnaryOperatorImpl@i++" shape=ellipse]
45 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
46 [label="9:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
47 [label="9:CtVirtualElement@nextElement" shape=ellipse]
48 [label="9:CtVariableReadImpl@metrics" shape=ellipse]
49 [label="9:CtInvocationImpl@((String) (metrics.nextElement()))" shape=ellipse]
50 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
51 [label="9:CtVirtualElement@value" shape=ellipse]
52 [label="9:CtLocalVariableImpl@String value = ((String) (metrics.nextElement()))" shape=ellipse]
53 [label="10:CtExecutableReferenceImpl@length()" shape=ellipse]
54 [label="10:CtVirtualElement@length" shape=ellipse]
55 [label="10:CtVariableReadImpl@value" shape=ellipse]
56 [label="10:CtInvocationImpl@value.length()" shape=ellipse]
57 [label="10:CtLiteralImpl@0" shape=ellipse]
58 [label="10:CtBinaryOperatorImpl@value.length() > 0" shape=ellipse]
59 [label="11:CtVariableWriteImpl@name" shape=ellipse]
60 [label="11:CtFieldReadImpl@ATTRIBUTES" shape=ellipse]
61 [label="11:CtVariableReadImpl@i" shape=ellipse]
62 [label="11:CtArrayReadImpl@ATTRIBUTES[i]" shape=ellipse]
63 [label="11:CtAssignmentImpl@name = ATTRIBUTES[i]" shape=ellipse]
64 [label="12:CtExecutableReferenceImpl@addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" shape=ellipse]
65 [label="12:CtVirtualElement@addAttribute" shape=ellipse]
66 [label="12:CtVariableReadImpl@impl" shape=ellipse]
67 [label="12:CtLiteralImpl@\"\"" shape=ellipse]
68 [label="12:CtVariableReadImpl@name" shape=ellipse]
69 [label="12:CtVariableReadImpl@name" shape=ellipse]
70 [label="12:CtLiteralImpl@\"CDATA\"" shape=ellipse]
71 [label="12:CtVariableReadImpl@value" shape=ellipse]
72 [label="12:CtInvocationImpl@impl.addAttribute(\"\", name, name, \"CDATA\", value)" shape=ellipse]
73 [label="10:CtBlockImpl@\{
    name = ATTRIBUTES[i];
    impl.addAttribute(\"\", name, name, \"CDATA\", value);
\}" shape=ellipse]
74 [label="10:CtIfImpl@if (value.length() > 0) \{
    name = ATTRIBUTES[i];
    impl.addAttribute(\"\", name, name, \"CDATA\", value);
\}" shape=ellipse]
75 [label="8:CtBlockImpl@\{
    String value = ((String) (metrics.nextElement()));
    if (value.length() > 0) \{
        name = ATTRIBUTES[i];
        impl.addAttribute(\"\", name, name, \"CDATA\", value);
    \}
\}" shape=ellipse]
76 [label="8:CtForImpl@for (; metrics.hasMoreElements(); i++) \{
    String value = ((String) (metrics.nextElement()));
    if (value.length() > 0) \{
        name = ATTRIBUTES[i];
        impl.addAttribute(\"\", name, name, \"CDATA\", value);
    \}
\}" shape=ellipse]
77 [label="15:CtVariableReadImpl@impl" shape=ellipse]
78 [label="15:CtReturnImpl@return impl" shape=ellipse]
79 [label="2:CtBlockImpl@\{
    AttributesImpl impl = new AttributesImpl();
    int i = 0;
    String name = ATTRIBUTES[i++];
    impl.addAttribute(\"\", name, name, \"CDATA\", elem.getName());
    Enumeration metrics = elem.getMetrics();
    for (; metrics.hasMoreElements(); i++) \{
        String value = ((String) (metrics.nextElement()));
        if (value.length() > 0) \{
            name = ATTRIBUTES[i];
            impl.addAttribute(\"\", name, name, \"CDATA\", value);
        \}
    \}
    return impl;
\}" shape=ellipse]
80 [label="2:CtMethodImpl@protected Attributes createAttributes(MetricsElement elem) \{
    AttributesImpl impl = new AttributesImpl();
    int i = 0;
    String name = ATTRIBUTES[i++];
    impl.addAttribute(\"\", name, name, \"CDATA\", elem.getName());
    Enumeration metrics = elem.getMetrics();
    for (; metrics.hasMoreElements(); i++) \{
        String value = ((String) (metrics.nextElement()));
        if (value.length() > 0) \{
            name = ATTRIBUTES[i];
            impl.addAttribute(\"\", name, name, \"CDATA\", value);
        \}
    \}
    return impl;
\}" shape=ellipse]
81 [label="7:Update@UPDATE" shape=ellipse]
82 [label="7:CtTypeReferenceImpl@Iterator" shape=ellipse]
83 [label="8:Update@UPDATE" shape=ellipse]
84 [label="8:CtInvocationImpl@metrics.hasNext()" shape=ellipse]
85 [label="9:Update@UPDATE" shape=ellipse]
86 [label="9:CtInvocationImpl@((String) (metrics.next()))" shape=ellipse]
2 -> 3 [label="AST"];
7 -> 22 [label="Define-Use"];
7 -> 66 [label="Define-Use"];
7 -> 77 [label="Define-Use"];
8 -> 7 [label="AST"];
8 -> 4 [label="AST"];
8 -> 6 [label="AST"];
12 -> 11 [label="AST"];
12 -> 9 [label="AST"];
12 -> 10 [label="AST"];
16 -> 15 [label="AST"];
17 -> 14 [label="AST"];
17 -> 16 [label="AST"];
17 -> 18 [label="Data Dep"];
18 -> 24 [label="Define-Use"];
18 -> 25 [label="Define-Use"];
18 -> 68 [label="Define-Use"];
18 -> 69 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 13 [label="AST"];
19 -> 17 [label="AST"];
30 -> 28 [label="AST"];
30 -> 29 [label="AST"];
30 -> 27 [label="AST"];
31 -> 21 [label="AST"];
31 -> 22 [label="AST"];
31 -> 20 [label="AST"];
31 -> 23 [label="AST"];
31 -> 24 [label="AST"];
31 -> 25 [label="AST"];
31 -> 26 [label="AST"];
31 -> 30 [label="AST"];
32 -> 81 [label="Action"];
35 -> 37 [label="Data Dep"];
36 -> 34 [label="AST"];
36 -> 35 [label="AST"];
36 -> 33 [label="AST"];
37 -> 41 [label="Define-Use"];
37 -> 48 [label="Define-Use"];
38 -> 37 [label="AST"];
38 -> 32 [label="AST"];
38 -> 36 [label="AST"];
42 -> 40 [label="AST"];
42 -> 41 [label="AST"];
42 -> 39 [label="AST"];
42 -> 75 [label="Control Dep"];
42 -> 52 [label="Control Dep"];
42 -> 49 [label="Control Dep"];
42 -> 46 [label="Control Dep"];
42 -> 48 [label="Control Dep"];
42 -> 74 [label="Control Dep"];
42 -> 58 [label="Control Dep"];
42 -> 56 [label="Control Dep"];
42 -> 53 [label="Control Dep"];
42 -> 55 [label="Control Dep"];
42 -> 57 [label="Control Dep"];
42 -> 83 [label="Action"];
43 -> 61 [label="Define-Use"];
44 -> 43 [label="AST"];
48 -> 51 [label="Data Dep"];
49 -> 47 [label="AST"];
49 -> 50 [label="AST"];
49 -> 48 [label="AST"];
49 -> 46 [label="AST"];
49 -> 85 [label="Action"];
51 -> 55 [label="Define-Use"];
51 -> 71 [label="Define-Use"];
52 -> 51 [label="AST"];
52 -> 45 [label="AST"];
52 -> 49 [label="AST"];
56 -> 54 [label="AST"];
56 -> 55 [label="AST"];
56 -> 53 [label="AST"];
58 -> 56 [label="AST"];
58 -> 57 [label="AST"];
58 -> 73 [label="Control Dep"];
58 -> 63 [label="Control Dep"];
58 -> 59 [label="Control Dep"];
58 -> 62 [label="Control Dep"];
58 -> 60 [label="Control Dep"];
58 -> 61 [label="Control Dep"];
58 -> 72 [label="Control Dep"];
58 -> 64 [label="Control Dep"];
58 -> 66 [label="Control Dep"];
58 -> 67 [label="Control Dep"];
58 -> 68 [label="Control Dep"];
58 -> 69 [label="Control Dep"];
58 -> 70 [label="Control Dep"];
58 -> 71 [label="Control Dep"];
59 -> 68 [label="Define-Use"];
59 -> 69 [label="Define-Use"];
60 -> 59 [label="Data Dep"];
61 -> 59 [label="Data Dep"];
62 -> 60 [label="AST"];
62 -> 61 [label="AST"];
62 -> 59 [label="Data Dep"];
63 -> 59 [label="AST"];
63 -> 62 [label="AST"];
72 -> 65 [label="AST"];
72 -> 66 [label="AST"];
72 -> 64 [label="AST"];
72 -> 67 [label="AST"];
72 -> 68 [label="AST"];
72 -> 69 [label="AST"];
72 -> 70 [label="AST"];
72 -> 71 [label="AST"];
73 -> 63 [label="AST"];
73 -> 72 [label="AST"];
74 -> 58 [label="AST"];
74 -> 73 [label="AST"];
75 -> 52 [label="AST"];
75 -> 74 [label="AST"];
76 -> 42 [label="AST"];
76 -> 44 [label="AST"];
76 -> 75 [label="AST"];
78 -> 77 [label="AST"];
79 -> 8 [label="AST"];
79 -> 12 [label="AST"];
79 -> 19 [label="AST"];
79 -> 31 [label="AST"];
79 -> 38 [label="AST"];
79 -> 76 [label="AST"];
79 -> 78 [label="AST"];
80 -> 1 [label="AST"];
80 -> 0 [label="AST"];
80 -> 2 [label="AST"];
80 -> 79 [label="AST"];
81 -> 82 [label="Action"];
83 -> 84 [label="Action"];
84 -> 86 [label="Control Dep"];
85 -> 86 [label="Action"];
}