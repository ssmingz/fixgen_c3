digraph "Pattern" {
0 [label="findLabel#?,View#11:UPDATE
targetStarted#?,BuildEvent#5:UPDATE
logStarteamVersion#?#3:UPDATE
addClasspathEntry#?,String#13:UPDATE" shape=ellipse]
1 [label="findLabel#?,View#11:MSG_DEBUG
targetStarted#?,BuildEvent#5:MSG_DEBUG
logStarteamVersion#?#3:MSG_DEBUG
addClasspathEntry#?,String#13:MSG_DEBUG" shape=ellipse]
2 [label="findLabel#?,View#7:((stLabel != null) && (!stLabel.isDeleted())) && stLabel.getName().equals(this.label)
targetStarted#?,BuildEvent#3:initialized
addClasspathEntry#?,String#9:f != null" shape=ellipse]
3 [label="findLabel#?,View#4:i < allLabels.length
logStarteamVersion#?#3:\"StarTeam version: \" + BuildNumber.getDisplayString()" shape=ellipse]
4 [label="findLabel#?,View#7:if (((stLabel != null) && (!stLabel.isDeleted())) && stLabel.getName().equals(this.label)) \{
    if ((!stLabel.isRevisionLabel()) && (!stLabel.isViewLabel())) \{
        throw new BuildException(\"Unexpected label type.\");
    \}
    log(\"using label \" + stLabel.getName(), MSG_DEBUG);
    this.labelInUse = stLabel;
    return;
\}
targetStarted#?,BuildEvent#3:if (initialized) \{
    Log log = getLog(\"org.apache.tools.ant.Target\", event.getTarget().getName());
    realLog(log, \"Start: \" + event.getTarget().getName(), MSG_DEBUG, null);
\}
addClasspathEntry#?,String#9:if (f != null) \{
    log(\"Found \" + f.getAbsolutePath(), MSG_DEBUG);
    createClasspath().setLocation(f);
\} else \{
    log(\"Couldn\'t find \" + resource, MSG_DEBUG);
\}" shape=ellipse]
5 [label="findLabel#?,View#7:((stLabel != null) && (!stLabel.isDeleted()))" shape=ellipse]
6 [label="findLabel#?,View#7:stLabel.getName().equals(this.label)" shape=ellipse]
7 [label="findLabel#?,View#7:\{
    if ((!stLabel.isRevisionLabel()) && (!stLabel.isViewLabel())) \{
        throw new BuildException(\"Unexpected label type.\");
    \}
    log(\"using label \" + stLabel.getName(), MSG_DEBUG);
    this.labelInUse = stLabel;
    return;
\}
targetStarted#?,BuildEvent#3:\{
    Log log = getLog(\"org.apache.tools.ant.Target\", event.getTarget().getName());
    realLog(log, \"Start: \" + event.getTarget().getName(), MSG_DEBUG, null);
\}
logStarteamVersion#?#2:\{
    log(\"StarTeam version: \" + BuildNumber.getDisplayString(), MSG_DEBUG);
\}
addClasspathEntry#?,String#9:\{
    log(\"Found \" + f.getAbsolutePath(), MSG_DEBUG);
    createClasspath().setLocation(f);
\}" shape=ellipse]
8 [label="findLabel#?,View#8:if ((!stLabel.isRevisionLabel()) && (!stLabel.isViewLabel())) \{
    throw new BuildException(\"Unexpected label type.\");
\}
targetStarted#?,BuildEvent#4:Log log = getLog(\"org.apache.tools.ant.Target\", event.getTarget().getName())" shape=ellipse]
9 [label="findLabel#?,View#8:(!stLabel.isRevisionLabel()) && (!stLabel.isViewLabel())
addClasspathEntry#?,String#10:\"Found \" + f.getAbsolutePath()" shape=ellipse]
10 [label="findLabel#?,View#8:(!stLabel.isRevisionLabel())" shape=ellipse]
11 [label="findLabel#?,View#8:stLabel.isRevisionLabel()
targetStarted#?,BuildEvent#4:event.getTarget()
addClasspathEntry#?,String#11:createClasspath()" shape=ellipse]
12 [label="findLabel#?,View#8:isRevisionLabel()
targetStarted#?,BuildEvent#4:getTarget()
logStarteamVersion#?#3:log(<unknown>,<unknown>)
addClasspathEntry#?,String#11:createClasspath()" shape=ellipse]
13 [label="findLabel#?,View#8:stLabel
targetStarted#?,BuildEvent#4:event
logStarteamVersion#?#-1:
addClasspathEntry#?,String#-1:" shape=ellipse]
14 [label="findLabel#?,View#8:(!stLabel.isViewLabel())" shape=ellipse]
15 [label="findLabel#?,View#8:stLabel.isViewLabel()
targetStarted#?,BuildEvent#5:event.getTarget()" shape=ellipse]
16 [label="findLabel#?,View#8:isViewLabel()
targetStarted#?,BuildEvent#5:getTarget()
addClasspathEntry#?,String#11:setLocation(File)" shape=ellipse]
17 [label="findLabel#?,View#8:stLabel
targetStarted#?,BuildEvent#5:event
addClasspathEntry#?,String#13:resource" shape=ellipse]
18 [label="findLabel#?,View#11:log(\"using label \" + stLabel.getName(), MSG_DEBUG)
targetStarted#?,BuildEvent#5:realLog(log, \"Start: \" + event.getTarget().getName(), MSG_DEBUG, null)" shape=ellipse]
19 [label="findLabel#?,View#11:log(<unknown>,<unknown>)
targetStarted#?,BuildEvent#5:realLog(<unknown>,<unknown>,<unknown>,<unknown>)
addClasspathEntry#?,String#10:log(<unknown>,<unknown>)" shape=ellipse]
20 [label="findLabel#?,View#-1:
targetStarted#?,BuildEvent#-1:
addClasspathEntry#?,String#-1:" shape=ellipse]
21 [label="findLabel#?,View#-1:PlaceHold
targetStarted#?,BuildEvent#-1:PlaceHold
addClasspathEntry#?,String#-1:PlaceHold" shape=ellipse]
22 [label="findLabel#?,View#11:\"using label \" + stLabel.getName()
targetStarted#?,BuildEvent#5:\"Start: \" + event.getTarget().getName()" shape=ellipse]
23 [label="findLabel#?,View#11:\"using label \"
targetStarted#?,BuildEvent#5:\"Start: \"
addClasspathEntry#?,String#13:\"Couldn\'t find \"" shape=ellipse]
24 [label="findLabel#?,View#11:stLabel.getName()" shape=ellipse]
25 [label="findLabel#?,View#11:getName()
targetStarted#?,BuildEvent#4:getName()
addClasspathEntry#?,String#10:getAbsolutePath()" shape=ellipse]
26 [label="findLabel#?,View#11:stLabel
targetStarted#?,BuildEvent#-1:
addClasspathEntry#?,String#10:f" shape=ellipse]
27 [label="findLabel#?,View#12:this.labelInUse = stLabel" shape=ellipse]
28 [label="findLabel#?,View#12:this.labelInUse" shape=ellipse]
29 [label="findLabel#?,View#12:stLabel
addClasspathEntry#?,String#11:f" shape=ellipse]
30 [label="findLabel#?,View#13:return" shape=ellipse]
31 [label="findLabel#?,View#-1:MSG_DEBUG
targetStarted#?,BuildEvent#-1:MSG_DEBUG
logStarteamVersion#?#-1:MSG_DEBUG
addClasspathEntry#?,String#-1:MSG_DEBUG" shape=ellipse]
32 [label="findLabel#?,View#11:MSG_VERBOSE
targetStarted#?,BuildEvent#5:MSG_VERBOSE
logStarteamVersion#?#3:MSG_VERBOSE
addClasspathEntry#?,String#13:MSG_VERBOSE" shape=ellipse]
33 [label="targetStarted#?,BuildEvent#-1:initialized" shape=ellipse]
34 [label="targetStarted#?,BuildEvent#5:log" shape=ellipse]
35 [label="targetStarted#?,BuildEvent#4:event.getTarget().getName()" shape=ellipse]
36 [label="targetStarted#?,BuildEvent#-1:PlaceHold" shape=ellipse]
37 [label="targetStarted#?,BuildEvent#4:getLog(\"org.apache.tools.ant.Target\", event.getTarget().getName())" shape=ellipse]
38 [label="targetStarted#?,BuildEvent#5:event.getTarget().getName()" shape=ellipse]
39 [label="targetStarted#?,BuildEvent#4:getLog(java.lang.String,<unknown>)" shape=ellipse]
40 [label="targetStarted#?,BuildEvent#5:null" shape=ellipse]
41 [label="targetStarted#?,BuildEvent#4:\"org.apache.tools.ant.Target\"" shape=ellipse]
42 [label="targetStarted#?,BuildEvent#5:getName()" shape=ellipse]
43 [label="logStarteamVersion#?#3:log" shape=ellipse]
44 [label="logStarteamVersion#?#3:log(\"StarTeam version: \" + BuildNumber.getDisplayString(), MSG_DEBUG)" shape=ellipse]
45 [label="addClasspathEntry#?,String#11:createClasspath().setLocation(f)" shape=ellipse]
46 [label="addClasspathEntry#?,String#-1:PlaceHold" shape=ellipse]
47 [label="addClasspathEntry#?,String#10:MSG_DEBUG" shape=ellipse]
48 [label="addClasspathEntry#?,String#13:log(java.lang.String,<unknown>)" shape=ellipse]
49 [label="addClasspathEntry#?,String#-1:PlaceHold" shape=ellipse]
50 [label="addClasspathEntry#?,String#10:\"Found \"" shape=ellipse]
51 [label="addClasspathEntry#?,String#13:\"Couldn\'t find \" + resource" shape=ellipse]
52 [label="addClasspathEntry#?,String#10:f.getAbsolutePath()" shape=ellipse]
53 [label="addClasspathEntry#?,String#-1:" shape=ellipse]
54 [label="addClasspathEntry#?,String#9:null" shape=ellipse]
55 [label="addClasspathEntry#?,String#10:log(\"Found \" + f.getAbsolutePath(), MSG_DEBUG)" shape=ellipse]
56 [label="addClasspathEntry#?,String#13:log(\"Couldn\'t find \" + resource, MSG_DEBUG)" shape=ellipse]
57 [label="addClasspathEntry#?,String#9:f" shape=ellipse]
58 [label="addClasspathEntry#?,String#12:\{
    log(\"Couldn\'t find \" + resource, MSG_DEBUG);
\}" shape=ellipse]
0 -> 32 [label="Action:4"];
1 -> 0 [label="Action:4"];
1 -> 31 [label="AST:4"];
2 -> 1 [label="Control Dep:3"];
2 -> 5 [label="AST:1"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="Control Dep:3"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:1"];
2 -> 11 [label="Control Dep:3"];
2 -> 12 [label="Control Dep:3"];
2 -> 13 [label="Control Dep:3"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:3"];
2 -> 17 [label="Control Dep:3"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:3"];
2 -> 20 [label="Control Dep:3"];
2 -> 21 [label="Control Dep:3"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:3"];
2 -> 24 [label="Control Dep:1"];
2 -> 25 [label="Control Dep:3"];
2 -> 26 [label="Control Dep:3"];
2 -> 27 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
2 -> 29 [label="Control Dep:2"];
2 -> 30 [label="Control Dep:1"];
2 -> 33 [label="AST:1"];
2 -> 34 [label="Control Dep:1"];
2 -> 35 [label="Control Dep:1"];
2 -> 36 [label="Control Dep:1"];
2 -> 37 [label="Control Dep:1"];
2 -> 38 [label="Control Dep:1"];
2 -> 39 [label="Control Dep:1"];
2 -> 40 [label="Control Dep:1"];
2 -> 41 [label="Control Dep:1"];
2 -> 42 [label="Control Dep:1"];
2 -> 45 [label="Control Dep:1"];
2 -> 46 [label="Control Dep:1"];
2 -> 47 [label="Control Dep:1"];
2 -> 48 [label="Control Dep:1"];
2 -> 49 [label="Control Dep:1"];
2 -> 50 [label="Control Dep:1"];
2 -> 51 [label="Control Dep:1"];
2 -> 52 [label="Control Dep:1"];
2 -> 53 [label="Control Dep:1"];
2 -> 54 [label="AST:1"];
2 -> 55 [label="Control Dep:1"];
2 -> 56 [label="Control Dep:1"];
2 -> 57 [label="AST:1"];
2 -> 58 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:1"];
3 -> 4 [label="Control Dep:1"];
3 -> 5 [label="Control Dep:1"];
3 -> 6 [label="Control Dep:1"];
4 -> 2 [label="AST:3"];
4 -> 7 [label="AST:3"];
4 -> 58 [label="AST:1"];
7 -> 8 [label="AST:2"];
7 -> 18 [label="AST:2"];
7 -> 27 [label="AST:1"];
7 -> 30 [label="AST:1"];
7 -> 44 [label="AST:1"];
7 -> 45 [label="AST:1"];
7 -> 55 [label="AST:1"];
8 -> 9 [label="AST:1"];
8 -> 37 [label="AST:1"];
9 -> 10 [label="AST:1"];
9 -> 14 [label="AST:1"];
9 -> 50 [label="AST:1"];
9 -> 52 [label="AST:1"];
10 -> 11 [label="AST:1"];
11 -> 13 [label="AST:3"];
11 -> 12 [label="AST:3"];
13 -> 46 [label="AST:1"];
14 -> 15 [label="AST:1"];
15 -> 17 [label="AST:2"];
15 -> 16 [label="AST:2"];
18 -> 1 [label="AST:2"];
18 -> 20 [label="AST:2"];
18 -> 19 [label="AST:2"];
18 -> 22 [label="AST:2"];
18 -> 34 [label="AST:1"];
18 -> 40 [label="AST:1"];
20 -> 21 [label="AST:3"];
22 -> 23 [label="AST:2"];
22 -> 24 [label="AST:1"];
22 -> 38 [label="AST:1"];
24 -> 26 [label="AST:1"];
24 -> 25 [label="AST:1"];
26 -> 36 [label="AST:1"];
27 -> 28 [label="AST:1"];
27 -> 29 [label="AST:1"];
29 -> 28 [label="Data Dep:1"];
35 -> 11 [label="AST:1"];
35 -> 25 [label="AST:1"];
37 -> 35 [label="AST:1"];
37 -> 26 [label="AST:1"];
37 -> 39 [label="AST:1"];
37 -> 41 [label="AST:1"];
38 -> 15 [label="AST:1"];
38 -> 42 [label="AST:1"];
44 -> 43 [label="AST:1"];
44 -> 13 [label="AST:1"];
44 -> 12 [label="AST:1"];
44 -> 3 [label="AST:1"];
44 -> 1 [label="AST:1"];
45 -> 11 [label="AST:1"];
45 -> 16 [label="AST:1"];
45 -> 29 [label="AST:1"];
51 -> 23 [label="AST:1"];
51 -> 17 [label="AST:1"];
52 -> 26 [label="AST:1"];
52 -> 25 [label="AST:1"];
53 -> 49 [label="AST:1"];
55 -> 47 [label="AST:1"];
55 -> 20 [label="AST:1"];
55 -> 19 [label="AST:1"];
55 -> 9 [label="AST:1"];
56 -> 48 [label="AST:1"];
56 -> 51 [label="AST:1"];
56 -> 53 [label="AST:1"];
56 -> 1 [label="AST:1"];
58 -> 56 [label="AST:1"];
}