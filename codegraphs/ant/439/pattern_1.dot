digraph "Pattern" {
0 [label="execute#?#18:INSERT
execute#?#8:INSERT
execute#?#18:INSERT
execute#?#8:INSERT
execute#?#6:INSERT
execute#?#18:INSERT
execute#?#8:INSERT
execute#?#6:INSERT
execute#?#6:INSERT" shape=ellipse]
1 [label="execute#?#18:final Project myProj = project
execute#?#18:final Project myProj = project
execute#?#6:final Project myProj = project
execute#?#18:final Project myProj = project
execute#?#6:final Project myProj = project
execute#?#6:final Project myProj = project" shape=ellipse]
2 [label="execute#?#17:shouldSetProperty
execute#?#7:setProjectM != null
execute#?#17:shouldSetProperty
execute#?#7:setProjectM != null
execute#?#17:shouldSetProperty
execute#?#7:setProjectM != null" shape=ellipse]
3 [label="execute#?#17:if (shouldSetProperty) \{
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
            try \{
                value = Integer.parseInt(line);
                setProperty(property, \"\" + value);
            \} catch (NumberFormatException nfe) \{
                throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
            \}
        \}
    \};
    execP4Command(command, handler);
\} else \{
    execP4Command(command, new SimpleP4OutputHandler(this));
\}
execute#?#17:if (shouldSetProperty) \{
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
            try \{
                value = Integer.parseInt(line);
                setProperty(property, \"\" + value);
            \} catch (NumberFormatException nfe) \{
                throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
            \}
        \}
    \};
    execP4Command(command, handler);
\} else \{
    execP4Command(command, new SimpleP4OutputHandler(this));
\}
execute#?#17:if (shouldSetProperty) \{
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
            try \{
                value = Integer.parseInt(line);
                myProj.setProperty(property, \"\" + value);
            \} catch (NumberFormatException nfe) \{
                throw new BuildException(\"Perforce error. Could not retrieve counter value.\");
            \}
        \}
    \};
    execP4Command(command, handler);
\} else \{
    execP4Command(command, new SimpleP4OutputHandler(this));
\}" shape=ellipse]
4 [label="execute#?#-1:shouldSetProperty
execute#?#-1:shouldSetProperty
execute#?#-1:project
execute#?#-1:shouldSetProperty
execute#?#-1:project
execute#?#-1:project" shape=ellipse]
5 [label="execute#?#17:\{
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
            try \{
                value = Integer.parseInt(line);
                setProperty(property, \"\" + value);
            \} catch (NumberFormatException nfe) \{
                throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
            \}
        \}
    \};
    execP4Command(command, handler);
\}
execute#?#17:\{
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
            try \{
                value = Integer.parseInt(line);
                setProperty(property, \"\" + value);
            \} catch (NumberFormatException nfe) \{
                throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
            \}
        \}
    \};
    execP4Command(command, handler);
\}
execute#?#2:\{
    if (emptyChangeList == null) \{
        emptyChangeList = getEmptyChangeList();
    \}
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            if (util.match(\"/Change/\", line)) \{
                line = util.substitute(\"s/[^0-9]//g\", line);
                int changenumber = Integer.parseInt(line);
                log(\"Change Number is \" + changenumber, MSG_INFO);
                setProperty(\"p4.change\", \"\" + changenumber);
            \} else if (util.match(\"/error/\", line)) \{
                throw new TaskException(\"Perforce Error, check client settings and/or server\");
            \}
        \}
    \};
    handler.setOutput(emptyChangeList);
    execP4Command(\"change -i\", handler);
\}
execute#?#17:\{
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
            try \{
                value = Integer.parseInt(line);
                myProj.setProperty(property, \"\" + value);
            \} catch (NumberFormatException nfe) \{
                throw new BuildException(\"Perforce error. Could not retrieve counter value.\");
            \}
        \}
    \};
    execP4Command(command, handler);
\}
execute#?#2:\{
    if (emptyChangeList == null) \{
        emptyChangeList = getEmptyChangeList();
    \}
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            if (util.match(\"/Change/\", line)) \{
                line = util.substitute(\"s/[^0-9]//g\", line);
                int changenumber = Integer.parseInt(line);
                log(\"Change Number is \" + changenumber, MSG_INFO);
                myProj.setProperty(\"p4.change\", \"\" + changenumber);
            \} else if (util.match(\"/error/\", line)) \{
                throw new BuildException(\"Perforce Error, check client settings and/or server\");
            \}
        \}
    \};
    handler.setOutput(emptyChangeList);
    execP4Command(\"change -i\", handler);
\}
execute#?#2:\{
    if (emptyChangeList == null) \{
        emptyChangeList = getEmptyChangeList();
    \}
    final Project myProj = project;
    P4Handler handler = new P4HandlerAdapter() \{
        public void process(String line) \{
            if (util.match(\"/Change/\", line)) \{
                line = util.substitute(\"s/[^0-9]//g\", line);
                int changenumber = Integer.parseInt(line);
                log(\"Change Number is \" + changenumber, MSG_INFO);
                setProperty(\"p4.change\", \"\" + changenumber);
            \} else if (util.match(\"/error/\", line)) \{
                throw new TaskException(\"Perforce Error, check client settings and/or server\");
            \}
        \}
    \};
    handler.setOutput(emptyChangeList);
    execP4Command(\"change -i\", handler);
\}" shape=ellipse]
6 [label="execute#?#18:project
execute#?#18:project
execute#?#6:myProj
execute#?#18:project
execute#?#6:myProj
execute#?#6:myProj" shape=ellipse]
7 [label="execute#?#19:P4Handler handler = new P4HandlerAdapter() \{
    public void process(String line) \{
        log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
        try \{
            value = Integer.parseInt(line);
            setProperty(property, \"\" + value);
        \} catch (NumberFormatException nfe) \{
            throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
        \}
    \}
\}
execute#?#19:P4Handler handler = new P4HandlerAdapter() \{
    public void process(String line) \{
        log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
        try \{
            value = Integer.parseInt(line);
            setProperty(property, \"\" + value);
        \} catch (NumberFormatException nfe) \{
            throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
        \}
    \}
\}
execute#?#19:P4Handler handler = new P4HandlerAdapter() \{
    public void process(String line) \{
        log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
        try \{
            value = Integer.parseInt(line);
            myProj.setProperty(property, \"\" + value);
        \} catch (NumberFormatException nfe) \{
            throw new BuildException(\"Perforce error. Could not retrieve counter value.\");
        \}
    \}
\}" shape=ellipse]
8 [label="execute#?#20:new P4HandlerAdapter() \{
    public void process(String line) \{
        log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
        try \{
            value = Integer.parseInt(line);
            setProperty(property, \"\" + value);
        \} catch (NumberFormatException nfe) \{
            throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
        \}
    \}
\}
execute#?#20:new P4HandlerAdapter() \{
    public void process(String line) \{
        log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
        try \{
            value = Integer.parseInt(line);
            setProperty(property, \"\" + value);
        \} catch (NumberFormatException nfe) \{
            throw new TaskException(\"Perforce error. Could not retrieve counter value.\");
        \}
    \}
\}
execute#?#20:new P4HandlerAdapter() \{
    public void process(String line) \{
        log((\"P4Counter retrieved line \\"\" + line) + \"\\"\", MSG_VERBOSE);
        try \{
            value = Integer.parseInt(line);
            myProj.setProperty(property, \"\" + value);
        \} catch (NumberFormatException nfe) \{
            throw new BuildException(\"Perforce error. Could not retrieve counter value.\");
        \}
    \}
\}" shape=ellipse]
9 [label="execute#?#-1:P4HandlerAdapter()
execute#?#-1:P4HandlerAdapter()
execute#?#-1:P4HandlerAdapter()" shape=ellipse]
10 [label="execute#?#31:execP4Command(command, handler)
execute#?#8:setProjectM.invoke(proxy, new Object[]\{ project \})
execute#?#31:execP4Command(command, handler)
execute#?#8:setProjectM.invoke(proxy, new Object[]\{ project \})
execute#?#31:execP4Command(command, handler)
execute#?#8:setProjectM.invoke(proxy, new Object[]\{ project \})" shape=ellipse]
11 [label="execute#?#31:execP4Command(java.lang.String,<unknown>)
execute#?#31:execP4Command(java.lang.String,<unknown>)
execute#?#31:execP4Command(java.lang.String,<unknown>)" shape=ellipse]
12 [label="execute#?#-1:
execute#?#-1:
execute#?#-1:" shape=ellipse]
13 [label="execute#?#-1:PlaceHold
execute#?#-1:PlaceHold
execute#?#-1:PlaceHold" shape=ellipse]
14 [label="execute#?#31:command
execute#?#31:command
execute#?#31:command" shape=ellipse]
15 [label="execute#?#31:handler
execute#?#31:handler
execute#?#31:handler" shape=ellipse]
16 [label="execute#?#32:\{
    execP4Command(command, new SimpleP4OutputHandler(this));
\}
execute#?#32:\{
    execP4Command(command, new SimpleP4OutputHandler(this));
\}
execute#?#32:\{
    execP4Command(command, new SimpleP4OutputHandler(this));
\}" shape=ellipse]
17 [label="execute#?#33:execP4Command(command, new SimpleP4OutputHandler(this))
execute#?#33:execP4Command(command, new SimpleP4OutputHandler(this))
execute#?#33:execP4Command(command, new SimpleP4OutputHandler(this))" shape=ellipse]
18 [label="execute#?#33:execP4Command(java.lang.String,<unknown>)
execute#?#33:execP4Command(java.lang.String,<unknown>)
execute#?#33:execP4Command(java.lang.String,<unknown>)" shape=ellipse]
19 [label="execute#?#-1:
execute#?#-1:
execute#?#-1:" shape=ellipse]
20 [label="execute#?#-1:PlaceHold
execute#?#-1:PlaceHold
execute#?#-1:PlaceHold" shape=ellipse]
21 [label="execute#?#33:command
execute#?#33:command
execute#?#33:command" shape=ellipse]
22 [label="execute#?#33:new SimpleP4OutputHandler(this)
execute#?#33:new SimpleP4OutputHandler(this)
execute#?#33:new SimpleP4OutputHandler(this)" shape=ellipse]
23 [label="execute#?#-1:SimpleP4OutputHandler(PlaceHold)
execute#?#-1:SimpleP4OutputHandler(PlaceHold)
execute#?#-1:SimpleP4OutputHandler(PlaceHold)" shape=ellipse]
24 [label="execute#?#33:this
execute#?#33:this
execute#?#33:this" shape=ellipse]
25 [label="execute#?#-1:PlaceHold
execute#?#-1:PlaceHold
execute#?#-1:PlaceHold" shape=ellipse]
26 [label="execute#?#18:myProj
execute#?#8:project
execute#?#18:myProj
execute#?#8:project
execute#?#18:myProj
execute#?#8:project" shape=ellipse]
27 [label="execute#?#18:Project
execute#?#18:Project
execute#?#6:Project
execute#?#18:Project
execute#?#6:Project
execute#?#6:Project" shape=ellipse]
28 [label="execute#?#-1:
execute#?#-1:
execute#?#-1:" shape=ellipse]
29 [label="execute#?#18:VE: Modifiers_LocalVariable
execute#?#18:VE: Modifiers_LocalVariable
execute#?#6:VE: Modifiers_LocalVariable
execute#?#18:VE: Modifiers_LocalVariable
execute#?#6:VE: Modifiers_LocalVariable
execute#?#6:VE: Modifiers_LocalVariable" shape=ellipse]
30 [label="execute#?#18:final
execute#?#18:final
execute#?#6:final
execute#?#18:final
execute#?#6:final
execute#?#6:final" shape=ellipse]
31 [label="execute#?#18:getProject()
execute#?#18:getProject()
execute#?#18:getProject()" shape=ellipse]
32 [label="execute#?#8:DELETE
execute#?#6:DELETE
execute#?#6:DELETE
execute#?#6:DELETE" shape=ellipse]
33 [label="execute#?#-1:Object[]
execute#?#-1:Object[]
execute#?#-1:Object[]" shape=ellipse]
34 [label="execute#?#8:new Object[]\{ project \}" shape=ellipse]
35 [label="execute#?#8:DELETE" shape=ellipse]
36 [label="execute#?#8:new Object[]\{ project \}" shape=ellipse]
37 [label="execute#?#6:project" shape=ellipse]
38 [label="execute#?#8:DELETE" shape=ellipse]
39 [label="execute#?#8:new Object[]\{ project \}" shape=ellipse]
40 [label="execute#?#6:project" shape=ellipse]
41 [label="execute#?#6:project" shape=ellipse]
0 -> 31 [label="Action:3"];
1 -> 0 [label="Action:6"];
1 -> 26 [label="AST:3"];
1 -> 27 [label="AST:6"];
1 -> 6 [label="AST:6"];
1 -> 29 [label="AST:6"];
1 -> 30 [label="AST:6"];
1 -> 37 [label="AST:1"];
1 -> 40 [label="AST:1"];
1 -> 41 [label="AST:1"];
2 -> 1 [label="Control Dep:3"];
2 -> 4 [label="AST:3"];
2 -> 5 [label="Control Dep:3"];
2 -> 6 [label="Control Dep:3"];
2 -> 7 [label="Control Dep:3"];
2 -> 8 [label="Control Dep:3"];
2 -> 9 [label="Control Dep:3"];
2 -> 10 [label="Control Dep:6"];
2 -> 11 [label="Control Dep:3"];
2 -> 12 [label="Control Dep:3"];
2 -> 13 [label="Control Dep:3"];
2 -> 14 [label="Control Dep:3"];
2 -> 15 [label="Control Dep:3"];
2 -> 16 [label="Control Dep:3"];
2 -> 17 [label="Control Dep:3"];
2 -> 18 [label="Control Dep:3"];
2 -> 19 [label="Control Dep:3"];
2 -> 20 [label="Control Dep:3"];
2 -> 21 [label="Control Dep:3"];
2 -> 22 [label="Control Dep:3"];
2 -> 23 [label="Control Dep:3"];
2 -> 24 [label="Control Dep:3"];
2 -> 25 [label="Control Dep:3"];
2 -> 34 [label="Control Dep:1"];
2 -> 36 [label="Control Dep:1"];
2 -> 39 [label="Control Dep:1"];
3 -> 2 [label="AST:3"];
3 -> 5 [label="AST:3"];
3 -> 16 [label="AST:3"];
5 -> 1 [label="AST:6"];
5 -> 7 [label="AST:3"];
5 -> 10 [label="AST:3"];
6 -> 26 [label="Data Dep:3"];
7 -> 8 [label="AST:3"];
8 -> 9 [label="AST:3"];
10 -> 12 [label="AST:3"];
10 -> 11 [label="AST:3"];
10 -> 14 [label="AST:3"];
10 -> 15 [label="AST:3"];
10 -> 34 [label="AST:1"];
10 -> 36 [label="AST:1"];
10 -> 39 [label="AST:1"];
12 -> 13 [label="AST:3"];
16 -> 17 [label="AST:3"];
17 -> 19 [label="AST:3"];
17 -> 18 [label="AST:3"];
17 -> 21 [label="AST:3"];
17 -> 22 [label="AST:3"];
19 -> 20 [label="AST:3"];
22 -> 23 [label="AST:3"];
22 -> 24 [label="AST:3"];
24 -> 25 [label="AST:3"];
26 -> 32 [label="Action:1"];
26 -> 35 [label="Action:1"];
26 -> 38 [label="Action:1"];
27 -> 28 [label="AST:3"];
34 -> 33 [label="AST:1"];
34 -> 26 [label="AST:1"];
34 -> 0 [label="Action:1"];
36 -> 33 [label="AST:1"];
36 -> 26 [label="AST:1"];
36 -> 0 [label="Action:1"];
37 -> 4 [label="AST:1"];
37 -> 6 [label="Data Dep:1"];
37 -> 32 [label="Action:1"];
39 -> 33 [label="AST:1"];
39 -> 26 [label="AST:1"];
39 -> 0 [label="Action:1"];
40 -> 4 [label="AST:1"];
40 -> 6 [label="Data Dep:1"];
40 -> 32 [label="Action:1"];
41 -> 4 [label="AST:1"];
41 -> 6 [label="Data Dep:1"];
41 -> 32 [label="Action:1"];
}