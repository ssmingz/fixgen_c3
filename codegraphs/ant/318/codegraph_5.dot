digraph "change_stdout#?,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@change_stdout" shape=ellipse]
2 [label="2:CtParameterImpl@String line" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@match(java.lang.String,java.lang.String)" shape=ellipse]
5 [label="3:CtVirtualElement@match" shape=ellipse]
6 [label="3:CtFieldReadImpl@util" shape=ellipse]
7 [label="3:CtLiteralImpl@\"/Change/\"" shape=ellipse]
8 [label="3:CtVariableReadImpl@line" shape=ellipse]
9 [label="3:CtInvocationImpl@util.match(\"/Change/\", line)" shape=ellipse]
10 [label="4:CtVariableWriteImpl@line" shape=ellipse]
11 [label="4:CtExecutableReferenceImpl@substitute(java.lang.String,java.lang.String)" shape=ellipse]
12 [label="4:CtVirtualElement@substitute" shape=ellipse]
13 [label="4:CtFieldReadImpl@util" shape=ellipse]
14 [label="4:CtLiteralImpl@\"s/[^0-9]//g\"" shape=ellipse]
15 [label="4:CtVariableReadImpl@line" shape=ellipse]
16 [label="4:CtInvocationImpl@util.substitute(\"s/[^0-9]//g\", line)" shape=ellipse]
17 [label="4:CtAssignmentImpl@line = util.substitute(\"s/[^0-9]//g\", line)" shape=ellipse]
18 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@parseInt(java.lang.String)" shape=ellipse]
20 [label="5:CtVirtualElement@parseInt" shape=ellipse]
21 [label="5:CtTypeAccessImpl@Integer" shape=ellipse]
22 [label="5:CtVariableReadImpl@line" shape=ellipse]
23 [label="5:CtInvocationImpl@Integer.parseInt(line)" shape=ellipse]
24 [label="5:CtVirtualElement@changenumber" shape=ellipse]
25 [label="5:CtLocalVariableImpl@final int changenumber = Integer.parseInt(line)" shape=ellipse]
26 [label="6:CtExecutableReferenceImpl@info(java.lang.String)" shape=ellipse]
27 [label="6:CtVirtualElement@info" shape=ellipse]
28 [label="6:CtExecutableReferenceImpl@getLogger()" shape=ellipse]
29 [label="6:CtVirtualElement@getLogger" shape=ellipse]
30 [label="6:CtInvocationImpl@getLogger()" shape=ellipse]
31 [label="6:CtLiteralImpl@\"Change Number is \"" shape=ellipse]
32 [label="6:CtVariableReadImpl@changenumber" shape=ellipse]
33 [label="6:CtBinaryOperatorImpl@\"Change Number is \" + changenumber" shape=ellipse]
34 [label="6:CtInvocationImpl@getLogger().info(\"Change Number is \" + changenumber)" shape=ellipse]
35 [label="8:CtExecutableReferenceImpl@setProperty(java.lang.String,java.lang.String)" shape=ellipse]
36 [label="8:CtVirtualElement@setProperty" shape=ellipse]
37 [label="8:CtLiteralImpl@\"p4.change\"" shape=ellipse]
38 [label="8:CtLiteralImpl@\"\"" shape=ellipse]
39 [label="8:CtVariableReadImpl@changenumber" shape=ellipse]
40 [label="8:CtBinaryOperatorImpl@\"\" + changenumber" shape=ellipse]
41 [label="8:CtInvocationImpl@setProperty(\"p4.change\", \"\" + changenumber)" shape=ellipse]
42 [label="7:CtBlockImpl@\{
    setProperty(\"p4.change\", \"\" + changenumber);
\}" shape=ellipse]
43 [label="9:CtVirtualElement@te" shape=ellipse]
44 [label="9:CtTypeReferenceImpl@TaskException" shape=ellipse]
45 [label="9:CtCatchVariableImpl@final TaskException te" shape=ellipse]
46 [label="10:CtExecutableReferenceImpl@registerError(<unknown>)" shape=ellipse]
47 [label="10:CtVirtualElement@registerError" shape=ellipse]
48 [label="10:CtVariableReadImpl@te" shape=ellipse]
49 [label="10:CtInvocationImpl@registerError(te)" shape=ellipse]
50 [label="9:CtBlockImpl@\{
    registerError(te);
\}" shape=ellipse]
51 [label="9:CtCatchImpl@ catch (final TaskException te) \{
    registerError(te);
\}" shape=ellipse]
52 [label="7:CtTryImpl@try \{
    setProperty(\"p4.change\", \"\" + changenumber);
\} catch (final TaskException te) \{
    registerError(te);
\}" shape=ellipse]
53 [label="3:CtBlockImpl@\{
    line = util.substitute(\"s/[^0-9]//g\", line);
    final int changenumber = Integer.parseInt(line);
    getLogger().info(\"Change Number is \" + changenumber);
    try \{
        setProperty(\"p4.change\", \"\" + changenumber);
    \} catch (final TaskException te) \{
        registerError(te);
    \}
\}" shape=ellipse]
54 [label="12:CtExecutableReferenceImpl@match(java.lang.String,java.lang.String)" shape=ellipse]
55 [label="12:CtVirtualElement@match" shape=ellipse]
56 [label="12:CtFieldReadImpl@util" shape=ellipse]
57 [label="12:CtLiteralImpl@\"/error/\"" shape=ellipse]
58 [label="12:CtVariableReadImpl@line" shape=ellipse]
59 [label="12:CtInvocationImpl@util.match(\"/error/\", line)" shape=ellipse]
60 [label="13:CtTypeReferenceImpl@String" shape=ellipse]
61 [label="13:CtLiteralImpl@\"Perforce Error, check client settings and/or server\"" shape=ellipse]
62 [label="13:CtVirtualElement@message" shape=ellipse]
63 [label="13:CtLocalVariableImpl@final String message = \"Perforce Error, check client settings and/or server\"" shape=ellipse]
64 [label="14:CtExecutableReferenceImpl@registerError(<unknown>)" shape=ellipse]
65 [label="14:CtVirtualElement@registerError" shape=ellipse]
66 [label="14:CtTypeReferenceImpl@TaskException" shape=ellipse]
67 [label="14:CtVariableReadImpl@message" shape=ellipse]
68 [label="14:CtConstructorCallImpl@new TaskException(message)" shape=ellipse]
69 [label="14:CtInvocationImpl@registerError(new TaskException(message))" shape=ellipse]
70 [label="12:CtBlockImpl@\{
    final String message = \"Perforce Error, check client settings and/or server\";
    registerError(new TaskException(message));
\}" shape=ellipse]
71 [label="12:CtIfImpl@if (util.match(\"/error/\", line)) \{
    final String message = \"Perforce Error, check client settings and/or server\";
    registerError(new TaskException(message));
\}" shape=ellipse]
72 [label="12:CtBlockImpl@
    if (util.match(\"/error/\", line)) \{
        final String message = \"Perforce Error, check client settings and/or server\";
        registerError(new TaskException(message));
    \}
" shape=ellipse]
73 [label="3:CtIfImpl@if (util.match(\"/Change/\", line)) \{
    line = util.substitute(\"s/[^0-9]//g\", line);
    final int changenumber = Integer.parseInt(line);
    getLogger().info(\"Change Number is \" + changenumber);
    try \{
        setProperty(\"p4.change\", \"\" + changenumber);
    \} catch (final TaskException te) \{
        registerError(te);
    \}
\} else if (util.match(\"/error/\", line)) \{
    final String message = \"Perforce Error, check client settings and/or server\";
    registerError(new TaskException(message));
\}" shape=ellipse]
74 [label="2:CtBlockImpl@\{
    if (util.match(\"/Change/\", line)) \{
        line = util.substitute(\"s/[^0-9]//g\", line);
        final int changenumber = Integer.parseInt(line);
        getLogger().info(\"Change Number is \" + changenumber);
        try \{
            setProperty(\"p4.change\", \"\" + changenumber);
        \} catch (final TaskException te) \{
            registerError(te);
        \}
    \} else if (util.match(\"/error/\", line)) \{
        final String message = \"Perforce Error, check client settings and/or server\";
        registerError(new TaskException(message));
    \}
\}" shape=ellipse]
75 [label="2:CtMethodImpl@private void change_stdout(String line) \{
    if (util.match(\"/Change/\", line)) \{
        line = util.substitute(\"s/[^0-9]//g\", line);
        final int changenumber = Integer.parseInt(line);
        getLogger().info(\"Change Number is \" + changenumber);
        try \{
            setProperty(\"p4.change\", \"\" + changenumber);
        \} catch (final TaskException te) \{
            registerError(te);
        \}
    \} else if (util.match(\"/error/\", line)) \{
        final String message = \"Perforce Error, check client settings and/or server\";
        registerError(new TaskException(message));
    \}
\}" shape=ellipse]
76 [label="8:Insert@INSERT" shape=ellipse]
77 [label="8:CtInvocationImpl@getContext()" shape=ellipse]
2 -> 3 [label="AST"];
9 -> 5 [label="AST"];
9 -> 6 [label="AST"];
9 -> 4 [label="AST"];
9 -> 7 [label="AST"];
9 -> 8 [label="AST"];
9 -> 53 [label="Control Dep"];
9 -> 17 [label="Control Dep"];
9 -> 10 [label="Control Dep"];
9 -> 16 [label="Control Dep"];
9 -> 11 [label="Control Dep"];
9 -> 13 [label="Control Dep"];
9 -> 14 [label="Control Dep"];
9 -> 15 [label="Control Dep"];
9 -> 25 [label="Control Dep"];
9 -> 23 [label="Control Dep"];
9 -> 19 [label="Control Dep"];
9 -> 21 [label="Control Dep"];
9 -> 22 [label="Control Dep"];
9 -> 34 [label="Control Dep"];
9 -> 26 [label="Control Dep"];
9 -> 30 [label="Control Dep"];
9 -> 28 [label="Control Dep"];
9 -> 33 [label="Control Dep"];
9 -> 31 [label="Control Dep"];
9 -> 32 [label="Control Dep"];
9 -> 52 [label="Control Dep"];
9 -> 42 [label="Control Dep"];
9 -> 41 [label="Control Dep"];
9 -> 35 [label="Control Dep"];
9 -> 37 [label="Control Dep"];
9 -> 40 [label="Control Dep"];
9 -> 38 [label="Control Dep"];
9 -> 39 [label="Control Dep"];
9 -> 51 [label="Control Dep"];
9 -> 45 [label="Control Dep"];
9 -> 72 [label="Control Dep"];
9 -> 71 [label="Control Dep"];
9 -> 59 [label="Control Dep"];
9 -> 54 [label="Control Dep"];
9 -> 56 [label="Control Dep"];
9 -> 57 [label="Control Dep"];
9 -> 58 [label="Control Dep"];
10 -> 22 [label="Define-Use"];
10 -> 58 [label="Define-Use"];
13 -> 10 [label="Data Dep"];
15 -> 10 [label="Data Dep"];
16 -> 12 [label="AST"];
16 -> 13 [label="AST"];
16 -> 11 [label="AST"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
17 -> 10 [label="AST"];
17 -> 16 [label="AST"];
22 -> 24 [label="Data Dep"];
23 -> 20 [label="AST"];
23 -> 21 [label="AST"];
23 -> 19 [label="AST"];
23 -> 22 [label="AST"];
24 -> 32 [label="Define-Use"];
24 -> 39 [label="Define-Use"];
25 -> 24 [label="AST"];
25 -> 18 [label="AST"];
25 -> 23 [label="AST"];
30 -> 29 [label="AST"];
30 -> 28 [label="AST"];
33 -> 31 [label="AST"];
33 -> 32 [label="AST"];
34 -> 27 [label="AST"];
34 -> 30 [label="AST"];
34 -> 26 [label="AST"];
34 -> 33 [label="AST"];
40 -> 38 [label="AST"];
40 -> 39 [label="AST"];
41 -> 36 [label="AST"];
41 -> 35 [label="AST"];
41 -> 37 [label="AST"];
41 -> 40 [label="AST"];
41 -> 76 [label="Action"];
42 -> 41 [label="AST"];
43 -> 48 [label="Define-Use"];
45 -> 43 [label="AST"];
45 -> 44 [label="AST"];
45 -> 50 [label="Control Dep"];
45 -> 49 [label="Control Dep"];
45 -> 46 [label="Control Dep"];
45 -> 48 [label="Control Dep"];
49 -> 47 [label="AST"];
49 -> 46 [label="AST"];
49 -> 48 [label="AST"];
50 -> 49 [label="AST"];
51 -> 45 [label="AST"];
51 -> 50 [label="AST"];
52 -> 42 [label="AST"];
52 -> 51 [label="AST"];
53 -> 17 [label="AST"];
53 -> 25 [label="AST"];
53 -> 34 [label="AST"];
53 -> 52 [label="AST"];
59 -> 55 [label="AST"];
59 -> 56 [label="AST"];
59 -> 54 [label="AST"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
59 -> 70 [label="Control Dep"];
59 -> 63 [label="Control Dep"];
59 -> 61 [label="Control Dep"];
59 -> 69 [label="Control Dep"];
59 -> 64 [label="Control Dep"];
59 -> 68 [label="Control Dep"];
59 -> 67 [label="Control Dep"];
62 -> 67 [label="Define-Use"];
63 -> 62 [label="AST"];
63 -> 60 [label="AST"];
63 -> 61 [label="AST"];
68 -> 67 [label="AST"];
69 -> 65 [label="AST"];
69 -> 64 [label="AST"];
69 -> 68 [label="AST"];
70 -> 63 [label="AST"];
70 -> 69 [label="AST"];
71 -> 59 [label="AST"];
71 -> 70 [label="AST"];
72 -> 71 [label="AST"];
73 -> 9 [label="AST"];
73 -> 53 [label="AST"];
73 -> 72 [label="AST"];
74 -> 73 [label="AST"];
75 -> 1 [label="AST"];
75 -> 0 [label="AST"];
75 -> 2 [label="AST"];
75 -> 74 [label="AST"];
76 -> 77 [label="Action"];
}