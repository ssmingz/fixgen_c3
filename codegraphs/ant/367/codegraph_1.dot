digraph "close#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@close" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@IOException" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@OutputStream" shape=ellipse]
4 [label="3:CtThisAccessImpl@this" shape=ellipse]
5 [label="3:CtFieldReadImpl@this.out" shape=ellipse]
6 [label="3:CtVirtualElement@out" shape=ellipse]
7 [label="3:CtLocalVariableImpl@OutputStream out = this.out" shape=ellipse]
8 [label="4:CtVariableReadImpl@out" shape=ellipse]
9 [label="4:CtLiteralImpl@null" shape=ellipse]
10 [label="4:CtBinaryOperatorImpl@out != null" shape=ellipse]
11 [label="6:CtThisAccessImpl@this" shape=ellipse]
12 [label="6:CtFieldReadImpl@this.runLength" shape=ellipse]
13 [label="6:CtLiteralImpl@0" shape=ellipse]
14 [label="6:CtBinaryOperatorImpl@this.runLength > 0" shape=ellipse]
15 [label="7:CtExecutableReferenceImpl@writeRun()" shape=ellipse]
16 [label="7:CtVirtualElement@writeRun" shape=ellipse]
17 [label="7:CtInvocationImpl@writeRun()" shape=ellipse]
18 [label="6:CtBlockImpl@\{
    writeRun();
\}" shape=ellipse]
19 [label="6:CtIfImpl@if (this.runLength > 0) \{
    writeRun();
\}" shape=ellipse]
20 [label="9:CtFieldWriteImpl@this.currentChar" shape=ellipse]
21 [label="9:CtThisAccessImpl@this" shape=ellipse]
22 [label="9:CtLiteralImpl@1" shape=ellipse]
23 [label="9:CtUnaryOperatorImpl@-1" shape=ellipse]
24 [label="9:CtAssignmentImpl@this.currentChar = -1" shape=ellipse]
25 [label="10:CtExecutableReferenceImpl@endBlock()" shape=ellipse]
26 [label="10:CtVirtualElement@endBlock" shape=ellipse]
27 [label="10:CtInvocationImpl@endBlock()" shape=ellipse]
28 [label="11:CtExecutableReferenceImpl@endCompression()" shape=ellipse]
29 [label="11:CtVirtualElement@endCompression" shape=ellipse]
30 [label="11:CtInvocationImpl@endCompression()" shape=ellipse]
31 [label="12:CtExecutableReferenceImpl@close()" shape=ellipse]
32 [label="12:CtVirtualElement@close" shape=ellipse]
33 [label="12:CtVariableReadImpl@out" shape=ellipse]
34 [label="12:CtInvocationImpl@out.close()" shape=ellipse]
35 [label="5:CtBlockImpl@\{
    if (this.runLength > 0) \{
        writeRun();
    \}
    this.currentChar = -1;
    endBlock();
    endCompression();
    out.close();
\}" shape=ellipse]
36 [label="14:CtFieldWriteImpl@this.out" shape=ellipse]
37 [label="14:CtThisAccessImpl@this" shape=ellipse]
38 [label="14:CtLiteralImpl@null" shape=ellipse]
39 [label="14:CtAssignmentImpl@this.out = null" shape=ellipse]
40 [label="15:CtFieldWriteImpl@this.data" shape=ellipse]
41 [label="15:CtThisAccessImpl@this" shape=ellipse]
42 [label="15:CtLiteralImpl@null" shape=ellipse]
43 [label="15:CtAssignmentImpl@this.data = null" shape=ellipse]
44 [label="13:CtBlockImpl@\{
    this.out = null;
    this.data = null;
\}" shape=ellipse]
45 [label="5:CtTryImpl@try \{
    if (this.runLength > 0) \{
        writeRun();
    \}
    this.currentChar = -1;
    endBlock();
    endCompression();
    out.close();
\} finally \{
    this.out = null;
    this.data = null;
\}" shape=ellipse]
46 [label="4:CtBlockImpl@\{
    try \{
        if (this.runLength > 0) \{
            writeRun();
        \}
        this.currentChar = -1;
        endBlock();
        endCompression();
        out.close();
    \} finally \{
        this.out = null;
        this.data = null;
    \}
\}" shape=ellipse]
47 [label="4:CtIfImpl@if (out != null) \{
    try \{
        if (this.runLength > 0) \{
            writeRun();
        \}
        this.currentChar = -1;
        endBlock();
        endCompression();
        out.close();
    \} finally \{
        this.out = null;
        this.data = null;
    \}
\}" shape=ellipse]
48 [label="2:CtBlockImpl@\{
    OutputStream out = this.out;
    if (out != null) \{
        try \{
            if (this.runLength > 0) \{
                writeRun();
            \}
            this.currentChar = -1;
            endBlock();
            endCompression();
            out.close();
        \} finally \{
            this.out = null;
            this.data = null;
        \}
    \}
\}" shape=ellipse]
49 [label="2:CtMethodImpl@public void close() throws IOException \{
    OutputStream out = this.out;
    if (out != null) \{
        try \{
            if (this.runLength > 0) \{
                writeRun();
            \}
            this.currentChar = -1;
            endBlock();
            endCompression();
            out.close();
        \} finally \{
            this.out = null;
            this.data = null;
        \}
    \}
\}" shape=ellipse]
50 [label="3:Update@UPDATE" shape=ellipse]
51 [label="3:CtLocalVariableImpl@OutputStream outShadow = this.out" shape=ellipse]
52 [label="4:Update@UPDATE" shape=ellipse]
53 [label="4:CtVariableReadImpl@outShadow" shape=ellipse]
54 [label="12:Update@UPDATE" shape=ellipse]
55 [label="12:CtVariableReadImpl@outShadow" shape=ellipse]
5 -> 4 [label="AST"];
5 -> 6 [label="Data Dep"];
6 -> 8 [label="Define-Use"];
6 -> 33 [label="Define-Use"];
7 -> 6 [label="AST"];
7 -> 3 [label="AST"];
7 -> 5 [label="AST"];
7 -> 50 [label="Action"];
8 -> 52 [label="Action"];
10 -> 8 [label="AST"];
10 -> 9 [label="AST"];
10 -> 46 [label="Control Dep"];
10 -> 45 [label="Control Dep"];
10 -> 35 [label="Control Dep"];
10 -> 19 [label="Control Dep"];
10 -> 14 [label="Control Dep"];
10 -> 12 [label="Control Dep"];
10 -> 11 [label="Control Dep"];
10 -> 13 [label="Control Dep"];
10 -> 24 [label="Control Dep"];
10 -> 20 [label="Control Dep"];
10 -> 23 [label="Control Dep"];
10 -> 22 [label="Control Dep"];
10 -> 27 [label="Control Dep"];
10 -> 25 [label="Control Dep"];
10 -> 30 [label="Control Dep"];
10 -> 28 [label="Control Dep"];
10 -> 34 [label="Control Dep"];
10 -> 31 [label="Control Dep"];
10 -> 33 [label="Control Dep"];
10 -> 44 [label="Control Dep"];
10 -> 39 [label="Control Dep"];
10 -> 36 [label="Control Dep"];
10 -> 38 [label="Control Dep"];
10 -> 43 [label="Control Dep"];
10 -> 40 [label="Control Dep"];
10 -> 42 [label="Control Dep"];
12 -> 11 [label="AST"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
14 -> 18 [label="Control Dep"];
14 -> 17 [label="Control Dep"];
14 -> 15 [label="Control Dep"];
17 -> 16 [label="AST"];
17 -> 15 [label="AST"];
18 -> 17 [label="AST"];
19 -> 14 [label="AST"];
19 -> 18 [label="AST"];
20 -> 21 [label="AST"];
23 -> 22 [label="AST"];
24 -> 20 [label="AST"];
24 -> 23 [label="AST"];
27 -> 26 [label="AST"];
27 -> 25 [label="AST"];
30 -> 29 [label="AST"];
30 -> 28 [label="AST"];
33 -> 54 [label="Action"];
34 -> 32 [label="AST"];
34 -> 33 [label="AST"];
34 -> 31 [label="AST"];
35 -> 19 [label="AST"];
35 -> 24 [label="AST"];
35 -> 27 [label="AST"];
35 -> 30 [label="AST"];
35 -> 34 [label="AST"];
36 -> 37 [label="AST"];
39 -> 36 [label="AST"];
39 -> 38 [label="AST"];
40 -> 41 [label="AST"];
43 -> 40 [label="AST"];
43 -> 42 [label="AST"];
44 -> 39 [label="AST"];
44 -> 43 [label="AST"];
45 -> 35 [label="AST"];
45 -> 44 [label="AST"];
46 -> 45 [label="AST"];
47 -> 10 [label="AST"];
47 -> 46 [label="AST"];
48 -> 7 [label="AST"];
48 -> 47 [label="AST"];
49 -> 1 [label="AST"];
49 -> 0 [label="AST"];
49 -> 2 [label="AST"];
49 -> 48 [label="AST"];
50 -> 51 [label="Action"];
52 -> 53 [label="Action"];
54 -> 55 [label="Action"];
}