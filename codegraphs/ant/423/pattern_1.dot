digraph "Pattern" {
0 [label="testReplaceTokens#?#7:UPDATE
testLineContains#?#6:UPDATE" shape=ellipse]
1 [label="testReplaceTokens#?#7:FILE_UTILS
testLineContains#?#6:FILE_UTILS" shape=ellipse]
2 [label="testReplaceTokens#?#7:FILE_UTILS.contentEquals(expected, result)
testLineContains#?#6:FILE_UTILS.contentEquals(expected, result)" shape=ellipse]
3 [label="testReplaceTokens#?#7:assertTrue(FILE_UTILS.contentEquals(expected, result))
testLineContains#?#6:assertTrue(FILE_UTILS.contentEquals(expected, result))" shape=ellipse]
4 [label="testReplaceTokens#?#7:contentEquals
testLineContains#?#6:contentEquals" shape=ellipse]
5 [label="testReplaceTokens#?#7:contentEquals(File,File)
testLineContains#?#6:contentEquals(File,File)" shape=ellipse]
6 [label="testReplaceTokens#?#7:expected
testLineContains#?#6:expected" shape=ellipse]
7 [label="testReplaceTokens#?#7:result
testLineContains#?#6:result" shape=ellipse]
8 [label="testReplaceTokens#?#-1:FILE_UTILS
testLineContains#?#-1:FILE_UTILS" shape=ellipse]
9 [label="testReplaceTokens#?#7:MOVE
testLineContains#?#6:MOVE" shape=ellipse]
10 [label="testReplaceTokens#?#7:FileUtilities.getFileContents(expected)
testLineContains#?#7:FileUtilities.getFileContents(expected)" shape=ellipse]
11 [label="testReplaceTokens#?#7:FileUtilities
testLineContains#?#7:FileUtilities" shape=ellipse]
0 -> 11 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 8 [label="AST:2"];
1 -> 9 [label="Action:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
3 -> 2 [label="AST:2"];
9 -> 10 [label="Action:2"];
10 -> 11 [label="AST:2"];
}