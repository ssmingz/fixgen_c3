digraph "logRemovedCount#?,int,String,String,String" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@logRemovedCount" shape=ellipse]
2 [label="3:CtParameterImpl@int count" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
4 [label="3:CtParameterImpl@String prefix" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
6 [label="3:CtParameterImpl@String singularSuffix" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
8 [label="3:CtParameterImpl@String pluralSuffix" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@File" shape=ellipse]
11 [label="4:CtExecutableReferenceImpl@getToDir()" shape=ellipse]
12 [label="4:CtVirtualElement@getToDir" shape=ellipse]
13 [label="4:CtFieldReadImpl@_copy" shape=ellipse]
14 [label="4:CtInvocationImpl@_copy.getToDir()" shape=ellipse]
15 [label="4:CtVirtualElement@toDir" shape=ellipse]
16 [label="4:CtLocalVariableImpl@File toDir = _copy.getToDir()" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
18 [label="5:CtVariableReadImpl@prefix" shape=ellipse]
19 [label="5:CtLiteralImpl@null" shape=ellipse]
20 [label="5:CtBinaryOperatorImpl@prefix == null" shape=ellipse]
21 [label="5:CtLiteralImpl@\"\"" shape=ellipse]
22 [label="5:CtVariableReadImpl@prefix" shape=ellipse]
23 [label="5:CtConditionalImpl@(prefix == null) ? \"\" : prefix" shape=ellipse]
24 [label="5:CtVirtualElement@what" shape=ellipse]
25 [label="5:CtLocalVariableImpl@String what = (prefix == null) ? \"\" : prefix" shape=ellipse]
26 [label="6:CtVariableWriteImpl@what" shape=ellipse]
27 [label="6:CtVariableReadImpl@count" shape=ellipse]
28 [label="6:CtLiteralImpl@2" shape=ellipse]
29 [label="6:CtBinaryOperatorImpl@count < 2" shape=ellipse]
30 [label="6:CtVariableReadImpl@singularSuffix" shape=ellipse]
31 [label="6:CtVariableReadImpl@pluralSuffix" shape=ellipse]
32 [label="6:CtConditionalImpl@(count < 2) ? singularSuffix : pluralSuffix" shape=ellipse]
33 [label="6:CtOperatorAssignmentImpl@what += (count < 2) ? singularSuffix : pluralSuffix" shape=ellipse]
34 [label="7:CtVariableReadImpl@count" shape=ellipse]
35 [label="7:CtLiteralImpl@0" shape=ellipse]
36 [label="7:CtBinaryOperatorImpl@count > 0" shape=ellipse]
37 [label="8:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
38 [label="8:CtVirtualElement@log" shape=ellipse]
39 [label="8:CtLiteralImpl@\"Removed \"" shape=ellipse]
40 [label="8:CtVariableReadImpl@count" shape=ellipse]
41 [label="8:CtBinaryOperatorImpl@(\"Removed \" + count)" shape=ellipse]
42 [label="8:CtLiteralImpl@\" \"" shape=ellipse]
43 [label="8:CtBinaryOperatorImpl@((\"Removed \" + count) + \" \")" shape=ellipse]
44 [label="8:CtVariableReadImpl@what" shape=ellipse]
45 [label="8:CtBinaryOperatorImpl@(((\"Removed \" + count) + \" \") + what)" shape=ellipse]
46 [label="8:CtLiteralImpl@\" from \"" shape=ellipse]
47 [label="8:CtBinaryOperatorImpl@((((\"Removed \" + count) + \" \") + what) + \" from \")" shape=ellipse]
48 [label="8:CtVariableReadImpl@toDir" shape=ellipse]
49 [label="8:CtBinaryOperatorImpl@((((\"Removed \" + count) + \" \") + what) + \" from \") + toDir" shape=ellipse]
50 [label="8:CtTypeAccessImpl@MSG_INFO" shape=ellipse]
51 [label="8:CtInvocationImpl@log(((((\"Removed \" + count) + \" \") + what) + \" from \") + toDir, MSG_INFO)" shape=ellipse]
52 [label="7:CtBlockImpl@\{
    log(((((\"Removed \" + count) + \" \") + what) + \" from \") + toDir, MSG_INFO);
\}" shape=ellipse]
53 [label="10:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
54 [label="10:CtVirtualElement@log" shape=ellipse]
55 [label="10:CtLiteralImpl@\"NO \"" shape=ellipse]
56 [label="10:CtVariableReadImpl@what" shape=ellipse]
57 [label="10:CtBinaryOperatorImpl@(\"NO \" + what)" shape=ellipse]
58 [label="10:CtLiteralImpl@\" to remove from \"" shape=ellipse]
59 [label="10:CtBinaryOperatorImpl@((\"NO \" + what) + \" to remove from \")" shape=ellipse]
60 [label="10:CtVariableReadImpl@toDir" shape=ellipse]
61 [label="10:CtBinaryOperatorImpl@((\"NO \" + what) + \" to remove from \") + toDir" shape=ellipse]
62 [label="10:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
63 [label="10:CtInvocationImpl@log(((\"NO \" + what) + \" to remove from \") + toDir, MSG_VERBOSE)" shape=ellipse]
64 [label="9:CtBlockImpl@\{
    log(((\"NO \" + what) + \" to remove from \") + toDir, MSG_VERBOSE);
\}" shape=ellipse]
65 [label="7:CtIfImpl@if (count > 0) \{
    log(((((\"Removed \" + count) + \" \") + what) + \" from \") + toDir, MSG_INFO);
\} else \{
    log(((\"NO \" + what) + \" to remove from \") + toDir, MSG_VERBOSE);
\}" shape=ellipse]
66 [label="3:CtBlockImpl@\{
    File toDir = _copy.getToDir();
    String what = (prefix == null) ? \"\" : prefix;
    what += (count < 2) ? singularSuffix : pluralSuffix;
    if (count > 0) \{
        log(((((\"Removed \" + count) + \" \") + what) + \" from \") + toDir, MSG_INFO);
    \} else \{
        log(((\"NO \" + what) + \" to remove from \") + toDir, MSG_VERBOSE);
    \}
\}" shape=ellipse]
67 [label="2:CtMethodImpl@private void logRemovedCount(int count, String prefix, String singularSuffix, String pluralSuffix) \{
    File toDir = _copy.getToDir();
    String what = (prefix == null) ? \"\" : prefix;
    what += (count < 2) ? singularSuffix : pluralSuffix;
    if (count > 0) \{
        log(((((\"Removed \" + count) + \" \") + what) + \" from \") + toDir, MSG_INFO);
    \} else \{
        log(((\"NO \" + what) + \" to remove from \") + toDir, MSG_VERBOSE);
    \}
\}" shape=ellipse]
68 [label="4:Update@UPDATE" shape=ellipse]
69 [label="4:CtFieldReadImpl@myCopy" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
13 -> 15 [label="Data Dep"];
13 -> 68 [label="Action"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
14 -> 11 [label="AST"];
15 -> 48 [label="Define-Use"];
15 -> 60 [label="Define-Use"];
16 -> 15 [label="AST"];
16 -> 10 [label="AST"];
16 -> 14 [label="AST"];
18 -> 24 [label="Data Dep"];
20 -> 18 [label="AST"];
20 -> 19 [label="AST"];
20 -> 21 [label="Control Dep"];
20 -> 22 [label="Control Dep"];
22 -> 24 [label="Data Dep"];
23 -> 20 [label="AST"];
23 -> 21 [label="AST"];
23 -> 22 [label="AST"];
25 -> 24 [label="AST"];
25 -> 17 [label="AST"];
25 -> 23 [label="AST"];
26 -> 44 [label="Define-Use"];
26 -> 56 [label="Define-Use"];
27 -> 26 [label="Data Dep"];
29 -> 27 [label="AST"];
29 -> 28 [label="AST"];
29 -> 30 [label="Control Dep"];
29 -> 31 [label="Control Dep"];
30 -> 26 [label="Data Dep"];
31 -> 26 [label="Data Dep"];
32 -> 29 [label="AST"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
33 -> 26 [label="AST"];
33 -> 32 [label="AST"];
36 -> 34 [label="AST"];
36 -> 35 [label="AST"];
36 -> 52 [label="Control Dep"];
36 -> 51 [label="Control Dep"];
36 -> 37 [label="Control Dep"];
36 -> 49 [label="Control Dep"];
36 -> 47 [label="Control Dep"];
36 -> 45 [label="Control Dep"];
36 -> 43 [label="Control Dep"];
36 -> 41 [label="Control Dep"];
36 -> 39 [label="Control Dep"];
36 -> 40 [label="Control Dep"];
36 -> 42 [label="Control Dep"];
36 -> 44 [label="Control Dep"];
36 -> 46 [label="Control Dep"];
36 -> 48 [label="Control Dep"];
36 -> 50 [label="Control Dep"];
36 -> 64 [label="Control Dep"];
36 -> 63 [label="Control Dep"];
36 -> 53 [label="Control Dep"];
36 -> 61 [label="Control Dep"];
36 -> 59 [label="Control Dep"];
36 -> 57 [label="Control Dep"];
36 -> 55 [label="Control Dep"];
36 -> 56 [label="Control Dep"];
36 -> 58 [label="Control Dep"];
36 -> 60 [label="Control Dep"];
36 -> 62 [label="Control Dep"];
41 -> 39 [label="AST"];
41 -> 40 [label="AST"];
43 -> 41 [label="AST"];
43 -> 42 [label="AST"];
45 -> 43 [label="AST"];
45 -> 44 [label="AST"];
47 -> 45 [label="AST"];
47 -> 46 [label="AST"];
49 -> 47 [label="AST"];
49 -> 48 [label="AST"];
51 -> 38 [label="AST"];
51 -> 37 [label="AST"];
51 -> 49 [label="AST"];
51 -> 50 [label="AST"];
52 -> 51 [label="AST"];
57 -> 55 [label="AST"];
57 -> 56 [label="AST"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
61 -> 59 [label="AST"];
61 -> 60 [label="AST"];
63 -> 54 [label="AST"];
63 -> 53 [label="AST"];
63 -> 61 [label="AST"];
63 -> 62 [label="AST"];
64 -> 63 [label="AST"];
65 -> 36 [label="AST"];
65 -> 52 [label="AST"];
65 -> 64 [label="AST"];
66 -> 16 [label="AST"];
66 -> 25 [label="AST"];
66 -> 33 [label="AST"];
66 -> 65 [label="AST"];
67 -> 1 [label="AST"];
67 -> 0 [label="AST"];
67 -> 2 [label="AST"];
67 -> 4 [label="AST"];
67 -> 6 [label="AST"];
67 -> 8 [label="AST"];
67 -> 66 [label="AST"];
68 -> 69 [label="Action"];
}