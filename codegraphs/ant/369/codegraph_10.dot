digraph "run#?,CommandlineJava" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@run" shape=ellipse]
2 [label="2:CtParameterImpl@CommandlineJava command" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@CommandlineJava" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@ExecuteJava" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@ExecuteJava" shape=ellipse]
7 [label="3:CtConstructorCallImpl@new ExecuteJava()" shape=ellipse]
8 [label="3:CtVirtualElement@exe" shape=ellipse]
9 [label="3:CtLocalVariableImpl@ExecuteJava exe = new ExecuteJava()" shape=ellipse]
10 [label="4:CtExecutableReferenceImpl@setJavaCommand()" shape=ellipse]
11 [label="4:CtVirtualElement@setJavaCommand" shape=ellipse]
12 [label="4:CtVariableReadImpl@exe" shape=ellipse]
13 [label="4:CtExecutableReferenceImpl@getJavaCommand()" shape=ellipse]
14 [label="4:CtVirtualElement@getJavaCommand" shape=ellipse]
15 [label="4:CtVariableReadImpl@command" shape=ellipse]
16 [label="4:CtInvocationImpl@command.getJavaCommand()" shape=ellipse]
17 [label="4:CtInvocationImpl@exe.setJavaCommand(command.getJavaCommand())" shape=ellipse]
18 [label="5:CtExecutableReferenceImpl@setClasspath()" shape=ellipse]
19 [label="5:CtVirtualElement@setClasspath" shape=ellipse]
20 [label="5:CtVariableReadImpl@exe" shape=ellipse]
21 [label="5:CtExecutableReferenceImpl@getClasspath()" shape=ellipse]
22 [label="5:CtVirtualElement@getClasspath" shape=ellipse]
23 [label="5:CtVariableReadImpl@command" shape=ellipse]
24 [label="5:CtInvocationImpl@command.getClasspath()" shape=ellipse]
25 [label="5:CtInvocationImpl@exe.setClasspath(command.getClasspath())" shape=ellipse]
26 [label="6:CtExecutableReferenceImpl@setSystemProperties()" shape=ellipse]
27 [label="6:CtVirtualElement@setSystemProperties" shape=ellipse]
28 [label="6:CtVariableReadImpl@exe" shape=ellipse]
29 [label="6:CtExecutableReferenceImpl@getSystemProperties()" shape=ellipse]
30 [label="6:CtVirtualElement@getSystemProperties" shape=ellipse]
31 [label="6:CtVariableReadImpl@command" shape=ellipse]
32 [label="6:CtInvocationImpl@command.getSystemProperties()" shape=ellipse]
33 [label="6:CtInvocationImpl@exe.setSystemProperties(command.getSystemProperties())" shape=ellipse]
34 [label="7:CtExecutableReferenceImpl@setTimeout()" shape=ellipse]
35 [label="7:CtVirtualElement@setTimeout" shape=ellipse]
36 [label="7:CtVariableReadImpl@exe" shape=ellipse]
37 [label="7:CtFieldReadImpl@timeout" shape=ellipse]
38 [label="7:CtInvocationImpl@exe.setTimeout(timeout)" shape=ellipse]
39 [label="8:CtFieldReadImpl@out" shape=ellipse]
40 [label="8:CtLiteralImpl@null" shape=ellipse]
41 [label="8:CtBinaryOperatorImpl@out != null" shape=ellipse]
42 [label="10:CtFieldWriteImpl@outStream" shape=ellipse]
43 [label="10:CtTypeReferenceImpl@PrintStream" shape=ellipse]
44 [label="10:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
45 [label="10:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
46 [label="10:CtVirtualElement@getAbsolutePath" shape=ellipse]
47 [label="10:CtFieldReadImpl@out" shape=ellipse]
48 [label="10:CtInvocationImpl@out.getAbsolutePath()" shape=ellipse]
49 [label="10:CtFieldReadImpl@append" shape=ellipse]
50 [label="10:CtConstructorCallImpl@new FileOutputStream(out.getAbsolutePath(), append)" shape=ellipse]
51 [label="10:CtConstructorCallImpl@new PrintStream(new FileOutputStream(out.getAbsolutePath(), append))" shape=ellipse]
52 [label="10:CtAssignmentImpl@outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append))" shape=ellipse]
53 [label="11:CtExecutableReferenceImpl@execute()" shape=ellipse]
54 [label="11:CtVirtualElement@execute" shape=ellipse]
55 [label="11:CtVariableReadImpl@exe" shape=ellipse]
56 [label="11:CtExecutableReferenceImpl@getProject()" shape=ellipse]
57 [label="11:CtVirtualElement@getProject" shape=ellipse]
58 [label="11:CtInvocationImpl@getProject()" shape=ellipse]
59 [label="11:CtInvocationImpl@exe.execute(getProject())" shape=ellipse]
60 [label="9:CtBlockImpl@\{
    outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append));
    exe.execute(getProject());
\}" shape=ellipse]
61 [label="12:CtVirtualElement@io" shape=ellipse]
62 [label="12:CtTypeReferenceImpl@IOException" shape=ellipse]
63 [label="12:CtCatchVariableImpl@IOException io" shape=ellipse]
64 [label="13:CtTypeReferenceImpl@BuildException" shape=ellipse]
65 [label="13:CtVariableReadImpl@io" shape=ellipse]
66 [label="13:CtFieldReadImpl@location" shape=ellipse]
67 [label="13:CtConstructorCallImpl@new BuildException(io, location)" shape=ellipse]
68 [label="13:CtThrowImpl@throw new BuildException(io, location)" shape=ellipse]
69 [label="12:CtBlockImpl@\{
    throw new BuildException(io, location);
\}" shape=ellipse]
70 [label="12:CtCatchImpl@ catch (IOException io) \{
    throw new BuildException(io, location);
\}" shape=ellipse]
71 [label="15:CtFieldReadImpl@outStream" shape=ellipse]
72 [label="15:CtLiteralImpl@null" shape=ellipse]
73 [label="15:CtBinaryOperatorImpl@outStream != null" shape=ellipse]
74 [label="16:CtExecutableReferenceImpl@close()" shape=ellipse]
75 [label="16:CtVirtualElement@close" shape=ellipse]
76 [label="16:CtFieldReadImpl@outStream" shape=ellipse]
77 [label="16:CtInvocationImpl@outStream.close()" shape=ellipse]
78 [label="15:CtBlockImpl@\{
    outStream.close();
\}" shape=ellipse]
79 [label="15:CtIfImpl@if (outStream != null) \{
    outStream.close();
\}" shape=ellipse]
80 [label="14:CtBlockImpl@\{
    if (outStream != null) \{
        outStream.close();
    \}
\}" shape=ellipse]
81 [label="9:CtTryImpl@try \{
    outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append));
    exe.execute(getProject());
\} catch (IOException io) \{
    throw new BuildException(io, location);
\} finally \{
    if (outStream != null) \{
        outStream.close();
    \}
\}" shape=ellipse]
82 [label="8:CtBlockImpl@\{
    try \{
        outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append));
        exe.execute(getProject());
    \} catch (IOException io) \{
        throw new BuildException(io, location);
    \} finally \{
        if (outStream != null) \{
            outStream.close();
        \}
    \}
\}" shape=ellipse]
83 [label="20:CtExecutableReferenceImpl@execute()" shape=ellipse]
84 [label="20:CtVirtualElement@execute" shape=ellipse]
85 [label="20:CtVariableReadImpl@exe" shape=ellipse]
86 [label="20:CtExecutableReferenceImpl@getProject()" shape=ellipse]
87 [label="20:CtVirtualElement@getProject" shape=ellipse]
88 [label="20:CtInvocationImpl@getProject()" shape=ellipse]
89 [label="20:CtInvocationImpl@exe.execute(getProject())" shape=ellipse]
90 [label="19:CtBlockImpl@\{
    exe.execute(getProject());
\}" shape=ellipse]
91 [label="8:CtIfImpl@if (out != null) \{
    try \{
        outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append));
        exe.execute(getProject());
    \} catch (IOException io) \{
        throw new BuildException(io, location);
    \} finally \{
        if (outStream != null) \{
            outStream.close();
        \}
    \}
\} else \{
    exe.execute(getProject());
\}" shape=ellipse]
92 [label="2:CtBlockImpl@\{
    ExecuteJava exe = new ExecuteJava();
    exe.setJavaCommand(command.getJavaCommand());
    exe.setClasspath(command.getClasspath());
    exe.setSystemProperties(command.getSystemProperties());
    exe.setTimeout(timeout);
    if (out != null) \{
        try \{
            outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append));
            exe.execute(getProject());
        \} catch (IOException io) \{
            throw new BuildException(io, location);
        \} finally \{
            if (outStream != null) \{
                outStream.close();
            \}
        \}
    \} else \{
        exe.execute(getProject());
    \}
\}" shape=ellipse]
93 [label="2:CtMethodImpl@private void run(CommandlineJava command) throws BuildException \{
    ExecuteJava exe = new ExecuteJava();
    exe.setJavaCommand(command.getJavaCommand());
    exe.setClasspath(command.getClasspath());
    exe.setSystemProperties(command.getSystemProperties());
    exe.setTimeout(timeout);
    if (out != null) \{
        try \{
            outStream = new PrintStream(new FileOutputStream(out.getAbsolutePath(), append));
            exe.execute(getProject());
        \} catch (IOException io) \{
            throw new BuildException(io, location);
        \} finally \{
            if (outStream != null) \{
                outStream.close();
            \}
        \}
    \} else \{
        exe.execute(getProject());
    \}
\}" shape=ellipse]
94 [label="13:Delete@DELETE" shape=ellipse]
95 [label="13:Insert@INSERT" shape=ellipse]
96 [label="13:CtInvocationImpl@getLocation()" shape=ellipse]
2 -> 3 [label="AST"];
8 -> 12 [label="Define-Use"];
8 -> 20 [label="Define-Use"];
8 -> 28 [label="Define-Use"];
8 -> 36 [label="Define-Use"];
8 -> 55 [label="Define-Use"];
8 -> 85 [label="Define-Use"];
9 -> 8 [label="AST"];
9 -> 5 [label="AST"];
9 -> 7 [label="AST"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
16 -> 13 [label="AST"];
17 -> 11 [label="AST"];
17 -> 12 [label="AST"];
17 -> 10 [label="AST"];
17 -> 16 [label="AST"];
24 -> 22 [label="AST"];
24 -> 23 [label="AST"];
24 -> 21 [label="AST"];
25 -> 19 [label="AST"];
25 -> 20 [label="AST"];
25 -> 18 [label="AST"];
25 -> 24 [label="AST"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
32 -> 29 [label="AST"];
33 -> 27 [label="AST"];
33 -> 28 [label="AST"];
33 -> 26 [label="AST"];
33 -> 32 [label="AST"];
38 -> 35 [label="AST"];
38 -> 36 [label="AST"];
38 -> 34 [label="AST"];
38 -> 37 [label="AST"];
41 -> 39 [label="AST"];
41 -> 40 [label="AST"];
41 -> 82 [label="Control Dep"];
41 -> 81 [label="Control Dep"];
41 -> 60 [label="Control Dep"];
41 -> 52 [label="Control Dep"];
41 -> 42 [label="Control Dep"];
41 -> 51 [label="Control Dep"];
41 -> 50 [label="Control Dep"];
41 -> 48 [label="Control Dep"];
41 -> 45 [label="Control Dep"];
41 -> 47 [label="Control Dep"];
41 -> 49 [label="Control Dep"];
41 -> 59 [label="Control Dep"];
41 -> 53 [label="Control Dep"];
41 -> 55 [label="Control Dep"];
41 -> 58 [label="Control Dep"];
41 -> 56 [label="Control Dep"];
41 -> 70 [label="Control Dep"];
41 -> 63 [label="Control Dep"];
41 -> 80 [label="Control Dep"];
41 -> 79 [label="Control Dep"];
41 -> 73 [label="Control Dep"];
41 -> 71 [label="Control Dep"];
41 -> 72 [label="Control Dep"];
41 -> 90 [label="Control Dep"];
41 -> 89 [label="Control Dep"];
41 -> 83 [label="Control Dep"];
41 -> 85 [label="Control Dep"];
41 -> 88 [label="Control Dep"];
41 -> 86 [label="Control Dep"];
42 -> 71 [label="Define-Use"];
42 -> 76 [label="Define-Use"];
47 -> 42 [label="Data Dep"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
48 -> 45 [label="AST"];
49 -> 42 [label="Data Dep"];
50 -> 48 [label="AST"];
50 -> 49 [label="AST"];
51 -> 50 [label="AST"];
52 -> 42 [label="AST"];
52 -> 51 [label="AST"];
58 -> 57 [label="AST"];
58 -> 56 [label="AST"];
59 -> 54 [label="AST"];
59 -> 55 [label="AST"];
59 -> 53 [label="AST"];
59 -> 58 [label="AST"];
60 -> 52 [label="AST"];
60 -> 59 [label="AST"];
61 -> 65 [label="Define-Use"];
63 -> 61 [label="AST"];
63 -> 62 [label="AST"];
63 -> 69 [label="Control Dep"];
63 -> 68 [label="Control Dep"];
63 -> 67 [label="Control Dep"];
63 -> 65 [label="Control Dep"];
63 -> 66 [label="Control Dep"];
66 -> 94 [label="Action"];
67 -> 65 [label="AST"];
67 -> 66 [label="AST"];
67 -> 95 [label="Action"];
68 -> 67 [label="AST"];
69 -> 68 [label="AST"];
70 -> 63 [label="AST"];
70 -> 69 [label="AST"];
73 -> 71 [label="AST"];
73 -> 72 [label="AST"];
73 -> 78 [label="Control Dep"];
73 -> 77 [label="Control Dep"];
73 -> 74 [label="Control Dep"];
73 -> 76 [label="Control Dep"];
77 -> 75 [label="AST"];
77 -> 76 [label="AST"];
77 -> 74 [label="AST"];
78 -> 77 [label="AST"];
79 -> 73 [label="AST"];
79 -> 78 [label="AST"];
80 -> 79 [label="AST"];
81 -> 60 [label="AST"];
81 -> 70 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
88 -> 87 [label="AST"];
88 -> 86 [label="AST"];
89 -> 84 [label="AST"];
89 -> 85 [label="AST"];
89 -> 83 [label="AST"];
89 -> 88 [label="AST"];
90 -> 89 [label="AST"];
91 -> 41 [label="AST"];
91 -> 82 [label="AST"];
91 -> 90 [label="AST"];
92 -> 9 [label="AST"];
92 -> 17 [label="AST"];
92 -> 25 [label="AST"];
92 -> 33 [label="AST"];
92 -> 38 [label="AST"];
92 -> 91 [label="AST"];
93 -> 1 [label="AST"];
93 -> 0 [label="AST"];
93 -> 2 [label="AST"];
93 -> 4 [label="AST"];
93 -> 92 [label="AST"];
95 -> 96 [label="Action"];
}