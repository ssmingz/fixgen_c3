digraph "runCmd#?,Commandline,ExecuteStreamHandler" {
0 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
1 [label="2:CtVirtualElement@runCmd" shape=ellipse]
2 [label="2:CtParameterImpl@Commandline cmd" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Commandline" shape=ellipse]
4 [label="2:CtParameterImpl@ExecuteStreamHandler out" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@ExecuteStreamHandler" shape=ellipse]
6 [label="2:CtTypeReferenceImpl@TaskException" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@Project" shape=ellipse]
8 [label="4:CtExecutableReferenceImpl@getProject()" shape=ellipse]
9 [label="4:CtVirtualElement@getProject" shape=ellipse]
10 [label="4:CtInvocationImpl@getProject()" shape=ellipse]
11 [label="4:CtVirtualElement@aProj" shape=ellipse]
12 [label="4:CtLocalVariableImpl@Project aProj = getProject()" shape=ellipse]
13 [label="5:CtTypeReferenceImpl@Execute" shape=ellipse]
14 [label="5:CtTypeReferenceImpl@Execute" shape=ellipse]
15 [label="5:CtVariableReadImpl@out" shape=ellipse]
16 [label="5:CtConstructorCallImpl@new Execute(out)" shape=ellipse]
17 [label="5:CtVirtualElement@exe" shape=ellipse]
18 [label="5:CtLocalVariableImpl@Execute exe = new Execute(out)" shape=ellipse]
19 [label="6:CtExecutableReferenceImpl@setAntRun(Project)" shape=ellipse]
20 [label="6:CtVirtualElement@setAntRun" shape=ellipse]
21 [label="6:CtVariableReadImpl@exe" shape=ellipse]
22 [label="6:CtVariableReadImpl@aProj" shape=ellipse]
23 [label="6:CtInvocationImpl@exe.setAntRun(aProj)" shape=ellipse]
24 [label="7:CtExecutableReferenceImpl@setWorkingDirectory()" shape=ellipse]
25 [label="7:CtVirtualElement@setWorkingDirectory" shape=ellipse]
26 [label="7:CtVariableReadImpl@exe" shape=ellipse]
27 [label="7:CtExecutableReferenceImpl@getBaseDir()" shape=ellipse]
28 [label="7:CtVirtualElement@getBaseDir" shape=ellipse]
29 [label="7:CtVariableReadImpl@aProj" shape=ellipse]
30 [label="7:CtInvocationImpl@aProj.getBaseDir()" shape=ellipse]
31 [label="7:CtInvocationImpl@exe.setWorkingDirectory(aProj.getBaseDir())" shape=ellipse]
32 [label="8:CtExecutableReferenceImpl@setCommandline()" shape=ellipse]
33 [label="8:CtVirtualElement@setCommandline" shape=ellipse]
34 [label="8:CtVariableReadImpl@exe" shape=ellipse]
35 [label="8:CtExecutableReferenceImpl@getCommandline()" shape=ellipse]
36 [label="8:CtVirtualElement@getCommandline" shape=ellipse]
37 [label="8:CtVariableReadImpl@cmd" shape=ellipse]
38 [label="8:CtInvocationImpl@cmd.getCommandline()" shape=ellipse]
39 [label="8:CtInvocationImpl@exe.setCommandline(cmd.getCommandline())" shape=ellipse]
40 [label="9:CtExecutableReferenceImpl@execute()" shape=ellipse]
41 [label="9:CtVirtualElement@execute" shape=ellipse]
42 [label="9:CtVariableReadImpl@exe" shape=ellipse]
43 [label="9:CtInvocationImpl@exe.execute()" shape=ellipse]
44 [label="9:CtReturnImpl@return exe.execute()" shape=ellipse]
45 [label="3:CtBlockImpl@\{
    Project aProj = getProject();
    Execute exe = new Execute(out);
    exe.setAntRun(aProj);
    exe.setWorkingDirectory(aProj.getBaseDir());
    exe.setCommandline(cmd.getCommandline());
    return exe.execute();
\}" shape=ellipse]
46 [label="10:CtVirtualElement@e" shape=ellipse]
47 [label="10:CtTypeReferenceImpl@IOException" shape=ellipse]
48 [label="10:CtCatchVariableImpl@IOException e" shape=ellipse]
49 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
50 [label="11:CtLiteralImpl@\"Failed executing: \"" shape=ellipse]
51 [label="11:CtExecutableReferenceImpl@toString()" shape=ellipse]
52 [label="11:CtVirtualElement@toString" shape=ellipse]
53 [label="11:CtVariableReadImpl@cmd" shape=ellipse]
54 [label="11:CtInvocationImpl@cmd.toString()" shape=ellipse]
55 [label="11:CtBinaryOperatorImpl@(\"Failed executing: \" + cmd.toString())" shape=ellipse]
56 [label="11:CtLiteralImpl@\". Exception: \"" shape=ellipse]
57 [label="11:CtBinaryOperatorImpl@((\"Failed executing: \" + cmd.toString()) + \". Exception: \")" shape=ellipse]
58 [label="11:CtExecutableReferenceImpl@getMessage()" shape=ellipse]
59 [label="11:CtVirtualElement@getMessage" shape=ellipse]
60 [label="11:CtVariableReadImpl@e" shape=ellipse]
61 [label="11:CtInvocationImpl@e.getMessage()" shape=ellipse]
62 [label="11:CtBinaryOperatorImpl@((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage()" shape=ellipse]
63 [label="11:CtVirtualElement@msg" shape=ellipse]
64 [label="11:CtLocalVariableImpl@String msg = ((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage()" shape=ellipse]
65 [label="12:CtTypeReferenceImpl@TaskException" shape=ellipse]
66 [label="12:CtVariableReadImpl@msg" shape=ellipse]
67 [label="12:CtConstructorCallImpl@new TaskException(msg)" shape=ellipse]
68 [label="12:CtThrowImpl@throw new TaskException(msg)" shape=ellipse]
69 [label="10:CtBlockImpl@\{
    String msg = ((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage();
    throw new TaskException(msg);
\}" shape=ellipse]
70 [label="10:CtCatchImpl@ catch (IOException e) \{
    String msg = ((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage();
    throw new TaskException(msg);
\}" shape=ellipse]
71 [label="3:CtTryImpl@try \{
    Project aProj = getProject();
    Execute exe = new Execute(out);
    exe.setAntRun(aProj);
    exe.setWorkingDirectory(aProj.getBaseDir());
    exe.setCommandline(cmd.getCommandline());
    return exe.execute();
\} catch (IOException e) \{
    String msg = ((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage();
    throw new TaskException(msg);
\}" shape=ellipse]
72 [label="2:CtBlockImpl@\{
    try \{
        Project aProj = getProject();
        Execute exe = new Execute(out);
        exe.setAntRun(aProj);
        exe.setWorkingDirectory(aProj.getBaseDir());
        exe.setCommandline(cmd.getCommandline());
        return exe.execute();
    \} catch (IOException e) \{
        String msg = ((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage();
        throw new TaskException(msg);
    \}
\}" shape=ellipse]
73 [label="2:CtMethodImpl@protected int runCmd(Commandline cmd, ExecuteStreamHandler out) throws TaskException \{
    try \{
        Project aProj = getProject();
        Execute exe = new Execute(out);
        exe.setAntRun(aProj);
        exe.setWorkingDirectory(aProj.getBaseDir());
        exe.setCommandline(cmd.getCommandline());
        return exe.execute();
    \} catch (IOException e) \{
        String msg = ((\"Failed executing: \" + cmd.toString()) + \". Exception: \") + e.getMessage();
        throw new TaskException(msg);
    \}
\}" shape=ellipse]
74 [label="7:Update@UPDATE" shape=ellipse]
75 [label="7:CtInvocationImpl@getBaseDirectory()" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
10 -> 9 [label="AST"];
10 -> 8 [label="AST"];
11 -> 22 [label="Define-Use"];
11 -> 29 [label="Define-Use"];
12 -> 11 [label="AST"];
12 -> 7 [label="AST"];
12 -> 10 [label="AST"];
15 -> 17 [label="Data Dep"];
16 -> 15 [label="AST"];
17 -> 21 [label="Define-Use"];
17 -> 26 [label="Define-Use"];
17 -> 34 [label="Define-Use"];
17 -> 42 [label="Define-Use"];
18 -> 17 [label="AST"];
18 -> 13 [label="AST"];
18 -> 16 [label="AST"];
23 -> 20 [label="AST"];
23 -> 21 [label="AST"];
23 -> 19 [label="AST"];
23 -> 22 [label="AST"];
30 -> 28 [label="AST"];
30 -> 29 [label="AST"];
30 -> 27 [label="AST"];
30 -> 74 [label="Action"];
31 -> 25 [label="AST"];
31 -> 26 [label="AST"];
31 -> 24 [label="AST"];
31 -> 30 [label="AST"];
38 -> 36 [label="AST"];
38 -> 37 [label="AST"];
38 -> 35 [label="AST"];
39 -> 33 [label="AST"];
39 -> 34 [label="AST"];
39 -> 32 [label="AST"];
39 -> 38 [label="AST"];
43 -> 41 [label="AST"];
43 -> 42 [label="AST"];
43 -> 40 [label="AST"];
44 -> 43 [label="AST"];
45 -> 12 [label="AST"];
45 -> 18 [label="AST"];
45 -> 23 [label="AST"];
45 -> 31 [label="AST"];
45 -> 39 [label="AST"];
45 -> 44 [label="AST"];
46 -> 60 [label="Define-Use"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
48 -> 69 [label="Control Dep"];
48 -> 64 [label="Control Dep"];
48 -> 62 [label="Control Dep"];
48 -> 57 [label="Control Dep"];
48 -> 55 [label="Control Dep"];
48 -> 50 [label="Control Dep"];
48 -> 54 [label="Control Dep"];
48 -> 51 [label="Control Dep"];
48 -> 53 [label="Control Dep"];
48 -> 56 [label="Control Dep"];
48 -> 61 [label="Control Dep"];
48 -> 58 [label="Control Dep"];
48 -> 60 [label="Control Dep"];
48 -> 68 [label="Control Dep"];
48 -> 67 [label="Control Dep"];
48 -> 66 [label="Control Dep"];
53 -> 63 [label="Data Dep"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
54 -> 51 [label="AST"];
55 -> 50 [label="AST"];
55 -> 54 [label="AST"];
57 -> 55 [label="AST"];
57 -> 56 [label="AST"];
60 -> 63 [label="Data Dep"];
61 -> 59 [label="AST"];
61 -> 60 [label="AST"];
61 -> 58 [label="AST"];
62 -> 57 [label="AST"];
62 -> 61 [label="AST"];
63 -> 66 [label="Define-Use"];
64 -> 63 [label="AST"];
64 -> 49 [label="AST"];
64 -> 62 [label="AST"];
67 -> 66 [label="AST"];
68 -> 67 [label="AST"];
69 -> 64 [label="AST"];
69 -> 68 [label="AST"];
70 -> 48 [label="AST"];
70 -> 69 [label="AST"];
71 -> 45 [label="AST"];
71 -> 70 [label="AST"];
72 -> 71 [label="AST"];
73 -> 1 [label="AST"];
73 -> 0 [label="AST"];
73 -> 2 [label="AST"];
73 -> 4 [label="AST"];
73 -> 6 [label="AST"];
73 -> 72 [label="AST"];
74 -> 75 [label="Action"];
}