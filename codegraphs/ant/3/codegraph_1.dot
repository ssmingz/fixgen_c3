digraph "testCreatePropertiesCacheViaCustomSelector#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testCreatePropertiesCacheViaCustomSelector" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
3 [label="3:CtExecutableReferenceImpl@createTempFile(java.lang.String,java.lang.String,<unknown>)" shape=ellipse]
4 [label="3:CtVirtualElement@createTempFile" shape=ellipse]
5 [label="3:CtTypeAccessImpl@FILE_UTILS" shape=ellipse]
6 [label="3:CtLiteralImpl@\"tmp-cache-\"" shape=ellipse]
7 [label="3:CtLiteralImpl@\".properties\"" shape=ellipse]
8 [label="3:CtLiteralImpl@null" shape=ellipse]
9 [label="3:CtInvocationImpl@FILE_UTILS.createTempFile(\"tmp-cache-\", \".properties\", null)" shape=ellipse]
10 [label="3:CtVirtualElement@cachefile" shape=ellipse]
11 [label="3:CtLocalVariableImpl@File cachefile = FILE_UTILS.createTempFile(\"tmp-cache-\", \".properties\", null)" shape=ellipse]
12 [label="5:CtExecutableReferenceImpl@makeBed()" shape=ellipse]
13 [label="5:CtVirtualElement@makeBed" shape=ellipse]
14 [label="5:CtInvocationImpl@makeBed()" shape=ellipse]
15 [label="6:CtTypeReferenceImpl@ExtendSelector" shape=ellipse]
16 [label="6:CtTypeReferenceImpl@ExtendSelector" shape=ellipse]
17 [label="6:CtConstructorCallImpl@new ExtendSelector()" shape=ellipse]
18 [label="6:CtVirtualElement@s" shape=ellipse]
19 [label="6:CtLocalVariableImpl@ExtendSelector s = new ExtendSelector()" shape=ellipse]
20 [label="7:CtExecutableReferenceImpl@setClassname(java.lang.String)" shape=ellipse]
21 [label="7:CtVirtualElement@setClassname" shape=ellipse]
22 [label="7:CtVariableReadImpl@s" shape=ellipse]
23 [label="7:CtLiteralImpl@\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\"" shape=ellipse]
24 [label="7:CtInvocationImpl@s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\")" shape=ellipse]
25 [label="8:CtExecutableReferenceImpl@addParam()" shape=ellipse]
26 [label="8:CtVirtualElement@addParam" shape=ellipse]
27 [label="8:CtVariableReadImpl@s" shape=ellipse]
28 [label="8:CtExecutableReferenceImpl@createParam(java.lang.String,java.lang.String)" shape=ellipse]
29 [label="8:CtVirtualElement@createParam" shape=ellipse]
30 [label="8:CtLiteralImpl@\"update\"" shape=ellipse]
31 [label="8:CtLiteralImpl@\"true\"" shape=ellipse]
32 [label="8:CtInvocationImpl@createParam(\"update\", \"true\")" shape=ellipse]
33 [label="8:CtInvocationImpl@s.addParam(createParam(\"update\", \"true\"))" shape=ellipse]
34 [label="9:CtExecutableReferenceImpl@addParam()" shape=ellipse]
35 [label="9:CtVirtualElement@addParam" shape=ellipse]
36 [label="9:CtVariableReadImpl@s" shape=ellipse]
37 [label="9:CtExecutableReferenceImpl@createParam(java.lang.String,<unknown>)" shape=ellipse]
38 [label="9:CtVirtualElement@createParam" shape=ellipse]
39 [label="9:CtLiteralImpl@\"cache.cachefile\"" shape=ellipse]
40 [label="9:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
41 [label="9:CtVirtualElement@getAbsolutePath" shape=ellipse]
42 [label="9:CtVariableReadImpl@cachefile" shape=ellipse]
43 [label="9:CtInvocationImpl@cachefile.getAbsolutePath()" shape=ellipse]
44 [label="9:CtInvocationImpl@createParam(\"cache.cachefile\", cachefile.getAbsolutePath())" shape=ellipse]
45 [label="9:CtInvocationImpl@s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()))" shape=ellipse]
46 [label="10:CtExecutableReferenceImpl@addParam()" shape=ellipse]
47 [label="10:CtVirtualElement@addParam" shape=ellipse]
48 [label="10:CtVariableReadImpl@s" shape=ellipse]
49 [label="10:CtExecutableReferenceImpl@createParam(java.lang.String,java.lang.String)" shape=ellipse]
50 [label="10:CtVirtualElement@createParam" shape=ellipse]
51 [label="10:CtLiteralImpl@\"cache\"" shape=ellipse]
52 [label="10:CtLiteralImpl@\"propertyfile\"" shape=ellipse]
53 [label="10:CtInvocationImpl@createParam(\"cache\", \"propertyfile\")" shape=ellipse]
54 [label="10:CtInvocationImpl@s.addParam(createParam(\"cache\", \"propertyfile\"))" shape=ellipse]
55 [label="11:CtTypeReferenceImpl@String" shape=ellipse]
56 [label="11:CtExecutableReferenceImpl@selectionString(<unknown>)" shape=ellipse]
57 [label="11:CtVirtualElement@selectionString" shape=ellipse]
58 [label="11:CtVariableReadImpl@s" shape=ellipse]
59 [label="11:CtInvocationImpl@selectionString(s)" shape=ellipse]
60 [label="11:CtVirtualElement@results" shape=ellipse]
61 [label="11:CtLocalVariableImpl@String results = selectionString(s)" shape=ellipse]
62 [label="12:CtExecutableReferenceImpl@assertTrue(java.lang.String,<unknown>)" shape=ellipse]
63 [label="12:CtVirtualElement@assertTrue" shape=ellipse]
64 [label="12:CtLiteralImpl@\"Cache file is not created.\"" shape=ellipse]
65 [label="12:CtExecutableReferenceImpl@exists()" shape=ellipse]
66 [label="12:CtVirtualElement@exists" shape=ellipse]
67 [label="12:CtVariableReadImpl@cachefile" shape=ellipse]
68 [label="12:CtInvocationImpl@cachefile.exists()" shape=ellipse]
69 [label="12:CtInvocationImpl@assertTrue(\"Cache file is not created.\", cachefile.exists())" shape=ellipse]
70 [label="4:CtBlockImpl@\{
    makeBed();
    ExtendSelector s = new ExtendSelector();
    s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\");
    s.addParam(createParam(\"update\", \"true\"));
    s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()));
    s.addParam(createParam(\"cache\", \"propertyfile\"));
    String results = selectionString(s);
    assertTrue(\"Cache file is not created.\", cachefile.exists());
\}" shape=ellipse]
71 [label="14:CtExecutableReferenceImpl@cleanupBed()" shape=ellipse]
72 [label="14:CtVirtualElement@cleanupBed" shape=ellipse]
73 [label="14:CtInvocationImpl@cleanupBed()" shape=ellipse]
74 [label="15:CtVariableReadImpl@cachefile" shape=ellipse]
75 [label="15:CtLiteralImpl@null" shape=ellipse]
76 [label="15:CtBinaryOperatorImpl@cachefile != null" shape=ellipse]
77 [label="16:CtExecutableReferenceImpl@delete()" shape=ellipse]
78 [label="16:CtVirtualElement@delete" shape=ellipse]
79 [label="16:CtVariableReadImpl@cachefile" shape=ellipse]
80 [label="16:CtInvocationImpl@cachefile.delete()" shape=ellipse]
81 [label="15:CtBlockImpl@\{
    cachefile.delete();
\}" shape=ellipse]
82 [label="15:CtIfImpl@if (cachefile != null) \{
    cachefile.delete();
\}" shape=ellipse]
83 [label="13:CtBlockImpl@\{
    cleanupBed();
    if (cachefile != null) \{
        cachefile.delete();
    \}
\}" shape=ellipse]
84 [label="4:CtTryImpl@try \{
    makeBed();
    ExtendSelector s = new ExtendSelector();
    s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\");
    s.addParam(createParam(\"update\", \"true\"));
    s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()));
    s.addParam(createParam(\"cache\", \"propertyfile\"));
    String results = selectionString(s);
    assertTrue(\"Cache file is not created.\", cachefile.exists());
\} finally \{
    cleanupBed();
    if (cachefile != null) \{
        cachefile.delete();
    \}
\}" shape=ellipse]
85 [label="2:CtBlockImpl@\{
    File cachefile = FILE_UTILS.createTempFile(\"tmp-cache-\", \".properties\", null);
    try \{
        makeBed();
        ExtendSelector s = new ExtendSelector();
        s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\");
        s.addParam(createParam(\"update\", \"true\"));
        s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()));
        s.addParam(createParam(\"cache\", \"propertyfile\"));
        String results = selectionString(s);
        assertTrue(\"Cache file is not created.\", cachefile.exists());
    \} finally \{
        cleanupBed();
        if (cachefile != null) \{
            cachefile.delete();
        \}
    \}
\}" shape=ellipse]
86 [label="2:CtMethodImpl@public void testCreatePropertiesCacheViaCustomSelector() \{
    File cachefile = FILE_UTILS.createTempFile(\"tmp-cache-\", \".properties\", null);
    try \{
        makeBed();
        ExtendSelector s = new ExtendSelector();
        s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\");
        s.addParam(createParam(\"update\", \"true\"));
        s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()));
        s.addParam(createParam(\"cache\", \"propertyfile\"));
        String results = selectionString(s);
        assertTrue(\"Cache file is not created.\", cachefile.exists());
    \} finally \{
        cleanupBed();
        if (cachefile != null) \{
            cachefile.delete();
        \}
    \}
\}" shape=ellipse]
87 [label="3:Update@UPDATE" shape=ellipse]
88 [label="3:CtInvocationImpl@FILE_UTILS.createTempFileName(\"tmp-cache-\", \".properties\", null, false)" shape=ellipse]
9 -> 4 [label="AST"];
9 -> 5 [label="AST"];
9 -> 3 [label="AST"];
9 -> 6 [label="AST"];
9 -> 7 [label="AST"];
9 -> 8 [label="AST"];
9 -> 87 [label="Action"];
10 -> 42 [label="Define-Use"];
10 -> 67 [label="Define-Use"];
10 -> 74 [label="Define-Use"];
10 -> 79 [label="Define-Use"];
11 -> 10 [label="AST"];
11 -> 2 [label="AST"];
11 -> 9 [label="AST"];
14 -> 13 [label="AST"];
14 -> 12 [label="AST"];
18 -> 22 [label="Define-Use"];
18 -> 27 [label="Define-Use"];
18 -> 36 [label="Define-Use"];
18 -> 48 [label="Define-Use"];
18 -> 58 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 15 [label="AST"];
19 -> 17 [label="AST"];
24 -> 21 [label="AST"];
24 -> 22 [label="AST"];
24 -> 20 [label="AST"];
24 -> 23 [label="AST"];
32 -> 29 [label="AST"];
32 -> 28 [label="AST"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
33 -> 26 [label="AST"];
33 -> 27 [label="AST"];
33 -> 25 [label="AST"];
33 -> 32 [label="AST"];
43 -> 41 [label="AST"];
43 -> 42 [label="AST"];
43 -> 40 [label="AST"];
44 -> 38 [label="AST"];
44 -> 37 [label="AST"];
44 -> 39 [label="AST"];
44 -> 43 [label="AST"];
45 -> 35 [label="AST"];
45 -> 36 [label="AST"];
45 -> 34 [label="AST"];
45 -> 44 [label="AST"];
53 -> 50 [label="AST"];
53 -> 49 [label="AST"];
53 -> 51 [label="AST"];
53 -> 52 [label="AST"];
54 -> 47 [label="AST"];
54 -> 48 [label="AST"];
54 -> 46 [label="AST"];
54 -> 53 [label="AST"];
58 -> 60 [label="Data Dep"];
59 -> 57 [label="AST"];
59 -> 56 [label="AST"];
59 -> 58 [label="AST"];
61 -> 60 [label="AST"];
61 -> 55 [label="AST"];
61 -> 59 [label="AST"];
68 -> 66 [label="AST"];
68 -> 67 [label="AST"];
68 -> 65 [label="AST"];
69 -> 63 [label="AST"];
69 -> 62 [label="AST"];
69 -> 64 [label="AST"];
69 -> 68 [label="AST"];
70 -> 14 [label="AST"];
70 -> 19 [label="AST"];
70 -> 24 [label="AST"];
70 -> 33 [label="AST"];
70 -> 45 [label="AST"];
70 -> 54 [label="AST"];
70 -> 61 [label="AST"];
70 -> 69 [label="AST"];
73 -> 72 [label="AST"];
73 -> 71 [label="AST"];
76 -> 74 [label="AST"];
76 -> 75 [label="AST"];
76 -> 81 [label="Control Dep"];
76 -> 80 [label="Control Dep"];
76 -> 77 [label="Control Dep"];
76 -> 79 [label="Control Dep"];
80 -> 78 [label="AST"];
80 -> 79 [label="AST"];
80 -> 77 [label="AST"];
81 -> 80 [label="AST"];
82 -> 76 [label="AST"];
82 -> 81 [label="AST"];
83 -> 73 [label="AST"];
83 -> 82 [label="AST"];
84 -> 70 [label="AST"];
84 -> 83 [label="AST"];
85 -> 11 [label="AST"];
85 -> 84 [label="AST"];
86 -> 1 [label="AST"];
86 -> 0 [label="AST"];
86 -> 85 [label="AST"];
87 -> 88 [label="Action"];
}