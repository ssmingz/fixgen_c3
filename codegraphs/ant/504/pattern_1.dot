digraph "Pattern" {
0 [label="test2#?#2:INSERT
test1#?#2:INSERT" shape=ellipse]
1 [label="test2#?#2:public void test2() \{
    expectBuildException(\"test2\", \"SSL only possible with MIME mail\");
\}
test1#?#2:public void test1() \{
    expectBuildException(\"test1\", \"SMTP auth only possible with MIME mail\");
\}" shape=ellipse]
2 [label="test2#?#2:test2
test1#?#2:test1" shape=ellipse]
3 [label="test2#?#2:void
test1#?#2:void" shape=ellipse]
4 [label="test2#?#2:\{
    expectBuildException(\"test2\", \"SSL only possible with MIME mail\");
\}
test1#?#2:\{
    expectBuildException(\"test1\", \"SMTP auth only possible with MIME mail\");
\}" shape=ellipse]
5 [label="test2#?#3:expectBuildException(\"test2\", \"SSL only possible with MIME mail\")
test1#?#3:expectBuildException(\"test1\", \"SMTP auth only possible with MIME mail\")" shape=ellipse]
6 [label="test2#?#2:public
test1#?#2:public" shape=ellipse]
7 [label="test2#?#2:VE: Modifiers_Method
test1#?#2:VE: Modifiers_Method" shape=ellipse]
8 [label="test2#?#4:INSERT
test1#?#4:INSERT" shape=ellipse]
9 [label="test2#?#4:try \{
    buildRule.executeTarget(\"test2\");
    fail(\"Build exception expected: SSL only possibly with MIME mail\");
\} catch (BuildException ex) \{
\}
test1#?#4:try \{
    buildRule.executeTarget(\"test1\");
    fail(\"Build exception expected: SMTP auth only possibly with MIME mail\");
\} catch (BuildException ex) \{
\}" shape=ellipse]
10 [label="test2#?#2:@Test
test1#?#2:@Test" shape=ellipse]
0 -> 10 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 2 [label="AST:2"];
1 -> 3 [label="AST:2"];
1 -> 4 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 8 [label="Action:2"];
4 -> 5 [label="AST:2"];
8 -> 9 [label="Action:2"];
}