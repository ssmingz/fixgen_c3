digraph "Pattern" {
0 [label="testDefaultExcludesAndUpdate#?#4:INSERT
testPrefixAddsDir#?#4:INSERT" shape=ellipse]
1 [label="testDefaultExcludesAndUpdate#?#3:executeTarget(\"testDefaultExcludesAndUpdate\")
testPrefixAddsDir#?#3:executeTarget(\"testPrefixAddsDir\")" shape=ellipse]
2 [label="testDefaultExcludesAndUpdate#?#2:\{
    executeTarget(\"testDefaultExcludesAndUpdate\");
    ZipFile f = null;
    try \{
        f = new ZipFile(new File(getProject().getProperty(\"output\"), \"test3.zip\"));
        assertNotNull(\"ziptest~ should be included\", f.getEntry(\"ziptest~\"));
    \} finally \{
        if (f != null) \{
            f.close();
        \}
    \}
\}
testPrefixAddsDir#?#2:\{
    executeTarget(\"testPrefixAddsDir\");
    File archive = new File(getProject().getProperty(\"output\"), \"test3.zip\");
    zfPrefixAddsDir = new ZipFile(archive);
    ZipEntry ze = zfPrefixAddsDir.getEntry(\"test/\");
    assertNotNull(\"test/ has been added\", ze);
\}" shape=ellipse]
3 [label="testDefaultExcludesAndUpdate#?#2:public void testDefaultExcludesAndUpdate() throws ZipException, IOException \{
    executeTarget(\"testDefaultExcludesAndUpdate\");
    ZipFile f = null;
    try \{
        f = new ZipFile(new File(getProject().getProperty(\"output\"), \"test3.zip\"));
        assertNotNull(\"ziptest~ should be included\", f.getEntry(\"ziptest~\"));
    \} finally \{
        if (f != null) \{
            f.close();
        \}
    \}
\}
testPrefixAddsDir#?#2:public void testPrefixAddsDir() throws IOException \{
    executeTarget(\"testPrefixAddsDir\");
    File archive = new File(getProject().getProperty(\"output\"), \"test3.zip\");
    zfPrefixAddsDir = new ZipFile(archive);
    ZipEntry ze = zfPrefixAddsDir.getEntry(\"test/\");
    assertNotNull(\"test/ has been added\", ze);
\}" shape=ellipse]
4 [label="testDefaultExcludesAndUpdate#?#4:ZipFile f = null
testPrefixAddsDir#?#5:zfPrefixAddsDir = new ZipFile(archive)" shape=ellipse]
5 [label="testDefaultExcludesAndUpdate#?#5:try \{
    f = new ZipFile(new File(getProject().getProperty(\"output\"), \"test3.zip\"));
    assertNotNull(\"ziptest~ should be included\", f.getEntry(\"ziptest~\"));
\} finally \{
    if (f != null) \{
        f.close();
    \}
\}
testPrefixAddsDir#?#4:File archive = new File(getProject().getProperty(\"output\"), \"test3.zip\")" shape=ellipse]
6 [label="testDefaultExcludesAndUpdate#?#3:executeTarget
testPrefixAddsDir#?#3:executeTarget" shape=ellipse]
7 [label="testDefaultExcludesAndUpdate#?#-1:
testPrefixAddsDir#?#-1:" shape=ellipse]
8 [label="testDefaultExcludesAndUpdate#?#-1:PlaceHold
testPrefixAddsDir#?#-1:PlaceHold" shape=ellipse]
9 [label="testDefaultExcludesAndUpdate#?#-1:PlaceHold
testPrefixAddsDir#?#-1:PlaceHold" shape=ellipse]
10 [label="testDefaultExcludesAndUpdate#?#3:executeTarget(java.lang.String)
testPrefixAddsDir#?#3:executeTarget(java.lang.String)" shape=ellipse]
11 [label="testDefaultExcludesAndUpdate#?#-1:String
testPrefixAddsDir#?#-1:String" shape=ellipse]
12 [label="testDefaultExcludesAndUpdate#?#3:\"testDefaultExcludesAndUpdate\"
testPrefixAddsDir#?#3:\"testPrefixAddsDir\"" shape=ellipse]
13 [label="testDefaultExcludesAndUpdate#?#-1:String
testPrefixAddsDir#?#-1:String" shape=ellipse]
14 [label="testDefaultExcludesAndUpdate#?#4:buildRule
testPrefixAddsDir#?#4:buildRule" shape=ellipse]
15 [label="testPrefixAddsDir#?#7:assertNotNull(\"test/ has been added\", ze)" shape=ellipse]
16 [label="testPrefixAddsDir#?#6:ZipEntry ze = zfPrefixAddsDir.getEntry(\"test/\")" shape=ellipse]
0 -> 14 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 10 [label="AST:2"];
1 -> 12 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 15 [label="AST:1"];
2 -> 16 [label="AST:1"];
3 -> 2 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 9 [label="AST:2"];
10 -> 11 [label="AST:2"];
12 -> 13 [label="AST:2"];
}