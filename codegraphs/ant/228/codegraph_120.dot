digraph "parse#?,String" {
0 [label="2:CtTypeReferenceImpl@VAJBuildInfo" shape=ellipse]
1 [label="2:CtVirtualElement@parse" shape=ellipse]
2 [label="2:CtParameterImpl@String data" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@VAJBuildInfo" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@VAJBuildInfo" shape=ellipse]
6 [label="3:CtConstructorCallImpl@new VAJBuildInfo()" shape=ellipse]
7 [label="3:CtVirtualElement@result" shape=ellipse]
8 [label="3:CtLocalVariableImpl@VAJBuildInfo result = new VAJBuildInfo()" shape=ellipse]
9 [label="5:CtTypeReferenceImpl@StringTokenizer" shape=ellipse]
10 [label="5:CtTypeReferenceImpl@StringTokenizer" shape=ellipse]
11 [label="5:CtVariableReadImpl@data" shape=ellipse]
12 [label="5:CtLiteralImpl@\"|\"" shape=ellipse]
13 [label="5:CtConstructorCallImpl@new StringTokenizer(data, \"|\")" shape=ellipse]
14 [label="5:CtVirtualElement@tok" shape=ellipse]
15 [label="5:CtLocalVariableImpl@StringTokenizer tok = new StringTokenizer(data, \"|\")" shape=ellipse]
16 [label="6:CtExecutableReferenceImpl@setOutputMessageLevel()" shape=ellipse]
17 [label="6:CtVirtualElement@setOutputMessageLevel" shape=ellipse]
18 [label="6:CtVariableReadImpl@result" shape=ellipse]
19 [label="6:CtExecutableReferenceImpl@nextToken()" shape=ellipse]
20 [label="6:CtVirtualElement@nextToken" shape=ellipse]
21 [label="6:CtVariableReadImpl@tok" shape=ellipse]
22 [label="6:CtInvocationImpl@tok.nextToken()" shape=ellipse]
23 [label="6:CtInvocationImpl@result.setOutputMessageLevel(tok.nextToken())" shape=ellipse]
24 [label="7:CtExecutableReferenceImpl@setBuildFileName()" shape=ellipse]
25 [label="7:CtVirtualElement@setBuildFileName" shape=ellipse]
26 [label="7:CtVariableReadImpl@result" shape=ellipse]
27 [label="7:CtExecutableReferenceImpl@nextToken()" shape=ellipse]
28 [label="7:CtVirtualElement@nextToken" shape=ellipse]
29 [label="7:CtVariableReadImpl@tok" shape=ellipse]
30 [label="7:CtInvocationImpl@tok.nextToken()" shape=ellipse]
31 [label="7:CtInvocationImpl@result.setBuildFileName(tok.nextToken())" shape=ellipse]
32 [label="8:CtExecutableReferenceImpl@setTarget()" shape=ellipse]
33 [label="8:CtVirtualElement@setTarget" shape=ellipse]
34 [label="8:CtVariableReadImpl@result" shape=ellipse]
35 [label="8:CtExecutableReferenceImpl@nextToken()" shape=ellipse]
36 [label="8:CtVirtualElement@nextToken" shape=ellipse]
37 [label="8:CtVariableReadImpl@tok" shape=ellipse]
38 [label="8:CtInvocationImpl@tok.nextToken()" shape=ellipse]
39 [label="8:CtInvocationImpl@result.setTarget(tok.nextToken())" shape=ellipse]
40 [label="9:CtExecutableReferenceImpl@hasMoreTokens()" shape=ellipse]
41 [label="9:CtVirtualElement@hasMoreTokens" shape=ellipse]
42 [label="9:CtVariableReadImpl@tok" shape=ellipse]
43 [label="9:CtInvocationImpl@tok.hasMoreTokens()" shape=ellipse]
44 [label="10:CtExecutableReferenceImpl@addElement()" shape=ellipse]
45 [label="10:CtVirtualElement@addElement" shape=ellipse]
46 [label="10:CtVariableReadImpl@result" shape=ellipse]
47 [label="10:CtLocalVariableReferenceImpl@result" shape=ellipse]
48 [label="10:CtFieldReadImpl@result.projectTargets" shape=ellipse]
49 [label="10:CtExecutableReferenceImpl@nextToken()" shape=ellipse]
50 [label="10:CtVirtualElement@nextToken" shape=ellipse]
51 [label="10:CtVariableReadImpl@tok" shape=ellipse]
52 [label="10:CtInvocationImpl@tok.nextToken()" shape=ellipse]
53 [label="10:CtInvocationImpl@result.projectTargets.addElement(tok.nextToken())" shape=ellipse]
54 [label="9:CtBlockImpl@\{
    result.projectTargets.addElement(tok.nextToken());
\}" shape=ellipse]
55 [label="9:CtWhileImpl@while (tok.hasMoreTokens()) \{
    result.projectTargets.addElement(tok.nextToken());
\} " shape=ellipse]
56 [label="4:CtBlockImpl@\{
    StringTokenizer tok = new StringTokenizer(data, \"|\");
    result.setOutputMessageLevel(tok.nextToken());
    result.setBuildFileName(tok.nextToken());
    result.setTarget(tok.nextToken());
    while (tok.hasMoreTokens()) \{
        result.projectTargets.addElement(tok.nextToken());
    \} 
\}" shape=ellipse]
57 [label="12:CtVirtualElement@t" shape=ellipse]
58 [label="12:CtTypeReferenceImpl@Throwable" shape=ellipse]
59 [label="12:CtCatchVariableImpl@Throwable t" shape=ellipse]
60 [label="12:CtBlockImpl@\{
\}" shape=ellipse]
61 [label="12:CtCatchImpl@ catch (Throwable t) \{
\}" shape=ellipse]
62 [label="4:CtTryImpl@try \{
    StringTokenizer tok = new StringTokenizer(data, \"|\");
    result.setOutputMessageLevel(tok.nextToken());
    result.setBuildFileName(tok.nextToken());
    result.setTarget(tok.nextToken());
    while (tok.hasMoreTokens()) \{
        result.projectTargets.addElement(tok.nextToken());
    \} 
\} catch (Throwable t) \{
\}" shape=ellipse]
63 [label="14:CtVariableReadImpl@result" shape=ellipse]
64 [label="14:CtReturnImpl@return result" shape=ellipse]
65 [label="2:CtBlockImpl@\{
    VAJBuildInfo result = new VAJBuildInfo();
    try \{
        StringTokenizer tok = new StringTokenizer(data, \"|\");
        result.setOutputMessageLevel(tok.nextToken());
        result.setBuildFileName(tok.nextToken());
        result.setTarget(tok.nextToken());
        while (tok.hasMoreTokens()) \{
            result.projectTargets.addElement(tok.nextToken());
        \} 
    \} catch (Throwable t) \{
    \}
    return result;
\}" shape=ellipse]
66 [label="2:CtMethodImpl@public static VAJBuildInfo parse(String data) \{
    VAJBuildInfo result = new VAJBuildInfo();
    try \{
        StringTokenizer tok = new StringTokenizer(data, \"|\");
        result.setOutputMessageLevel(tok.nextToken());
        result.setBuildFileName(tok.nextToken());
        result.setTarget(tok.nextToken());
        while (tok.hasMoreTokens()) \{
            result.projectTargets.addElement(tok.nextToken());
        \} 
    \} catch (Throwable t) \{
    \}
    return result;
\}" shape=ellipse]
67 [label="10:Update@UPDATE" shape=ellipse]
68 [label="10:CtInvocationImpl@result.projectTargets.add(tok.nextToken())" shape=ellipse]
2 -> 3 [label="AST"];
7 -> 18 [label="Define-Use"];
7 -> 26 [label="Define-Use"];
7 -> 34 [label="Define-Use"];
7 -> 46 [label="Define-Use"];
7 -> 63 [label="Define-Use"];
8 -> 7 [label="AST"];
8 -> 4 [label="AST"];
8 -> 6 [label="AST"];
11 -> 14 [label="Data Dep"];
13 -> 11 [label="AST"];
13 -> 12 [label="AST"];
14 -> 21 [label="Define-Use"];
14 -> 29 [label="Define-Use"];
14 -> 37 [label="Define-Use"];
14 -> 42 [label="Define-Use"];
14 -> 51 [label="Define-Use"];
15 -> 14 [label="AST"];
15 -> 9 [label="AST"];
15 -> 13 [label="AST"];
22 -> 20 [label="AST"];
22 -> 21 [label="AST"];
22 -> 19 [label="AST"];
23 -> 17 [label="AST"];
23 -> 18 [label="AST"];
23 -> 16 [label="AST"];
23 -> 22 [label="AST"];
30 -> 28 [label="AST"];
30 -> 29 [label="AST"];
30 -> 27 [label="AST"];
31 -> 25 [label="AST"];
31 -> 26 [label="AST"];
31 -> 24 [label="AST"];
31 -> 30 [label="AST"];
38 -> 36 [label="AST"];
38 -> 37 [label="AST"];
38 -> 35 [label="AST"];
39 -> 33 [label="AST"];
39 -> 34 [label="AST"];
39 -> 32 [label="AST"];
39 -> 38 [label="AST"];
43 -> 41 [label="AST"];
43 -> 42 [label="AST"];
43 -> 40 [label="AST"];
43 -> 54 [label="Control Dep"];
43 -> 53 [label="Control Dep"];
43 -> 44 [label="Control Dep"];
43 -> 48 [label="Control Dep"];
43 -> 46 [label="Control Dep"];
43 -> 52 [label="Control Dep"];
43 -> 49 [label="Control Dep"];
43 -> 51 [label="Control Dep"];
46 -> 47 [label="AST"];
48 -> 46 [label="AST"];
52 -> 50 [label="AST"];
52 -> 51 [label="AST"];
52 -> 49 [label="AST"];
53 -> 45 [label="AST"];
53 -> 48 [label="AST"];
53 -> 44 [label="AST"];
53 -> 52 [label="AST"];
53 -> 67 [label="Action"];
54 -> 53 [label="AST"];
55 -> 43 [label="AST"];
55 -> 54 [label="AST"];
56 -> 15 [label="AST"];
56 -> 23 [label="AST"];
56 -> 31 [label="AST"];
56 -> 39 [label="AST"];
56 -> 55 [label="AST"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
59 -> 60 [label="Control Dep"];
61 -> 59 [label="AST"];
61 -> 60 [label="AST"];
62 -> 56 [label="AST"];
62 -> 61 [label="AST"];
64 -> 63 [label="AST"];
65 -> 8 [label="AST"];
65 -> 62 [label="AST"];
65 -> 64 [label="AST"];
66 -> 1 [label="AST"];
66 -> 0 [label="AST"];
66 -> 2 [label="AST"];
66 -> 65 [label="AST"];
67 -> 68 [label="Action"];
}