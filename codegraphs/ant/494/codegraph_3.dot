digraph "getClassName#?,String" {
0 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
1 [label="2:CtVirtualElement@getClassName" shape=ellipse]
2 [label="2:CtParameterImpl@final String name" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@TypeException" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
6 [label="3:CtExecutableReferenceImpl@get(java.lang.String)" shape=ellipse]
7 [label="3:CtVirtualElement@get" shape=ellipse]
8 [label="3:CtFieldReadImpl@m_classNames" shape=ellipse]
9 [label="3:CtVariableReadImpl@name" shape=ellipse]
10 [label="3:CtInvocationImpl@((String) (m_classNames.get(name)))" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
12 [label="3:CtVirtualElement@className" shape=ellipse]
13 [label="3:CtLocalVariableImpl@final String className = ((String) (m_classNames.get(name)))" shape=ellipse]
14 [label="4:CtLiteralImpl@null" shape=ellipse]
15 [label="4:CtVariableReadImpl@className" shape=ellipse]
16 [label="4:CtBinaryOperatorImpl@null == className" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@TypeException" shape=ellipse]
18 [label="5:CtLiteralImpl@\"Malconfigured factory, no clasname for '\"" shape=ellipse]
19 [label="5:CtVariableReadImpl@name" shape=ellipse]
20 [label="5:CtBinaryOperatorImpl@(\"Malconfigured factory, no clasname for '\" + name)" shape=ellipse]
21 [label="5:CtLiteralImpl@\"'\"" shape=ellipse]
22 [label="5:CtBinaryOperatorImpl@(\"Malconfigured factory, no clasname for '\" + name) + \"'\"" shape=ellipse]
23 [label="5:CtConstructorCallImpl@new TypeException((\"Malconfigured factory, no clasname for '\" + name) + \"'\")" shape=ellipse]
24 [label="5:CtThrowImpl@throw new TypeException((\"Malconfigured factory, no clasname for '\" + name) + \"'\")" shape=ellipse]
25 [label="4:CtBlockImpl@\{
    throw new TypeException((\"Malconfigured factory, no clasname for '\" + name) + \"'\");
\}" shape=ellipse]
26 [label="4:CtIfImpl@if (null == className) \{
    throw new TypeException((\"Malconfigured factory, no clasname for '\" + name) + \"'\");
\}" shape=ellipse]
27 [label="7:CtVariableReadImpl@className" shape=ellipse]
28 [label="7:CtReturnImpl@return className" shape=ellipse]
29 [label="2:CtBlockImpl@\{
    final String className = ((String) (m_classNames.get(name)));
    if (null == className) \{
        throw new TypeException((\"Malconfigured factory, no clasname for '\" + name) + \"'\");
    \}
    return className;
\}" shape=ellipse]
30 [label="2:CtMethodImpl@private String getClassName(final String name) throws TypeException \{
    final String className = ((String) (m_classNames.get(name)));
    if (null == className) \{
        throw new TypeException((\"Malconfigured factory, no clasname for '\" + name) + \"'\");
    \}
    return className;
\}" shape=ellipse]
31 [label="5:Update@UPDATE" shape=ellipse]
32 [label="6:CtVariableReadImpl@message" shape=ellipse]
33 [label="5:Delete@DELETE" shape=ellipse]
34 [label="5:Insert@INSERT" shape=ellipse]
35 [label="5:CtLocalVariableImpl@final String message = REZ.getString(\"no-mapping.error\", name)" shape=ellipse]
36 [label="5:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
8 -> 12 [label="Data Dep"];
9 -> 12 [label="Data Dep"];
10 -> 7 [label="AST"];
10 -> 11 [label="AST"];
10 -> 8 [label="AST"];
10 -> 6 [label="AST"];
10 -> 9 [label="AST"];
12 -> 15 [label="Define-Use"];
12 -> 27 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 5 [label="AST"];
13 -> 10 [label="AST"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
16 -> 25 [label="Control Dep"];
16 -> 24 [label="Control Dep"];
16 -> 23 [label="Control Dep"];
16 -> 22 [label="Control Dep"];
16 -> 20 [label="Control Dep"];
16 -> 18 [label="Control Dep"];
16 -> 19 [label="Control Dep"];
16 -> 21 [label="Control Dep"];
19 -> 31 [label="Action"];
19 -> 36 [label="Action"];
20 -> 18 [label="AST"];
20 -> 19 [label="AST"];
22 -> 20 [label="AST"];
22 -> 21 [label="AST"];
22 -> 33 [label="Action"];
23 -> 22 [label="AST"];
24 -> 23 [label="AST"];
25 -> 24 [label="AST"];
25 -> 34 [label="Action"];
26 -> 16 [label="AST"];
26 -> 25 [label="AST"];
28 -> 27 [label="AST"];
29 -> 13 [label="AST"];
29 -> 26 [label="AST"];
29 -> 28 [label="AST"];
30 -> 1 [label="AST"];
30 -> 0 [label="AST"];
30 -> 2 [label="AST"];
30 -> 4 [label="AST"];
30 -> 29 [label="AST"];
31 -> 32 [label="Action"];
34 -> 35 [label="Action"];
36 -> 23 [label="Action"];
}