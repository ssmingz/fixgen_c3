digraph "ensureDirectoryFor#?,File" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@ensureDirectoryFor" shape=ellipse]
2 [label="2:CtParameterImpl@File targetFile" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
7 [label="3:CtExecutableReferenceImpl@getParent()" shape=ellipse]
8 [label="3:CtVirtualElement@getParent" shape=ellipse]
9 [label="3:CtVariableReadImpl@targetFile" shape=ellipse]
10 [label="3:CtInvocationImpl@targetFile.getParent()" shape=ellipse]
11 [label="3:CtConstructorCallImpl@new File(targetFile.getParent())" shape=ellipse]
12 [label="3:CtVirtualElement@directory" shape=ellipse]
13 [label="3:CtLocalVariableImpl@File directory = new File(targetFile.getParent())" shape=ellipse]
14 [label="4:CtExecutableReferenceImpl@exists()" shape=ellipse]
15 [label="4:CtVirtualElement@exists" shape=ellipse]
16 [label="4:CtVariableReadImpl@directory" shape=ellipse]
17 [label="4:CtInvocationImpl@directory.exists()" shape=ellipse]
18 [label="4:CtUnaryOperatorImpl@!directory.exists()" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@mkdirs()" shape=ellipse]
20 [label="5:CtVirtualElement@mkdirs" shape=ellipse]
21 [label="5:CtVariableReadImpl@directory" shape=ellipse]
22 [label="5:CtInvocationImpl@directory.mkdirs()" shape=ellipse]
23 [label="5:CtUnaryOperatorImpl@!directory.mkdirs()" shape=ellipse]
24 [label="6:CtTypeReferenceImpl@BuildException" shape=ellipse]
25 [label="6:CtLiteralImpl@\"Unable to create directory: \"" shape=ellipse]
26 [label="6:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
27 [label="6:CtVirtualElement@getAbsolutePath" shape=ellipse]
28 [label="6:CtVariableReadImpl@directory" shape=ellipse]
29 [label="6:CtInvocationImpl@directory.getAbsolutePath()" shape=ellipse]
30 [label="6:CtBinaryOperatorImpl@\"Unable to create directory: \" + directory.getAbsolutePath()" shape=ellipse]
31 [label="6:CtConstructorCallImpl@new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath())" shape=ellipse]
32 [label="6:CtThrowImpl@throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath())" shape=ellipse]
33 [label="5:CtBlockImpl@\{
    throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath());
\}" shape=ellipse]
34 [label="5:CtIfImpl@if (!directory.mkdirs()) \{
    throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath());
\}" shape=ellipse]
35 [label="4:CtBlockImpl@\{
    if (!directory.mkdirs()) \{
        throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath());
    \}
\}" shape=ellipse]
36 [label="4:CtIfImpl@if (!directory.exists()) \{
    if (!directory.mkdirs()) \{
        throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath());
    \}
\}" shape=ellipse]
37 [label="2:CtBlockImpl@\{
    File directory = new File(targetFile.getParent());
    if (!directory.exists()) \{
        if (!directory.mkdirs()) \{
            throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath());
        \}
    \}
\}" shape=ellipse]
38 [label="2:CtMethodImpl@private void ensureDirectoryFor(File targetFile) throws BuildException \{
    File directory = new File(targetFile.getParent());
    if (!directory.exists()) \{
        if (!directory.mkdirs()) \{
            throw new BuildException(\"Unable to create directory: \" + directory.getAbsolutePath());
        \}
    \}
\}" shape=ellipse]
39 [label="3:Update@UPDATE" shape=ellipse]
40 [label="3:CtInvocationImpl@fileUtils.getParentFile(targetFile)" shape=ellipse]
41 [label="3:Delete@DELETE" shape=ellipse]
42 [label="3:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
9 -> 12 [label="Data Dep"];
10 -> 8 [label="AST"];
10 -> 9 [label="AST"];
10 -> 7 [label="AST"];
10 -> 39 [label="Action"];
10 -> 42 [label="Action"];
11 -> 10 [label="AST"];
11 -> 41 [label="Action"];
12 -> 16 [label="Define-Use"];
12 -> 21 [label="Define-Use"];
12 -> 28 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 5 [label="AST"];
13 -> 11 [label="AST"];
17 -> 15 [label="AST"];
17 -> 16 [label="AST"];
17 -> 14 [label="AST"];
18 -> 17 [label="AST"];
18 -> 35 [label="Control Dep"];
18 -> 34 [label="Control Dep"];
18 -> 23 [label="Control Dep"];
18 -> 22 [label="Control Dep"];
18 -> 19 [label="Control Dep"];
18 -> 21 [label="Control Dep"];
22 -> 20 [label="AST"];
22 -> 21 [label="AST"];
22 -> 19 [label="AST"];
23 -> 22 [label="AST"];
23 -> 33 [label="Control Dep"];
23 -> 32 [label="Control Dep"];
23 -> 31 [label="Control Dep"];
23 -> 30 [label="Control Dep"];
23 -> 25 [label="Control Dep"];
23 -> 29 [label="Control Dep"];
23 -> 26 [label="Control Dep"];
23 -> 28 [label="Control Dep"];
29 -> 27 [label="AST"];
29 -> 28 [label="AST"];
29 -> 26 [label="AST"];
30 -> 25 [label="AST"];
30 -> 29 [label="AST"];
31 -> 30 [label="AST"];
32 -> 31 [label="AST"];
33 -> 32 [label="AST"];
34 -> 23 [label="AST"];
34 -> 33 [label="AST"];
35 -> 34 [label="AST"];
36 -> 18 [label="AST"];
36 -> 35 [label="AST"];
37 -> 13 [label="AST"];
37 -> 36 [label="AST"];
38 -> 1 [label="AST"];
38 -> 0 [label="AST"];
38 -> 2 [label="AST"];
38 -> 4 [label="AST"];
38 -> 37 [label="AST"];
39 -> 40 [label="Action"];
42 -> 13 [label="Action"];
}