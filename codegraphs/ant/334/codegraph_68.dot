digraph "matches#?,String,int" {
0 [label="2:CtTypeReferenceImpl@boolean" shape=ellipse]
1 [label="2:CtVirtualElement@matches" shape=ellipse]
2 [label="2:CtParameterImpl@String input" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="2:CtParameterImpl@int options" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
6 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@Pattern" shape=ellipse]
8 [label="4:CtExecutableReferenceImpl@getCompiledPattern(int)" shape=ellipse]
9 [label="4:CtVirtualElement@getCompiledPattern" shape=ellipse]
10 [label="4:CtVariableReadImpl@options" shape=ellipse]
11 [label="4:CtInvocationImpl@getCompiledPattern(options)" shape=ellipse]
12 [label="4:CtVirtualElement@p" shape=ellipse]
13 [label="4:CtLocalVariableImpl@Pattern p = getCompiledPattern(options)" shape=ellipse]
14 [label="5:CtExecutableReferenceImpl@find()" shape=ellipse]
15 [label="5:CtVirtualElement@find" shape=ellipse]
16 [label="5:CtExecutableReferenceImpl@matcher(java.lang.String)" shape=ellipse]
17 [label="5:CtVirtualElement@matcher" shape=ellipse]
18 [label="5:CtVariableReadImpl@p" shape=ellipse]
19 [label="5:CtVariableReadImpl@input" shape=ellipse]
20 [label="5:CtInvocationImpl@p.matcher(input)" shape=ellipse]
21 [label="5:CtInvocationImpl@p.matcher(input).find()" shape=ellipse]
22 [label="5:CtReturnImpl@return p.matcher(input).find()" shape=ellipse]
23 [label="3:CtBlockImpl@\{
    Pattern p = getCompiledPattern(options);
    return p.matcher(input).find();
\}" shape=ellipse]
24 [label="6:CtVirtualElement@e" shape=ellipse]
25 [label="6:CtTypeReferenceImpl@Exception" shape=ellipse]
26 [label="6:CtCatchVariableImpl@Exception e" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@BuildException" shape=ellipse]
28 [label="7:CtVariableReadImpl@e" shape=ellipse]
29 [label="7:CtConstructorCallImpl@new BuildException(e)" shape=ellipse]
30 [label="7:CtThrowImpl@throw new BuildException(e)" shape=ellipse]
31 [label="6:CtBlockImpl@\{
    throw new BuildException(e);
\}" shape=ellipse]
32 [label="6:CtCatchImpl@ catch (Exception e) \{
    throw new BuildException(e);
\}" shape=ellipse]
33 [label="3:CtTryImpl@try \{
    Pattern p = getCompiledPattern(options);
    return p.matcher(input).find();
\} catch (Exception e) \{
    throw new BuildException(e);
\}" shape=ellipse]
34 [label="2:CtBlockImpl@\{
    try \{
        Pattern p = getCompiledPattern(options);
        return p.matcher(input).find();
    \} catch (Exception e) \{
        throw new BuildException(e);
    \}
\}" shape=ellipse]
35 [label="2:CtMethodImpl@public boolean matches(String input, int options) throws BuildException \{
    try \{
        Pattern p = getCompiledPattern(options);
        return p.matcher(input).find();
    \} catch (Exception e) \{
        throw new BuildException(e);
    \}
\}" shape=ellipse]
36 [label="7:Update@UPDATE" shape=ellipse]
37 [label="7:CtConstructorCallImpl@new BuildException(\"Error\", e)" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
10 -> 12 [label="Data Dep"];
11 -> 9 [label="AST"];
11 -> 8 [label="AST"];
11 -> 10 [label="AST"];
12 -> 18 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 7 [label="AST"];
13 -> 11 [label="AST"];
20 -> 17 [label="AST"];
20 -> 18 [label="AST"];
20 -> 16 [label="AST"];
20 -> 19 [label="AST"];
21 -> 15 [label="AST"];
21 -> 20 [label="AST"];
21 -> 14 [label="AST"];
22 -> 21 [label="AST"];
23 -> 13 [label="AST"];
23 -> 22 [label="AST"];
24 -> 28 [label="Define-Use"];
26 -> 24 [label="AST"];
26 -> 25 [label="AST"];
26 -> 31 [label="Control Dep"];
26 -> 30 [label="Control Dep"];
26 -> 29 [label="Control Dep"];
26 -> 28 [label="Control Dep"];
29 -> 28 [label="AST"];
29 -> 36 [label="Action"];
30 -> 29 [label="AST"];
31 -> 30 [label="AST"];
32 -> 26 [label="AST"];
32 -> 31 [label="AST"];
33 -> 23 [label="AST"];
33 -> 32 [label="AST"];
34 -> 33 [label="AST"];
35 -> 1 [label="AST"];
35 -> 0 [label="AST"];
35 -> 2 [label="AST"];
35 -> 4 [label="AST"];
35 -> 6 [label="AST"];
35 -> 34 [label="AST"];
36 -> 37 [label="Action"];
}