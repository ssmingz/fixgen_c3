digraph "execute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@execute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
3 [label="4:CtTypeReferenceImpl@Date" shape=ellipse]
4 [label="4:CtTypeReferenceImpl@Date" shape=ellipse]
5 [label="4:CtConstructorCallImpl@new Date()" shape=ellipse]
6 [label="4:CtVirtualElement@d" shape=ellipse]
7 [label="4:CtLocalVariableImpl@Date d = new Date()" shape=ellipse]
8 [label="5:CtTypeReferenceImpl@SimpleDateFormat" shape=ellipse]
9 [label="5:CtTypeReferenceImpl@SimpleDateFormat" shape=ellipse]
10 [label="5:CtLiteralImpl@\"yyyyMMdd\"" shape=ellipse]
11 [label="5:CtConstructorCallImpl@new SimpleDateFormat(\"yyyyMMdd\")" shape=ellipse]
12 [label="5:CtVirtualElement@dstamp" shape=ellipse]
13 [label="5:CtLocalVariableImpl@SimpleDateFormat dstamp = new SimpleDateFormat(\"yyyyMMdd\")" shape=ellipse]
14 [label="6:CtExecutableReferenceImpl@setNewProperty()" shape=ellipse]
15 [label="6:CtVirtualElement@setNewProperty" shape=ellipse]
16 [label="6:CtFieldReadImpl@project" shape=ellipse]
17 [label="6:CtFieldReadImpl@prefix" shape=ellipse]
18 [label="6:CtLiteralImpl@\"DSTAMP\"" shape=ellipse]
19 [label="6:CtBinaryOperatorImpl@prefix + \"DSTAMP\"" shape=ellipse]
20 [label="6:CtExecutableReferenceImpl@format(Date)" shape=ellipse]
21 [label="6:CtVirtualElement@format" shape=ellipse]
22 [label="6:CtVariableReadImpl@dstamp" shape=ellipse]
23 [label="6:CtVariableReadImpl@d" shape=ellipse]
24 [label="6:CtInvocationImpl@dstamp.format(d)" shape=ellipse]
25 [label="6:CtInvocationImpl@project.setNewProperty(prefix + \"DSTAMP\", dstamp.format(d))" shape=ellipse]
26 [label="7:CtTypeReferenceImpl@SimpleDateFormat" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@SimpleDateFormat" shape=ellipse]
28 [label="7:CtLiteralImpl@\"HHmm\"" shape=ellipse]
29 [label="7:CtConstructorCallImpl@new SimpleDateFormat(\"HHmm\")" shape=ellipse]
30 [label="7:CtVirtualElement@tstamp" shape=ellipse]
31 [label="7:CtLocalVariableImpl@SimpleDateFormat tstamp = new SimpleDateFormat(\"HHmm\")" shape=ellipse]
32 [label="8:CtExecutableReferenceImpl@setNewProperty()" shape=ellipse]
33 [label="8:CtVirtualElement@setNewProperty" shape=ellipse]
34 [label="8:CtFieldReadImpl@project" shape=ellipse]
35 [label="8:CtFieldReadImpl@prefix" shape=ellipse]
36 [label="8:CtLiteralImpl@\"TSTAMP\"" shape=ellipse]
37 [label="8:CtBinaryOperatorImpl@prefix + \"TSTAMP\"" shape=ellipse]
38 [label="8:CtExecutableReferenceImpl@format(Date)" shape=ellipse]
39 [label="8:CtVirtualElement@format" shape=ellipse]
40 [label="8:CtVariableReadImpl@tstamp" shape=ellipse]
41 [label="8:CtVariableReadImpl@d" shape=ellipse]
42 [label="8:CtInvocationImpl@tstamp.format(d)" shape=ellipse]
43 [label="8:CtInvocationImpl@project.setNewProperty(prefix + \"TSTAMP\", tstamp.format(d))" shape=ellipse]
44 [label="9:CtTypeReferenceImpl@SimpleDateFormat" shape=ellipse]
45 [label="9:CtTypeReferenceImpl@SimpleDateFormat" shape=ellipse]
46 [label="9:CtLiteralImpl@\"MMMM d yyyy\"" shape=ellipse]
47 [label="9:CtFieldReadImpl@Locale.US" shape=ellipse]
48 [label="9:CtConstructorCallImpl@new SimpleDateFormat(\"MMMM d yyyy\", Locale.US)" shape=ellipse]
49 [label="9:CtVirtualElement@today" shape=ellipse]
50 [label="9:CtLocalVariableImpl@SimpleDateFormat today = new SimpleDateFormat(\"MMMM d yyyy\", Locale.US)" shape=ellipse]
51 [label="10:CtExecutableReferenceImpl@setNewProperty()" shape=ellipse]
52 [label="10:CtVirtualElement@setNewProperty" shape=ellipse]
53 [label="10:CtFieldReadImpl@project" shape=ellipse]
54 [label="10:CtFieldReadImpl@prefix" shape=ellipse]
55 [label="10:CtLiteralImpl@\"TODAY\"" shape=ellipse]
56 [label="10:CtBinaryOperatorImpl@prefix + \"TODAY\"" shape=ellipse]
57 [label="10:CtExecutableReferenceImpl@format(Date)" shape=ellipse]
58 [label="10:CtVirtualElement@format" shape=ellipse]
59 [label="10:CtVariableReadImpl@today" shape=ellipse]
60 [label="10:CtVariableReadImpl@d" shape=ellipse]
61 [label="10:CtInvocationImpl@today.format(d)" shape=ellipse]
62 [label="10:CtInvocationImpl@project.setNewProperty(prefix + \"TODAY\", today.format(d))" shape=ellipse]
63 [label="11:CtTypeReferenceImpl@Enumeration" shape=ellipse]
64 [label="11:CtExecutableReferenceImpl@elements()" shape=ellipse]
65 [label="11:CtVirtualElement@elements" shape=ellipse]
66 [label="11:CtFieldReadImpl@customFormats" shape=ellipse]
67 [label="11:CtInvocationImpl@customFormats.elements()" shape=ellipse]
68 [label="11:CtVirtualElement@i" shape=ellipse]
69 [label="11:CtLocalVariableImpl@Enumeration i = customFormats.elements()" shape=ellipse]
70 [label="12:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
71 [label="12:CtVirtualElement@hasMoreElements" shape=ellipse]
72 [label="12:CtVariableReadImpl@i" shape=ellipse]
73 [label="12:CtInvocationImpl@i.hasMoreElements()" shape=ellipse]
74 [label="13:CtTypeReferenceImpl@CustomFormat" shape=ellipse]
75 [label="13:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
76 [label="13:CtVirtualElement@nextElement" shape=ellipse]
77 [label="13:CtVariableReadImpl@i" shape=ellipse]
78 [label="13:CtInvocationImpl@((CustomFormat) (i.nextElement()))" shape=ellipse]
79 [label="13:CtTypeReferenceImpl@CustomFormat" shape=ellipse]
80 [label="13:CtVirtualElement@cts" shape=ellipse]
81 [label="13:CtLocalVariableImpl@CustomFormat cts = ((CustomFormat) (i.nextElement()))" shape=ellipse]
82 [label="14:CtExecutableReferenceImpl@execute(Date)" shape=ellipse]
83 [label="14:CtVirtualElement@execute" shape=ellipse]
84 [label="14:CtVariableReadImpl@cts" shape=ellipse]
85 [label="14:CtFieldReadImpl@project" shape=ellipse]
86 [label="14:CtVariableReadImpl@d" shape=ellipse]
87 [label="14:CtFieldReadImpl@location" shape=ellipse]
88 [label="14:CtInvocationImpl@cts.execute(project, d, location)" shape=ellipse]
89 [label="12:CtBlockImpl@\{
    CustomFormat cts = ((CustomFormat) (i.nextElement()));
    cts.execute(project, d, location);
\}" shape=ellipse]
90 [label="12:CtWhileImpl@while (i.hasMoreElements()) \{
    CustomFormat cts = ((CustomFormat) (i.nextElement()));
    cts.execute(project, d, location);
\} " shape=ellipse]
91 [label="3:CtBlockImpl@\{
    Date d = new Date();
    SimpleDateFormat dstamp = new SimpleDateFormat(\"yyyyMMdd\");
    project.setNewProperty(prefix + \"DSTAMP\", dstamp.format(d));
    SimpleDateFormat tstamp = new SimpleDateFormat(\"HHmm\");
    project.setNewProperty(prefix + \"TSTAMP\", tstamp.format(d));
    SimpleDateFormat today = new SimpleDateFormat(\"MMMM d yyyy\", Locale.US);
    project.setNewProperty(prefix + \"TODAY\", today.format(d));
    Enumeration i = customFormats.elements();
    while (i.hasMoreElements()) \{
        CustomFormat cts = ((CustomFormat) (i.nextElement()));
        cts.execute(project, d, location);
    \} 
\}" shape=ellipse]
92 [label="16:CtVirtualElement@e" shape=ellipse]
93 [label="16:CtTypeReferenceImpl@Exception" shape=ellipse]
94 [label="16:CtCatchVariableImpl@Exception e" shape=ellipse]
95 [label="17:CtTypeReferenceImpl@BuildException" shape=ellipse]
96 [label="17:CtVariableReadImpl@e" shape=ellipse]
97 [label="17:CtConstructorCallImpl@new BuildException(e)" shape=ellipse]
98 [label="17:CtThrowImpl@throw new BuildException(e)" shape=ellipse]
99 [label="16:CtBlockImpl@\{
    throw new BuildException(e);
\}" shape=ellipse]
100 [label="16:CtCatchImpl@ catch (Exception e) \{
    throw new BuildException(e);
\}" shape=ellipse]
101 [label="3:CtTryImpl@try \{
    Date d = new Date();
    SimpleDateFormat dstamp = new SimpleDateFormat(\"yyyyMMdd\");
    project.setNewProperty(prefix + \"DSTAMP\", dstamp.format(d));
    SimpleDateFormat tstamp = new SimpleDateFormat(\"HHmm\");
    project.setNewProperty(prefix + \"TSTAMP\", tstamp.format(d));
    SimpleDateFormat today = new SimpleDateFormat(\"MMMM d yyyy\", Locale.US);
    project.setNewProperty(prefix + \"TODAY\", today.format(d));
    Enumeration i = customFormats.elements();
    while (i.hasMoreElements()) \{
        CustomFormat cts = ((CustomFormat) (i.nextElement()));
        cts.execute(project, d, location);
    \} 
\} catch (Exception e) \{
    throw new BuildException(e);
\}" shape=ellipse]
102 [label="2:CtBlockImpl@\{
    try \{
        Date d = new Date();
        SimpleDateFormat dstamp = new SimpleDateFormat(\"yyyyMMdd\");
        project.setNewProperty(prefix + \"DSTAMP\", dstamp.format(d));
        SimpleDateFormat tstamp = new SimpleDateFormat(\"HHmm\");
        project.setNewProperty(prefix + \"TSTAMP\", tstamp.format(d));
        SimpleDateFormat today = new SimpleDateFormat(\"MMMM d yyyy\", Locale.US);
        project.setNewProperty(prefix + \"TODAY\", today.format(d));
        Enumeration i = customFormats.elements();
        while (i.hasMoreElements()) \{
            CustomFormat cts = ((CustomFormat) (i.nextElement()));
            cts.execute(project, d, location);
        \} 
    \} catch (Exception e) \{
        throw new BuildException(e);
    \}
\}" shape=ellipse]
103 [label="2:CtMethodImpl@public void execute() throws BuildException \{
    try \{
        Date d = new Date();
        SimpleDateFormat dstamp = new SimpleDateFormat(\"yyyyMMdd\");
        project.setNewProperty(prefix + \"DSTAMP\", dstamp.format(d));
        SimpleDateFormat tstamp = new SimpleDateFormat(\"HHmm\");
        project.setNewProperty(prefix + \"TSTAMP\", tstamp.format(d));
        SimpleDateFormat today = new SimpleDateFormat(\"MMMM d yyyy\", Locale.US);
        project.setNewProperty(prefix + \"TODAY\", today.format(d));
        Enumeration i = customFormats.elements();
        while (i.hasMoreElements()) \{
            CustomFormat cts = ((CustomFormat) (i.nextElement()));
            cts.execute(project, d, location);
        \} 
    \} catch (Exception e) \{
        throw new BuildException(e);
    \}
\}" shape=ellipse]
104 [label="17:Update@UPDATE" shape=ellipse]
105 [label="17:CtConstructorCallImpl@new BuildException(\"Error\", e)" shape=ellipse]
6 -> 23 [label="Define-Use"];
6 -> 41 [label="Define-Use"];
6 -> 60 [label="Define-Use"];
6 -> 86 [label="Define-Use"];
7 -> 6 [label="AST"];
7 -> 3 [label="AST"];
7 -> 5 [label="AST"];
11 -> 10 [label="AST"];
12 -> 22 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 8 [label="AST"];
13 -> 11 [label="AST"];
19 -> 17 [label="AST"];
19 -> 18 [label="AST"];
24 -> 21 [label="AST"];
24 -> 22 [label="AST"];
24 -> 20 [label="AST"];
24 -> 23 [label="AST"];
25 -> 15 [label="AST"];
25 -> 16 [label="AST"];
25 -> 14 [label="AST"];
25 -> 19 [label="AST"];
25 -> 24 [label="AST"];
29 -> 28 [label="AST"];
30 -> 40 [label="Define-Use"];
31 -> 30 [label="AST"];
31 -> 26 [label="AST"];
31 -> 29 [label="AST"];
37 -> 35 [label="AST"];
37 -> 36 [label="AST"];
42 -> 39 [label="AST"];
42 -> 40 [label="AST"];
42 -> 38 [label="AST"];
42 -> 41 [label="AST"];
43 -> 33 [label="AST"];
43 -> 34 [label="AST"];
43 -> 32 [label="AST"];
43 -> 37 [label="AST"];
43 -> 42 [label="AST"];
47 -> 49 [label="Data Dep"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
49 -> 59 [label="Define-Use"];
50 -> 49 [label="AST"];
50 -> 44 [label="AST"];
50 -> 48 [label="AST"];
56 -> 54 [label="AST"];
56 -> 55 [label="AST"];
61 -> 58 [label="AST"];
61 -> 59 [label="AST"];
61 -> 57 [label="AST"];
61 -> 60 [label="AST"];
62 -> 52 [label="AST"];
62 -> 53 [label="AST"];
62 -> 51 [label="AST"];
62 -> 56 [label="AST"];
62 -> 61 [label="AST"];
66 -> 68 [label="Data Dep"];
67 -> 65 [label="AST"];
67 -> 66 [label="AST"];
67 -> 64 [label="AST"];
68 -> 72 [label="Define-Use"];
68 -> 77 [label="Define-Use"];
69 -> 68 [label="AST"];
69 -> 63 [label="AST"];
69 -> 67 [label="AST"];
73 -> 71 [label="AST"];
73 -> 72 [label="AST"];
73 -> 70 [label="AST"];
73 -> 89 [label="Control Dep"];
73 -> 81 [label="Control Dep"];
73 -> 78 [label="Control Dep"];
73 -> 75 [label="Control Dep"];
73 -> 77 [label="Control Dep"];
73 -> 88 [label="Control Dep"];
73 -> 82 [label="Control Dep"];
73 -> 84 [label="Control Dep"];
73 -> 85 [label="Control Dep"];
73 -> 86 [label="Control Dep"];
73 -> 87 [label="Control Dep"];
77 -> 80 [label="Data Dep"];
78 -> 76 [label="AST"];
78 -> 79 [label="AST"];
78 -> 77 [label="AST"];
78 -> 75 [label="AST"];
80 -> 84 [label="Define-Use"];
81 -> 80 [label="AST"];
81 -> 74 [label="AST"];
81 -> 78 [label="AST"];
88 -> 83 [label="AST"];
88 -> 84 [label="AST"];
88 -> 82 [label="AST"];
88 -> 85 [label="AST"];
88 -> 86 [label="AST"];
88 -> 87 [label="AST"];
89 -> 81 [label="AST"];
89 -> 88 [label="AST"];
90 -> 73 [label="AST"];
90 -> 89 [label="AST"];
91 -> 7 [label="AST"];
91 -> 13 [label="AST"];
91 -> 25 [label="AST"];
91 -> 31 [label="AST"];
91 -> 43 [label="AST"];
91 -> 50 [label="AST"];
91 -> 62 [label="AST"];
91 -> 69 [label="AST"];
91 -> 90 [label="AST"];
92 -> 96 [label="Define-Use"];
94 -> 92 [label="AST"];
94 -> 93 [label="AST"];
94 -> 99 [label="Control Dep"];
94 -> 98 [label="Control Dep"];
94 -> 97 [label="Control Dep"];
94 -> 96 [label="Control Dep"];
97 -> 96 [label="AST"];
97 -> 104 [label="Action"];
98 -> 97 [label="AST"];
99 -> 98 [label="AST"];
100 -> 94 [label="AST"];
100 -> 99 [label="AST"];
101 -> 91 [label="AST"];
101 -> 100 [label="AST"];
102 -> 101 [label="AST"];
103 -> 1 [label="AST"];
103 -> 0 [label="AST"];
103 -> 2 [label="AST"];
103 -> 102 [label="AST"];
104 -> 105 [label="Action"];
}