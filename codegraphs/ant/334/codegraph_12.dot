digraph "execute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@execute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
3 [label="3:CtFieldReadImpl@outfile" shape=ellipse]
4 [label="3:CtLiteralImpl@null" shape=ellipse]
5 [label="3:CtBinaryOperatorImpl@outfile == null" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@BuildException" shape=ellipse]
7 [label="4:CtLiteralImpl@\"outfile attribute is required! Please set.\"" shape=ellipse]
8 [label="4:CtConstructorCallImpl@new BuildException(\"outfile attribute is required! Please set.\")" shape=ellipse]
9 [label="4:CtThrowImpl@throw new BuildException(\"outfile attribute is required! Please set.\")" shape=ellipse]
10 [label="3:CtBlockImpl@\{
    throw new BuildException(\"outfile attribute is required! Please set.\");
\}" shape=ellipse]
11 [label="3:CtIfImpl@if (outfile == null) \{
    throw new BuildException(\"outfile attribute is required! Please set.\");
\}" shape=ellipse]
12 [label="6:CtExecutableReferenceImpl@haveAddFiles()" shape=ellipse]
13 [label="6:CtVirtualElement@haveAddFiles" shape=ellipse]
14 [label="6:CtInvocationImpl@haveAddFiles()" shape=ellipse]
15 [label="6:CtUnaryOperatorImpl@(!haveAddFiles())" shape=ellipse]
16 [label="6:CtExecutableReferenceImpl@haveMergeFiles()" shape=ellipse]
17 [label="6:CtVirtualElement@haveMergeFiles" shape=ellipse]
18 [label="6:CtInvocationImpl@haveMergeFiles()" shape=ellipse]
19 [label="6:CtUnaryOperatorImpl@(!haveMergeFiles())" shape=ellipse]
20 [label="6:CtBinaryOperatorImpl@(!haveAddFiles()) && (!haveMergeFiles())" shape=ellipse]
21 [label="7:CtTypeReferenceImpl@BuildException" shape=ellipse]
22 [label="7:CtLiteralImpl@\"addfiles or mergefiles required! Please set.\"" shape=ellipse]
23 [label="7:CtConstructorCallImpl@new BuildException(\"addfiles or mergefiles required! Please set.\")" shape=ellipse]
24 [label="7:CtThrowImpl@throw new BuildException(\"addfiles or mergefiles required! Please set.\")" shape=ellipse]
25 [label="6:CtBlockImpl@\{
    throw new BuildException(\"addfiles or mergefiles required! Please set.\");
\}" shape=ellipse]
26 [label="6:CtIfImpl@if ((!haveAddFiles()) && (!haveMergeFiles())) \{
    throw new BuildException(\"addfiles or mergefiles required! Please set.\");
\}" shape=ellipse]
27 [label="9:CtExecutableReferenceImpl@log(<unknown>)" shape=ellipse]
28 [label="9:CtVirtualElement@log" shape=ellipse]
29 [label="9:CtLiteralImpl@\"linking:     \"" shape=ellipse]
30 [label="9:CtExecutableReferenceImpl@getPath()" shape=ellipse]
31 [label="9:CtVirtualElement@getPath" shape=ellipse]
32 [label="9:CtFieldReadImpl@outfile" shape=ellipse]
33 [label="9:CtInvocationImpl@outfile.getPath()" shape=ellipse]
34 [label="9:CtBinaryOperatorImpl@\"linking:     \" + outfile.getPath()" shape=ellipse]
35 [label="9:CtInvocationImpl@log(\"linking:     \" + outfile.getPath())" shape=ellipse]
36 [label="10:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
37 [label="10:CtVirtualElement@log" shape=ellipse]
38 [label="10:CtLiteralImpl@\"compression: \"" shape=ellipse]
39 [label="10:CtFieldReadImpl@compress" shape=ellipse]
40 [label="10:CtBinaryOperatorImpl@\"compression: \" + compress" shape=ellipse]
41 [label="10:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
42 [label="10:CtInvocationImpl@log(\"compression: \" + compress, MSG_VERBOSE)" shape=ellipse]
43 [label="11:CtTypeReferenceImpl@jlink" shape=ellipse]
44 [label="11:CtTypeReferenceImpl@jlink" shape=ellipse]
45 [label="11:CtConstructorCallImpl@new jlink()" shape=ellipse]
46 [label="11:CtVirtualElement@linker" shape=ellipse]
47 [label="11:CtLocalVariableImpl@jlink linker = new jlink()" shape=ellipse]
48 [label="12:CtExecutableReferenceImpl@setOutfile()" shape=ellipse]
49 [label="12:CtVirtualElement@setOutfile" shape=ellipse]
50 [label="12:CtVariableReadImpl@linker" shape=ellipse]
51 [label="12:CtExecutableReferenceImpl@getPath()" shape=ellipse]
52 [label="12:CtVirtualElement@getPath" shape=ellipse]
53 [label="12:CtFieldReadImpl@outfile" shape=ellipse]
54 [label="12:CtInvocationImpl@outfile.getPath()" shape=ellipse]
55 [label="12:CtInvocationImpl@linker.setOutfile(outfile.getPath())" shape=ellipse]
56 [label="13:CtExecutableReferenceImpl@setCompression()" shape=ellipse]
57 [label="13:CtVirtualElement@setCompression" shape=ellipse]
58 [label="13:CtVariableReadImpl@linker" shape=ellipse]
59 [label="13:CtFieldReadImpl@compress" shape=ellipse]
60 [label="13:CtInvocationImpl@linker.setCompression(compress)" shape=ellipse]
61 [label="14:CtExecutableReferenceImpl@haveMergeFiles()" shape=ellipse]
62 [label="14:CtVirtualElement@haveMergeFiles" shape=ellipse]
63 [label="14:CtInvocationImpl@haveMergeFiles()" shape=ellipse]
64 [label="15:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
65 [label="15:CtVirtualElement@log" shape=ellipse]
66 [label="15:CtLiteralImpl@\"merge files: \"" shape=ellipse]
67 [label="15:CtExecutableReferenceImpl@toString()" shape=ellipse]
68 [label="15:CtVirtualElement@toString" shape=ellipse]
69 [label="15:CtFieldReadImpl@mergefiles" shape=ellipse]
70 [label="15:CtInvocationImpl@mergefiles.toString()" shape=ellipse]
71 [label="15:CtBinaryOperatorImpl@\"merge files: \" + mergefiles.toString()" shape=ellipse]
72 [label="15:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
73 [label="15:CtInvocationImpl@log(\"merge files: \" + mergefiles.toString(), MSG_VERBOSE)" shape=ellipse]
74 [label="16:CtExecutableReferenceImpl@addMergeFiles()" shape=ellipse]
75 [label="16:CtVirtualElement@addMergeFiles" shape=ellipse]
76 [label="16:CtVariableReadImpl@linker" shape=ellipse]
77 [label="16:CtExecutableReferenceImpl@list()" shape=ellipse]
78 [label="16:CtVirtualElement@list" shape=ellipse]
79 [label="16:CtFieldReadImpl@mergefiles" shape=ellipse]
80 [label="16:CtInvocationImpl@mergefiles.list()" shape=ellipse]
81 [label="16:CtInvocationImpl@linker.addMergeFiles(mergefiles.list())" shape=ellipse]
82 [label="14:CtBlockImpl@\{
    log(\"merge files: \" + mergefiles.toString(), MSG_VERBOSE);
    linker.addMergeFiles(mergefiles.list());
\}" shape=ellipse]
83 [label="14:CtIfImpl@if (haveMergeFiles()) \{
    log(\"merge files: \" + mergefiles.toString(), MSG_VERBOSE);
    linker.addMergeFiles(mergefiles.list());
\}" shape=ellipse]
84 [label="18:CtExecutableReferenceImpl@haveAddFiles()" shape=ellipse]
85 [label="18:CtVirtualElement@haveAddFiles" shape=ellipse]
86 [label="18:CtInvocationImpl@haveAddFiles()" shape=ellipse]
87 [label="19:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
88 [label="19:CtVirtualElement@log" shape=ellipse]
89 [label="19:CtLiteralImpl@\"add files: \"" shape=ellipse]
90 [label="19:CtExecutableReferenceImpl@toString()" shape=ellipse]
91 [label="19:CtVirtualElement@toString" shape=ellipse]
92 [label="19:CtFieldReadImpl@addfiles" shape=ellipse]
93 [label="19:CtInvocationImpl@addfiles.toString()" shape=ellipse]
94 [label="19:CtBinaryOperatorImpl@\"add files: \" + addfiles.toString()" shape=ellipse]
95 [label="19:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
96 [label="19:CtInvocationImpl@log(\"add files: \" + addfiles.toString(), MSG_VERBOSE)" shape=ellipse]
97 [label="20:CtExecutableReferenceImpl@addAddFiles()" shape=ellipse]
98 [label="20:CtVirtualElement@addAddFiles" shape=ellipse]
99 [label="20:CtVariableReadImpl@linker" shape=ellipse]
100 [label="20:CtExecutableReferenceImpl@list()" shape=ellipse]
101 [label="20:CtVirtualElement@list" shape=ellipse]
102 [label="20:CtFieldReadImpl@addfiles" shape=ellipse]
103 [label="20:CtInvocationImpl@addfiles.list()" shape=ellipse]
104 [label="20:CtInvocationImpl@linker.addAddFiles(addfiles.list())" shape=ellipse]
105 [label="18:CtBlockImpl@\{
    log(\"add files: \" + addfiles.toString(), MSG_VERBOSE);
    linker.addAddFiles(addfiles.list());
\}" shape=ellipse]
106 [label="18:CtIfImpl@if (haveAddFiles()) \{
    log(\"add files: \" + addfiles.toString(), MSG_VERBOSE);
    linker.addAddFiles(addfiles.list());
\}" shape=ellipse]
107 [label="23:CtExecutableReferenceImpl@link()" shape=ellipse]
108 [label="23:CtVirtualElement@link" shape=ellipse]
109 [label="23:CtVariableReadImpl@linker" shape=ellipse]
110 [label="23:CtInvocationImpl@linker.link()" shape=ellipse]
111 [label="22:CtBlockImpl@\{
    linker.link();
\}" shape=ellipse]
112 [label="24:CtVirtualElement@ex" shape=ellipse]
113 [label="24:CtTypeReferenceImpl@Exception" shape=ellipse]
114 [label="24:CtCatchVariableImpl@Exception ex" shape=ellipse]
115 [label="25:CtTypeReferenceImpl@BuildException" shape=ellipse]
116 [label="25:CtVariableReadImpl@ex" shape=ellipse]
117 [label="25:CtConstructorCallImpl@new BuildException(ex)" shape=ellipse]
118 [label="25:CtThrowImpl@throw new BuildException(ex)" shape=ellipse]
119 [label="24:CtBlockImpl@\{
    throw new BuildException(ex);
\}" shape=ellipse]
120 [label="24:CtCatchImpl@ catch (Exception ex) \{
    throw new BuildException(ex);
\}" shape=ellipse]
121 [label="22:CtTryImpl@try \{
    linker.link();
\} catch (Exception ex) \{
    throw new BuildException(ex);
\}" shape=ellipse]
122 [label="2:CtBlockImpl@\{
    if (outfile == null) \{
        throw new BuildException(\"outfile attribute is required! Please set.\");
    \}
    if ((!haveAddFiles()) && (!haveMergeFiles())) \{
        throw new BuildException(\"addfiles or mergefiles required! Please set.\");
    \}
    log(\"linking:     \" + outfile.getPath());
    log(\"compression: \" + compress, MSG_VERBOSE);
    jlink linker = new jlink();
    linker.setOutfile(outfile.getPath());
    linker.setCompression(compress);
    if (haveMergeFiles()) \{
        log(\"merge files: \" + mergefiles.toString(), MSG_VERBOSE);
        linker.addMergeFiles(mergefiles.list());
    \}
    if (haveAddFiles()) \{
        log(\"add files: \" + addfiles.toString(), MSG_VERBOSE);
        linker.addAddFiles(addfiles.list());
    \}
    try \{
        linker.link();
    \} catch (Exception ex) \{
        throw new BuildException(ex);
    \}
\}" shape=ellipse]
123 [label="2:CtMethodImpl@public void execute() throws BuildException \{
    if (outfile == null) \{
        throw new BuildException(\"outfile attribute is required! Please set.\");
    \}
    if ((!haveAddFiles()) && (!haveMergeFiles())) \{
        throw new BuildException(\"addfiles or mergefiles required! Please set.\");
    \}
    log(\"linking:     \" + outfile.getPath());
    log(\"compression: \" + compress, MSG_VERBOSE);
    jlink linker = new jlink();
    linker.setOutfile(outfile.getPath());
    linker.setCompression(compress);
    if (haveMergeFiles()) \{
        log(\"merge files: \" + mergefiles.toString(), MSG_VERBOSE);
        linker.addMergeFiles(mergefiles.list());
    \}
    if (haveAddFiles()) \{
        log(\"add files: \" + addfiles.toString(), MSG_VERBOSE);
        linker.addAddFiles(addfiles.list());
    \}
    try \{
        linker.link();
    \} catch (Exception ex) \{
        throw new BuildException(ex);
    \}
\}" shape=ellipse]
124 [label="25:Update@UPDATE" shape=ellipse]
125 [label="25:CtConstructorCallImpl@new BuildException(\"Error\", ex)" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 4 [label="AST"];
5 -> 10 [label="Control Dep"];
5 -> 9 [label="Control Dep"];
5 -> 8 [label="Control Dep"];
5 -> 7 [label="Control Dep"];
8 -> 7 [label="AST"];
9 -> 8 [label="AST"];
10 -> 9 [label="AST"];
11 -> 5 [label="AST"];
11 -> 10 [label="AST"];
14 -> 13 [label="AST"];
14 -> 12 [label="AST"];
15 -> 14 [label="AST"];
18 -> 17 [label="AST"];
18 -> 16 [label="AST"];
19 -> 18 [label="AST"];
20 -> 15 [label="AST"];
20 -> 19 [label="AST"];
20 -> 25 [label="Control Dep"];
20 -> 24 [label="Control Dep"];
20 -> 23 [label="Control Dep"];
20 -> 22 [label="Control Dep"];
23 -> 22 [label="AST"];
24 -> 23 [label="AST"];
25 -> 24 [label="AST"];
26 -> 20 [label="AST"];
26 -> 25 [label="AST"];
33 -> 31 [label="AST"];
33 -> 32 [label="AST"];
33 -> 30 [label="AST"];
34 -> 29 [label="AST"];
34 -> 33 [label="AST"];
35 -> 28 [label="AST"];
35 -> 27 [label="AST"];
35 -> 34 [label="AST"];
40 -> 38 [label="AST"];
40 -> 39 [label="AST"];
42 -> 37 [label="AST"];
42 -> 36 [label="AST"];
42 -> 40 [label="AST"];
42 -> 41 [label="AST"];
46 -> 50 [label="Define-Use"];
46 -> 58 [label="Define-Use"];
46 -> 76 [label="Define-Use"];
46 -> 99 [label="Define-Use"];
46 -> 109 [label="Define-Use"];
47 -> 46 [label="AST"];
47 -> 43 [label="AST"];
47 -> 45 [label="AST"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
54 -> 51 [label="AST"];
55 -> 49 [label="AST"];
55 -> 50 [label="AST"];
55 -> 48 [label="AST"];
55 -> 54 [label="AST"];
60 -> 57 [label="AST"];
60 -> 58 [label="AST"];
60 -> 56 [label="AST"];
60 -> 59 [label="AST"];
63 -> 62 [label="AST"];
63 -> 61 [label="AST"];
63 -> 82 [label="Control Dep"];
63 -> 73 [label="Control Dep"];
63 -> 64 [label="Control Dep"];
63 -> 71 [label="Control Dep"];
63 -> 66 [label="Control Dep"];
63 -> 70 [label="Control Dep"];
63 -> 67 [label="Control Dep"];
63 -> 69 [label="Control Dep"];
63 -> 72 [label="Control Dep"];
63 -> 81 [label="Control Dep"];
63 -> 74 [label="Control Dep"];
63 -> 76 [label="Control Dep"];
63 -> 80 [label="Control Dep"];
63 -> 77 [label="Control Dep"];
63 -> 79 [label="Control Dep"];
70 -> 68 [label="AST"];
70 -> 69 [label="AST"];
70 -> 67 [label="AST"];
71 -> 66 [label="AST"];
71 -> 70 [label="AST"];
73 -> 65 [label="AST"];
73 -> 64 [label="AST"];
73 -> 71 [label="AST"];
73 -> 72 [label="AST"];
80 -> 78 [label="AST"];
80 -> 79 [label="AST"];
80 -> 77 [label="AST"];
81 -> 75 [label="AST"];
81 -> 76 [label="AST"];
81 -> 74 [label="AST"];
81 -> 80 [label="AST"];
82 -> 73 [label="AST"];
82 -> 81 [label="AST"];
83 -> 63 [label="AST"];
83 -> 82 [label="AST"];
86 -> 85 [label="AST"];
86 -> 84 [label="AST"];
86 -> 105 [label="Control Dep"];
86 -> 96 [label="Control Dep"];
86 -> 87 [label="Control Dep"];
86 -> 94 [label="Control Dep"];
86 -> 89 [label="Control Dep"];
86 -> 93 [label="Control Dep"];
86 -> 90 [label="Control Dep"];
86 -> 92 [label="Control Dep"];
86 -> 95 [label="Control Dep"];
86 -> 104 [label="Control Dep"];
86 -> 97 [label="Control Dep"];
86 -> 99 [label="Control Dep"];
86 -> 103 [label="Control Dep"];
86 -> 100 [label="Control Dep"];
86 -> 102 [label="Control Dep"];
93 -> 91 [label="AST"];
93 -> 92 [label="AST"];
93 -> 90 [label="AST"];
94 -> 89 [label="AST"];
94 -> 93 [label="AST"];
96 -> 88 [label="AST"];
96 -> 87 [label="AST"];
96 -> 94 [label="AST"];
96 -> 95 [label="AST"];
103 -> 101 [label="AST"];
103 -> 102 [label="AST"];
103 -> 100 [label="AST"];
104 -> 98 [label="AST"];
104 -> 99 [label="AST"];
104 -> 97 [label="AST"];
104 -> 103 [label="AST"];
105 -> 96 [label="AST"];
105 -> 104 [label="AST"];
106 -> 86 [label="AST"];
106 -> 105 [label="AST"];
110 -> 108 [label="AST"];
110 -> 109 [label="AST"];
110 -> 107 [label="AST"];
111 -> 110 [label="AST"];
112 -> 116 [label="Define-Use"];
114 -> 112 [label="AST"];
114 -> 113 [label="AST"];
114 -> 119 [label="Control Dep"];
114 -> 118 [label="Control Dep"];
114 -> 117 [label="Control Dep"];
114 -> 116 [label="Control Dep"];
117 -> 116 [label="AST"];
117 -> 124 [label="Action"];
118 -> 117 [label="AST"];
119 -> 118 [label="AST"];
120 -> 114 [label="AST"];
120 -> 119 [label="AST"];
121 -> 111 [label="AST"];
121 -> 120 [label="AST"];
122 -> 11 [label="AST"];
122 -> 26 [label="AST"];
122 -> 35 [label="AST"];
122 -> 42 [label="AST"];
122 -> 47 [label="AST"];
122 -> 55 [label="AST"];
122 -> 60 [label="AST"];
122 -> 83 [label="AST"];
122 -> 106 [label="AST"];
122 -> 121 [label="AST"];
123 -> 1 [label="AST"];
123 -> 0 [label="AST"];
123 -> 2 [label="AST"];
123 -> 122 [label="AST"];
124 -> 125 [label="Action"];
}