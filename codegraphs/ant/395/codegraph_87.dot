digraph "touch#?,File" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@touch" shape=ellipse]
2 [label="2:CtParameterImpl@File file" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@TaskException" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@canWrite()" shape=ellipse]
6 [label="3:CtVirtualElement@canWrite" shape=ellipse]
7 [label="3:CtVariableReadImpl@file" shape=ellipse]
8 [label="3:CtInvocationImpl@file.canWrite()" shape=ellipse]
9 [label="3:CtUnaryOperatorImpl@!file.canWrite()" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@TaskException" shape=ellipse]
11 [label="4:CtLiteralImpl@\"Can not change modification date of read-only file \"" shape=ellipse]
12 [label="4:CtVariableReadImpl@file" shape=ellipse]
13 [label="4:CtBinaryOperatorImpl@\"Can not change modification date of read-only file \" + file" shape=ellipse]
14 [label="4:CtConstructorCallImpl@new TaskException(\"Can not change modification date of read-only file \" + file)" shape=ellipse]
15 [label="4:CtThrowImpl@throw new TaskException(\"Can not change modification date of read-only file \" + file)" shape=ellipse]
16 [label="3:CtBlockImpl@\{
    throw new TaskException(\"Can not change modification date of read-only file \" + file);
\}" shape=ellipse]
17 [label="3:CtIfImpl@if (!file.canWrite()) \{
    throw new TaskException(\"Can not change modification date of read-only file \" + file);
\}" shape=ellipse]
18 [label="6:CtExecutableReferenceImpl@getJavaVersion()" shape=ellipse]
19 [label="6:CtVirtualElement@getJavaVersion" shape=ellipse]
20 [label="6:CtFieldReadImpl@project" shape=ellipse]
21 [label="6:CtInvocationImpl@project.getJavaVersion()" shape=ellipse]
22 [label="6:CtFieldReadImpl@Project.JAVA_1_1" shape=ellipse]
23 [label="6:CtBinaryOperatorImpl@project.getJavaVersion() == Project.JAVA_1_1" shape=ellipse]
24 [label="7:CtReturnImpl@return" shape=ellipse]
25 [label="6:CtBlockImpl@\{
    return;
\}" shape=ellipse]
26 [label="6:CtIfImpl@if (project.getJavaVersion() == Project.JAVA_1_1) \{
    return;
\}" shape=ellipse]
27 [label="9:CtTypeReferenceImpl@long" shape=ellipse]
28 [label="9:CtFieldReadImpl@millis" shape=ellipse]
29 [label="9:CtLiteralImpl@0" shape=ellipse]
30 [label="9:CtBinaryOperatorImpl@millis < 0" shape=ellipse]
31 [label="9:CtExecutableReferenceImpl@currentTimeMillis()" shape=ellipse]
32 [label="9:CtVirtualElement@currentTimeMillis" shape=ellipse]
33 [label="9:CtTypeAccessImpl@System" shape=ellipse]
34 [label="9:CtInvocationImpl@System.currentTimeMillis()" shape=ellipse]
35 [label="9:CtFieldReadImpl@millis" shape=ellipse]
36 [label="9:CtConditionalImpl@(millis < 0) ? System.currentTimeMillis() : millis" shape=ellipse]
37 [label="9:CtVirtualElement@time" shape=ellipse]
38 [label="9:CtLocalVariableImpl@final long time = (millis < 0) ? System.currentTimeMillis() : millis" shape=ellipse]
39 [label="10:CtExecutableReferenceImpl@setLastModified(long)" shape=ellipse]
40 [label="10:CtVirtualElement@setLastModified" shape=ellipse]
41 [label="10:CtVariableReadImpl@file" shape=ellipse]
42 [label="10:CtVariableReadImpl@time" shape=ellipse]
43 [label="10:CtInvocationImpl@file.setLastModified(time)" shape=ellipse]
44 [label="2:CtBlockImpl@\{
    if (!file.canWrite()) \{
        throw new TaskException(\"Can not change modification date of read-only file \" + file);
    \}
    if (project.getJavaVersion() == Project.JAVA_1_1) \{
        return;
    \}
    final long time = (millis < 0) ? System.currentTimeMillis() : millis;
    file.setLastModified(time);
\}" shape=ellipse]
45 [label="2:CtMethodImpl@protected void touch(File file) throws TaskException \{
    if (!file.canWrite()) \{
        throw new TaskException(\"Can not change modification date of read-only file \" + file);
    \}
    if (project.getJavaVersion() == Project.JAVA_1_1) \{
        return;
    \}
    final long time = (millis < 0) ? System.currentTimeMillis() : millis;
    file.setLastModified(time);
\}" shape=ellipse]
46 [label="6:Delete@DELETE" shape=ellipse]
47 [label="6:Insert@INSERT" shape=ellipse]
48 [label="6:CtInvocationImpl@getProject()" shape=ellipse]
2 -> 3 [label="AST"];
8 -> 6 [label="AST"];
8 -> 7 [label="AST"];
8 -> 5 [label="AST"];
9 -> 8 [label="AST"];
9 -> 16 [label="Control Dep"];
9 -> 15 [label="Control Dep"];
9 -> 14 [label="Control Dep"];
9 -> 13 [label="Control Dep"];
9 -> 11 [label="Control Dep"];
9 -> 12 [label="Control Dep"];
13 -> 11 [label="AST"];
13 -> 12 [label="AST"];
14 -> 13 [label="AST"];
15 -> 14 [label="AST"];
16 -> 15 [label="AST"];
17 -> 9 [label="AST"];
17 -> 16 [label="AST"];
20 -> 46 [label="Action"];
21 -> 19 [label="AST"];
21 -> 20 [label="AST"];
21 -> 18 [label="AST"];
21 -> 47 [label="Action"];
23 -> 21 [label="AST"];
23 -> 22 [label="AST"];
23 -> 25 [label="Control Dep"];
23 -> 24 [label="Control Dep"];
25 -> 24 [label="AST"];
26 -> 23 [label="AST"];
26 -> 25 [label="AST"];
28 -> 37 [label="Data Dep"];
30 -> 28 [label="AST"];
30 -> 29 [label="AST"];
30 -> 34 [label="Control Dep"];
30 -> 31 [label="Control Dep"];
30 -> 33 [label="Control Dep"];
30 -> 35 [label="Control Dep"];
34 -> 32 [label="AST"];
34 -> 33 [label="AST"];
34 -> 31 [label="AST"];
35 -> 37 [label="Data Dep"];
36 -> 30 [label="AST"];
36 -> 34 [label="AST"];
36 -> 35 [label="AST"];
37 -> 42 [label="Define-Use"];
38 -> 37 [label="AST"];
38 -> 27 [label="AST"];
38 -> 36 [label="AST"];
43 -> 40 [label="AST"];
43 -> 41 [label="AST"];
43 -> 39 [label="AST"];
43 -> 42 [label="AST"];
44 -> 17 [label="AST"];
44 -> 26 [label="AST"];
44 -> 38 [label="AST"];
44 -> 43 [label="AST"];
45 -> 1 [label="AST"];
45 -> 0 [label="AST"];
45 -> 2 [label="AST"];
45 -> 4 [label="AST"];
45 -> 44 [label="AST"];
47 -> 48 [label="Action"];
}