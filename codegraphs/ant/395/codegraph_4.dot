digraph "cleanUp#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@cleanUp" shape=ellipse]
2 [label="3:CtFieldReadImpl@optionsFile" shape=ellipse]
3 [label="3:CtLiteralImpl@null" shape=ellipse]
4 [label="3:CtBinaryOperatorImpl@optionsFile != null" shape=ellipse]
5 [label="4:CtExecutableReferenceImpl@delete()" shape=ellipse]
6 [label="4:CtVirtualElement@delete" shape=ellipse]
7 [label="4:CtFieldReadImpl@optionsFile" shape=ellipse]
8 [label="4:CtInvocationImpl@optionsFile.delete()" shape=ellipse]
9 [label="5:CtFieldWriteImpl@optionsFile" shape=ellipse]
10 [label="5:CtLiteralImpl@null" shape=ellipse]
11 [label="5:CtAssignmentImpl@optionsFile = null" shape=ellipse]
12 [label="3:CtBlockImpl@\{
    optionsFile.delete();
    optionsFile = null;
\}" shape=ellipse]
13 [label="3:CtIfImpl@if (optionsFile != null) \{
    optionsFile.delete();
    optionsFile = null;
\}" shape=ellipse]
14 [label="7:CtFieldReadImpl@cleanup" shape=ellipse]
15 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
16 [label="8:CtExecutableReferenceImpl@getName()" shape=ellipse]
17 [label="8:CtVirtualElement@getName" shape=ellipse]
18 [label="8:CtFieldReadImpl@target" shape=ellipse]
19 [label="8:CtInvocationImpl@target.getName()" shape=ellipse]
20 [label="8:CtVirtualElement@name" shape=ellipse]
21 [label="8:CtLocalVariableImpl@String name = target.getName()" shape=ellipse]
22 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
23 [label="9:CtExecutableReferenceImpl@length()" shape=ellipse]
24 [label="9:CtVirtualElement@length" shape=ellipse]
25 [label="9:CtVariableReadImpl@name" shape=ellipse]
26 [label="9:CtInvocationImpl@name.length()" shape=ellipse]
27 [label="9:CtExecutableReferenceImpl@length()" shape=ellipse]
28 [label="9:CtVirtualElement@length" shape=ellipse]
29 [label="9:CtLiteralImpl@\".jj\"" shape=ellipse]
30 [label="9:CtInvocationImpl@\".jj\".length()" shape=ellipse]
31 [label="9:CtBinaryOperatorImpl@name.length() - \".jj\".length()" shape=ellipse]
32 [label="9:CtVirtualElement@pos" shape=ellipse]
33 [label="9:CtLocalVariableImpl@int pos = name.length() - \".jj\".length()" shape=ellipse]
34 [label="10:CtVariableWriteImpl@name" shape=ellipse]
35 [label="10:CtLiteralImpl@\"__jj\"" shape=ellipse]
36 [label="10:CtExecutableReferenceImpl@substring(int,int)" shape=ellipse]
37 [label="10:CtVirtualElement@substring" shape=ellipse]
38 [label="10:CtVariableReadImpl@name" shape=ellipse]
39 [label="10:CtLiteralImpl@0" shape=ellipse]
40 [label="10:CtVariableReadImpl@pos" shape=ellipse]
41 [label="10:CtInvocationImpl@name.substring(0, pos)" shape=ellipse]
42 [label="10:CtBinaryOperatorImpl@(\"__jj\" + name.substring(0, pos))" shape=ellipse]
43 [label="10:CtLiteralImpl@\".sunjj\"" shape=ellipse]
44 [label="10:CtBinaryOperatorImpl@(\"__jj\" + name.substring(0, pos)) + \".sunjj\"" shape=ellipse]
45 [label="10:CtAssignmentImpl@name = (\"__jj\" + name.substring(0, pos)) + \".sunjj\"" shape=ellipse]
46 [label="11:CtTypeReferenceImpl@File" shape=ellipse]
47 [label="11:CtTypeReferenceImpl@File" shape=ellipse]
48 [label="11:CtExecutableReferenceImpl@getParent()" shape=ellipse]
49 [label="11:CtVirtualElement@getParent" shape=ellipse]
50 [label="11:CtFieldReadImpl@target" shape=ellipse]
51 [label="11:CtInvocationImpl@target.getParent()" shape=ellipse]
52 [label="11:CtVariableReadImpl@name" shape=ellipse]
53 [label="11:CtConstructorCallImpl@new File(target.getParent(), name)" shape=ellipse]
54 [label="11:CtVirtualElement@sunjj" shape=ellipse]
55 [label="11:CtLocalVariableImpl@final File sunjj = new File(target.getParent(), name)" shape=ellipse]
56 [label="12:CtExecutableReferenceImpl@exists()" shape=ellipse]
57 [label="12:CtVirtualElement@exists" shape=ellipse]
58 [label="12:CtVariableReadImpl@sunjj" shape=ellipse]
59 [label="12:CtInvocationImpl@sunjj.exists()" shape=ellipse]
60 [label="13:CtExecutableReferenceImpl@log()" shape=ellipse]
61 [label="13:CtVirtualElement@log" shape=ellipse]
62 [label="13:CtFieldReadImpl@project" shape=ellipse]
63 [label="13:CtLiteralImpl@\"Removing stale file: \"" shape=ellipse]
64 [label="13:CtExecutableReferenceImpl@getName()" shape=ellipse]
65 [label="13:CtVirtualElement@getName" shape=ellipse]
66 [label="13:CtVariableReadImpl@sunjj" shape=ellipse]
67 [label="13:CtInvocationImpl@sunjj.getName()" shape=ellipse]
68 [label="13:CtBinaryOperatorImpl@\"Removing stale file: \" + sunjj.getName()" shape=ellipse]
69 [label="13:CtInvocationImpl@project.log(\"Removing stale file: \" + sunjj.getName())" shape=ellipse]
70 [label="14:CtExecutableReferenceImpl@delete()" shape=ellipse]
71 [label="14:CtVirtualElement@delete" shape=ellipse]
72 [label="14:CtVariableReadImpl@sunjj" shape=ellipse]
73 [label="14:CtInvocationImpl@sunjj.delete()" shape=ellipse]
74 [label="12:CtBlockImpl@\{
    project.log(\"Removing stale file: \" + sunjj.getName());
    sunjj.delete();
\}" shape=ellipse]
75 [label="12:CtIfImpl@if (sunjj.exists()) \{
    project.log(\"Removing stale file: \" + sunjj.getName());
    sunjj.delete();
\}" shape=ellipse]
76 [label="7:CtBlockImpl@\{
    String name = target.getName();
    int pos = name.length() - \".jj\".length();
    name = (\"__jj\" + name.substring(0, pos)) + \".sunjj\";
    final File sunjj = new File(target.getParent(), name);
    if (sunjj.exists()) \{
        project.log(\"Removing stale file: \" + sunjj.getName());
        sunjj.delete();
    \}
\}" shape=ellipse]
77 [label="7:CtIfImpl@if (cleanup) \{
    String name = target.getName();
    int pos = name.length() - \".jj\".length();
    name = (\"__jj\" + name.substring(0, pos)) + \".sunjj\";
    final File sunjj = new File(target.getParent(), name);
    if (sunjj.exists()) \{
        project.log(\"Removing stale file: \" + sunjj.getName());
        sunjj.delete();
    \}
\}" shape=ellipse]
78 [label="2:CtBlockImpl@\{
    if (optionsFile != null) \{
        optionsFile.delete();
        optionsFile = null;
    \}
    if (cleanup) \{
        String name = target.getName();
        int pos = name.length() - \".jj\".length();
        name = (\"__jj\" + name.substring(0, pos)) + \".sunjj\";
        final File sunjj = new File(target.getParent(), name);
        if (sunjj.exists()) \{
            project.log(\"Removing stale file: \" + sunjj.getName());
            sunjj.delete();
        \}
    \}
\}" shape=ellipse]
79 [label="2:CtMethodImpl@protected void cleanUp() \{
    if (optionsFile != null) \{
        optionsFile.delete();
        optionsFile = null;
    \}
    if (cleanup) \{
        String name = target.getName();
        int pos = name.length() - \".jj\".length();
        name = (\"__jj\" + name.substring(0, pos)) + \".sunjj\";
        final File sunjj = new File(target.getParent(), name);
        if (sunjj.exists()) \{
            project.log(\"Removing stale file: \" + sunjj.getName());
            sunjj.delete();
        \}
    \}
\}" shape=ellipse]
80 [label="13:Delete@DELETE" shape=ellipse]
81 [label="13:Insert@INSERT" shape=ellipse]
82 [label="13:CtInvocationImpl@getProject()" shape=ellipse]
4 -> 2 [label="AST"];
4 -> 3 [label="AST"];
4 -> 12 [label="Control Dep"];
4 -> 8 [label="Control Dep"];
4 -> 5 [label="Control Dep"];
4 -> 7 [label="Control Dep"];
4 -> 11 [label="Control Dep"];
4 -> 9 [label="Control Dep"];
4 -> 10 [label="Control Dep"];
8 -> 6 [label="AST"];
8 -> 7 [label="AST"];
8 -> 5 [label="AST"];
11 -> 9 [label="AST"];
11 -> 10 [label="AST"];
12 -> 8 [label="AST"];
12 -> 11 [label="AST"];
13 -> 4 [label="AST"];
13 -> 12 [label="AST"];
14 -> 76 [label="Control Dep"];
14 -> 21 [label="Control Dep"];
14 -> 19 [label="Control Dep"];
14 -> 16 [label="Control Dep"];
14 -> 18 [label="Control Dep"];
14 -> 33 [label="Control Dep"];
14 -> 31 [label="Control Dep"];
14 -> 26 [label="Control Dep"];
14 -> 23 [label="Control Dep"];
14 -> 25 [label="Control Dep"];
14 -> 30 [label="Control Dep"];
14 -> 27 [label="Control Dep"];
14 -> 29 [label="Control Dep"];
14 -> 45 [label="Control Dep"];
14 -> 34 [label="Control Dep"];
14 -> 44 [label="Control Dep"];
14 -> 42 [label="Control Dep"];
14 -> 35 [label="Control Dep"];
14 -> 41 [label="Control Dep"];
14 -> 36 [label="Control Dep"];
14 -> 38 [label="Control Dep"];
14 -> 39 [label="Control Dep"];
14 -> 40 [label="Control Dep"];
14 -> 43 [label="Control Dep"];
14 -> 55 [label="Control Dep"];
14 -> 53 [label="Control Dep"];
14 -> 51 [label="Control Dep"];
14 -> 48 [label="Control Dep"];
14 -> 50 [label="Control Dep"];
14 -> 52 [label="Control Dep"];
14 -> 75 [label="Control Dep"];
14 -> 59 [label="Control Dep"];
14 -> 56 [label="Control Dep"];
14 -> 58 [label="Control Dep"];
18 -> 20 [label="Data Dep"];
19 -> 17 [label="AST"];
19 -> 18 [label="AST"];
19 -> 16 [label="AST"];
20 -> 25 [label="Define-Use"];
20 -> 38 [label="Define-Use"];
20 -> 52 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 15 [label="AST"];
21 -> 19 [label="AST"];
25 -> 32 [label="Data Dep"];
26 -> 24 [label="AST"];
26 -> 25 [label="AST"];
26 -> 23 [label="AST"];
30 -> 28 [label="AST"];
30 -> 29 [label="AST"];
30 -> 27 [label="AST"];
31 -> 26 [label="AST"];
31 -> 30 [label="AST"];
32 -> 40 [label="Define-Use"];
33 -> 32 [label="AST"];
33 -> 22 [label="AST"];
33 -> 31 [label="AST"];
34 -> 52 [label="Define-Use"];
38 -> 34 [label="Data Dep"];
40 -> 34 [label="Data Dep"];
41 -> 37 [label="AST"];
41 -> 38 [label="AST"];
41 -> 36 [label="AST"];
41 -> 39 [label="AST"];
41 -> 40 [label="AST"];
42 -> 35 [label="AST"];
42 -> 41 [label="AST"];
44 -> 42 [label="AST"];
44 -> 43 [label="AST"];
45 -> 34 [label="AST"];
45 -> 44 [label="AST"];
50 -> 54 [label="Data Dep"];
51 -> 49 [label="AST"];
51 -> 50 [label="AST"];
51 -> 48 [label="AST"];
52 -> 54 [label="Data Dep"];
53 -> 51 [label="AST"];
53 -> 52 [label="AST"];
54 -> 58 [label="Define-Use"];
54 -> 66 [label="Define-Use"];
54 -> 72 [label="Define-Use"];
55 -> 54 [label="AST"];
55 -> 46 [label="AST"];
55 -> 53 [label="AST"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
59 -> 56 [label="AST"];
59 -> 74 [label="Control Dep"];
59 -> 69 [label="Control Dep"];
59 -> 60 [label="Control Dep"];
59 -> 62 [label="Control Dep"];
59 -> 68 [label="Control Dep"];
59 -> 63 [label="Control Dep"];
59 -> 67 [label="Control Dep"];
59 -> 64 [label="Control Dep"];
59 -> 66 [label="Control Dep"];
59 -> 73 [label="Control Dep"];
59 -> 70 [label="Control Dep"];
59 -> 72 [label="Control Dep"];
62 -> 80 [label="Action"];
67 -> 65 [label="AST"];
67 -> 66 [label="AST"];
67 -> 64 [label="AST"];
68 -> 63 [label="AST"];
68 -> 67 [label="AST"];
69 -> 61 [label="AST"];
69 -> 62 [label="AST"];
69 -> 60 [label="AST"];
69 -> 68 [label="AST"];
69 -> 81 [label="Action"];
73 -> 71 [label="AST"];
73 -> 72 [label="AST"];
73 -> 70 [label="AST"];
74 -> 69 [label="AST"];
74 -> 73 [label="AST"];
75 -> 59 [label="AST"];
75 -> 74 [label="AST"];
76 -> 21 [label="AST"];
76 -> 33 [label="AST"];
76 -> 45 [label="AST"];
76 -> 55 [label="AST"];
76 -> 75 [label="AST"];
77 -> 14 [label="AST"];
77 -> 76 [label="AST"];
78 -> 13 [label="AST"];
78 -> 77 [label="AST"];
79 -> 1 [label="AST"];
79 -> 0 [label="AST"];
79 -> 78 [label="AST"];
81 -> 82 [label="Action"];
}