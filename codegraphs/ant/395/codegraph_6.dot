digraph "execute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@execute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@TaskException" shape=ellipse]
3 [label="3:CtFieldReadImpl@property" shape=ellipse]
4 [label="3:CtLiteralImpl@null" shape=ellipse]
5 [label="3:CtBinaryOperatorImpl@property == null" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@TaskException" shape=ellipse]
7 [label="4:CtLiteralImpl@\"property attribute is required\"" shape=ellipse]
8 [label="4:CtConstructorCallImpl@new TaskException(\"property attribute is required\")" shape=ellipse]
9 [label="4:CtThrowImpl@throw new TaskException(\"property attribute is required\")" shape=ellipse]
10 [label="3:CtBlockImpl@\{
    throw new TaskException(\"property attribute is required\");
\}" shape=ellipse]
11 [label="3:CtIfImpl@if (property == null) \{
    throw new TaskException(\"property attribute is required\");
\}" shape=ellipse]
12 [label="6:CtExecutableReferenceImpl@eval()" shape=ellipse]
13 [label="6:CtVirtualElement@eval" shape=ellipse]
14 [label="6:CtInvocationImpl@eval()" shape=ellipse]
15 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
16 [label="7:CtExecutableReferenceImpl@getProperty(java.lang.String)" shape=ellipse]
17 [label="7:CtVirtualElement@getProperty" shape=ellipse]
18 [label="7:CtTypeAccessImpl@System" shape=ellipse]
19 [label="7:CtLiteralImpl@\"line.separator\"" shape=ellipse]
20 [label="7:CtInvocationImpl@System.getProperty(\"line.separator\")" shape=ellipse]
21 [label="7:CtVirtualElement@lSep" shape=ellipse]
22 [label="7:CtLocalVariableImpl@String lSep = System.getProperty(\"line.separator\")" shape=ellipse]
23 [label="8:CtLiteralImpl@null" shape=ellipse]
24 [label="8:CtExecutableReferenceImpl@getProperty()" shape=ellipse]
25 [label="8:CtVirtualElement@getProperty" shape=ellipse]
26 [label="8:CtFieldReadImpl@project" shape=ellipse]
27 [label="8:CtFieldReadImpl@property" shape=ellipse]
28 [label="8:CtInvocationImpl@project.getProperty(property)" shape=ellipse]
29 [label="8:CtBinaryOperatorImpl@null == project.getProperty(property)" shape=ellipse]
30 [label="9:CtExecutableReferenceImpl@setProperty(<unknown>,<unknown>)" shape=ellipse]
31 [label="9:CtVirtualElement@setProperty" shape=ellipse]
32 [label="9:CtFieldReadImpl@property" shape=ellipse]
33 [label="9:CtFieldReadImpl@value" shape=ellipse]
34 [label="9:CtInvocationImpl@setProperty(property, value)" shape=ellipse]
35 [label="8:CtBlockImpl@\{
    setProperty(property, value);
\}" shape=ellipse]
36 [label="8:CtIfImpl@if (null == project.getProperty(property)) \{
    setProperty(property, value);
\}" shape=ellipse]
37 [label="6:CtBlockImpl@\{
    String lSep = System.getProperty(\"line.separator\");
    if (null == project.getProperty(property)) \{
        setProperty(property, value);
    \}
\}" shape=ellipse]
38 [label="6:CtIfImpl@if (eval()) \{
    String lSep = System.getProperty(\"line.separator\");
    if (null == project.getProperty(property)) \{
        setProperty(property, value);
    \}
\}" shape=ellipse]
39 [label="2:CtBlockImpl@\{
    if (property == null) \{
        throw new TaskException(\"property attribute is required\");
    \}
    if (eval()) \{
        String lSep = System.getProperty(\"line.separator\");
        if (null == project.getProperty(property)) \{
            setProperty(property, value);
        \}
    \}
\}" shape=ellipse]
40 [label="2:CtMethodImpl@public void execute() throws TaskException \{
    if (property == null) \{
        throw new TaskException(\"property attribute is required\");
    \}
    if (eval()) \{
        String lSep = System.getProperty(\"line.separator\");
        if (null == project.getProperty(property)) \{
            setProperty(property, value);
        \}
    \}
\}" shape=ellipse]
41 [label="8:Delete@DELETE" shape=ellipse]
42 [label="8:Insert@INSERT" shape=ellipse]
43 [label="8:CtInvocationImpl@getProject()" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 4 [label="AST"];
5 -> 10 [label="Control Dep"];
5 -> 9 [label="Control Dep"];
5 -> 8 [label="Control Dep"];
5 -> 7 [label="Control Dep"];
8 -> 7 [label="AST"];
9 -> 8 [label="AST"];
10 -> 9 [label="AST"];
11 -> 5 [label="AST"];
11 -> 10 [label="AST"];
14 -> 13 [label="AST"];
14 -> 12 [label="AST"];
14 -> 37 [label="Control Dep"];
14 -> 22 [label="Control Dep"];
14 -> 20 [label="Control Dep"];
14 -> 16 [label="Control Dep"];
14 -> 18 [label="Control Dep"];
14 -> 19 [label="Control Dep"];
14 -> 36 [label="Control Dep"];
14 -> 29 [label="Control Dep"];
14 -> 23 [label="Control Dep"];
14 -> 28 [label="Control Dep"];
14 -> 24 [label="Control Dep"];
14 -> 26 [label="Control Dep"];
14 -> 27 [label="Control Dep"];
20 -> 17 [label="AST"];
20 -> 18 [label="AST"];
20 -> 16 [label="AST"];
20 -> 19 [label="AST"];
22 -> 21 [label="AST"];
22 -> 15 [label="AST"];
22 -> 20 [label="AST"];
26 -> 41 [label="Action"];
28 -> 25 [label="AST"];
28 -> 26 [label="AST"];
28 -> 24 [label="AST"];
28 -> 27 [label="AST"];
28 -> 42 [label="Action"];
29 -> 23 [label="AST"];
29 -> 28 [label="AST"];
29 -> 35 [label="Control Dep"];
29 -> 34 [label="Control Dep"];
29 -> 30 [label="Control Dep"];
29 -> 32 [label="Control Dep"];
29 -> 33 [label="Control Dep"];
34 -> 31 [label="AST"];
34 -> 30 [label="AST"];
34 -> 32 [label="AST"];
34 -> 33 [label="AST"];
35 -> 34 [label="AST"];
36 -> 29 [label="AST"];
36 -> 35 [label="AST"];
37 -> 22 [label="AST"];
37 -> 36 [label="AST"];
38 -> 14 [label="AST"];
38 -> 37 [label="AST"];
39 -> 11 [label="AST"];
39 -> 38 [label="AST"];
40 -> 1 [label="AST"];
40 -> 0 [label="AST"];
40 -> 2 [label="AST"];
40 -> 39 [label="AST"];
42 -> 43 [label="Action"];
}