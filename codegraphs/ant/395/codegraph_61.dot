digraph "execute#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@execute" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
3 [label="3:CtFieldWriteImpl@isCondition" shape=ellipse]
4 [label="3:CtLiteralImpl@false" shape=ellipse]
5 [label="3:CtAssignmentImpl@isCondition = false" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
7 [label="4:CtExecutableReferenceImpl@validateAndExecute()" shape=ellipse]
8 [label="4:CtVirtualElement@validateAndExecute" shape=ellipse]
9 [label="4:CtInvocationImpl@validateAndExecute()" shape=ellipse]
10 [label="4:CtVirtualElement@value" shape=ellipse]
11 [label="4:CtLocalVariableImpl@boolean value = validateAndExecute()" shape=ellipse]
12 [label="5:CtFieldReadImpl@verifyProperty" shape=ellipse]
13 [label="5:CtLiteralImpl@null" shape=ellipse]
14 [label="5:CtBinaryOperatorImpl@verifyProperty != null" shape=ellipse]
15 [label="6:CtExecutableReferenceImpl@setNewProperty(java.lang.String)" shape=ellipse]
16 [label="6:CtVirtualElement@setNewProperty" shape=ellipse]
17 [label="6:CtFieldReadImpl@project" shape=ellipse]
18 [label="6:CtFieldReadImpl@verifyProperty" shape=ellipse]
19 [label="6:CtExecutableReferenceImpl@toString()" shape=ellipse]
20 [label="6:CtVirtualElement@toString" shape=ellipse]
21 [label="6:CtTypeReferenceImpl@Boolean" shape=ellipse]
22 [label="6:CtVariableReadImpl@value" shape=ellipse]
23 [label="6:CtConstructorCallImpl@new Boolean(value)" shape=ellipse]
24 [label="6:CtInvocationImpl@new Boolean(value).toString()" shape=ellipse]
25 [label="6:CtInvocationImpl@project.setNewProperty(verifyProperty, new Boolean(value).toString())" shape=ellipse]
26 [label="5:CtBlockImpl@\{
    project.setNewProperty(verifyProperty, new Boolean(value).toString());
\}" shape=ellipse]
27 [label="5:CtIfImpl@if (verifyProperty != null) \{
    project.setNewProperty(verifyProperty, new Boolean(value).toString());
\}" shape=ellipse]
28 [label="2:CtBlockImpl@\{
    isCondition = false;
    boolean value = validateAndExecute();
    if (verifyProperty != null) \{
        project.setNewProperty(verifyProperty, new Boolean(value).toString());
    \}
\}" shape=ellipse]
29 [label="2:CtMethodImpl@public void execute() throws BuildException \{
    isCondition = false;
    boolean value = validateAndExecute();
    if (verifyProperty != null) \{
        project.setNewProperty(verifyProperty, new Boolean(value).toString());
    \}
\}" shape=ellipse]
30 [label="6:Delete@DELETE" shape=ellipse]
31 [label="6:Insert@INSERT" shape=ellipse]
32 [label="6:CtInvocationImpl@getProject()" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 4 [label="AST"];
9 -> 8 [label="AST"];
9 -> 7 [label="AST"];
10 -> 22 [label="Define-Use"];
11 -> 10 [label="AST"];
11 -> 6 [label="AST"];
11 -> 9 [label="AST"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
14 -> 26 [label="Control Dep"];
14 -> 25 [label="Control Dep"];
14 -> 15 [label="Control Dep"];
14 -> 17 [label="Control Dep"];
14 -> 18 [label="Control Dep"];
14 -> 24 [label="Control Dep"];
14 -> 19 [label="Control Dep"];
14 -> 23 [label="Control Dep"];
14 -> 22 [label="Control Dep"];
17 -> 30 [label="Action"];
23 -> 22 [label="AST"];
24 -> 20 [label="AST"];
24 -> 23 [label="AST"];
24 -> 19 [label="AST"];
25 -> 16 [label="AST"];
25 -> 17 [label="AST"];
25 -> 15 [label="AST"];
25 -> 18 [label="AST"];
25 -> 24 [label="AST"];
25 -> 31 [label="Action"];
26 -> 25 [label="AST"];
27 -> 14 [label="AST"];
27 -> 26 [label="AST"];
28 -> 5 [label="AST"];
28 -> 11 [label="AST"];
28 -> 27 [label="AST"];
29 -> 1 [label="AST"];
29 -> 0 [label="AST"];
29 -> 2 [label="AST"];
29 -> 28 [label="AST"];
31 -> 32 [label="Action"];
}