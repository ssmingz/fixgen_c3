digraph "findSecurityPolicyFile#?,String" {
0 [label="2:CtTypeReferenceImpl@File" shape=ellipse]
1 [label="2:CtVirtualElement@findSecurityPolicyFile" shape=ellipse]
2 [label="2:CtParameterImpl@String defaultSecurityPolicy" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="3:CtThisAccessImpl@this" shape=ellipse]
6 [label="3:CtFieldReadImpl@this.securityPolicy" shape=ellipse]
7 [label="3:CtVirtualElement@securityPolicy" shape=ellipse]
8 [label="3:CtLocalVariableImpl@String securityPolicy = this.securityPolicy" shape=ellipse]
9 [label="4:CtVariableReadImpl@securityPolicy" shape=ellipse]
10 [label="4:CtLiteralImpl@null" shape=ellipse]
11 [label="4:CtBinaryOperatorImpl@securityPolicy == null" shape=ellipse]
12 [label="5:CtVariableWriteImpl@securityPolicy" shape=ellipse]
13 [label="5:CtVariableReadImpl@defaultSecurityPolicy" shape=ellipse]
14 [label="5:CtAssignmentImpl@securityPolicy = defaultSecurityPolicy" shape=ellipse]
15 [label="4:CtBlockImpl@\{
    securityPolicy = defaultSecurityPolicy;
\}" shape=ellipse]
16 [label="4:CtIfImpl@if (securityPolicy == null) \{
    securityPolicy = defaultSecurityPolicy;
\}" shape=ellipse]
17 [label="7:CtTypeReferenceImpl@File" shape=ellipse]
18 [label="7:CtTypeReferenceImpl@File" shape=ellipse]
19 [label="7:CtFieldReadImpl@weblogicSystemHome" shape=ellipse]
20 [label="7:CtVariableReadImpl@securityPolicy" shape=ellipse]
21 [label="7:CtConstructorCallImpl@new File(weblogicSystemHome, securityPolicy)" shape=ellipse]
22 [label="7:CtVirtualElement@securityPolicyFile" shape=ellipse]
23 [label="7:CtLocalVariableImpl@File securityPolicyFile = new File(weblogicSystemHome, securityPolicy)" shape=ellipse]
24 [label="8:CtThisAccessImpl@this" shape=ellipse]
25 [label="8:CtFieldReadImpl@this.securityPolicy" shape=ellipse]
26 [label="8:CtLiteralImpl@null" shape=ellipse]
27 [label="8:CtBinaryOperatorImpl@(this.securityPolicy != null)" shape=ellipse]
28 [label="8:CtExecutableReferenceImpl@exists()" shape=ellipse]
29 [label="8:CtVirtualElement@exists" shape=ellipse]
30 [label="8:CtVariableReadImpl@securityPolicyFile" shape=ellipse]
31 [label="8:CtInvocationImpl@securityPolicyFile.exists()" shape=ellipse]
32 [label="8:CtUnaryOperatorImpl@(!securityPolicyFile.exists())" shape=ellipse]
33 [label="8:CtBinaryOperatorImpl@(this.securityPolicy != null) && (!securityPolicyFile.exists())" shape=ellipse]
34 [label="9:CtVariableWriteImpl@securityPolicyFile" shape=ellipse]
35 [label="9:CtExecutableReferenceImpl@resolveFile(java.lang.String)" shape=ellipse]
36 [label="9:CtVirtualElement@resolveFile" shape=ellipse]
37 [label="9:CtFieldReadImpl@project" shape=ellipse]
38 [label="9:CtVariableReadImpl@securityPolicy" shape=ellipse]
39 [label="9:CtInvocationImpl@project.resolveFile(securityPolicy)" shape=ellipse]
40 [label="9:CtAssignmentImpl@securityPolicyFile = project.resolveFile(securityPolicy)" shape=ellipse]
41 [label="8:CtBlockImpl@\{
    securityPolicyFile = project.resolveFile(securityPolicy);
\}" shape=ellipse]
42 [label="8:CtIfImpl@if ((this.securityPolicy != null) && (!securityPolicyFile.exists())) \{
    securityPolicyFile = project.resolveFile(securityPolicy);
\}" shape=ellipse]
43 [label="11:CtExecutableReferenceImpl@exists()" shape=ellipse]
44 [label="11:CtVirtualElement@exists" shape=ellipse]
45 [label="11:CtVariableReadImpl@securityPolicyFile" shape=ellipse]
46 [label="11:CtInvocationImpl@securityPolicyFile.exists()" shape=ellipse]
47 [label="11:CtUnaryOperatorImpl@!securityPolicyFile.exists()" shape=ellipse]
48 [label="12:CtTypeReferenceImpl@BuildException" shape=ellipse]
49 [label="12:CtLiteralImpl@\"Security policy \"" shape=ellipse]
50 [label="12:CtVariableReadImpl@securityPolicy" shape=ellipse]
51 [label="12:CtBinaryOperatorImpl@(\"Security policy \" + securityPolicy)" shape=ellipse]
52 [label="12:CtLiteralImpl@\" was not found.\"" shape=ellipse]
53 [label="12:CtBinaryOperatorImpl@(\"Security policy \" + securityPolicy) + \" was not found.\"" shape=ellipse]
54 [label="12:CtConstructorCallImpl@new BuildException((\"Security policy \" + securityPolicy) + \" was not found.\")" shape=ellipse]
55 [label="12:CtThrowImpl@throw new BuildException((\"Security policy \" + securityPolicy) + \" was not found.\")" shape=ellipse]
56 [label="11:CtBlockImpl@\{
    throw new BuildException((\"Security policy \" + securityPolicy) + \" was not found.\");
\}" shape=ellipse]
57 [label="11:CtIfImpl@if (!securityPolicyFile.exists()) \{
    throw new BuildException((\"Security policy \" + securityPolicy) + \" was not found.\");
\}" shape=ellipse]
58 [label="14:CtVariableReadImpl@securityPolicyFile" shape=ellipse]
59 [label="14:CtReturnImpl@return securityPolicyFile" shape=ellipse]
60 [label="2:CtBlockImpl@\{
    String securityPolicy = this.securityPolicy;
    if (securityPolicy == null) \{
        securityPolicy = defaultSecurityPolicy;
    \}
    File securityPolicyFile = new File(weblogicSystemHome, securityPolicy);
    if ((this.securityPolicy != null) && (!securityPolicyFile.exists())) \{
        securityPolicyFile = project.resolveFile(securityPolicy);
    \}
    if (!securityPolicyFile.exists()) \{
        throw new BuildException((\"Security policy \" + securityPolicy) + \" was not found.\");
    \}
    return securityPolicyFile;
\}" shape=ellipse]
61 [label="2:CtMethodImpl@private File findSecurityPolicyFile(String defaultSecurityPolicy) \{
    String securityPolicy = this.securityPolicy;
    if (securityPolicy == null) \{
        securityPolicy = defaultSecurityPolicy;
    \}
    File securityPolicyFile = new File(weblogicSystemHome, securityPolicy);
    if ((this.securityPolicy != null) && (!securityPolicyFile.exists())) \{
        securityPolicyFile = project.resolveFile(securityPolicy);
    \}
    if (!securityPolicyFile.exists()) \{
        throw new BuildException((\"Security policy \" + securityPolicy) + \" was not found.\");
    \}
    return securityPolicyFile;
\}" shape=ellipse]
62 [label="9:Delete@DELETE" shape=ellipse]
63 [label="9:Insert@INSERT" shape=ellipse]
64 [label="9:CtInvocationImpl@getProject()" shape=ellipse]
2 -> 3 [label="AST"];
6 -> 5 [label="AST"];
6 -> 7 [label="Data Dep"];
7 -> 9 [label="Define-Use"];
7 -> 20 [label="Define-Use"];
7 -> 25 [label="Define-Use"];
7 -> 38 [label="Define-Use"];
7 -> 50 [label="Define-Use"];
8 -> 7 [label="AST"];
8 -> 4 [label="AST"];
8 -> 6 [label="AST"];
11 -> 9 [label="AST"];
11 -> 10 [label="AST"];
11 -> 15 [label="Control Dep"];
11 -> 14 [label="Control Dep"];
11 -> 12 [label="Control Dep"];
11 -> 13 [label="Control Dep"];
12 -> 20 [label="Define-Use"];
12 -> 25 [label="Define-Use"];
12 -> 38 [label="Define-Use"];
12 -> 50 [label="Define-Use"];
13 -> 12 [label="Data Dep"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
15 -> 14 [label="AST"];
16 -> 11 [label="AST"];
16 -> 15 [label="AST"];
19 -> 22 [label="Data Dep"];
20 -> 22 [label="Data Dep"];
21 -> 19 [label="AST"];
21 -> 20 [label="AST"];
22 -> 30 [label="Define-Use"];
22 -> 45 [label="Define-Use"];
22 -> 58 [label="Define-Use"];
23 -> 22 [label="AST"];
23 -> 17 [label="AST"];
23 -> 21 [label="AST"];
25 -> 24 [label="AST"];
27 -> 25 [label="AST"];
27 -> 26 [label="AST"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
31 -> 28 [label="AST"];
32 -> 31 [label="AST"];
33 -> 27 [label="AST"];
33 -> 32 [label="AST"];
33 -> 41 [label="Control Dep"];
33 -> 40 [label="Control Dep"];
33 -> 34 [label="Control Dep"];
33 -> 39 [label="Control Dep"];
33 -> 35 [label="Control Dep"];
33 -> 37 [label="Control Dep"];
33 -> 38 [label="Control Dep"];
34 -> 45 [label="Define-Use"];
34 -> 58 [label="Define-Use"];
37 -> 34 [label="Data Dep"];
37 -> 62 [label="Action"];
38 -> 34 [label="Data Dep"];
39 -> 36 [label="AST"];
39 -> 37 [label="AST"];
39 -> 35 [label="AST"];
39 -> 38 [label="AST"];
39 -> 63 [label="Action"];
40 -> 34 [label="AST"];
40 -> 39 [label="AST"];
41 -> 40 [label="AST"];
42 -> 33 [label="AST"];
42 -> 41 [label="AST"];
46 -> 44 [label="AST"];
46 -> 45 [label="AST"];
46 -> 43 [label="AST"];
47 -> 46 [label="AST"];
47 -> 56 [label="Control Dep"];
47 -> 55 [label="Control Dep"];
47 -> 54 [label="Control Dep"];
47 -> 53 [label="Control Dep"];
47 -> 51 [label="Control Dep"];
47 -> 49 [label="Control Dep"];
47 -> 50 [label="Control Dep"];
47 -> 52 [label="Control Dep"];
51 -> 49 [label="AST"];
51 -> 50 [label="AST"];
53 -> 51 [label="AST"];
53 -> 52 [label="AST"];
54 -> 53 [label="AST"];
55 -> 54 [label="AST"];
56 -> 55 [label="AST"];
57 -> 47 [label="AST"];
57 -> 56 [label="AST"];
59 -> 58 [label="AST"];
60 -> 8 [label="AST"];
60 -> 16 [label="AST"];
60 -> 23 [label="AST"];
60 -> 42 [label="AST"];
60 -> 57 [label="AST"];
60 -> 59 [label="AST"];
61 -> 1 [label="AST"];
61 -> 0 [label="AST"];
61 -> 2 [label="AST"];
61 -> 60 [label="AST"];
63 -> 64 [label="Action"];
}