digraph "getOutputStream#?" {
0 [label="2:CtTypeReferenceImpl@OutputStream" shape=ellipse]
1 [label="2:CtVirtualElement@getOutputStream" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@equals()" shape=ellipse]
3 [label="3:CtVirtualElement@equals" shape=ellipse]
4 [label="3:CtTypeAccessImpl@STDOUT" shape=ellipse]
5 [label="3:CtFieldReadImpl@value" shape=ellipse]
6 [label="3:CtInvocationImpl@STDOUT.equals(value)" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@KeepAliveOutputStream" shape=ellipse]
8 [label="4:CtTypeAccessImpl@System" shape=ellipse]
9 [label="4:CtFieldReadImpl@System.out" shape=ellipse]
10 [label="4:CtFieldReferenceImpl@java.lang.System.out" shape=ellipse]
11 [label="4:CtConstructorCallImpl@new KeepAliveOutputStream(System.out)" shape=ellipse]
12 [label="4:CtReturnImpl@return new KeepAliveOutputStream(System.out)" shape=ellipse]
13 [label="3:CtBlockImpl@\{
    return new KeepAliveOutputStream(System.out);
\}" shape=ellipse]
14 [label="5:CtExecutableReferenceImpl@equals()" shape=ellipse]
15 [label="5:CtVirtualElement@equals" shape=ellipse]
16 [label="5:CtTypeAccessImpl@STDERR" shape=ellipse]
17 [label="5:CtFieldReadImpl@value" shape=ellipse]
18 [label="5:CtInvocationImpl@STDERR.equals(value)" shape=ellipse]
19 [label="6:CtTypeReferenceImpl@KeepAliveOutputStream" shape=ellipse]
20 [label="6:CtTypeAccessImpl@System" shape=ellipse]
21 [label="6:CtFieldReadImpl@System.err" shape=ellipse]
22 [label="6:CtFieldReferenceImpl@java.lang.System.err" shape=ellipse]
23 [label="6:CtConstructorCallImpl@new KeepAliveOutputStream(System.err)" shape=ellipse]
24 [label="6:CtReturnImpl@return new KeepAliveOutputStream(System.err)" shape=ellipse]
25 [label="5:CtBlockImpl@\{
    return new KeepAliveOutputStream(System.err);
\}" shape=ellipse]
26 [label="5:CtIfImpl@if (STDERR.equals(value)) \{
    return new KeepAliveOutputStream(System.err);
\}" shape=ellipse]
27 [label="5:CtBlockImpl@
    if (STDERR.equals(value)) \{
        return new KeepAliveOutputStream(System.err);
    \}
" shape=ellipse]
28 [label="3:CtIfImpl@if (STDOUT.equals(value)) \{
    return new KeepAliveOutputStream(System.out);
\} else if (STDERR.equals(value)) \{
    return new KeepAliveOutputStream(System.err);
\}" shape=ellipse]
29 [label="8:CtTypeReferenceImpl@File" shape=ellipse]
30 [label="8:CtExecutableReferenceImpl@resolveFile()" shape=ellipse]
31 [label="8:CtVirtualElement@resolveFile" shape=ellipse]
32 [label="8:CtFieldReadImpl@project" shape=ellipse]
33 [label="8:CtFieldReadImpl@value" shape=ellipse]
34 [label="8:CtInvocationImpl@project.resolveFile(value)" shape=ellipse]
35 [label="8:CtVirtualElement@f" shape=ellipse]
36 [label="8:CtLocalVariableImpl@File f = project.resolveFile(value)" shape=ellipse]
37 [label="10:CtTypeReferenceImpl@FileOutputStream" shape=ellipse]
38 [label="10:CtVariableReadImpl@f" shape=ellipse]
39 [label="10:CtConstructorCallImpl@new FileOutputStream(f)" shape=ellipse]
40 [label="10:CtReturnImpl@return new FileOutputStream(f)" shape=ellipse]
41 [label="9:CtBlockImpl@\{
    return new FileOutputStream(f);
\}" shape=ellipse]
42 [label="11:CtVirtualElement@e" shape=ellipse]
43 [label="11:CtTypeReferenceImpl@IOException" shape=ellipse]
44 [label="11:CtCatchVariableImpl@IOException e" shape=ellipse]
45 [label="12:CtTypeReferenceImpl@BuildException" shape=ellipse]
46 [label="12:CtVariableReadImpl@e" shape=ellipse]
47 [label="12:CtConstructorCallImpl@new BuildException(e)" shape=ellipse]
48 [label="12:CtThrowImpl@throw new BuildException(e)" shape=ellipse]
49 [label="11:CtBlockImpl@\{
    throw new BuildException(e);
\}" shape=ellipse]
50 [label="11:CtCatchImpl@ catch (IOException e) \{
    throw new BuildException(e);
\}" shape=ellipse]
51 [label="9:CtTryImpl@try \{
    return new FileOutputStream(f);
\} catch (IOException e) \{
    throw new BuildException(e);
\}" shape=ellipse]
52 [label="2:CtBlockImpl@\{
    if (STDOUT.equals(value)) \{
        return new KeepAliveOutputStream(System.out);
    \} else if (STDERR.equals(value)) \{
        return new KeepAliveOutputStream(System.err);
    \}
    File f = project.resolveFile(value);
    try \{
        return new FileOutputStream(f);
    \} catch (IOException e) \{
        throw new BuildException(e);
    \}
\}" shape=ellipse]
53 [label="2:CtMethodImpl@public OutputStream getOutputStream() \{
    if (STDOUT.equals(value)) \{
        return new KeepAliveOutputStream(System.out);
    \} else if (STDERR.equals(value)) \{
        return new KeepAliveOutputStream(System.err);
    \}
    File f = project.resolveFile(value);
    try \{
        return new FileOutputStream(f);
    \} catch (IOException e) \{
        throw new BuildException(e);
    \}
\}" shape=ellipse]
54 [label="8:Delete@DELETE" shape=ellipse]
55 [label="8:Insert@INSERT" shape=ellipse]
56 [label="8:CtInvocationImpl@getProject()" shape=ellipse]
6 -> 3 [label="AST"];
6 -> 4 [label="AST"];
6 -> 2 [label="AST"];
6 -> 5 [label="AST"];
6 -> 13 [label="Control Dep"];
6 -> 12 [label="Control Dep"];
6 -> 11 [label="Control Dep"];
6 -> 9 [label="Control Dep"];
6 -> 8 [label="Control Dep"];
6 -> 27 [label="Control Dep"];
6 -> 26 [label="Control Dep"];
6 -> 18 [label="Control Dep"];
6 -> 14 [label="Control Dep"];
6 -> 16 [label="Control Dep"];
6 -> 17 [label="Control Dep"];
9 -> 8 [label="AST"];
9 -> 10 [label="AST"];
11 -> 9 [label="AST"];
12 -> 11 [label="AST"];
13 -> 12 [label="AST"];
18 -> 15 [label="AST"];
18 -> 16 [label="AST"];
18 -> 14 [label="AST"];
18 -> 17 [label="AST"];
18 -> 25 [label="Control Dep"];
18 -> 24 [label="Control Dep"];
18 -> 23 [label="Control Dep"];
18 -> 21 [label="Control Dep"];
18 -> 20 [label="Control Dep"];
21 -> 20 [label="AST"];
21 -> 22 [label="AST"];
23 -> 21 [label="AST"];
24 -> 23 [label="AST"];
25 -> 24 [label="AST"];
26 -> 18 [label="AST"];
26 -> 25 [label="AST"];
27 -> 26 [label="AST"];
28 -> 6 [label="AST"];
28 -> 13 [label="AST"];
28 -> 27 [label="AST"];
32 -> 35 [label="Data Dep"];
32 -> 54 [label="Action"];
33 -> 35 [label="Data Dep"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
34 -> 30 [label="AST"];
34 -> 33 [label="AST"];
34 -> 55 [label="Action"];
35 -> 38 [label="Define-Use"];
36 -> 35 [label="AST"];
36 -> 29 [label="AST"];
36 -> 34 [label="AST"];
39 -> 38 [label="AST"];
40 -> 39 [label="AST"];
41 -> 40 [label="AST"];
42 -> 46 [label="Define-Use"];
44 -> 42 [label="AST"];
44 -> 43 [label="AST"];
44 -> 49 [label="Control Dep"];
44 -> 48 [label="Control Dep"];
44 -> 47 [label="Control Dep"];
44 -> 46 [label="Control Dep"];
47 -> 46 [label="AST"];
48 -> 47 [label="AST"];
49 -> 48 [label="AST"];
50 -> 44 [label="AST"];
50 -> 49 [label="AST"];
51 -> 41 [label="AST"];
51 -> 50 [label="AST"];
52 -> 28 [label="AST"];
52 -> 36 [label="AST"];
52 -> 51 [label="AST"];
53 -> 1 [label="AST"];
53 -> 0 [label="AST"];
53 -> 52 [label="AST"];
55 -> 56 [label="Action"];
}