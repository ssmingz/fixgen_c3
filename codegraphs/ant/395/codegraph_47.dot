digraph "makeObject#?,UnknownElement,RuntimeConfigurable" {
0 [label="2:CtTypeReferenceImpl@Object" shape=ellipse]
1 [label="2:CtVirtualElement@makeObject" shape=ellipse]
2 [label="2:CtParameterImpl@UnknownElement ue" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@UnknownElement" shape=ellipse]
4 [label="2:CtParameterImpl@RuntimeConfigurable w" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@RuntimeConfigurable" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@Object" shape=ellipse]
7 [label="3:CtExecutableReferenceImpl@makeTask(<unknown>,<unknown>,boolean)" shape=ellipse]
8 [label="3:CtVirtualElement@makeTask" shape=ellipse]
9 [label="3:CtVariableReadImpl@ue" shape=ellipse]
10 [label="3:CtVariableReadImpl@w" shape=ellipse]
11 [label="3:CtLiteralImpl@true" shape=ellipse]
12 [label="3:CtInvocationImpl@makeTask(ue, w, true)" shape=ellipse]
13 [label="3:CtVirtualElement@o" shape=ellipse]
14 [label="3:CtLocalVariableImpl@Object o = makeTask(ue, w, true)" shape=ellipse]
15 [label="4:CtVariableReadImpl@o" shape=ellipse]
16 [label="4:CtLiteralImpl@null" shape=ellipse]
17 [label="4:CtBinaryOperatorImpl@o == null" shape=ellipse]
18 [label="5:CtVariableWriteImpl@o" shape=ellipse]
19 [label="5:CtExecutableReferenceImpl@createDataType()" shape=ellipse]
20 [label="5:CtVirtualElement@createDataType" shape=ellipse]
21 [label="5:CtFieldReadImpl@project" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@getTag()" shape=ellipse]
23 [label="5:CtVirtualElement@getTag" shape=ellipse]
24 [label="5:CtVariableReadImpl@ue" shape=ellipse]
25 [label="5:CtInvocationImpl@ue.getTag()" shape=ellipse]
26 [label="5:CtInvocationImpl@project.createDataType(ue.getTag())" shape=ellipse]
27 [label="5:CtAssignmentImpl@o = project.createDataType(ue.getTag())" shape=ellipse]
28 [label="4:CtBlockImpl@\{
    o = project.createDataType(ue.getTag());
\}" shape=ellipse]
29 [label="4:CtIfImpl@if (o == null) \{
    o = project.createDataType(ue.getTag());
\}" shape=ellipse]
30 [label="7:CtVariableReadImpl@o" shape=ellipse]
31 [label="7:CtLiteralImpl@null" shape=ellipse]
32 [label="7:CtBinaryOperatorImpl@o == null" shape=ellipse]
33 [label="8:CtExecutableReferenceImpl@getNotFoundException(java.lang.String,<unknown>)" shape=ellipse]
34 [label="8:CtVirtualElement@getNotFoundException" shape=ellipse]
35 [label="8:CtLiteralImpl@\"task or type\"" shape=ellipse]
36 [label="8:CtExecutableReferenceImpl@getTag()" shape=ellipse]
37 [label="8:CtVirtualElement@getTag" shape=ellipse]
38 [label="8:CtVariableReadImpl@ue" shape=ellipse]
39 [label="8:CtInvocationImpl@ue.getTag()" shape=ellipse]
40 [label="8:CtInvocationImpl@getNotFoundException(\"task or type\", ue.getTag())" shape=ellipse]
41 [label="8:CtThrowImpl@throw getNotFoundException(\"task or type\", ue.getTag())" shape=ellipse]
42 [label="7:CtBlockImpl@\{
    throw getNotFoundException(\"task or type\", ue.getTag());
\}" shape=ellipse]
43 [label="7:CtIfImpl@if (o == null) \{
    throw getNotFoundException(\"task or type\", ue.getTag());
\}" shape=ellipse]
44 [label="10:CtVariableReadImpl@o" shape=ellipse]
45 [label="10:CtReturnImpl@return o" shape=ellipse]
46 [label="2:CtBlockImpl@\{
    Object o = makeTask(ue, w, true);
    if (o == null) \{
        o = project.createDataType(ue.getTag());
    \}
    if (o == null) \{
        throw getNotFoundException(\"task or type\", ue.getTag());
    \}
    return o;
\}" shape=ellipse]
47 [label="2:CtMethodImpl@protected Object makeObject(UnknownElement ue, RuntimeConfigurable w) \{
    Object o = makeTask(ue, w, true);
    if (o == null) \{
        o = project.createDataType(ue.getTag());
    \}
    if (o == null) \{
        throw getNotFoundException(\"task or type\", ue.getTag());
    \}
    return o;
\}" shape=ellipse]
48 [label="5:Delete@DELETE" shape=ellipse]
49 [label="5:Insert@INSERT" shape=ellipse]
50 [label="5:CtInvocationImpl@getProject()" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
9 -> 13 [label="Data Dep"];
10 -> 13 [label="Data Dep"];
12 -> 8 [label="AST"];
12 -> 7 [label="AST"];
12 -> 9 [label="AST"];
12 -> 10 [label="AST"];
12 -> 11 [label="AST"];
13 -> 15 [label="Define-Use"];
13 -> 30 [label="Define-Use"];
13 -> 44 [label="Define-Use"];
14 -> 13 [label="AST"];
14 -> 6 [label="AST"];
14 -> 12 [label="AST"];
17 -> 15 [label="AST"];
17 -> 16 [label="AST"];
17 -> 28 [label="Control Dep"];
17 -> 27 [label="Control Dep"];
17 -> 18 [label="Control Dep"];
17 -> 26 [label="Control Dep"];
17 -> 19 [label="Control Dep"];
17 -> 21 [label="Control Dep"];
17 -> 25 [label="Control Dep"];
17 -> 22 [label="Control Dep"];
17 -> 24 [label="Control Dep"];
18 -> 30 [label="Define-Use"];
18 -> 44 [label="Define-Use"];
21 -> 18 [label="Data Dep"];
21 -> 48 [label="Action"];
24 -> 18 [label="Data Dep"];
25 -> 23 [label="AST"];
25 -> 24 [label="AST"];
25 -> 22 [label="AST"];
26 -> 20 [label="AST"];
26 -> 21 [label="AST"];
26 -> 19 [label="AST"];
26 -> 25 [label="AST"];
26 -> 49 [label="Action"];
27 -> 18 [label="AST"];
27 -> 26 [label="AST"];
28 -> 27 [label="AST"];
29 -> 17 [label="AST"];
29 -> 28 [label="AST"];
32 -> 30 [label="AST"];
32 -> 31 [label="AST"];
32 -> 42 [label="Control Dep"];
32 -> 41 [label="Control Dep"];
32 -> 40 [label="Control Dep"];
32 -> 33 [label="Control Dep"];
32 -> 35 [label="Control Dep"];
32 -> 39 [label="Control Dep"];
32 -> 36 [label="Control Dep"];
32 -> 38 [label="Control Dep"];
39 -> 37 [label="AST"];
39 -> 38 [label="AST"];
39 -> 36 [label="AST"];
40 -> 34 [label="AST"];
40 -> 33 [label="AST"];
40 -> 35 [label="AST"];
40 -> 39 [label="AST"];
41 -> 40 [label="AST"];
42 -> 41 [label="AST"];
43 -> 32 [label="AST"];
43 -> 42 [label="AST"];
45 -> 44 [label="AST"];
46 -> 14 [label="AST"];
46 -> 29 [label="AST"];
46 -> 43 [label="AST"];
46 -> 45 [label="AST"];
47 -> 1 [label="AST"];
47 -> 0 [label="AST"];
47 -> 2 [label="AST"];
47 -> 4 [label="AST"];
47 -> 46 [label="AST"];
49 -> 50 [label="Action"];
}