digraph "Pattern" {
0 [label="getRef#?,Project#10:DELETE
getRef#?,Project#10:DELETE
getRef#?,Project#10:DELETE
getRef#?,Project#10:DELETE
getRef#?,Project#10:DELETE" shape=ellipse]
1 [label="getRef#?,Project#10:ref
getRef#?,Project#10:ref
getRef#?,Project#10:ref
getRef#?,Project#10:ref
getRef#?,Project#10:ref" shape=ellipse]
2 [label="getRef#?,Project#9:!(o instanceof Substitution)
getRef#?,Project#9:!(o instanceof RegularExpression)
getRef#?,Project#9:!(o instanceof FileSet)
getRef#?,Project#9:!(o instanceof PatternSet)
getRef#?,Project#9:!(o instanceof FileList)" shape=ellipse]
3 [label="getRef#?,Project#9:if (!(o instanceof Substitution)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a substitution\";
    throw new BuildException(msg);
\} else \{
    return ((Substitution) (o));
\}
getRef#?,Project#9:if (!(o instanceof RegularExpression)) \{
    String msg = (ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME;
    throw new BuildException(msg);
\} else \{
    return ((RegularExpression) (o));
\}
getRef#?,Project#9:if (!(o instanceof FileSet)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a fileset\";
    throw new BuildException(msg);
\} else \{
    return ((AbstractFileSet) (o));
\}
getRef#?,Project#9:if (!(o instanceof PatternSet)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a patternset\";
    throw new BuildException(msg);
\} else \{
    return ((PatternSet) (o));
\}
getRef#?,Project#9:if (!(o instanceof FileList)) \{
    String msg = ref.getRefId() + \" doesn\'t denote a filelist\";
    throw new BuildException(msg);
\} else \{
    return ((FileList) (o));
\}" shape=ellipse]
4 [label="getRef#?,Project#-1:boolean
getRef#?,Project#-1:boolean
getRef#?,Project#-1:boolean
getRef#?,Project#-1:boolean
getRef#?,Project#-1:boolean" shape=ellipse]
5 [label="getRef#?,Project#9:(o instanceof Substitution)
getRef#?,Project#9:(o instanceof RegularExpression)
getRef#?,Project#9:(o instanceof FileSet)
getRef#?,Project#9:(o instanceof PatternSet)
getRef#?,Project#9:(o instanceof FileList)" shape=ellipse]
6 [label="getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a substitution\";
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = (ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME;
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a fileset\";
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a patternset\";
    throw new BuildException(msg);
\}
getRef#?,Project#9:\{
    String msg = ref.getRefId() + \" doesn\'t denote a filelist\";
    throw new BuildException(msg);
\}" shape=ellipse]
7 [label="getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a substitution\"
getRef#?,Project#10:String msg = (ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME
getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a fileset\"
getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a patternset\"
getRef#?,Project#10:String msg = ref.getRefId() + \" doesn\'t denote a filelist\"" shape=ellipse]
8 [label="getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a substitution\"
getRef#?,Project#10:(ref.getRefId() + \" doesn\'t denote a \") + DATA_TYPE_NAME
getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a fileset\"
getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a patternset\"
getRef#?,Project#10:ref.getRefId() + \" doesn\'t denote a filelist\"" shape=ellipse]
9 [label="getRef#?,Project#10:ref.getRefId()
getRef#?,Project#10:ref.getRefId()
getRef#?,Project#10:ref.getRefId()
getRef#?,Project#10:ref.getRefId()" shape=ellipse]
10 [label="getRef#?,Project#10:getRefId()
getRef#?,Project#10:getRefId()
getRef#?,Project#10:getRefId()
getRef#?,Project#10:getRefId()
getRef#?,Project#10:getRefId()" shape=ellipse]
11 [label="getRef#?,Project#10:\" doesn\'t denote a substitution\"
getRef#?,Project#10:DATA_TYPE_NAME
getRef#?,Project#10:\" doesn\'t denote a fileset\"
getRef#?,Project#10:\" doesn\'t denote a patternset\"
getRef#?,Project#10:\" doesn\'t denote a filelist\"" shape=ellipse]
12 [label="getRef#?,Project#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)
getRef#?,Project#11:throw new BuildException(msg)" shape=ellipse]
13 [label="getRef#?,Project#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)
getRef#?,Project#11:new BuildException(msg)" shape=ellipse]
14 [label="getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)
getRef#?,Project#-1:BuildException(java.lang.String)" shape=ellipse]
15 [label="getRef#?,Project#11:msg
getRef#?,Project#11:msg
getRef#?,Project#11:msg
getRef#?,Project#11:msg
getRef#?,Project#11:msg" shape=ellipse]
16 [label="getRef#?,Project#12:\{
    return ((Substitution) (o));
\}
getRef#?,Project#12:\{
    return ((RegularExpression) (o));
\}
getRef#?,Project#12:\{
    return ((AbstractFileSet) (o));
\}
getRef#?,Project#12:\{
    return ((PatternSet) (o));
\}
getRef#?,Project#12:\{
    return ((FileList) (o));
\}" shape=ellipse]
17 [label="getRef#?,Project#13:return ((Substitution) (o))
getRef#?,Project#13:return ((RegularExpression) (o))
getRef#?,Project#13:return ((AbstractFileSet) (o))
getRef#?,Project#13:return ((PatternSet) (o))
getRef#?,Project#13:return ((FileList) (o))" shape=ellipse]
18 [label="getRef#?,Project#13:((Substitution) (o))
getRef#?,Project#13:((RegularExpression) (o))
getRef#?,Project#13:((AbstractFileSet) (o))
getRef#?,Project#13:((PatternSet) (o))
getRef#?,Project#13:((FileList) (o))" shape=ellipse]
19 [label="getRef#?,Project#-1:ref
getRef#?,Project#-1:ref
getRef#?,Project#-1:ref
getRef#?,Project#-1:ref
getRef#?,Project#-1:ref" shape=ellipse]
20 [label="getRef#?,Project#10:msg
getRef#?,Project#10:msg
getRef#?,Project#10:msg
getRef#?,Project#10:msg" shape=ellipse]
21 [label="getRef#?,Project#10:(ref.getRefId() + \" doesn\'t denote a \")" shape=ellipse]
22 [label="getRef#?,Project#10:msg" shape=ellipse]
23 [label="getRef#?,Project#10:ref.getRefId()" shape=ellipse]
24 [label="getRef#?,Project#10:\" doesn\'t denote a \"" shape=ellipse]
1 -> 0 [label="Action:5"];
1 -> 19 [label="AST:5"];
1 -> 20 [label="Data Dep:4"];
1 -> 22 [label="Data Dep:1"];
2 -> 1 [label="Control Dep:5"];
2 -> 4 [label="AST:5"];
2 -> 5 [label="AST:5"];
2 -> 6 [label="Control Dep:5"];
2 -> 7 [label="Control Dep:5"];
2 -> 8 [label="Control Dep:5"];
2 -> 9 [label="Control Dep:4"];
2 -> 10 [label="Control Dep:5"];
2 -> 11 [label="Control Dep:5"];
2 -> 12 [label="Control Dep:5"];
2 -> 13 [label="Control Dep:5"];
2 -> 14 [label="Control Dep:5"];
2 -> 15 [label="Control Dep:5"];
2 -> 16 [label="Control Dep:5"];
2 -> 17 [label="Control Dep:5"];
2 -> 18 [label="Control Dep:5"];
2 -> 21 [label="Control Dep:1"];
2 -> 23 [label="Control Dep:1"];
2 -> 24 [label="Control Dep:1"];
3 -> 2 [label="AST:5"];
3 -> 6 [label="AST:5"];
3 -> 16 [label="AST:5"];
6 -> 7 [label="AST:5"];
6 -> 12 [label="AST:5"];
7 -> 20 [label="AST:4"];
7 -> 8 [label="AST:5"];
7 -> 22 [label="AST:1"];
8 -> 9 [label="AST:4"];
8 -> 11 [label="AST:5"];
8 -> 21 [label="AST:1"];
9 -> 1 [label="AST:4"];
9 -> 10 [label="AST:4"];
11 -> 22 [label="Data Dep:1"];
12 -> 13 [label="AST:5"];
13 -> 14 [label="AST:5"];
13 -> 15 [label="AST:5"];
16 -> 17 [label="AST:5"];
17 -> 18 [label="AST:5"];
20 -> 15 [label="Define Use:4"];
21 -> 23 [label="AST:1"];
21 -> 24 [label="AST:1"];
22 -> 15 [label="Define Use:1"];
23 -> 1 [label="AST:1"];
23 -> 10 [label="AST:1"];
}