digraph "Pattern" {
0 [label="test4#?#2:INSERT
testTwoMappers#?#2:INSERT" shape=ellipse]
1 [label="test4#?#2:public void test4() \{
    expectBuildException(\"test4\", \"zipfile must not point to a directory\");
\}
testTwoMappers#?#2:public void testTwoMappers() \{
    expectBuildException(\"testTwoMappers\", ERROR_MULTIPLE_MAPPERS);
\}" shape=ellipse]
2 [label="test4#?#2:test4
testTwoMappers#?#2:testTwoMappers" shape=ellipse]
3 [label="test4#?#2:void
testTwoMappers#?#2:void" shape=ellipse]
4 [label="test4#?#2:\{
    expectBuildException(\"test4\", \"zipfile must not point to a directory\");
\}
testTwoMappers#?#2:\{
    expectBuildException(\"testTwoMappers\", ERROR_MULTIPLE_MAPPERS);
\}" shape=ellipse]
5 [label="test4#?#3:expectBuildException(\"test4\", \"zipfile must not point to a directory\")
testTwoMappers#?#3:expectBuildException(\"testTwoMappers\", ERROR_MULTIPLE_MAPPERS)" shape=ellipse]
6 [label="test4#?#2:public
testTwoMappers#?#2:public" shape=ellipse]
7 [label="test4#?#2:VE: Modifiers_Method
testTwoMappers#?#2:VE: Modifiers_Method" shape=ellipse]
8 [label="test4#?#4:INSERT
testTwoMappers#?#4:INSERT" shape=ellipse]
9 [label="test4#?#4:try \{
    buildRule.executeTarget(\"test4\");
    fail(\"BuildException expected: zipfile must not point to a directory\");
\} catch (BuildException ex) \{
\}
testTwoMappers#?#4:try \{
    buildRule.executeTarget(\"testTwoMappers\");
    fail(\"BuildException expected: \" + Expand.ERROR_MULTIPLE_MAPPERS);
\} catch (BuildException ex) \{
\}" shape=ellipse]
10 [label="test4#?#2:@Test
testTwoMappers#?#2:@Test" shape=ellipse]
0 -> 10 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 2 [label="AST:2"];
1 -> 3 [label="AST:2"];
1 -> 4 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 8 [label="Action:2"];
4 -> 5 [label="AST:2"];
8 -> 9 [label="Action:2"];
}