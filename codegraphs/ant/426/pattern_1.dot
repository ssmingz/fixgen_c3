digraph "Pattern" {
0 [label="test2#?#2:INSERT
test5#?#2:INSERT" shape=ellipse]
1 [label="test2#?#2:public void test2() \{
    expectBuildException(\"test2\", \"Invalid destination file.\");
\}
test5#?#2:public void test5() \{
    expectBuildException(\"test5\", \"dest invalid (or no http-server on local machine)\");
\}" shape=ellipse]
2 [label="test2#?#2:test2
test5#?#2:test5" shape=ellipse]
3 [label="test2#?#2:void
test5#?#2:void" shape=ellipse]
4 [label="test2#?#2:\{
    expectBuildException(\"test2\", \"Invalid destination file.\");
\}
test5#?#2:\{
    expectBuildException(\"test5\", \"dest invalid (or no http-server on local machine)\");
\}" shape=ellipse]
5 [label="test2#?#3:expectBuildException(\"test2\", \"Invalid destination file.\")
test5#?#3:expectBuildException(\"test5\", \"dest invalid (or no http-server on local machine)\")" shape=ellipse]
6 [label="test2#?#2:public
test5#?#2:public" shape=ellipse]
7 [label="test2#?#2:VE: Modifiers_Method
test5#?#2:VE: Modifiers_Method" shape=ellipse]
8 [label="test2#?#4:INSERT
test5#?#4:INSERT" shape=ellipse]
9 [label="test2#?#4:try \{
    buildRule.executeTarget(\"test2\");
    fail(\"BuildException should have been thrown - Invalid destination file\");
\} catch (BuildException ex) \{
\}
test5#?#4:try \{
    buildRule.executeTarget(\"test5\");
    fail(\"dest invalid (or no http-server on local machine\");
\} catch (BuildException ex) \{
\}" shape=ellipse]
10 [label="test2#?#2:@Test
test5#?#2:@Test" shape=ellipse]
0 -> 10 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 2 [label="AST:2"];
1 -> 3 [label="AST:2"];
1 -> 4 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 8 [label="Action:2"];
4 -> 5 [label="AST:2"];
8 -> 9 [label="Action:2"];
}