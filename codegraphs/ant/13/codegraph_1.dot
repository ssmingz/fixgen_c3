digraph "buildMap#?,File,File,String[],FileNameMapper,Hashtable" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@buildMap" shape=ellipse]
2 [label="3:CtParameterImpl@File fromDir" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
4 [label="3:CtParameterImpl@File toDir" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@File" shape=ellipse]
6 [label="3:CtParameterImpl@String[] names" shape=ellipse]
7 [label="3:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
8 [label="3:CtParameterImpl@FileNameMapper mapper" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@FileNameMapper" shape=ellipse]
10 [label="3:CtParameterImpl@Hashtable map" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@Hashtable" shape=ellipse]
12 [label="4:CtVirtualElement@String[]" shape=ellipse]
13 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
14 [label="4:CtLiteralImpl@null" shape=ellipse]
15 [label="4:CtVirtualElement@toCopy" shape=ellipse]
16 [label="4:CtLocalVariableImpl@String[] toCopy = null" shape=ellipse]
17 [label="5:CtFieldReadImpl@forceOverwrite" shape=ellipse]
18 [label="6:CtVariableWriteImpl@toCopy" shape=ellipse]
19 [label="6:CtVariableReadImpl@names" shape=ellipse]
20 [label="6:CtAssignmentImpl@toCopy = names" shape=ellipse]
21 [label="5:CtBlockImpl@\{
    toCopy = names;
\}" shape=ellipse]
22 [label="8:CtTypeReferenceImpl@SourceFileScanner" shape=ellipse]
23 [label="8:CtTypeReferenceImpl@SourceFileScanner" shape=ellipse]
24 [label="8:CtConstructorCallImpl@new SourceFileScanner()" shape=ellipse]
25 [label="8:CtVirtualElement@ds" shape=ellipse]
26 [label="8:CtLocalVariableImpl@SourceFileScanner ds = new SourceFileScanner()" shape=ellipse]
27 [label="9:CtVariableWriteImpl@toCopy" shape=ellipse]
28 [label="9:CtExecutableReferenceImpl@restrict(java.lang.String[],File,File,FileNameMapper)" shape=ellipse]
29 [label="9:CtVirtualElement@restrict" shape=ellipse]
30 [label="9:CtVariableReadImpl@ds" shape=ellipse]
31 [label="9:CtVariableReadImpl@names" shape=ellipse]
32 [label="9:CtVariableReadImpl@fromDir" shape=ellipse]
33 [label="9:CtVariableReadImpl@toDir" shape=ellipse]
34 [label="9:CtVariableReadImpl@mapper" shape=ellipse]
35 [label="9:CtInvocationImpl@ds.restrict(names, fromDir, toDir, mapper)" shape=ellipse]
36 [label="9:CtAssignmentImpl@toCopy = ds.restrict(names, fromDir, toDir, mapper)" shape=ellipse]
37 [label="7:CtBlockImpl@\{
    SourceFileScanner ds = new SourceFileScanner();
    toCopy = ds.restrict(names, fromDir, toDir, mapper);
\}" shape=ellipse]
38 [label="5:CtIfImpl@if (forceOverwrite) \{
    toCopy = names;
\} else \{
    SourceFileScanner ds = new SourceFileScanner();
    toCopy = ds.restrict(names, fromDir, toDir, mapper);
\}" shape=ellipse]
39 [label="11:CtTypeReferenceImpl@int" shape=ellipse]
40 [label="11:CtLiteralImpl@0" shape=ellipse]
41 [label="11:CtVirtualElement@i" shape=ellipse]
42 [label="11:CtLocalVariableImpl@int i = 0" shape=ellipse]
43 [label="11:CtVariableReadImpl@i" shape=ellipse]
44 [label="11:CtVariableReadImpl@toCopy" shape=ellipse]
45 [label="11:CtLocalVariableReferenceImpl@toCopy" shape=ellipse]
46 [label="11:CtFieldReadImpl@toCopy.length" shape=ellipse]
47 [label="11:CtBinaryOperatorImpl@i < toCopy.length" shape=ellipse]
48 [label="11:CtVariableWriteImpl@i" shape=ellipse]
49 [label="11:CtUnaryOperatorImpl@i++" shape=ellipse]
50 [label="12:CtTypeReferenceImpl@File" shape=ellipse]
51 [label="12:CtTypeReferenceImpl@File" shape=ellipse]
52 [label="12:CtVariableReadImpl@fromDir" shape=ellipse]
53 [label="12:CtVariableReadImpl@toCopy" shape=ellipse]
54 [label="12:CtVariableReadImpl@i" shape=ellipse]
55 [label="12:CtArrayReadImpl@toCopy[i]" shape=ellipse]
56 [label="12:CtConstructorCallImpl@new File(fromDir, toCopy[i])" shape=ellipse]
57 [label="12:CtVirtualElement@src" shape=ellipse]
58 [label="12:CtLocalVariableImpl@File src = new File(fromDir, toCopy[i])" shape=ellipse]
59 [label="13:CtTypeReferenceImpl@File" shape=ellipse]
60 [label="13:CtTypeReferenceImpl@File" shape=ellipse]
61 [label="13:CtVariableReadImpl@toDir" shape=ellipse]
62 [label="13:CtExecutableReferenceImpl@mapFileName(java.lang.String)" shape=ellipse]
63 [label="13:CtVirtualElement@mapFileName" shape=ellipse]
64 [label="13:CtVariableReadImpl@mapper" shape=ellipse]
65 [label="13:CtVariableReadImpl@toCopy" shape=ellipse]
66 [label="13:CtVariableReadImpl@i" shape=ellipse]
67 [label="13:CtArrayReadImpl@toCopy[i]" shape=ellipse]
68 [label="13:CtInvocationImpl@mapper.mapFileName(toCopy[i])" shape=ellipse]
69 [label="13:CtLiteralImpl@0" shape=ellipse]
70 [label="13:CtArrayReadImpl@mapper.mapFileName(toCopy[i])[0]" shape=ellipse]
71 [label="13:CtConstructorCallImpl@new File(toDir, mapper.mapFileName(toCopy[i])[0])" shape=ellipse]
72 [label="13:CtVirtualElement@dest" shape=ellipse]
73 [label="13:CtLocalVariableImpl@File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0])" shape=ellipse]
74 [label="14:CtExecutableReferenceImpl@put()" shape=ellipse]
75 [label="14:CtVirtualElement@put" shape=ellipse]
76 [label="14:CtVariableReadImpl@map" shape=ellipse]
77 [label="14:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
78 [label="14:CtVirtualElement@getAbsolutePath" shape=ellipse]
79 [label="14:CtVariableReadImpl@src" shape=ellipse]
80 [label="14:CtInvocationImpl@src.getAbsolutePath()" shape=ellipse]
81 [label="14:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
82 [label="14:CtVirtualElement@getAbsolutePath" shape=ellipse]
83 [label="14:CtVariableReadImpl@dest" shape=ellipse]
84 [label="14:CtInvocationImpl@dest.getAbsolutePath()" shape=ellipse]
85 [label="14:CtInvocationImpl@map.put(src.getAbsolutePath(), dest.getAbsolutePath())" shape=ellipse]
86 [label="11:CtBlockImpl@\{
    File src = new File(fromDir, toCopy[i]);
    File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);
    map.put(src.getAbsolutePath(), dest.getAbsolutePath());
\}" shape=ellipse]
87 [label="11:CtForImpl@for (int i = 0; i < toCopy.length; i++) \{
    File src = new File(fromDir, toCopy[i]);
    File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);
    map.put(src.getAbsolutePath(), dest.getAbsolutePath());
\}" shape=ellipse]
88 [label="3:CtBlockImpl@\{
    String[] toCopy = null;
    if (forceOverwrite) \{
        toCopy = names;
    \} else \{
        SourceFileScanner ds = new SourceFileScanner();
        toCopy = ds.restrict(names, fromDir, toDir, mapper);
    \}
    for (int i = 0; i < toCopy.length; i++) \{
        File src = new File(fromDir, toCopy[i]);
        File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);
        map.put(src.getAbsolutePath(), dest.getAbsolutePath());
    \}
\}" shape=ellipse]
89 [label="2:CtMethodImpl@protected void buildMap(File fromDir, File toDir, String[] names, FileNameMapper mapper, Hashtable map) \{
    String[] toCopy = null;
    if (forceOverwrite) \{
        toCopy = names;
    \} else \{
        SourceFileScanner ds = new SourceFileScanner();
        toCopy = ds.restrict(names, fromDir, toDir, mapper);
    \}
    for (int i = 0; i < toCopy.length; i++) \{
        File src = new File(fromDir, toCopy[i]);
        File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);
        map.put(src.getAbsolutePath(), dest.getAbsolutePath());
    \}
\}" shape=ellipse]
90 [label="8:Update@UPDATE" shape=ellipse]
91 [label="8:CtConstructorCallImpl@new SourceFileScanner(this)" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 9 [label="AST"];
10 -> 11 [label="AST"];
13 -> 12 [label="AST"];
15 -> 44 [label="Define-Use"];
15 -> 53 [label="Define-Use"];
15 -> 55 [label="Define-Use"];
15 -> 65 [label="Define-Use"];
15 -> 67 [label="Define-Use"];
16 -> 15 [label="AST"];
16 -> 13 [label="AST"];
16 -> 14 [label="AST"];
17 -> 21 [label="Control Dep"];
17 -> 20 [label="Control Dep"];
17 -> 18 [label="Control Dep"];
17 -> 19 [label="Control Dep"];
17 -> 37 [label="Control Dep"];
17 -> 26 [label="Control Dep"];
17 -> 24 [label="Control Dep"];
17 -> 36 [label="Control Dep"];
17 -> 27 [label="Control Dep"];
17 -> 35 [label="Control Dep"];
17 -> 28 [label="Control Dep"];
17 -> 30 [label="Control Dep"];
17 -> 31 [label="Control Dep"];
17 -> 32 [label="Control Dep"];
17 -> 33 [label="Control Dep"];
17 -> 34 [label="Control Dep"];
18 -> 44 [label="Define-Use"];
18 -> 53 [label="Define-Use"];
18 -> 55 [label="Define-Use"];
18 -> 65 [label="Define-Use"];
18 -> 67 [label="Define-Use"];
19 -> 18 [label="Data Dep"];
20 -> 18 [label="AST"];
20 -> 19 [label="AST"];
21 -> 20 [label="AST"];
24 -> 90 [label="Action"];
25 -> 30 [label="Define-Use"];
26 -> 25 [label="AST"];
26 -> 22 [label="AST"];
26 -> 24 [label="AST"];
27 -> 44 [label="Define-Use"];
27 -> 53 [label="Define-Use"];
27 -> 55 [label="Define-Use"];
27 -> 65 [label="Define-Use"];
27 -> 67 [label="Define-Use"];
30 -> 27 [label="Data Dep"];
31 -> 27 [label="Data Dep"];
32 -> 27 [label="Data Dep"];
33 -> 27 [label="Data Dep"];
34 -> 27 [label="Data Dep"];
35 -> 29 [label="AST"];
35 -> 30 [label="AST"];
35 -> 28 [label="AST"];
35 -> 31 [label="AST"];
35 -> 32 [label="AST"];
35 -> 33 [label="AST"];
35 -> 34 [label="AST"];
36 -> 27 [label="AST"];
36 -> 35 [label="AST"];
37 -> 26 [label="AST"];
37 -> 36 [label="AST"];
38 -> 17 [label="AST"];
38 -> 21 [label="AST"];
38 -> 37 [label="AST"];
41 -> 43 [label="Define-Use"];
42 -> 41 [label="AST"];
42 -> 39 [label="AST"];
42 -> 40 [label="AST"];
44 -> 45 [label="AST"];
46 -> 44 [label="AST"];
47 -> 43 [label="AST"];
47 -> 46 [label="AST"];
47 -> 86 [label="Control Dep"];
47 -> 58 [label="Control Dep"];
47 -> 56 [label="Control Dep"];
47 -> 52 [label="Control Dep"];
47 -> 55 [label="Control Dep"];
47 -> 53 [label="Control Dep"];
47 -> 54 [label="Control Dep"];
47 -> 73 [label="Control Dep"];
47 -> 71 [label="Control Dep"];
47 -> 61 [label="Control Dep"];
47 -> 70 [label="Control Dep"];
47 -> 68 [label="Control Dep"];
47 -> 62 [label="Control Dep"];
47 -> 64 [label="Control Dep"];
47 -> 67 [label="Control Dep"];
47 -> 65 [label="Control Dep"];
47 -> 66 [label="Control Dep"];
47 -> 69 [label="Control Dep"];
47 -> 85 [label="Control Dep"];
47 -> 74 [label="Control Dep"];
47 -> 76 [label="Control Dep"];
47 -> 80 [label="Control Dep"];
47 -> 77 [label="Control Dep"];
47 -> 79 [label="Control Dep"];
47 -> 84 [label="Control Dep"];
47 -> 81 [label="Control Dep"];
47 -> 83 [label="Control Dep"];
48 -> 54 [label="Define-Use"];
48 -> 66 [label="Define-Use"];
49 -> 48 [label="AST"];
52 -> 57 [label="Data Dep"];
55 -> 53 [label="AST"];
55 -> 54 [label="AST"];
55 -> 57 [label="Data Dep"];
56 -> 52 [label="AST"];
56 -> 55 [label="AST"];
57 -> 79 [label="Define-Use"];
58 -> 57 [label="AST"];
58 -> 50 [label="AST"];
58 -> 56 [label="AST"];
61 -> 72 [label="Data Dep"];
67 -> 65 [label="AST"];
67 -> 66 [label="AST"];
68 -> 63 [label="AST"];
68 -> 64 [label="AST"];
68 -> 62 [label="AST"];
68 -> 67 [label="AST"];
70 -> 68 [label="AST"];
70 -> 69 [label="AST"];
70 -> 72 [label="Data Dep"];
71 -> 61 [label="AST"];
71 -> 70 [label="AST"];
72 -> 83 [label="Define-Use"];
73 -> 72 [label="AST"];
73 -> 59 [label="AST"];
73 -> 71 [label="AST"];
80 -> 78 [label="AST"];
80 -> 79 [label="AST"];
80 -> 77 [label="AST"];
84 -> 82 [label="AST"];
84 -> 83 [label="AST"];
84 -> 81 [label="AST"];
85 -> 75 [label="AST"];
85 -> 76 [label="AST"];
85 -> 74 [label="AST"];
85 -> 80 [label="AST"];
85 -> 84 [label="AST"];
86 -> 58 [label="AST"];
86 -> 73 [label="AST"];
86 -> 85 [label="AST"];
87 -> 42 [label="AST"];
87 -> 47 [label="AST"];
87 -> 49 [label="AST"];
87 -> 86 [label="AST"];
88 -> 16 [label="AST"];
88 -> 38 [label="AST"];
88 -> 87 [label="AST"];
89 -> 1 [label="AST"];
89 -> 0 [label="AST"];
89 -> 2 [label="AST"];
89 -> 4 [label="AST"];
89 -> 6 [label="AST"];
89 -> 8 [label="AST"];
89 -> 10 [label="AST"];
89 -> 88 [label="AST"];
90 -> 91 [label="Action"];
}