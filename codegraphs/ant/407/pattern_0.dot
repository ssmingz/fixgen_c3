digraph "Pattern" {
0 [label="testEchoToLog#?#3:UPDATE
testTimeoutNot#?#3:UPDATE
testOverrideWinsInheritAll#?#3:UPDATE
testAddConfiguredValue#?#3:UPDATE
testPath#?#3:UPDATE
testNestedC#?#3:UPDATE
testAddConfigured#?#3:UPDATE
testOverrideWinsNoInheritAll#?#3:UPDATE
testFileSetAntType#?#3:UPDATE
testNestedA#?#3:UPDATE
testForkXml#?#3:UPDATE
testFork#?#3:UPDATE
testInheritRefFileSet#?#3:UPDATE
testConditionConditionType#?#3:UPDATE
testConditionType#?#3:UPDATE
testPathAntType#?#3:UPDATE
testFileSet#?#3:UPDATE
testConditionTask#?#3:UPDATE
testNestedB#?#3:UPDATE" shape=ellipse]
1 [label="testEchoToLog#?#3:expectLogContaining(\"testEchoToLog\", \"Processing File\")
testTimeoutNot#?#3:expectLogContaining(\"fork-timeout-not\", \"Package: org.apache.tools.ant.util.facade\")
testOverrideWinsInheritAll#?#3:expectLogContaining(\"test-property-override-inheritall-start\", \"The value of test is 4\")
testAddConfiguredValue#?#3:expectLogContaining(\"myaddconfiguredvalue\", \"value is Value Setexecute: value is Value Set\")
testPath#?#3:expectLogContaining(\"path\", \"types.Path\")
testNestedC#?#3:expectLogContaining(\"nested.c\", \"add C called\")
testAddConfigured#?#3:expectLogContaining(\"myaddconfigured\", \"value is Value Setexecute: value is Value Set\")
testOverrideWinsNoInheritAll#?#3:expectLogContaining(\"test-property-override-no-inheritall-start\", \"The value of test is 4\")
testFileSetAntType#?#3:expectLogContaining(\"fileset-ant-type\", \"types.PolyTest$MyFileSet\")
testNestedA#?#3:expectLogContaining(\"nested.a\", \"add A called\")
testForkXml#?#3:expectLogContaining(\"fork-xml\", \"<DependsUpon>\")
testFork#?#3:expectLogContaining(\"fork\", \"Package: org.apache.tools.ant.util.facade\")
testInheritRefFileSet#?#3:expectLogContaining(\"testinheritreffileset\", \"calltarget.xml\")
testConditionConditionType#?#3:expectLogContaining(\"condition.condition.type\", \"My Condition eval\")
testConditionType#?#3:expectLogContaining(\"condition.type\", \"beforeafter\")
testPathAntType#?#3:expectLogContaining(\"path-ant-type\", \"types.PolyTest$MyPath\")
testFileSet#?#3:expectLogContaining(\"fileset\", \"types.FileSet\")
testConditionTask#?#3:expectLogContaining(\"condition.task\", \"My Condition execution\")
testNestedB#?#3:expectLogContaining(\"nested.b\", \"add B called\")" shape=ellipse]
2 [label="testEchoToLog#?#2:\{
    expectLogContaining(\"testEchoToLog\", \"Processing File\");
\}
testTimeoutNot#?#2:\{
    expectLogContaining(\"fork-timeout-not\", \"Package: org.apache.tools.ant.util.facade\");
\}
testOverrideWinsInheritAll#?#2:\{
    expectLogContaining(\"test-property-override-inheritall-start\", \"The value of test is 4\");
\}
testAddConfiguredValue#?#2:\{
    expectLogContaining(\"myaddconfiguredvalue\", \"value is Value Setexecute: value is Value Set\");
\}
testPath#?#2:\{
    expectLogContaining(\"path\", \"types.Path\");
\}
testNestedC#?#2:\{
    expectLogContaining(\"nested.c\", \"add C called\");
\}
testAddConfigured#?#2:\{
    expectLogContaining(\"myaddconfigured\", \"value is Value Setexecute: value is Value Set\");
\}
testOverrideWinsNoInheritAll#?#2:\{
    expectLogContaining(\"test-property-override-no-inheritall-start\", \"The value of test is 4\");
\}
testFileSetAntType#?#2:\{
    expectLogContaining(\"fileset-ant-type\", \"types.PolyTest$MyFileSet\");
\}
testNestedA#?#2:\{
    expectLogContaining(\"nested.a\", \"add A called\");
\}
testForkXml#?#2:\{
    expectLogContaining(\"fork-xml\", \"<DependsUpon>\");
\}
testFork#?#2:\{
    expectLogContaining(\"fork\", \"Package: org.apache.tools.ant.util.facade\");
\}
testInheritRefFileSet#?#2:\{
    expectLogContaining(\"testinheritreffileset\", \"calltarget.xml\");
\}
testConditionConditionType#?#2:\{
    expectLogContaining(\"condition.condition.type\", \"My Condition eval\");
\}
testConditionType#?#2:\{
    expectLogContaining(\"condition.type\", \"beforeafter\");
\}
testPathAntType#?#2:\{
    expectLogContaining(\"path-ant-type\", \"types.PolyTest$MyPath\");
\}
testFileSet#?#2:\{
    expectLogContaining(\"fileset\", \"types.FileSet\");
\}
testConditionTask#?#2:\{
    expectLogContaining(\"condition.task\", \"My Condition execution\");
\}
testNestedB#?#2:\{
    expectLogContaining(\"nested.b\", \"add B called\");
\}" shape=ellipse]
3 [label="testEchoToLog#?#2:public void testEchoToLog() \{
    expectLogContaining(\"testEchoToLog\", \"Processing File\");
\}
testTimeoutNot#?#2:public void testTimeoutNot() \{
    expectLogContaining(\"fork-timeout-not\", \"Package: org.apache.tools.ant.util.facade\");
\}
testOverrideWinsInheritAll#?#2:public void testOverrideWinsInheritAll() \{
    expectLogContaining(\"test-property-override-inheritall-start\", \"The value of test is 4\");
\}
testAddConfiguredValue#?#2:public void testAddConfiguredValue() \{
    expectLogContaining(\"myaddconfiguredvalue\", \"value is Value Setexecute: value is Value Set\");
\}
testPath#?#2:public void testPath() \{
    expectLogContaining(\"path\", \"types.Path\");
\}
testNestedC#?#2:public void testNestedC() \{
    expectLogContaining(\"nested.c\", \"add C called\");
\}
testAddConfigured#?#2:public void testAddConfigured() \{
    expectLogContaining(\"myaddconfigured\", \"value is Value Setexecute: value is Value Set\");
\}
testOverrideWinsNoInheritAll#?#2:public void testOverrideWinsNoInheritAll() \{
    expectLogContaining(\"test-property-override-no-inheritall-start\", \"The value of test is 4\");
\}
testFileSetAntType#?#2:public void testFileSetAntType() \{
    expectLogContaining(\"fileset-ant-type\", \"types.PolyTest$MyFileSet\");
\}
testNestedA#?#2:public void testNestedA() \{
    expectLogContaining(\"nested.a\", \"add A called\");
\}
testForkXml#?#2:public void testForkXml() \{
    expectLogContaining(\"fork-xml\", \"<DependsUpon>\");
\}
testFork#?#2:public void testFork() \{
    expectLogContaining(\"fork\", \"Package: org.apache.tools.ant.util.facade\");
\}
testInheritRefFileSet#?#2:public void testInheritRefFileSet() \{
    expectLogContaining(\"testinheritreffileset\", \"calltarget.xml\");
\}
testConditionConditionType#?#2:public void testConditionConditionType() \{
    expectLogContaining(\"condition.condition.type\", \"My Condition eval\");
\}
testConditionType#?#2:public void testConditionType() \{
    expectLogContaining(\"condition.type\", \"beforeafter\");
\}
testPathAntType#?#2:public void testPathAntType() \{
    expectLogContaining(\"path-ant-type\", \"types.PolyTest$MyPath\");
\}
testFileSet#?#2:public void testFileSet() \{
    expectLogContaining(\"fileset\", \"types.FileSet\");
\}
testConditionTask#?#2:public void testConditionTask() \{
    expectLogContaining(\"condition.task\", \"My Condition execution\");
\}
testNestedB#?#2:public void testNestedB() \{
    expectLogContaining(\"nested.b\", \"add B called\");
\}" shape=ellipse]
4 [label="testEchoToLog#?#3:expectLogContaining
testTimeoutNot#?#3:expectLogContaining
testOverrideWinsInheritAll#?#3:expectLogContaining
testAddConfiguredValue#?#3:expectLogContaining
testPath#?#3:expectLogContaining
testNestedC#?#3:expectLogContaining
testAddConfigured#?#3:expectLogContaining
testOverrideWinsNoInheritAll#?#3:expectLogContaining
testFileSetAntType#?#3:expectLogContaining
testNestedA#?#3:expectLogContaining
testForkXml#?#3:expectLogContaining
testFork#?#3:expectLogContaining
testInheritRefFileSet#?#3:expectLogContaining
testConditionConditionType#?#3:expectLogContaining
testConditionType#?#3:expectLogContaining
testPathAntType#?#3:expectLogContaining
testFileSet#?#3:expectLogContaining
testConditionTask#?#3:expectLogContaining
testNestedB#?#3:expectLogContaining" shape=ellipse]
5 [label="testEchoToLog#?#-1:
testTimeoutNot#?#-1:
testOverrideWinsInheritAll#?#-1:
testAddConfiguredValue#?#-1:
testPath#?#-1:
testNestedC#?#-1:
testAddConfigured#?#-1:
testOverrideWinsNoInheritAll#?#-1:
testFileSetAntType#?#-1:
testNestedA#?#-1:
testForkXml#?#-1:
testFork#?#-1:
testInheritRefFileSet#?#-1:
testConditionConditionType#?#-1:
testConditionType#?#-1:
testPathAntType#?#-1:
testFileSet#?#-1:
testConditionTask#?#-1:
testNestedB#?#-1:" shape=ellipse]
6 [label="testEchoToLog#?#-1:PlaceHold
testTimeoutNot#?#-1:PlaceHold
testOverrideWinsInheritAll#?#-1:PlaceHold
testAddConfiguredValue#?#-1:PlaceHold
testPath#?#-1:PlaceHold
testNestedC#?#-1:PlaceHold
testAddConfigured#?#-1:PlaceHold
testOverrideWinsNoInheritAll#?#-1:PlaceHold
testFileSetAntType#?#-1:PlaceHold
testNestedA#?#-1:PlaceHold
testForkXml#?#-1:PlaceHold
testFork#?#-1:PlaceHold
testInheritRefFileSet#?#-1:PlaceHold
testConditionConditionType#?#-1:PlaceHold
testConditionType#?#-1:PlaceHold
testPathAntType#?#-1:PlaceHold
testFileSet#?#-1:PlaceHold
testConditionTask#?#-1:PlaceHold
testNestedB#?#-1:PlaceHold" shape=ellipse]
7 [label="testEchoToLog#?#-1:PlaceHold
testTimeoutNot#?#-1:PlaceHold
testOverrideWinsInheritAll#?#-1:PlaceHold
testAddConfiguredValue#?#-1:PlaceHold
testPath#?#-1:PlaceHold
testNestedC#?#-1:PlaceHold
testAddConfigured#?#-1:PlaceHold
testOverrideWinsNoInheritAll#?#-1:PlaceHold
testFileSetAntType#?#-1:PlaceHold
testNestedA#?#-1:PlaceHold
testForkXml#?#-1:PlaceHold
testFork#?#-1:PlaceHold
testInheritRefFileSet#?#-1:PlaceHold
testConditionConditionType#?#-1:PlaceHold
testConditionType#?#-1:PlaceHold
testPathAntType#?#-1:PlaceHold
testFileSet#?#-1:PlaceHold
testConditionTask#?#-1:PlaceHold
testNestedB#?#-1:PlaceHold" shape=ellipse]
8 [label="testEchoToLog#?#3:expectLogContaining(java.lang.String,java.lang.String)
testTimeoutNot#?#3:expectLogContaining(java.lang.String,java.lang.String)
testOverrideWinsInheritAll#?#3:expectLogContaining(java.lang.String,java.lang.String)
testAddConfiguredValue#?#3:expectLogContaining(java.lang.String,java.lang.String)
testPath#?#3:expectLogContaining(java.lang.String,java.lang.String)
testNestedC#?#3:expectLogContaining(java.lang.String,java.lang.String)
testAddConfigured#?#3:expectLogContaining(java.lang.String,java.lang.String)
testOverrideWinsNoInheritAll#?#3:expectLogContaining(java.lang.String,java.lang.String)
testFileSetAntType#?#3:expectLogContaining(java.lang.String,java.lang.String)
testNestedA#?#3:expectLogContaining(java.lang.String,java.lang.String)
testForkXml#?#3:expectLogContaining(java.lang.String,java.lang.String)
testFork#?#3:expectLogContaining(java.lang.String,java.lang.String)
testInheritRefFileSet#?#3:expectLogContaining(java.lang.String,java.lang.String)
testConditionConditionType#?#3:expectLogContaining(java.lang.String,java.lang.String)
testConditionType#?#3:expectLogContaining(java.lang.String,java.lang.String)
testPathAntType#?#3:expectLogContaining(java.lang.String,java.lang.String)
testFileSet#?#3:expectLogContaining(java.lang.String,java.lang.String)
testConditionTask#?#3:expectLogContaining(java.lang.String,java.lang.String)
testNestedB#?#3:expectLogContaining(java.lang.String,java.lang.String)" shape=ellipse]
9 [label="testEchoToLog#?#-1:String
testTimeoutNot#?#-1:String
testOverrideWinsInheritAll#?#-1:String
testAddConfiguredValue#?#-1:String
testPath#?#-1:String
testNestedC#?#-1:String
testAddConfigured#?#-1:String
testOverrideWinsNoInheritAll#?#-1:String
testFileSetAntType#?#-1:String
testNestedA#?#-1:String
testForkXml#?#-1:String
testFork#?#-1:String
testInheritRefFileSet#?#-1:String
testConditionConditionType#?#-1:String
testConditionType#?#-1:String
testPathAntType#?#-1:String
testFileSet#?#-1:String
testConditionTask#?#-1:String
testNestedB#?#-1:String" shape=ellipse]
10 [label="testEchoToLog#?#-1:String
testTimeoutNot#?#-1:String
testOverrideWinsInheritAll#?#-1:String
testAddConfiguredValue#?#-1:String
testPath#?#-1:String
testNestedC#?#-1:String
testAddConfigured#?#-1:String
testOverrideWinsNoInheritAll#?#-1:String
testFileSetAntType#?#-1:String
testNestedA#?#-1:String
testForkXml#?#-1:String
testFork#?#-1:String
testInheritRefFileSet#?#-1:String
testConditionConditionType#?#-1:String
testConditionType#?#-1:String
testPathAntType#?#-1:String
testFileSet#?#-1:String
testConditionTask#?#-1:String
testNestedB#?#-1:String" shape=ellipse]
11 [label="testEchoToLog#?#3:\"testEchoToLog\"
testTimeoutNot#?#3:\"Package: org.apache.tools.ant.util.facade\"
testOverrideWinsInheritAll#?#3:\"The value of test is 4\"
testAddConfiguredValue#?#3:\"value is Value Setexecute: value is Value Set\"
testPath#?#3:\"types.Path\"
testNestedC#?#3:\"nested.c\"
testAddConfigured#?#3:\"myaddconfigured\"
testOverrideWinsNoInheritAll#?#3:\"The value of test is 4\"
testFileSetAntType#?#3:\"types.PolyTest$MyFileSet\"
testNestedA#?#3:\"nested.a\"
testForkXml#?#3:\"<DependsUpon>\"
testFork#?#3:\"Package: org.apache.tools.ant.util.facade\"
testInheritRefFileSet#?#3:\"testinheritreffileset\"
testConditionConditionType#?#3:\"condition.condition.type\"
testConditionType#?#3:\"condition.type\"
testPathAntType#?#3:\"types.PolyTest$MyPath\"
testFileSet#?#3:\"fileset\"
testConditionTask#?#3:\"condition.task\"
testNestedB#?#3:\"nested.b\"" shape=ellipse]
12 [label="testEchoToLog#?#-1:String
testTimeoutNot#?#-1:String
testOverrideWinsInheritAll#?#-1:String
testAddConfiguredValue#?#-1:String
testPath#?#-1:String
testNestedC#?#-1:String
testAddConfigured#?#-1:String
testOverrideWinsNoInheritAll#?#-1:String
testFileSetAntType#?#-1:String
testNestedA#?#-1:String
testForkXml#?#-1:String
testFork#?#-1:String
testInheritRefFileSet#?#-1:String
testConditionConditionType#?#-1:String
testConditionType#?#-1:String
testPathAntType#?#-1:String
testFileSet#?#-1:String
testConditionTask#?#-1:String
testNestedB#?#-1:String" shape=ellipse]
13 [label="testEchoToLog#?#3:\"Processing File\"
testTimeoutNot#?#3:\"fork-timeout-not\"
testOverrideWinsInheritAll#?#3:\"test-property-override-inheritall-start\"
testAddConfiguredValue#?#3:\"myaddconfiguredvalue\"
testPath#?#3:\"path\"
testNestedC#?#3:\"add C called\"
testAddConfigured#?#3:\"value is Value Setexecute: value is Value Set\"
testOverrideWinsNoInheritAll#?#3:\"test-property-override-no-inheritall-start\"
testFileSetAntType#?#3:\"fileset-ant-type\"
testNestedA#?#3:\"add A called\"
testForkXml#?#3:\"fork-xml\"
testFork#?#3:\"fork\"
testInheritRefFileSet#?#3:\"calltarget.xml\"
testConditionConditionType#?#3:\"My Condition eval\"
testConditionType#?#3:\"beforeafter\"
testPathAntType#?#3:\"path-ant-type\"
testFileSet#?#3:\"types.FileSet\"
testConditionTask#?#3:\"My Condition execution\"
testNestedB#?#3:\"add B called\"" shape=ellipse]
14 [label="testEchoToLog#?#-1:String
testTimeoutNot#?#-1:String
testOverrideWinsInheritAll#?#-1:String
testAddConfiguredValue#?#-1:String
testPath#?#-1:String
testNestedC#?#-1:String
testAddConfigured#?#-1:String
testOverrideWinsNoInheritAll#?#-1:String
testFileSetAntType#?#-1:String
testNestedA#?#-1:String
testForkXml#?#-1:String
testFork#?#-1:String
testInheritRefFileSet#?#-1:String
testConditionConditionType#?#-1:String
testConditionType#?#-1:String
testPathAntType#?#-1:String
testFileSet#?#-1:String
testConditionTask#?#-1:String
testNestedB#?#-1:String" shape=ellipse]
15 [label="testEchoToLog#?#5:AntAssert.assertContains(\"Processing File\", buildRule.getLog())
testTimeoutNot#?#5:AntAssert.assertContains(\"Package: org.apache.tools.ant.util.facade\", buildRule.getLog())
testOverrideWinsInheritAll#?#5:AntAssert.assertContains(\"The value of test is 4\", buildRule.getLog())
testAddConfiguredValue#?#5:AntAssert.assertContains(\"value is Value Setexecute: value is Value Set\", buildRule.getLog())
testPath#?#5:AntAssert.assertContains(\"types.Path\", buildRule.getLog())
testNestedC#?#5:AntAssert.assertContains(\"add C called\", buildRule.getLog())
testAddConfigured#?#5:AntAssert.assertContains(\"value is Value Setexecute: value is Value Set\", buildRule.getLog())
testOverrideWinsNoInheritAll#?#5:AntAssert.assertContains(\"The value of test is 4\", buildRule.getLog())
testFileSetAntType#?#5:AntAssert.assertContains(\"types.PolyTest$MyFileSet\", buildRule.getLog())
testNestedA#?#5:AntAssert.assertContains(\"add A called\", buildRule.getLog())
testForkXml#?#5:AntAssert.assertContains(\"<DependsUpon>\", buildRule.getLog())
testFork#?#5:AntAssert.assertContains(\"Package: org.apache.tools.ant.util.facade\", buildRule.getLog())
testInheritRefFileSet#?#5:AntAssert.assertContains(\"calltarget.xml\", buildRule.getLog())
testConditionConditionType#?#5:AntAssert.assertContains(\"My Condition eval\", buildRule.getLog())
testConditionType#?#5:AntAssert.assertContains(\"beforeafter\", buildRule.getLog())
testPathAntType#?#5:AntAssert.assertContains(\"types.PolyTest$MyPath\", buildRule.getLog())
testFileSet#?#5:AntAssert.assertContains(\"types.FileSet\", buildRule.getLog())
testConditionTask#?#5:AntAssert.assertContains(\"My Condition execution\", buildRule.getLog())
testNestedB#?#5:AntAssert.assertContains(\"add B called\", buildRule.getLog())" shape=ellipse]
0 -> 15 [label="Action:19"];
1 -> 0 [label="Action:19"];
1 -> 4 [label="AST:19"];
1 -> 5 [label="AST:19"];
1 -> 8 [label="AST:19"];
1 -> 11 [label="AST:19"];
1 -> 13 [label="AST:19"];
2 -> 1 [label="AST:19"];
3 -> 2 [label="AST:19"];
5 -> 6 [label="AST:19"];
5 -> 7 [label="AST:19"];
8 -> 9 [label="AST:19"];
8 -> 10 [label="AST:19"];
11 -> 12 [label="AST:19"];
13 -> 14 [label="AST:19"];
}