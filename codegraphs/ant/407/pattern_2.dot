digraph "Pattern" {
0 [label="testEchoToLog#?#2:INSERT
testTimeoutNot#?#2:INSERT
testOverrideWinsInheritAll#?#2:INSERT
testAddConfiguredValue#?#2:INSERT
testPath#?#2:INSERT
testNestedC#?#2:INSERT
testAddConfigured#?#2:INSERT
testOverrideWinsNoInheritAll#?#2:INSERT
testFileSetAntType#?#2:INSERT
testNestedA#?#2:INSERT
testForkXml#?#2:INSERT
testFork#?#2:INSERT
testInheritRefFileSet#?#2:INSERT
testConditionConditionType#?#2:INSERT
testConditionType#?#2:INSERT
testPathAntType#?#2:INSERT
testFileSet#?#2:INSERT
testConditionTask#?#2:INSERT
testNestedB#?#2:INSERT" shape=ellipse]
1 [label="testEchoToLog#?#2:public void testEchoToLog() \{
    expectLogContaining(\"testEchoToLog\", \"Processing File\");
\}
testTimeoutNot#?#2:public void testTimeoutNot() \{
    expectLogContaining(\"fork-timeout-not\", \"Package: org.apache.tools.ant.util.facade\");
\}
testOverrideWinsInheritAll#?#2:public void testOverrideWinsInheritAll() \{
    expectLogContaining(\"test-property-override-inheritall-start\", \"The value of test is 4\");
\}
testAddConfiguredValue#?#2:public void testAddConfiguredValue() \{
    expectLogContaining(\"myaddconfiguredvalue\", \"value is Value Setexecute: value is Value Set\");
\}
testPath#?#2:public void testPath() \{
    expectLogContaining(\"path\", \"types.Path\");
\}
testNestedC#?#2:public void testNestedC() \{
    expectLogContaining(\"nested.c\", \"add C called\");
\}
testAddConfigured#?#2:public void testAddConfigured() \{
    expectLogContaining(\"myaddconfigured\", \"value is Value Setexecute: value is Value Set\");
\}
testOverrideWinsNoInheritAll#?#2:public void testOverrideWinsNoInheritAll() \{
    expectLogContaining(\"test-property-override-no-inheritall-start\", \"The value of test is 4\");
\}
testFileSetAntType#?#2:public void testFileSetAntType() \{
    expectLogContaining(\"fileset-ant-type\", \"types.PolyTest$MyFileSet\");
\}
testNestedA#?#2:public void testNestedA() \{
    expectLogContaining(\"nested.a\", \"add A called\");
\}
testForkXml#?#2:public void testForkXml() \{
    expectLogContaining(\"fork-xml\", \"<DependsUpon>\");
\}
testFork#?#2:public void testFork() \{
    expectLogContaining(\"fork\", \"Package: org.apache.tools.ant.util.facade\");
\}
testInheritRefFileSet#?#2:public void testInheritRefFileSet() \{
    expectLogContaining(\"testinheritreffileset\", \"calltarget.xml\");
\}
testConditionConditionType#?#2:public void testConditionConditionType() \{
    expectLogContaining(\"condition.condition.type\", \"My Condition eval\");
\}
testConditionType#?#2:public void testConditionType() \{
    expectLogContaining(\"condition.type\", \"beforeafter\");
\}
testPathAntType#?#2:public void testPathAntType() \{
    expectLogContaining(\"path-ant-type\", \"types.PolyTest$MyPath\");
\}
testFileSet#?#2:public void testFileSet() \{
    expectLogContaining(\"fileset\", \"types.FileSet\");
\}
testConditionTask#?#2:public void testConditionTask() \{
    expectLogContaining(\"condition.task\", \"My Condition execution\");
\}
testNestedB#?#2:public void testNestedB() \{
    expectLogContaining(\"nested.b\", \"add B called\");
\}" shape=ellipse]
2 [label="testEchoToLog#?#2:testEchoToLog
testTimeoutNot#?#2:testTimeoutNot
testOverrideWinsInheritAll#?#2:VE: Modifiers_Method
testAddConfiguredValue#?#2:VE: Modifiers_Method
testPath#?#2:testPath
testNestedC#?#2:VE: Modifiers_Method
testAddConfigured#?#2:VE: Modifiers_Method
testOverrideWinsNoInheritAll#?#2:VE: Modifiers_Method
testFileSetAntType#?#2:VE: Modifiers_Method
testNestedA#?#2:VE: Modifiers_Method
testForkXml#?#2:VE: Modifiers_Method
testFork#?#2:VE: Modifiers_Method
testInheritRefFileSet#?#2:VE: Modifiers_Method
testConditionConditionType#?#2:VE: Modifiers_Method
testConditionType#?#2:VE: Modifiers_Method
testPathAntType#?#2:VE: Modifiers_Method
testFileSet#?#2:VE: Modifiers_Method
testConditionTask#?#2:VE: Modifiers_Method
testNestedB#?#2:VE: Modifiers_Method" shape=ellipse]
3 [label="testEchoToLog#?#2:void
testTimeoutNot#?#2:void
testOverrideWinsInheritAll#?#2:void
testAddConfiguredValue#?#2:void
testPath#?#2:void
testNestedC#?#2:void
testAddConfigured#?#2:void
testOverrideWinsNoInheritAll#?#2:void
testFileSetAntType#?#2:void
testNestedA#?#2:void
testForkXml#?#2:void
testFork#?#2:void
testInheritRefFileSet#?#2:void
testConditionConditionType#?#2:void
testConditionType#?#2:void
testPathAntType#?#2:void
testFileSet#?#2:void
testConditionTask#?#2:void
testNestedB#?#2:void" shape=ellipse]
4 [label="testEchoToLog#?#2:\{
    expectLogContaining(\"testEchoToLog\", \"Processing File\");
\}
testTimeoutNot#?#2:\{
    expectLogContaining(\"fork-timeout-not\", \"Package: org.apache.tools.ant.util.facade\");
\}
testOverrideWinsInheritAll#?#2:\{
    expectLogContaining(\"test-property-override-inheritall-start\", \"The value of test is 4\");
\}
testAddConfiguredValue#?#2:\{
    expectLogContaining(\"myaddconfiguredvalue\", \"value is Value Setexecute: value is Value Set\");
\}
testPath#?#2:\{
    expectLogContaining(\"path\", \"types.Path\");
\}
testNestedC#?#2:\{
    expectLogContaining(\"nested.c\", \"add C called\");
\}
testAddConfigured#?#2:\{
    expectLogContaining(\"myaddconfigured\", \"value is Value Setexecute: value is Value Set\");
\}
testOverrideWinsNoInheritAll#?#2:\{
    expectLogContaining(\"test-property-override-no-inheritall-start\", \"The value of test is 4\");
\}
testFileSetAntType#?#2:\{
    expectLogContaining(\"fileset-ant-type\", \"types.PolyTest$MyFileSet\");
\}
testNestedA#?#2:\{
    expectLogContaining(\"nested.a\", \"add A called\");
\}
testForkXml#?#2:\{
    expectLogContaining(\"fork-xml\", \"<DependsUpon>\");
\}
testFork#?#2:\{
    expectLogContaining(\"fork\", \"Package: org.apache.tools.ant.util.facade\");
\}
testInheritRefFileSet#?#2:\{
    expectLogContaining(\"testinheritreffileset\", \"calltarget.xml\");
\}
testConditionConditionType#?#2:\{
    expectLogContaining(\"condition.condition.type\", \"My Condition eval\");
\}
testConditionType#?#2:\{
    expectLogContaining(\"condition.type\", \"beforeafter\");
\}
testPathAntType#?#2:\{
    expectLogContaining(\"path-ant-type\", \"types.PolyTest$MyPath\");
\}
testFileSet#?#2:\{
    expectLogContaining(\"fileset\", \"types.FileSet\");
\}
testConditionTask#?#2:\{
    expectLogContaining(\"condition.task\", \"My Condition execution\");
\}
testNestedB#?#2:\{
    expectLogContaining(\"nested.b\", \"add B called\");
\}" shape=ellipse]
5 [label="testEchoToLog#?#3:expectLogContaining(\"testEchoToLog\", \"Processing File\")
testTimeoutNot#?#3:expectLogContaining(\"fork-timeout-not\", \"Package: org.apache.tools.ant.util.facade\")
testOverrideWinsInheritAll#?#3:expectLogContaining(\"test-property-override-inheritall-start\", \"The value of test is 4\")
testAddConfiguredValue#?#3:expectLogContaining(\"myaddconfiguredvalue\", \"value is Value Setexecute: value is Value Set\")
testPath#?#3:expectLogContaining(\"path\", \"types.Path\")
testNestedC#?#3:expectLogContaining(\"nested.c\", \"add C called\")
testAddConfigured#?#3:expectLogContaining(\"myaddconfigured\", \"value is Value Setexecute: value is Value Set\")
testOverrideWinsNoInheritAll#?#3:expectLogContaining(\"test-property-override-no-inheritall-start\", \"The value of test is 4\")
testFileSetAntType#?#3:expectLogContaining(\"fileset-ant-type\", \"types.PolyTest$MyFileSet\")
testNestedA#?#3:expectLogContaining(\"nested.a\", \"add A called\")
testForkXml#?#3:expectLogContaining(\"fork-xml\", \"<DependsUpon>\")
testFork#?#3:expectLogContaining(\"fork\", \"Package: org.apache.tools.ant.util.facade\")
testInheritRefFileSet#?#3:expectLogContaining(\"testinheritreffileset\", \"calltarget.xml\")
testConditionConditionType#?#3:expectLogContaining(\"condition.condition.type\", \"My Condition eval\")
testConditionType#?#3:expectLogContaining(\"condition.type\", \"beforeafter\")
testPathAntType#?#3:expectLogContaining(\"path-ant-type\", \"types.PolyTest$MyPath\")
testFileSet#?#3:expectLogContaining(\"fileset\", \"types.FileSet\")
testConditionTask#?#3:expectLogContaining(\"condition.task\", \"My Condition execution\")
testNestedB#?#3:expectLogContaining(\"nested.b\", \"add B called\")" shape=ellipse]
6 [label="testEchoToLog#?#2:public
testTimeoutNot#?#2:public
testOverrideWinsInheritAll#?#2:public
testAddConfiguredValue#?#2:public
testPath#?#2:public
testNestedC#?#2:public
testAddConfigured#?#2:public
testOverrideWinsNoInheritAll#?#2:public
testFileSetAntType#?#2:public
testNestedA#?#2:public
testForkXml#?#2:public
testFork#?#2:public
testInheritRefFileSet#?#2:public
testConditionConditionType#?#2:public
testConditionType#?#2:public
testPathAntType#?#2:public
testFileSet#?#2:public
testConditionTask#?#2:public
testNestedB#?#2:public" shape=ellipse]
7 [label="testEchoToLog#?#2:VE: Modifiers_Method
testTimeoutNot#?#2:VE: Modifiers_Method
testOverrideWinsInheritAll#?#2:testOverrideWinsInheritAll
testAddConfiguredValue#?#2:testAddConfiguredValue
testPath#?#2:VE: Modifiers_Method
testNestedC#?#2:testNestedC
testAddConfigured#?#2:testAddConfigured
testOverrideWinsNoInheritAll#?#2:testOverrideWinsNoInheritAll
testFileSetAntType#?#2:testFileSetAntType
testNestedA#?#2:testNestedA
testForkXml#?#2:testForkXml
testFork#?#2:testFork
testInheritRefFileSet#?#2:testInheritRefFileSet
testConditionConditionType#?#2:testConditionConditionType
testConditionType#?#2:testConditionType
testPathAntType#?#2:testPathAntType
testFileSet#?#2:testFileSet
testConditionTask#?#2:testConditionTask
testNestedB#?#2:testNestedB" shape=ellipse]
8 [label="testEchoToLog#?#4:INSERT
testTimeoutNot#?#4:INSERT
testOverrideWinsInheritAll#?#4:INSERT
testAddConfiguredValue#?#4:INSERT
testPath#?#4:INSERT
testNestedC#?#4:INSERT
testAddConfigured#?#4:INSERT
testOverrideWinsNoInheritAll#?#4:INSERT
testFileSetAntType#?#4:INSERT
testNestedA#?#4:INSERT
testForkXml#?#4:INSERT
testFork#?#4:INSERT
testInheritRefFileSet#?#4:INSERT
testConditionConditionType#?#4:INSERT
testConditionType#?#4:INSERT
testPathAntType#?#4:INSERT
testFileSet#?#4:INSERT
testConditionTask#?#4:INSERT
testNestedB#?#4:INSERT" shape=ellipse]
9 [label="testEchoToLog#?#4:buildRule.executeTarget(\"testEchoToLog\")
testTimeoutNot#?#4:buildRule.executeTarget(\"fork-timeout-not\")
testOverrideWinsInheritAll#?#4:buildRule.executeTarget(\"test-property-override-inheritall-start\")
testAddConfiguredValue#?#4:buildRule.executeTarget(\"myaddconfiguredvalue\")
testPath#?#4:buildRule.executeTarget(\"path\")
testNestedC#?#4:buildRule.executeTarget(\"nested.c\")
testAddConfigured#?#4:buildRule.executeTarget(\"myaddconfigured\")
testOverrideWinsNoInheritAll#?#4:buildRule.executeTarget(\"test-property-override-no-inheritall-start\")
testFileSetAntType#?#4:buildRule.executeTarget(\"fileset-ant-type\")
testNestedA#?#4:buildRule.executeTarget(\"nested.a\")
testForkXml#?#4:buildRule.executeTarget(\"fork-xml\")
testFork#?#4:buildRule.executeTarget(\"fork\")
testInheritRefFileSet#?#4:buildRule.executeTarget(\"testinheritreffileset\")
testConditionConditionType#?#4:buildRule.executeTarget(\"condition.condition.type\")
testConditionType#?#4:buildRule.executeTarget(\"condition.type\")
testPathAntType#?#4:buildRule.executeTarget(\"path-ant-type\")
testFileSet#?#4:buildRule.executeTarget(\"fileset\")
testConditionTask#?#4:buildRule.executeTarget(\"condition.task\")
testNestedB#?#4:buildRule.executeTarget(\"nested.b\")" shape=ellipse]
10 [label="testEchoToLog#?#2:@Test
testTimeoutNot#?#2:@Test
testOverrideWinsInheritAll#?#2:@Test
testAddConfiguredValue#?#2:@Test
testPath#?#2:@Test
testNestedC#?#2:@Test
testAddConfigured#?#2:@Test
testOverrideWinsNoInheritAll#?#2:@Test
testFileSetAntType#?#2:@Test
testNestedA#?#2:@Test
testForkXml#?#2:@Test
testFork#?#2:@Test
testInheritRefFileSet#?#2:@Test
testConditionConditionType#?#2:@Test
testConditionType#?#2:@Test
testPathAntType#?#2:@Test
testFileSet#?#2:@Test
testConditionTask#?#2:@Test
testNestedB#?#2:@Test" shape=ellipse]
0 -> 10 [label="Action:19"];
1 -> 0 [label="Action:19"];
1 -> 2 [label="AST:19"];
1 -> 3 [label="AST:19"];
1 -> 4 [label="AST:19"];
1 -> 6 [label="AST:19"];
1 -> 7 [label="AST:19"];
1 -> 8 [label="Action:19"];
4 -> 5 [label="AST:19"];
8 -> 9 [label="Action:19"];
}