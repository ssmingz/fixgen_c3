digraph "Pattern" {
0 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:INSERT
supportsNestedElement#?,String,String#12:INSERT" shape=ellipse]
1 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:if (uri.equals(parentUri)) \{
    nc = ((NestedCreator) (nestedCreators.get(name.toLowerCase(US))));
\}" shape=ellipse]
2 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#4:\{
    String uri = ProjectHelper.extractUriFromComponentName(elementName);
    String name = ProjectHelper.extractNameFromComponentName(elementName);
    if (uri.equals(ANT_CORE_URI)) \{
        uri = \"\";
    \}
    if (parentUri.equals(ANT_CORE_URI)) \{
        parentUri = \"\";
    \}
    NestedCreator nc = null;
    if (uri.equals(parentUri)) \{
        nc = ((NestedCreator) (nestedCreators.get(name.toLowerCase(US))));
    \}
    if (nc == null) \{
        nc = createAddTypeCreator(project, parent, elementName);
    \}
    if ((nc == null) && (parent instanceof DynamicElementNS)) \{
        DynamicElementNS dc = ((DynamicElementNS) (parent));
        String qName = (child == null) ? name : child.getQName();
        final Object nestedElement = dc.createDynamicElement(child == null ? \"\" : child.getNamespace(), name, qName);
        if (nestedElement != null) \{
            nc = new NestedCreator() \{
                public boolean isPolyMorphic() \{
                    return false;
                \}

                public Class getElementClass() \{
                    return null;
                \}

                public Object getRealObject() \{
                    return null;
                \}

                public Object create(Project project, Object parent, Object ignore) \{
                    return nestedElement;
                \}

                public void store(Object parent, Object child) \{
                \}
            \};
        \}
    \}
    if ((nc == null) && (parent instanceof DynamicElement)) \{
        DynamicElement dc = ((DynamicElement) (parent));
        final Object nestedElement = dc.createDynamicElement(name.toLowerCase(US));
        if (nestedElement != null) \{
            nc = new NestedCreator() \{
                public boolean isPolyMorphic() \{
                    return false;
                \}

                public Class getElementClass() \{
                    return null;
                \}

                public Object getRealObject() \{
                    return null;
                \}

                public Object create(Project project, Object parent, Object ignore) \{
                    return nestedElement;
                \}

                public void store(Object parent, Object child) \{
                \}
            \};
        \}
    \}
    if (nc == null) \{
        throwNotSupported(project, parent, elementName);
    \}
    return nc;
\}" shape=ellipse]
3 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#2:private NestedCreator getNestedCreator(Project project, String parentUri, Object parent, String elementName, UnknownElement child) throws BuildException \{
    String uri = ProjectHelper.extractUriFromComponentName(elementName);
    String name = ProjectHelper.extractNameFromComponentName(elementName);
    if (uri.equals(ANT_CORE_URI)) \{
        uri = \"\";
    \}
    if (parentUri.equals(ANT_CORE_URI)) \{
        parentUri = \"\";
    \}
    NestedCreator nc = null;
    if (uri.equals(parentUri)) \{
        nc = ((NestedCreator) (nestedCreators.get(name.toLowerCase(US))));
    \}
    if (nc == null) \{
        nc = createAddTypeCreator(project, parent, elementName);
    \}
    if ((nc == null) && (parent instanceof DynamicElementNS)) \{
        DynamicElementNS dc = ((DynamicElementNS) (parent));
        String qName = (child == null) ? name : child.getQName();
        final Object nestedElement = dc.createDynamicElement(child == null ? \"\" : child.getNamespace(), name, qName);
        if (nestedElement != null) \{
            nc = new NestedCreator() \{
                public boolean isPolyMorphic() \{
                    return false;
                \}

                public Class getElementClass() \{
                    return null;
                \}

                public Object getRealObject() \{
                    return null;
                \}

                public Object create(Project project, Object parent, Object ignore) \{
                    return nestedElement;
                \}

                public void store(Object parent, Object child) \{
                \}
            \};
        \}
    \}
    if ((nc == null) && (parent instanceof DynamicElement)) \{
        DynamicElement dc = ((DynamicElement) (parent));
        final Object nestedElement = dc.createDynamicElement(name.toLowerCase(US));
        if (nestedElement != null) \{
            nc = new NestedCreator() \{
                public boolean isPolyMorphic() \{
                    return false;
                \}

                public Class getElementClass() \{
                    return null;
                \}

                public Object getRealObject() \{
                    return null;
                \}

                public Object create(Project project, Object parent, Object ignore) \{
                    return nestedElement;
                \}

                public void store(Object parent, Object child) \{
                \}
            \};
        \}
    \}
    if (nc == null) \{
        throwNotSupported(project, parent, elementName);
    \}
    return nc;
\}" shape=ellipse]
4 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#5:String uri = ProjectHelper.extractUriFromComponentName(elementName)
supportsNestedElement#?,String,String#11:parentUri" shape=ellipse]
5 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#6:String name = ProjectHelper.extractNameFromComponentName(elementName)
supportsNestedElement#?,String,String#11:nestedCreators" shape=ellipse]
6 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#7:if (uri.equals(ANT_CORE_URI)) \{
    uri = \"\";
\}" shape=ellipse]
7 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#10:if (parentUri.equals(ANT_CORE_URI)) \{
    parentUri = \"\";
\}" shape=ellipse]
8 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#13:NestedCreator nc = null
supportsNestedElement#?,String,String#11:uri" shape=ellipse]
9 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#17:if (nc == null) \{
    nc = createAddTypeCreator(project, parent, elementName);
\}" shape=ellipse]
10 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#20:if ((nc == null) && (parent instanceof DynamicElementNS)) \{
    DynamicElementNS dc = ((DynamicElementNS) (parent));
    String qName = (child == null) ? name : child.getQName();
    final Object nestedElement = dc.createDynamicElement(child == null ? \"\" : child.getNamespace(), name, qName);
    if (nestedElement != null) \{
        nc = new NestedCreator() \{
            public boolean isPolyMorphic() \{
                return false;
            \}

            public Class getElementClass() \{
                return null;
            \}

            public Object getRealObject() \{
                return null;
            \}

            public Object create(Project project, Object parent, Object ignore) \{
                return nestedElement;
            \}

            public void store(Object parent, Object child) \{
            \}
        \};
    \}
\}" shape=ellipse]
11 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#48:if ((nc == null) && (parent instanceof DynamicElement)) \{
    DynamicElement dc = ((DynamicElement) (parent));
    final Object nestedElement = dc.createDynamicElement(name.toLowerCase(US));
    if (nestedElement != null) \{
        nc = new NestedCreator() \{
            public boolean isPolyMorphic() \{
                return false;
            \}

            public Class getElementClass() \{
                return null;
            \}

            public Object getRealObject() \{
                return null;
            \}

            public Object create(Project project, Object parent, Object ignore) \{
                return nestedElement;
            \}

            public void store(Object parent, Object child) \{
            \}
        \};
    \}
\}" shape=ellipse]
12 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#74:if (nc == null) \{
    throwNotSupported(project, parent, elementName);
\}" shape=ellipse]
13 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#77:return nc" shape=ellipse]
14 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:uri.equals(parentUri)
supportsNestedElement#?,String,String#11:name.toLowerCase(US)" shape=ellipse]
15 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:equals" shape=ellipse]
16 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:uri" shape=ellipse]
17 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:equals(java.lang.Object)" shape=ellipse]
18 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:parentUri" shape=ellipse]
19 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:\{
    nc = ((NestedCreator) (nestedCreators.get(name.toLowerCase(US))));
\}" shape=ellipse]
20 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:nc = ((NestedCreator) (nestedCreators.get(name.toLowerCase(US))))" shape=ellipse]
21 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:nc" shape=ellipse]
22 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:((NestedCreator) (nestedCreators.get(name.toLowerCase(US))))" shape=ellipse]
23 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:get()" shape=ellipse]
24 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:nestedCreators" shape=ellipse]
25 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:name.toLowerCase(US)" shape=ellipse]
26 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:toLowerCase(java.util.Locale)" shape=ellipse]
27 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:name" shape=ellipse]
28 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:US" shape=ellipse]
29 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:MOVE" shape=ellipse]
30 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#14:uri.equals(parentUri) || uri.equals(\"\")
supportsNestedElement#?,String,String#12:(uri.equals(parentUri) || uri.equals(\"\"))" shape=ellipse]
31 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:get()" shape=ellipse]
32 [label="getNestedCreator#?,Project,String,Object,String,UnknownElement#15:toLowerCase(java.util.Locale)" shape=ellipse]
33 [label="supportsNestedElement#?,String,String#11:(nestedCreators.containsKey(name.toLowerCase(US)) && uri.equals(parentUri))" shape=ellipse]
34 [label="supportsNestedElement#?,String,String#11:uri.equals(parentUri)" shape=ellipse]
35 [label="supportsNestedElement#?,String,String#11:containsKey" shape=ellipse]
36 [label="supportsNestedElement#?,String,String#11:equals(java.lang.Object)" shape=ellipse]
37 [label="supportsNestedElement#?,String,String#11:(((nestedCreators.containsKey(name.toLowerCase(US)) && uri.equals(parentUri)) || DynamicElement.class.isAssignableFrom(bean)) || DynamicElementNS.class.isAssignableFrom(bean))" shape=ellipse]
38 [label="supportsNestedElement#?,String,String#11:equals" shape=ellipse]
39 [label="supportsNestedElement#?,String,String#11:nestedCreators.containsKey(name.toLowerCase(US))" shape=ellipse]
40 [label="supportsNestedElement#?,String,String#11:MOVE" shape=ellipse]
41 [label="supportsNestedElement#?,String,String#11:containsKey()" shape=ellipse]
42 [label="supportsNestedElement#?,String,String#11:((nestedCreators.containsKey(name.toLowerCase(US)) && uri.equals(parentUri)) || DynamicElement.class.isAssignableFrom(bean))" shape=ellipse]
43 [label="supportsNestedElement#?,String,String#12:DynamicElement.class.isAssignableFrom(bean)" shape=ellipse]
0 -> 30 [label="Action:2"];
1 -> 0 [label="Action:1"];
1 -> 14 [label="AST:1"];
1 -> 19 [label="AST:1"];
2 -> 1 [label="AST:1"];
2 -> 4 [label="AST:1"];
2 -> 5 [label="AST:1"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="AST:1"];
2 -> 8 [label="AST:1"];
2 -> 9 [label="AST:1"];
2 -> 10 [label="AST:1"];
2 -> 11 [label="AST:1"];
2 -> 12 [label="AST:1"];
2 -> 13 [label="AST:1"];
3 -> 2 [label="AST:1"];
14 -> 15 [label="AST:1"];
14 -> 16 [label="AST:1"];
14 -> 17 [label="AST:1"];
14 -> 18 [label="AST:1"];
14 -> 19 [label="Control Dep:1"];
14 -> 20 [label="Control Dep:1"];
14 -> 21 [label="Control Dep:1"];
14 -> 22 [label="Control Dep:1"];
14 -> 23 [label="Control Dep:1"];
14 -> 24 [label="Control Dep:1"];
14 -> 25 [label="Control Dep:1"];
14 -> 26 [label="Control Dep:1"];
14 -> 27 [label="Control Dep:1"];
14 -> 28 [label="Control Dep:1"];
14 -> 29 [label="Action:1"];
19 -> 20 [label="AST:1"];
20 -> 21 [label="AST:1"];
20 -> 22 [label="AST:1"];
22 -> 24 [label="AST:1"];
22 -> 23 [label="AST:1"];
22 -> 25 [label="AST:1"];
24 -> 21 [label="Data Dep:1"];
25 -> 27 [label="AST:1"];
25 -> 26 [label="AST:1"];
25 -> 28 [label="AST:1"];
27 -> 21 [label="Data Dep:1"];
29 -> 30 [label="Action:1"];
30 -> 31 [label="Control Dep:1"];
30 -> 32 [label="Control Dep:1"];
33 -> 39 [label="AST:1"];
33 -> 34 [label="AST:1"];
33 -> 0 [label="Action:1"];
34 -> 38 [label="AST:1"];
34 -> 8 [label="AST:1"];
34 -> 36 [label="AST:1"];
34 -> 4 [label="AST:1"];
34 -> 40 [label="Action:1"];
37 -> 42 [label="AST:1"];
39 -> 35 [label="AST:1"];
39 -> 5 [label="AST:1"];
39 -> 41 [label="AST:1"];
39 -> 14 [label="AST:1"];
40 -> 30 [label="Action:1"];
42 -> 33 [label="AST:1"];
42 -> 43 [label="AST:1"];
}