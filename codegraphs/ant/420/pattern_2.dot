digraph "Pattern" {
0 [label="test3#?#2:INSERT
test2#?#2:INSERT
test4#?#2:INSERT" shape=ellipse]
1 [label="test3#?#2:public void test3() \{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test3 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= (2000 - ERROR_RANGE));
\}
test2#?#2:public void test2() \{
    Timer timer = new Timer();
    executeTarget(\"test2\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test2 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= 0);
\}
test4#?#2:public void test4() \{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test4 elapsed time=\" + timer.time());
    \}
    assertTrue((timer.time() >= (2000 - ERROR_RANGE)) && (timer.time() < 60000));
\}" shape=ellipse]
2 [label="test3#?#2:test3
test2#?#2:test2
test4#?#2:test4" shape=ellipse]
3 [label="test3#?#2:void
test2#?#2:void
test4#?#2:void" shape=ellipse]
4 [label="test3#?#2:\{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test3 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= (2000 - ERROR_RANGE));
\}
test2#?#2:\{
    Timer timer = new Timer();
    executeTarget(\"test2\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test2 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= 0);
\}
test4#?#2:\{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test4 elapsed time=\" + timer.time());
    \}
    assertTrue((timer.time() >= (2000 - ERROR_RANGE)) && (timer.time() < 60000));
\}" shape=ellipse]
5 [label="test3#?#3:Timer timer = new Timer()
test2#?#3:Timer timer = new Timer()
test4#?#3:Timer timer = new Timer()" shape=ellipse]
6 [label="test3#?#4:executeTarget(\"test3\")
test2#?#4:executeTarget(\"test2\")
test4#?#4:executeTarget(\"test3\")" shape=ellipse]
7 [label="test3#?#5:timer.stop()
test2#?#5:timer.stop()
test4#?#5:timer.stop()" shape=ellipse]
8 [label="test3#?#6:if (TRACE) \{
    System.out.println(\" test3 elapsed time=\" + timer.time());
\}
test2#?#6:if (TRACE) \{
    System.out.println(\" test2 elapsed time=\" + timer.time());
\}
test4#?#6:if (TRACE) \{
    System.out.println(\" test4 elapsed time=\" + timer.time());
\}" shape=ellipse]
9 [label="test3#?#9:assertTrue(timer.time() >= (2000 - ERROR_RANGE))
test2#?#9:assertTrue(timer.time() >= 0)
test4#?#9:assertTrue((timer.time() >= (2000 - ERROR_RANGE)) && (timer.time() < 60000))" shape=ellipse]
10 [label="test3#?#2:VE: Modifiers_Method
test2#?#2:VE: Modifiers_Method
test4#?#2:VE: Modifiers_Method" shape=ellipse]
11 [label="test3#?#2:public
test2#?#2:public
test4#?#2:public" shape=ellipse]
12 [label="test3#?#2:@Test
test2#?#2:@Test
test4#?#2:@Test" shape=ellipse]
0 -> 12 [label="Action:3"];
1 -> 0 [label="Action:3"];
1 -> 2 [label="AST:3"];
1 -> 3 [label="AST:3"];
1 -> 4 [label="AST:3"];
1 -> 10 [label="AST:3"];
1 -> 11 [label="AST:3"];
4 -> 5 [label="AST:3"];
4 -> 6 [label="AST:3"];
4 -> 7 [label="AST:3"];
4 -> 8 [label="AST:3"];
4 -> 9 [label="AST:3"];
}