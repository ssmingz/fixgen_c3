digraph "Pattern" {
0 [label="test3#?#5:INSERT
test2#?#5:INSERT
test4#?#5:INSERT" shape=ellipse]
1 [label="test3#?#4:executeTarget(\"test3\")
test2#?#4:executeTarget(\"test2\")
test4#?#4:executeTarget(\"test3\")" shape=ellipse]
2 [label="test3#?#2:\{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test3 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= (2000 - ERROR_RANGE));
\}
test2#?#2:\{
    Timer timer = new Timer();
    executeTarget(\"test2\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test2 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= 0);
\}
test4#?#2:\{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test4 elapsed time=\" + timer.time());
    \}
    assertTrue((timer.time() >= (2000 - ERROR_RANGE)) && (timer.time() < 60000));
\}" shape=ellipse]
3 [label="test3#?#2:public void test3() \{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test3 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= (2000 - ERROR_RANGE));
\}
test2#?#2:public void test2() \{
    Timer timer = new Timer();
    executeTarget(\"test2\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test2 elapsed time=\" + timer.time());
    \}
    assertTrue(timer.time() >= 0);
\}
test4#?#2:public void test4() \{
    Timer timer = new Timer();
    executeTarget(\"test3\");
    timer.stop();
    if (TRACE) \{
        System.out.println(\" test4 elapsed time=\" + timer.time());
    \}
    assertTrue((timer.time() >= (2000 - ERROR_RANGE)) && (timer.time() < 60000));
\}" shape=ellipse]
4 [label="test3#?#3:Timer timer = new Timer()
test2#?#3:Timer timer = new Timer()
test4#?#3:Timer timer = new Timer()" shape=ellipse]
5 [label="test3#?#5:timer.stop()
test2#?#5:timer.stop()
test4#?#5:timer.stop()" shape=ellipse]
6 [label="test3#?#6:if (TRACE) \{
    System.out.println(\" test3 elapsed time=\" + timer.time());
\}
test2#?#6:if (TRACE) \{
    System.out.println(\" test2 elapsed time=\" + timer.time());
\}
test4#?#6:if (TRACE) \{
    System.out.println(\" test4 elapsed time=\" + timer.time());
\}" shape=ellipse]
7 [label="test3#?#9:assertTrue(timer.time() >= (2000 - ERROR_RANGE))
test2#?#9:assertTrue(timer.time() >= 0)
test4#?#9:assertTrue((timer.time() >= (2000 - ERROR_RANGE)) && (timer.time() < 60000))" shape=ellipse]
8 [label="test3#?#4:executeTarget
test2#?#4:executeTarget
test4#?#4:executeTarget" shape=ellipse]
9 [label="test3#?#-1:
test2#?#-1:
test4#?#-1:" shape=ellipse]
10 [label="test3#?#-1:PlaceHold
test2#?#-1:PlaceHold
test4#?#-1:PlaceHold" shape=ellipse]
11 [label="test3#?#-1:PlaceHold
test2#?#-1:PlaceHold
test4#?#-1:PlaceHold" shape=ellipse]
12 [label="test3#?#4:executeTarget(java.lang.String)
test2#?#4:executeTarget(java.lang.String)
test4#?#4:executeTarget(java.lang.String)" shape=ellipse]
13 [label="test3#?#-1:String
test2#?#-1:String
test4#?#-1:String" shape=ellipse]
14 [label="test3#?#4:\"test3\"
test2#?#4:\"test2\"
test4#?#4:\"test3\"" shape=ellipse]
15 [label="test3#?#-1:String
test2#?#-1:String
test4#?#-1:String" shape=ellipse]
16 [label="test3#?#5:buildRule
test2#?#5:buildRule
test4#?#5:buildRule" shape=ellipse]
0 -> 16 [label="Action:3"];
1 -> 0 [label="Action:3"];
1 -> 8 [label="AST:3"];
1 -> 9 [label="AST:3"];
1 -> 12 [label="AST:3"];
1 -> 14 [label="AST:3"];
2 -> 1 [label="AST:3"];
2 -> 4 [label="AST:3"];
2 -> 5 [label="AST:3"];
2 -> 6 [label="AST:3"];
2 -> 7 [label="AST:3"];
3 -> 2 [label="AST:3"];
9 -> 10 [label="AST:3"];
9 -> 11 [label="AST:3"];
12 -> 13 [label="AST:3"];
14 -> 15 [label="AST:3"];
}