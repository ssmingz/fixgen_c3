digraph "Pattern" {
0 [label="test1#?#2:INSERT
test2#?#2:INSERT
testFullPathMatchesCaseSensitive#?#2:INSERT" shape=ellipse]
1 [label="test1#?#2:public void test1() \{
    if (loginSuceeded) \{
        if (changeRemoteDir(remoteTmpDir)) \{
            FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
            ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
            ds.setIncludes(new String[]\{ \"alpha\" \});
            ds.scan();
            compareFiles(ds, new String[]\{  \}, new String[]\{ \"alpha\" \});
        \}
    \}
\}
test2#?#2:public void test2() \{
    if (loginSuceeded) \{
        if (changeRemoteDir(remoteTmpDir)) \{
            FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
            ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
            ds.setIncludes(new String[]\{ \"alpha/\" \});
            ds.scan();
            compareFiles(ds, new String[]\{ \"alpha/beta/beta.xml\", \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{ \"alpha\", \"alpha/beta\", \"alpha/beta/gamma\" \});
        \}
    \}
\}
testFullPathMatchesCaseSensitive#?#2:public void testFullPathMatchesCaseSensitive() \{
    if (loginSuceeded) \{
        if (changeRemoteDir(remoteTmpDir)) \{
            FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
            ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
            ds.setIncludes(new String[]\{ \"alpha/beta/gamma/GAMMA.XML\" \});
            ds.scan();
            compareFiles(ds, new String[]\{  \}, new String[]\{  \});
        \}
    \}
\}" shape=ellipse]
2 [label="test1#?#5:MOVE
test2#?#5:MOVE
testFullPathMatchesCaseSensitive#?#5:MOVE" shape=ellipse]
3 [label="test1#?#5:FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp)
test2#?#5:FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp)
testFullPathMatchesCaseSensitive#?#5:FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp)" shape=ellipse]
4 [label="test1#?#6:MOVE
test2#?#6:MOVE
testFullPathMatchesCaseSensitive#?#6:MOVE" shape=ellipse]
5 [label="test1#?#6:ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"))
test2#?#6:ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"))
testFullPathMatchesCaseSensitive#?#6:ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"))" shape=ellipse]
6 [label="test1#?#7:MOVE
test2#?#7:MOVE
testFullPathMatchesCaseSensitive#?#7:MOVE" shape=ellipse]
7 [label="test1#?#7:ds.setIncludes(new String[]\{ \"alpha\" \})
test2#?#7:ds.setIncludes(new String[]\{ \"alpha/\" \})
testFullPathMatchesCaseSensitive#?#7:ds.setIncludes(new String[]\{ \"alpha/beta/gamma/GAMMA.XML\" \})" shape=ellipse]
8 [label="test1#?#8:MOVE
test2#?#8:MOVE
testFullPathMatchesCaseSensitive#?#8:MOVE" shape=ellipse]
9 [label="test1#?#8:ds.scan()
test2#?#8:ds.scan()
testFullPathMatchesCaseSensitive#?#8:ds.scan()" shape=ellipse]
10 [label="test1#?#9:MOVE
test2#?#9:MOVE
testFullPathMatchesCaseSensitive#?#9:MOVE" shape=ellipse]
11 [label="test1#?#9:compareFiles(ds, new String[]\{  \}, new String[]\{ \"alpha\" \})
test2#?#9:compareFiles(ds, new String[]\{ \"alpha/beta/beta.xml\", \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{ \"alpha\", \"alpha/beta\", \"alpha/beta/gamma\" \})
testFullPathMatchesCaseSensitive#?#9:compareFiles(ds, new String[]\{  \}, new String[]\{  \})" shape=ellipse]
12 [label="test1#?#4:INSERT
test2#?#4:INSERT
testFullPathMatchesCaseSensitive#?#4:INSERT" shape=ellipse]
13 [label="test1#?#4:Assume.assumeTrue(loginFailureMessage, loginSuceeded)
test2#?#4:Assume.assumeTrue(loginFailureMessage, loginSuceeded)
testFullPathMatchesCaseSensitive#?#4:Assume.assumeTrue(loginFailureMessage, loginSuceeded)" shape=ellipse]
14 [label="test1#?#5:INSERT
test2#?#5:INSERT
testFullPathMatchesCaseSensitive#?#5:INSERT" shape=ellipse]
15 [label="test1#?#5:Assume.assumeTrue(\"Could not change remote directory\", changeRemoteDir(remoteTmpDir))
test2#?#5:Assume.assumeTrue(\"Could not change remote directory\", changeRemoteDir(remoteTmpDir))
testFullPathMatchesCaseSensitive#?#5:Assume.assumeTrue(\"Could not change remote directory\", changeRemoteDir(remoteTmpDir))" shape=ellipse]
16 [label="test1#?#2:@Test
test2#?#2:@Test
testFullPathMatchesCaseSensitive#?#2:@Test" shape=ellipse]
0 -> 16 [label="Action:3"];
1 -> 0 [label="Action:3"];
1 -> 12 [label="Action:3"];
1 -> 14 [label="Action:3"];
2 -> 1 [label="Action:3"];
3 -> 2 [label="Action:3"];
4 -> 1 [label="Action:3"];
5 -> 4 [label="Action:3"];
6 -> 1 [label="Action:3"];
7 -> 6 [label="Action:3"];
8 -> 1 [label="Action:3"];
9 -> 8 [label="Action:3"];
10 -> 1 [label="Action:3"];
11 -> 10 [label="Action:3"];
12 -> 13 [label="Action:3"];
14 -> 15 [label="Action:3"];
}