digraph "doLoggable#?,Task,Configuration,Logger" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@doLoggable" shape=ellipse]
2 [label="3:CtParameterImpl@final Task task" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@Task" shape=ellipse]
4 [label="3:CtParameterImpl@final Configuration taskModel" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@Configuration" shape=ellipse]
6 [label="3:CtParameterImpl@final Logger logger" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@Logger" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@TaskException" shape=ellipse]
9 [label="4:CtVariableReadImpl@task" shape=ellipse]
10 [label="4:CtTypeAccessImpl@Loggable" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@Loggable" shape=ellipse]
12 [label="4:CtBinaryOperatorImpl@task instanceof Loggable" shape=ellipse]
13 [label="6:CtExecutableReferenceImpl@setLogger(Logger)" shape=ellipse]
14 [label="6:CtVirtualElement@setLogger" shape=ellipse]
15 [label="6:CtVariableReadImpl@((Loggable) (task))" shape=ellipse]
16 [label="6:CtTypeReferenceImpl@Loggable" shape=ellipse]
17 [label="6:CtVariableReadImpl@logger" shape=ellipse]
18 [label="6:CtInvocationImpl@((Loggable) (task)).setLogger(logger)" shape=ellipse]
19 [label="5:CtBlockImpl@\{
    ((Loggable) (task)).setLogger(logger);
\}" shape=ellipse]
20 [label="7:CtVirtualElement@throwable" shape=ellipse]
21 [label="7:CtTypeReferenceImpl@Throwable" shape=ellipse]
22 [label="7:CtCatchVariableImpl@final Throwable throwable" shape=ellipse]
23 [label="8:CtTypeReferenceImpl@TaskException" shape=ellipse]
24 [label="9:CtLiteralImpl@\"Error setting logger for task \"" shape=ellipse]
25 [label="9:CtExecutableReferenceImpl@getName()" shape=ellipse]
26 [label="9:CtVirtualElement@getName" shape=ellipse]
27 [label="9:CtVariableReadImpl@taskModel" shape=ellipse]
28 [label="9:CtInvocationImpl@taskModel.getName()" shape=ellipse]
29 [label="9:CtBinaryOperatorImpl@(\"Error setting logger for task \" + taskModel.getName())" shape=ellipse]
30 [label="9:CtLiteralImpl@\" at \"" shape=ellipse]
31 [label="9:CtBinaryOperatorImpl@((\"Error setting logger for task \" + taskModel.getName()) + \" at \")" shape=ellipse]
32 [label="10:CtExecutableReferenceImpl@getLocation()" shape=ellipse]
33 [label="10:CtVirtualElement@getLocation" shape=ellipse]
34 [label="10:CtVariableReadImpl@taskModel" shape=ellipse]
35 [label="10:CtInvocationImpl@taskModel.getLocation()" shape=ellipse]
36 [label="9:CtBinaryOperatorImpl@(((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation())" shape=ellipse]
37 [label="11:CtLiteralImpl@\"(Reason: \"" shape=ellipse]
38 [label="9:CtBinaryOperatorImpl@((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \")" shape=ellipse]
39 [label="12:CtExecutableReferenceImpl@getMessage()" shape=ellipse]
40 [label="12:CtVirtualElement@getMessage" shape=ellipse]
41 [label="12:CtVariableReadImpl@throwable" shape=ellipse]
42 [label="12:CtInvocationImpl@throwable.getMessage()" shape=ellipse]
43 [label="9:CtBinaryOperatorImpl@(((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage())" shape=ellipse]
44 [label="13:CtLiteralImpl@\")\"" shape=ellipse]
45 [label="9:CtBinaryOperatorImpl@(((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\"" shape=ellipse]
46 [label="14:CtVariableReadImpl@throwable" shape=ellipse]
47 [label="8:CtConstructorCallImpl@new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable)" shape=ellipse]
48 [label="8:CtThrowImpl@throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable)" shape=ellipse]
49 [label="7:CtBlockImpl@\{
    throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
\}" shape=ellipse]
50 [label="7:CtCatchImpl@ catch (final Throwable throwable) \{
    throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
\}" shape=ellipse]
51 [label="5:CtTryImpl@try \{
    ((Loggable) (task)).setLogger(logger);
\} catch (final Throwable throwable) \{
    throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
\}" shape=ellipse]
52 [label="4:CtBlockImpl@\{
    try \{
        ((Loggable) (task)).setLogger(logger);
    \} catch (final Throwable throwable) \{
        throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
    \}
\}" shape=ellipse]
53 [label="4:CtIfImpl@if (task instanceof Loggable) \{
    try \{
        ((Loggable) (task)).setLogger(logger);
    \} catch (final Throwable throwable) \{
        throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
    \}
\}" shape=ellipse]
54 [label="3:CtBlockImpl@\{
    if (task instanceof Loggable) \{
        try \{
            ((Loggable) (task)).setLogger(logger);
        \} catch (final Throwable throwable) \{
            throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
        \}
    \}
\}" shape=ellipse]
55 [label="2:CtMethodImpl@protected final void doLoggable(final Task task, final Configuration taskModel, final Logger logger) throws TaskException \{
    if (task instanceof Loggable) \{
        try \{
            ((Loggable) (task)).setLogger(logger);
        \} catch (final Throwable throwable) \{
            throw new TaskException((((((\"Error setting logger for task \" + taskModel.getName()) + \" at \") + taskModel.getLocation()) + \"(Reason: \") + throwable.getMessage()) + \")\", throwable);
        \}
    \}
\}" shape=ellipse]
56 [label="9:Update@UPDATE" shape=ellipse]
57 [label="10:CtLiteralImpl@\"logger.error\"" shape=ellipse]
58 [label="8:Delete@DELETE" shape=ellipse]
59 [label="8:Insert@INSERT" shape=ellipse]
60 [label="8:CtLocalVariableImpl@final String message = REZ.getString(\"logger.error\", taskModel.getName(), taskModel.getLocation(), throwable.getMessage())" shape=ellipse]
61 [label="14:Insert@INSERT" shape=ellipse]
62 [label="14:CtThrowImpl@throw new TaskException(message, throwable)" shape=ellipse]
63 [label="9:Move@MOVE" shape=ellipse]
64 [label="9:Move@MOVE" shape=ellipse]
65 [label="10:Move@MOVE" shape=ellipse]
66 [label="12:Move@MOVE" shape=ellipse]
67 [label="14:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
10 -> 11 [label="AST"];
12 -> 9 [label="AST"];
12 -> 10 [label="AST"];
12 -> 52 [label="Control Dep"];
12 -> 51 [label="Control Dep"];
12 -> 19 [label="Control Dep"];
12 -> 18 [label="Control Dep"];
12 -> 13 [label="Control Dep"];
12 -> 15 [label="Control Dep"];
12 -> 17 [label="Control Dep"];
12 -> 50 [label="Control Dep"];
12 -> 22 [label="Control Dep"];
15 -> 16 [label="AST"];
18 -> 14 [label="AST"];
18 -> 15 [label="AST"];
18 -> 13 [label="AST"];
18 -> 17 [label="AST"];
19 -> 18 [label="AST"];
20 -> 41 [label="Define-Use"];
20 -> 46 [label="Define-Use"];
22 -> 20 [label="AST"];
22 -> 21 [label="AST"];
22 -> 49 [label="Control Dep"];
22 -> 48 [label="Control Dep"];
22 -> 47 [label="Control Dep"];
22 -> 45 [label="Control Dep"];
22 -> 43 [label="Control Dep"];
22 -> 38 [label="Control Dep"];
22 -> 36 [label="Control Dep"];
22 -> 31 [label="Control Dep"];
22 -> 29 [label="Control Dep"];
22 -> 24 [label="Control Dep"];
22 -> 28 [label="Control Dep"];
22 -> 25 [label="Control Dep"];
22 -> 27 [label="Control Dep"];
22 -> 30 [label="Control Dep"];
22 -> 35 [label="Control Dep"];
22 -> 32 [label="Control Dep"];
22 -> 34 [label="Control Dep"];
22 -> 37 [label="Control Dep"];
22 -> 42 [label="Control Dep"];
22 -> 39 [label="Control Dep"];
22 -> 41 [label="Control Dep"];
22 -> 44 [label="Control Dep"];
22 -> 46 [label="Control Dep"];
24 -> 56 [label="Action"];
24 -> 63 [label="Action"];
28 -> 26 [label="AST"];
28 -> 27 [label="AST"];
28 -> 25 [label="AST"];
28 -> 64 [label="Action"];
29 -> 24 [label="AST"];
29 -> 28 [label="AST"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
35 -> 33 [label="AST"];
35 -> 34 [label="AST"];
35 -> 32 [label="AST"];
35 -> 65 [label="Action"];
36 -> 31 [label="AST"];
36 -> 35 [label="AST"];
38 -> 36 [label="AST"];
38 -> 37 [label="AST"];
42 -> 40 [label="AST"];
42 -> 41 [label="AST"];
42 -> 39 [label="AST"];
42 -> 66 [label="Action"];
43 -> 38 [label="AST"];
43 -> 42 [label="AST"];
45 -> 43 [label="AST"];
45 -> 44 [label="AST"];
46 -> 67 [label="Action"];
47 -> 45 [label="AST"];
47 -> 46 [label="AST"];
48 -> 47 [label="AST"];
48 -> 58 [label="Action"];
49 -> 48 [label="AST"];
50 -> 22 [label="AST"];
50 -> 49 [label="AST"];
50 -> 59 [label="Action"];
50 -> 61 [label="Action"];
51 -> 19 [label="AST"];
51 -> 50 [label="AST"];
52 -> 51 [label="AST"];
53 -> 12 [label="AST"];
53 -> 52 [label="AST"];
54 -> 53 [label="AST"];
55 -> 1 [label="AST"];
55 -> 0 [label="AST"];
55 -> 2 [label="AST"];
55 -> 4 [label="AST"];
55 -> 6 [label="AST"];
55 -> 8 [label="AST"];
55 -> 54 [label="AST"];
56 -> 57 [label="Action"];
59 -> 60 [label="Action"];
61 -> 62 [label="Action"];
}