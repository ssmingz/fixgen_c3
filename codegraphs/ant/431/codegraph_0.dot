digraph "taskStarted#?,BuildEvent" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@taskStarted" shape=ellipse]
2 [label="2:CtParameterImpl@BuildEvent event" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@BuildEvent" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@TimedElement" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@TimedElement" shape=ellipse]
6 [label="3:CtConstructorCallImpl@new TimedElement()" shape=ellipse]
7 [label="3:CtVirtualElement@taskElement" shape=ellipse]
8 [label="3:CtLocalVariableImpl@TimedElement taskElement = new TimedElement()" shape=ellipse]
9 [label="4:CtFieldWriteImpl@taskElement.startTime" shape=ellipse]
10 [label="4:CtVariableWriteImpl@taskElement" shape=ellipse]
11 [label="4:CtExecutableReferenceImpl@currentTimeMillis()" shape=ellipse]
12 [label="4:CtVirtualElement@currentTimeMillis" shape=ellipse]
13 [label="4:CtTypeAccessImpl@System" shape=ellipse]
14 [label="4:CtInvocationImpl@System.currentTimeMillis()" shape=ellipse]
15 [label="4:CtAssignmentImpl@taskElement.startTime = System.currentTimeMillis()" shape=ellipse]
16 [label="5:CtFieldWriteImpl@taskElement.element" shape=ellipse]
17 [label="5:CtVariableWriteImpl@taskElement" shape=ellipse]
18 [label="5:CtExecutableReferenceImpl@createElement()" shape=ellipse]
19 [label="5:CtVirtualElement@createElement" shape=ellipse]
20 [label="5:CtFieldReadImpl@doc" shape=ellipse]
21 [label="5:CtTypeAccessImpl@TASK_TAG" shape=ellipse]
22 [label="5:CtInvocationImpl@doc.createElement(TASK_TAG)" shape=ellipse]
23 [label="5:CtAssignmentImpl@taskElement.element = doc.createElement(TASK_TAG)" shape=ellipse]
24 [label="6:CtTypeReferenceImpl@Task" shape=ellipse]
25 [label="6:CtExecutableReferenceImpl@getTask()" shape=ellipse]
26 [label="6:CtVirtualElement@getTask" shape=ellipse]
27 [label="6:CtVariableReadImpl@event" shape=ellipse]
28 [label="6:CtInvocationImpl@event.getTask()" shape=ellipse]
29 [label="6:CtVirtualElement@task" shape=ellipse]
30 [label="6:CtLocalVariableImpl@Task task = event.getTask()" shape=ellipse]
31 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
32 [label="7:CtExecutableReferenceImpl@getTaskName()" shape=ellipse]
33 [label="7:CtVirtualElement@getTaskName" shape=ellipse]
34 [label="7:CtExecutableReferenceImpl@getTask()" shape=ellipse]
35 [label="7:CtVirtualElement@getTask" shape=ellipse]
36 [label="7:CtVariableReadImpl@event" shape=ellipse]
37 [label="7:CtInvocationImpl@event.getTask()" shape=ellipse]
38 [label="7:CtInvocationImpl@event.getTask().getTaskName()" shape=ellipse]
39 [label="7:CtVirtualElement@name" shape=ellipse]
40 [label="7:CtLocalVariableImpl@String name = event.getTask().getTaskName()" shape=ellipse]
41 [label="8:CtExecutableReferenceImpl@setAttribute(java.lang.String)" shape=ellipse]
42 [label="8:CtVirtualElement@setAttribute" shape=ellipse]
43 [label="8:CtVariableReadImpl@taskElement" shape=ellipse]
44 [label="8:CtLocalVariableReferenceImpl@taskElement" shape=ellipse]
45 [label="8:CtFieldReadImpl@taskElement.element" shape=ellipse]
46 [label="8:CtTypeAccessImpl@NAME_ATTR" shape=ellipse]
47 [label="8:CtVariableReadImpl@name" shape=ellipse]
48 [label="8:CtInvocationImpl@taskElement.element.setAttribute(NAME_ATTR, name)" shape=ellipse]
49 [label="9:CtExecutableReferenceImpl@setAttribute()" shape=ellipse]
50 [label="9:CtVirtualElement@setAttribute" shape=ellipse]
51 [label="9:CtVariableReadImpl@taskElement" shape=ellipse]
52 [label="9:CtLocalVariableReferenceImpl@taskElement" shape=ellipse]
53 [label="9:CtFieldReadImpl@taskElement.element" shape=ellipse]
54 [label="9:CtTypeAccessImpl@LOCATION_ATTR" shape=ellipse]
55 [label="9:CtExecutableReferenceImpl@toString()" shape=ellipse]
56 [label="9:CtVirtualElement@toString" shape=ellipse]
57 [label="9:CtExecutableReferenceImpl@getLocation()" shape=ellipse]
58 [label="9:CtVirtualElement@getLocation" shape=ellipse]
59 [label="9:CtExecutableReferenceImpl@getTask()" shape=ellipse]
60 [label="9:CtVirtualElement@getTask" shape=ellipse]
61 [label="9:CtVariableReadImpl@event" shape=ellipse]
62 [label="9:CtInvocationImpl@event.getTask()" shape=ellipse]
63 [label="9:CtInvocationImpl@event.getTask().getLocation()" shape=ellipse]
64 [label="9:CtInvocationImpl@event.getTask().getLocation().toString()" shape=ellipse]
65 [label="9:CtInvocationImpl@taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString())" shape=ellipse]
66 [label="10:CtExecutableReferenceImpl@put(Task,TimedElement)" shape=ellipse]
67 [label="10:CtVirtualElement@put" shape=ellipse]
68 [label="10:CtFieldReadImpl@tasks" shape=ellipse]
69 [label="10:CtVariableReadImpl@task" shape=ellipse]
70 [label="10:CtVariableReadImpl@taskElement" shape=ellipse]
71 [label="10:CtInvocationImpl@tasks.put(task, taskElement)" shape=ellipse]
72 [label="11:CtExecutableReferenceImpl@push(TimedElement)" shape=ellipse]
73 [label="11:CtVirtualElement@push" shape=ellipse]
74 [label="11:CtExecutableReferenceImpl@getStack()" shape=ellipse]
75 [label="11:CtVirtualElement@getStack" shape=ellipse]
76 [label="11:CtInvocationImpl@getStack()" shape=ellipse]
77 [label="11:CtVariableReadImpl@taskElement" shape=ellipse]
78 [label="11:CtInvocationImpl@getStack().push(taskElement)" shape=ellipse]
79 [label="2:CtBlockImpl@\{
    TimedElement taskElement = new TimedElement();
    taskElement.startTime = System.currentTimeMillis();
    taskElement.element = doc.createElement(TASK_TAG);
    Task task = event.getTask();
    String name = event.getTask().getTaskName();
    taskElement.element.setAttribute(NAME_ATTR, name);
    taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString());
    tasks.put(task, taskElement);
    getStack().push(taskElement);
\}" shape=ellipse]
80 [label="2:CtMethodImpl@public void taskStarted(BuildEvent event) \{
    TimedElement taskElement = new TimedElement();
    taskElement.startTime = System.currentTimeMillis();
    taskElement.element = doc.createElement(TASK_TAG);
    Task task = event.getTask();
    String name = event.getTask().getTaskName();
    taskElement.element.setAttribute(NAME_ATTR, name);
    taskElement.element.setAttribute(LOCATION_ATTR, event.getTask().getLocation().toString());
    tasks.put(task, taskElement);
    getStack().push(taskElement);
\}" shape=ellipse]
81 [label="8:Insert@INSERT" shape=ellipse]
82 [label="8:CtIfImpl@if (name == null) \{
    name = \"\";
\}" shape=ellipse]
2 -> 3 [label="AST"];
7 -> 43 [label="Define-Use"];
7 -> 51 [label="Define-Use"];
7 -> 70 [label="Define-Use"];
7 -> 77 [label="Define-Use"];
8 -> 7 [label="AST"];
8 -> 4 [label="AST"];
8 -> 6 [label="AST"];
9 -> 10 [label="AST"];
14 -> 12 [label="AST"];
14 -> 13 [label="AST"];
14 -> 11 [label="AST"];
15 -> 9 [label="AST"];
15 -> 14 [label="AST"];
16 -> 17 [label="AST"];
20 -> 16 [label="Data Dep"];
22 -> 19 [label="AST"];
22 -> 20 [label="AST"];
22 -> 18 [label="AST"];
22 -> 21 [label="AST"];
23 -> 16 [label="AST"];
23 -> 22 [label="AST"];
27 -> 29 [label="Data Dep"];
28 -> 26 [label="AST"];
28 -> 27 [label="AST"];
28 -> 25 [label="AST"];
29 -> 69 [label="Define-Use"];
30 -> 29 [label="AST"];
30 -> 24 [label="AST"];
30 -> 28 [label="AST"];
36 -> 39 [label="Data Dep"];
37 -> 35 [label="AST"];
37 -> 36 [label="AST"];
37 -> 34 [label="AST"];
38 -> 33 [label="AST"];
38 -> 37 [label="AST"];
38 -> 32 [label="AST"];
39 -> 47 [label="Define-Use"];
40 -> 39 [label="AST"];
40 -> 31 [label="AST"];
40 -> 38 [label="AST"];
43 -> 44 [label="AST"];
45 -> 43 [label="AST"];
48 -> 42 [label="AST"];
48 -> 45 [label="AST"];
48 -> 41 [label="AST"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
51 -> 52 [label="AST"];
53 -> 51 [label="AST"];
62 -> 60 [label="AST"];
62 -> 61 [label="AST"];
62 -> 59 [label="AST"];
63 -> 58 [label="AST"];
63 -> 62 [label="AST"];
63 -> 57 [label="AST"];
64 -> 56 [label="AST"];
64 -> 63 [label="AST"];
64 -> 55 [label="AST"];
65 -> 50 [label="AST"];
65 -> 53 [label="AST"];
65 -> 49 [label="AST"];
65 -> 54 [label="AST"];
65 -> 64 [label="AST"];
71 -> 67 [label="AST"];
71 -> 68 [label="AST"];
71 -> 66 [label="AST"];
71 -> 69 [label="AST"];
71 -> 70 [label="AST"];
76 -> 75 [label="AST"];
76 -> 74 [label="AST"];
78 -> 73 [label="AST"];
78 -> 76 [label="AST"];
78 -> 72 [label="AST"];
78 -> 77 [label="AST"];
79 -> 8 [label="AST"];
79 -> 15 [label="AST"];
79 -> 23 [label="AST"];
79 -> 30 [label="AST"];
79 -> 40 [label="AST"];
79 -> 48 [label="AST"];
79 -> 65 [label="AST"];
79 -> 71 [label="AST"];
79 -> 78 [label="AST"];
80 -> 1 [label="AST"];
80 -> 0 [label="AST"];
80 -> 2 [label="AST"];
80 -> 79 [label="AST"];
80 -> 81 [label="Action"];
81 -> 82 [label="Action"];
}