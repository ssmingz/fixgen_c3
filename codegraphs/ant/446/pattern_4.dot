digraph "Pattern" {
0 [label="testRunFailWithFailOnError#?#4:MOVE
testExceptingFoe#?#4:MOVE" shape=ellipse]
1 [label="testRunFailWithFailOnError#?#4:\"Java returned:\"
testExceptingFoe#?#4:\"Exception raised inside called program\"" shape=ellipse]
2 [label="testRunFailWithFailOnError#?#3:expectBuildExceptionContaining(\"testRunFailWithFailOnError\", \"non zero return code\", \"Java returned:\")
testExceptingFoe#?#3:expectBuildExceptionContaining(\"testExceptingFoe\", \"passes exception through\", \"Exception raised inside called program\")" shape=ellipse]
3 [label="testRunFailWithFailOnError#?#2:\{
    expectBuildExceptionContaining(\"testRunFailWithFailOnError\", \"non zero return code\", \"Java returned:\");
\}
testExceptingFoe#?#2:\{
    expectBuildExceptionContaining(\"testExceptingFoe\", \"passes exception through\", \"Exception raised inside called program\");
\}" shape=ellipse]
4 [label="testRunFailWithFailOnError#?#3:expectBuildExceptionContaining
testExceptingFoe#?#3:expectBuildExceptionContaining" shape=ellipse]
5 [label="testRunFailWithFailOnError#?#-1:
testExceptingFoe#?#-1:" shape=ellipse]
6 [label="testRunFailWithFailOnError#?#3:expectBuildExceptionContaining(java.lang.String,java.lang.String,java.lang.String)
testExceptingFoe#?#3:expectBuildExceptionContaining(java.lang.String,java.lang.String,java.lang.String)" shape=ellipse]
7 [label="testRunFailWithFailOnError#?#4:\"testRunFailWithFailOnError\"
testExceptingFoe#?#4:\"passes exception through\"" shape=ellipse]
8 [label="testRunFailWithFailOnError#?#4:\"non zero return code\"
testExceptingFoe#?#4:\"testExceptingFoe\"" shape=ellipse]
9 [label="testRunFailWithFailOnError#?#3:DELETE
testExceptingFoe#?#3:DELETE" shape=ellipse]
10 [label="testRunFailWithFailOnError#?#-1:String
testExceptingFoe#?#-1:String" shape=ellipse]
11 [label="testRunFailWithFailOnError#?#8:assertContains(\"Java returned:\", ex.getMessage())
testExceptingFoe#?#8:assertContains(\"Exception raised inside called program\", ex.getMessage())" shape=ellipse]
12 [label="testRunFailWithFailOnError#?#7:BuildException ex
testExceptingFoe#?#7:BuildException ex" shape=ellipse]
13 [label="testRunFailWithFailOnError#?#7:\{
    assertContains(\"Java returned:\", ex.getMessage());
\}
testExceptingFoe#?#7:\{
    assertContains(\"Exception raised inside called program\", ex.getMessage());
\}" shape=ellipse]
14 [label="testRunFailWithFailOnError#?#8:assertContains(java.lang.String,<unknown>)
testExceptingFoe#?#8:assertContains(java.lang.String,<unknown>)" shape=ellipse]
15 [label="testRunFailWithFailOnError#?#-1:
testExceptingFoe#?#-1:" shape=ellipse]
16 [label="testRunFailWithFailOnError#?#-1:PlaceHold
testExceptingFoe#?#-1:PlaceHold" shape=ellipse]
17 [label="testRunFailWithFailOnError#?#8:ex.getMessage()
testExceptingFoe#?#8:ex.getMessage()" shape=ellipse]
18 [label="testRunFailWithFailOnError#?#8:getMessage()
testExceptingFoe#?#8:getMessage()" shape=ellipse]
19 [label="testRunFailWithFailOnError#?#8:ex
testExceptingFoe#?#8:ex" shape=ellipse]
0 -> 11 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 10 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
2 -> 8 [label="AST:2"];
2 -> 9 [label="Action:2"];
3 -> 2 [label="AST:2"];
11 -> 15 [label="AST:2"];
11 -> 14 [label="AST:2"];
11 -> 17 [label="AST:2"];
12 -> 11 [label="Control Dep:2"];
12 -> 13 [label="Control Dep:2"];
12 -> 14 [label="Control Dep:2"];
12 -> 15 [label="Control Dep:2"];
12 -> 16 [label="Control Dep:2"];
12 -> 17 [label="Control Dep:2"];
12 -> 18 [label="Control Dep:2"];
12 -> 19 [label="Control Dep:2"];
13 -> 11 [label="AST:2"];
15 -> 16 [label="AST:2"];
17 -> 19 [label="AST:2"];
17 -> 18 [label="AST:2"];
}