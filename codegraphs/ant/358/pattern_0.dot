digraph "Pattern" {
0 [label="getFailOnError#?#3:UPDATE
missingExtension#?#4:UPDATE" shape=ellipse]
1 [label="getFailOnError#?#3:m_FailOnError
missingExtension#?#4:m_failOnError" shape=ellipse]
2 [label="getFailOnError#?#3:getWritableFiles().equals(WRITABLE_SKIP)" shape=ellipse]
3 [label="getFailOnError#?#3:getWritableFiles().equals(WRITABLE_SKIP) ? false : m_FailOnError" shape=ellipse]
4 [label="getFailOnError#?#3:equals
missingExtension#?#3:message" shape=ellipse]
5 [label="getFailOnError#?#3:getWritableFiles()" shape=ellipse]
6 [label="getFailOnError#?#3:equals()
missingExtension#?#-1:BuildException(java.lang.String)" shape=ellipse]
7 [label="getFailOnError#?#3:WRITABLE_SKIP" shape=ellipse]
8 [label="getFailOnError#?#3:false" shape=ellipse]
9 [label="getFailOnError#?#-1:m_FailOnError
missingExtension#?#-1:m_failOnError" shape=ellipse]
10 [label="getFailOnError#?#3:failOnError" shape=ellipse]
11 [label="missingExtension#?#7:MSG_ERR" shape=ellipse]
12 [label="missingExtension#?#6:\{
    getProject().log(message, MSG_ERR);
\}" shape=ellipse]
13 [label="missingExtension#?#-1:String" shape=ellipse]
14 [label="missingExtension#?#5:BuildException" shape=ellipse]
15 [label="missingExtension#?#7:log(java.lang.String)" shape=ellipse]
16 [label="missingExtension#?#7:log(java.lang.String)" shape=ellipse]
17 [label="missingExtension#?#7:getProject()" shape=ellipse]
18 [label="missingExtension#?#5:throw new BuildException(message)" shape=ellipse]
19 [label="missingExtension#?#7:log" shape=ellipse]
20 [label="missingExtension#?#-1:" shape=ellipse]
21 [label="missingExtension#?#7:getProject()" shape=ellipse]
22 [label="missingExtension#?#-1:BuildException" shape=ellipse]
23 [label="missingExtension#?#-1:message" shape=ellipse]
24 [label="missingExtension#?#-1:PlaceHold" shape=ellipse]
25 [label="missingExtension#?#-1:PlaceHold" shape=ellipse]
26 [label="missingExtension#?#-1:" shape=ellipse]
27 [label="missingExtension#?#4:failOnError" shape=ellipse]
28 [label="missingExtension#?#4:if (m_failOnError) \{
    throw new BuildException(message);
\} else \{
    getProject().log(message, MSG_ERR);
\}" shape=ellipse]
29 [label="missingExtension#?#7:message" shape=ellipse]
30 [label="missingExtension#?#-1:BuildException(java.lang.String)" shape=ellipse]
31 [label="missingExtension#?#4:\{
    throw new BuildException(message);
\}" shape=ellipse]
32 [label="missingExtension#?#7:getProject()" shape=ellipse]
33 [label="missingExtension#?#5:new BuildException(message)" shape=ellipse]
34 [label="missingExtension#?#5:message" shape=ellipse]
35 [label="missingExtension#?#7:getProject().log(message, MSG_ERR)" shape=ellipse]
36 [label="missingExtension#?#2:\{
    final String message = \"Unable to resolve extension to a file\";
    if (m_failOnError) \{
        throw new BuildException(message);
    \} else \{
        getProject().log(message, MSG_ERR);
    \}
\}" shape=ellipse]
0 -> 10 [label="Action:1"];
0 -> 27 [label="Action:1"];
1 -> 0 [label="Action:2"];
1 -> 9 [label="AST:2"];
1 -> 11 [label="Control Dep:1"];
1 -> 12 [label="Control Dep:1"];
1 -> 15 [label="Control Dep:1"];
1 -> 17 [label="Control Dep:1"];
1 -> 18 [label="Control Dep:1"];
1 -> 21 [label="Control Dep:1"];
1 -> 25 [label="Control Dep:1"];
1 -> 26 [label="Control Dep:1"];
1 -> 29 [label="Control Dep:1"];
1 -> 30 [label="Control Dep:1"];
1 -> 31 [label="Control Dep:1"];
1 -> 33 [label="Control Dep:1"];
1 -> 34 [label="Control Dep:1"];
1 -> 35 [label="Control Dep:1"];
2 -> 1 [label="Control Dep:1"];
2 -> 4 [label="AST:1"];
2 -> 5 [label="AST:1"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="AST:1"];
2 -> 8 [label="Control Dep:1"];
3 -> 1 [label="AST:1"];
3 -> 2 [label="AST:1"];
3 -> 8 [label="AST:1"];
4 -> 29 [label="Define Use:1"];
4 -> 34 [label="Define Use:1"];
12 -> 35 [label="AST:1"];
17 -> 26 [label="AST:1"];
17 -> 21 [label="AST:1"];
18 -> 33 [label="AST:1"];
26 -> 24 [label="AST:1"];
26 -> 25 [label="AST:1"];
27 -> 16 [label="Control Dep:1"];
27 -> 20 [label="Control Dep:1"];
27 -> 6 [label="Control Dep:1"];
27 -> 32 [label="Control Dep:1"];
28 -> 12 [label="AST:1"];
28 -> 1 [label="AST:1"];
28 -> 31 [label="AST:1"];
30 -> 13 [label="AST:1"];
30 -> 14 [label="AST:1"];
30 -> 22 [label="AST:1"];
31 -> 18 [label="AST:1"];
33 -> 30 [label="AST:1"];
33 -> 34 [label="AST:1"];
34 -> 23 [label="AST:1"];
35 -> 11 [label="AST:1"];
35 -> 15 [label="AST:1"];
35 -> 17 [label="AST:1"];
35 -> 19 [label="AST:1"];
35 -> 29 [label="AST:1"];
36 -> 28 [label="AST:1"];
}