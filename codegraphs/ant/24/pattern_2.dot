digraph "Pattern" {
0 [label="dieOnCircularReference#?,Stack,Project#12:DELETE
dieOnCircularReference#?,Stack,Project#12:DELETE" shape=ellipse]
1 [label="dieOnCircularReference#?,Stack,Project#12:stk.pop()
dieOnCircularReference#?,Stack,Project#12:stk.pop()" shape=ellipse]
2 [label="dieOnCircularReference#?,Stack,Project#9:src != null
dieOnCircularReference#?,Stack,Project#9:union != null" shape=ellipse]
3 [label="dieOnCircularReference#?,Stack,Project#6:isReference()
dieOnCircularReference#?,Stack,Project#6:isReference()" shape=ellipse]
4 [label="dieOnCircularReference#?,Stack,Project#9:if (src != null) \{
    stk.push(src);
    invokeCircularReferenceCheck(src, stk, p);
    stk.pop();
\}
dieOnCircularReference#?,Stack,Project#9:if (union != null) \{
    stk.push(union);
    invokeCircularReferenceCheck(union, stk, p);
    stk.pop();
\}" shape=ellipse]
5 [label="dieOnCircularReference#?,Stack,Project#9:src
dieOnCircularReference#?,Stack,Project#9:union" shape=ellipse]
6 [label="dieOnCircularReference#?,Stack,Project#9:null
dieOnCircularReference#?,Stack,Project#9:null" shape=ellipse]
7 [label="dieOnCircularReference#?,Stack,Project#9:\{
    stk.push(src);
    invokeCircularReferenceCheck(src, stk, p);
    stk.pop();
\}
dieOnCircularReference#?,Stack,Project#9:\{
    stk.push(union);
    invokeCircularReferenceCheck(union, stk, p);
    stk.pop();
\}" shape=ellipse]
8 [label="dieOnCircularReference#?,Stack,Project#10:stk.push(src)
dieOnCircularReference#?,Stack,Project#10:stk.push(union)" shape=ellipse]
9 [label="dieOnCircularReference#?,Stack,Project#10:push()
dieOnCircularReference#?,Stack,Project#10:push()" shape=ellipse]
10 [label="dieOnCircularReference#?,Stack,Project#10:stk
dieOnCircularReference#?,Stack,Project#10:stk" shape=ellipse]
11 [label="dieOnCircularReference#?,Stack,Project#10:src
dieOnCircularReference#?,Stack,Project#10:union" shape=ellipse]
12 [label="dieOnCircularReference#?,Stack,Project#11:invokeCircularReferenceCheck(src, stk, p)
dieOnCircularReference#?,Stack,Project#11:invokeCircularReferenceCheck(union, stk, p)" shape=ellipse]
13 [label="dieOnCircularReference#?,Stack,Project#11:invokeCircularReferenceCheck(<unknown>,<unknown>,<unknown>)
dieOnCircularReference#?,Stack,Project#11:invokeCircularReferenceCheck(<unknown>,<unknown>,<unknown>)" shape=ellipse]
14 [label="dieOnCircularReference#?,Stack,Project#-1:
dieOnCircularReference#?,Stack,Project#-1:" shape=ellipse]
15 [label="dieOnCircularReference#?,Stack,Project#-1:PlaceHold
dieOnCircularReference#?,Stack,Project#-1:PlaceHold" shape=ellipse]
16 [label="dieOnCircularReference#?,Stack,Project#11:src
dieOnCircularReference#?,Stack,Project#11:stk" shape=ellipse]
17 [label="dieOnCircularReference#?,Stack,Project#11:stk
dieOnCircularReference#?,Stack,Project#11:union" shape=ellipse]
18 [label="dieOnCircularReference#?,Stack,Project#11:p
dieOnCircularReference#?,Stack,Project#11:p" shape=ellipse]
19 [label="dieOnCircularReference#?,Stack,Project#12:pop()
dieOnCircularReference#?,Stack,Project#12:pop()" shape=ellipse]
20 [label="dieOnCircularReference#?,Stack,Project#12:stk
dieOnCircularReference#?,Stack,Project#12:stk" shape=ellipse]
21 [label="dieOnCircularReference#?,Stack,Project#12:pop
dieOnCircularReference#?,Stack,Project#12:pop" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 21 [label="AST:2"];
1 -> 20 [label="AST:2"];
1 -> 19 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="Control Dep:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 5 [label="Control Dep:2"];
3 -> 6 [label="Control Dep:2"];
4 -> 2 [label="AST:2"];
4 -> 7 [label="AST:2"];
7 -> 1 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 12 [label="AST:2"];
8 -> 10 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 11 [label="AST:2"];
12 -> 14 [label="AST:2"];
12 -> 13 [label="AST:2"];
12 -> 16 [label="AST:2"];
12 -> 17 [label="AST:2"];
12 -> 18 [label="AST:2"];
14 -> 15 [label="AST:2"];
}