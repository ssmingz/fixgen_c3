digraph "testWorks#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testWorks" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@executeTarget(java.lang.String)" shape=ellipse]
3 [label="3:CtVirtualElement@executeTarget" shape=ellipse]
4 [label="3:CtLiteralImpl@\"testWorks\"" shape=ellipse]
5 [label="3:CtInvocationImpl@executeTarget(\"testWorks\")" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@assertPropertyContains(java.lang.String,java.lang.String)" shape=ellipse]
7 [label="4:CtVirtualElement@assertPropertyContains" shape=ellipse]
8 [label="4:CtLiteralImpl@\"testWorks\"" shape=ellipse]
9 [label="4:CtLiteralImpl@\"file:\"" shape=ellipse]
10 [label="4:CtInvocationImpl@assertPropertyContains(\"testWorks\", \"file:\")" shape=ellipse]
11 [label="5:CtExecutableReferenceImpl@assertPropertyContains(java.lang.String,java.lang.String)" shape=ellipse]
12 [label="5:CtVirtualElement@assertPropertyContains" shape=ellipse]
13 [label="5:CtLiteralImpl@\"testWorks\"" shape=ellipse]
14 [label="5:CtLiteralImpl@\"/foo\"" shape=ellipse]
15 [label="5:CtInvocationImpl@assertPropertyContains(\"testWorks\", \"/foo\")" shape=ellipse]
16 [label="2:CtBlockImpl@\{
    executeTarget(\"testWorks\");
    assertPropertyContains(\"testWorks\", \"file:\");
    assertPropertyContains(\"testWorks\", \"/foo\");
\}" shape=ellipse]
17 [label="2:CtMethodImpl@public void testWorks() \{
    executeTarget(\"testWorks\");
    assertPropertyContains(\"testWorks\", \"file:\");
    assertPropertyContains(\"testWorks\", \"/foo\");
\}" shape=ellipse]
18 [label="2:Insert@INSERT" shape=ellipse]
19 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
20 [label="4:Insert@INSERT" shape=ellipse]
21 [label="4:CtFieldReadImpl@buildRule" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 2 [label="AST"];
5 -> 4 [label="AST"];
5 -> 20 [label="Action"];
10 -> 7 [label="AST"];
10 -> 6 [label="AST"];
10 -> 8 [label="AST"];
10 -> 9 [label="AST"];
15 -> 12 [label="AST"];
15 -> 11 [label="AST"];
15 -> 13 [label="AST"];
15 -> 14 [label="AST"];
16 -> 5 [label="AST"];
16 -> 10 [label="AST"];
16 -> 15 [label="AST"];
17 -> 1 [label="AST"];
17 -> 0 [label="AST"];
17 -> 16 [label="AST"];
17 -> 18 [label="Action"];
18 -> 19 [label="Action"];
20 -> 21 [label="Action"];
}