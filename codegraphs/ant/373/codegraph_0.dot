digraph "setupComponents#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@setupComponents" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
4 [label="3:CtVirtualElement@createComponent" shape=ellipse]
5 [label="3:CtFieldReadImpl@ExtensionManager.class" shape=ellipse]
6 [label="3:CtFieldReadImpl@PREFIX" shape=ellipse]
7 [label="3:CtLiteralImpl@\"extensions.DefaultExtensionManager\"" shape=ellipse]
8 [label="3:CtBinaryOperatorImpl@PREFIX + \"extensions.DefaultExtensionManager\"" shape=ellipse]
9 [label="3:CtInvocationImpl@createComponent(ExtensionManager.class, PREFIX + \"extensions.DefaultExtensionManager\")" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@Object" shape=ellipse]
11 [label="5:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
12 [label="5:CtVirtualElement@createComponent" shape=ellipse]
13 [label="5:CtFieldReadImpl@Converter.class" shape=ellipse]
14 [label="5:CtFieldReadImpl@PREFIX" shape=ellipse]
15 [label="5:CtLiteralImpl@\"converter.DefaultMasterConverter\"" shape=ellipse]
16 [label="5:CtBinaryOperatorImpl@PREFIX + \"converter.DefaultMasterConverter\"" shape=ellipse]
17 [label="5:CtInvocationImpl@createComponent(Converter.class, PREFIX + \"converter.DefaultMasterConverter\")" shape=ellipse]
18 [label="4:CtVirtualElement@converter" shape=ellipse]
19 [label="4:CtLocalVariableImpl@final Object converter = createComponent(Converter.class, PREFIX + \"converter.DefaultMasterConverter\")" shape=ellipse]
20 [label="6:CtExecutableReferenceImpl@put(java.lang.Object)" shape=ellipse]
21 [label="6:CtVirtualElement@put" shape=ellipse]
22 [label="6:CtFieldReadImpl@m_serviceManager" shape=ellipse]
23 [label="6:CtTypeAccessImpl@ROLE" shape=ellipse]
24 [label="6:CtVariableReadImpl@converter" shape=ellipse]
25 [label="6:CtInvocationImpl@m_serviceManager.put(ROLE, converter)" shape=ellipse]
26 [label="7:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
27 [label="7:CtVirtualElement@createComponent" shape=ellipse]
28 [label="7:CtFieldReadImpl@Configurer.class" shape=ellipse]
29 [label="7:CtFieldReadImpl@PREFIX" shape=ellipse]
30 [label="7:CtLiteralImpl@\"configurer.DefaultConfigurer\"" shape=ellipse]
31 [label="7:CtBinaryOperatorImpl@PREFIX + \"configurer.DefaultConfigurer\"" shape=ellipse]
32 [label="7:CtInvocationImpl@createComponent(Configurer.class, PREFIX + \"configurer.DefaultConfigurer\")" shape=ellipse]
33 [label="8:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
34 [label="8:CtVirtualElement@createComponent" shape=ellipse]
35 [label="8:CtFieldReadImpl@TypeManager.class" shape=ellipse]
36 [label="8:CtFieldReadImpl@PREFIX" shape=ellipse]
37 [label="8:CtLiteralImpl@\"type.DefaultTypeManager\"" shape=ellipse]
38 [label="8:CtBinaryOperatorImpl@PREFIX + \"type.DefaultTypeManager\"" shape=ellipse]
39 [label="8:CtInvocationImpl@createComponent(TypeManager.class, PREFIX + \"type.DefaultTypeManager\")" shape=ellipse]
40 [label="9:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
41 [label="9:CtVirtualElement@createComponent" shape=ellipse]
42 [label="9:CtFieldReadImpl@RoleManager.class" shape=ellipse]
43 [label="9:CtFieldReadImpl@PREFIX" shape=ellipse]
44 [label="9:CtLiteralImpl@\"role.DefaultRoleManager\"" shape=ellipse]
45 [label="9:CtBinaryOperatorImpl@PREFIX + \"role.DefaultRoleManager\"" shape=ellipse]
46 [label="9:CtInvocationImpl@createComponent(RoleManager.class, PREFIX + \"role.DefaultRoleManager\")" shape=ellipse]
47 [label="10:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
48 [label="10:CtVirtualElement@createComponent" shape=ellipse]
49 [label="10:CtFieldReadImpl@AspectManager.class" shape=ellipse]
50 [label="10:CtFieldReadImpl@PREFIX" shape=ellipse]
51 [label="10:CtLiteralImpl@\"aspect.DefaultAspectManager\"" shape=ellipse]
52 [label="10:CtBinaryOperatorImpl@PREFIX + \"aspect.DefaultAspectManager\"" shape=ellipse]
53 [label="10:CtInvocationImpl@createComponent(AspectManager.class, PREFIX + \"aspect.DefaultAspectManager\")" shape=ellipse]
54 [label="11:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
55 [label="11:CtVirtualElement@createComponent" shape=ellipse]
56 [label="11:CtFieldReadImpl@Deployer.class" shape=ellipse]
57 [label="11:CtFieldReadImpl@PREFIX" shape=ellipse]
58 [label="11:CtLiteralImpl@\"deployer.DefaultDeployer\"" shape=ellipse]
59 [label="11:CtBinaryOperatorImpl@PREFIX + \"deployer.DefaultDeployer\"" shape=ellipse]
60 [label="11:CtInvocationImpl@createComponent(Deployer.class, PREFIX + \"deployer.DefaultDeployer\")" shape=ellipse]
61 [label="12:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
62 [label="12:CtVirtualElement@createComponent" shape=ellipse]
63 [label="12:CtFieldReadImpl@ClassLoaderManager.class" shape=ellipse]
64 [label="12:CtFieldReadImpl@PREFIX" shape=ellipse]
65 [label="12:CtLiteralImpl@\"classloader.DefaultClassLoaderManager\"" shape=ellipse]
66 [label="12:CtBinaryOperatorImpl@PREFIX + \"classloader.DefaultClassLoaderManager\"" shape=ellipse]
67 [label="12:CtInvocationImpl@createComponent(ClassLoaderManager.class, PREFIX + \"classloader.DefaultClassLoaderManager\")" shape=ellipse]
68 [label="13:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
69 [label="13:CtVirtualElement@createComponent" shape=ellipse]
70 [label="13:CtFieldReadImpl@Executor.class" shape=ellipse]
71 [label="13:CtFieldReadImpl@PREFIX" shape=ellipse]
72 [label="13:CtLiteralImpl@\"executor.AspectAwareExecutor\"" shape=ellipse]
73 [label="13:CtBinaryOperatorImpl@PREFIX + \"executor.AspectAwareExecutor\"" shape=ellipse]
74 [label="13:CtInvocationImpl@createComponent(Executor.class, PREFIX + \"executor.AspectAwareExecutor\")" shape=ellipse]
75 [label="14:CtExecutableReferenceImpl@createComponent(java.lang.Class,<unknown>)" shape=ellipse]
76 [label="14:CtVirtualElement@createComponent" shape=ellipse]
77 [label="14:CtFieldReadImpl@PropertyResolver.class" shape=ellipse]
78 [label="14:CtFieldReadImpl@PREFIX" shape=ellipse]
79 [label="14:CtLiteralImpl@\"property.DefaultPropertyResolver\"" shape=ellipse]
80 [label="14:CtBinaryOperatorImpl@PREFIX + \"property.DefaultPropertyResolver\"" shape=ellipse]
81 [label="14:CtInvocationImpl@createComponent(PropertyResolver.class, PREFIX + \"property.DefaultPropertyResolver\")" shape=ellipse]
82 [label="15:CtExecutableReferenceImpl@put(PlaceHold)" shape=ellipse]
83 [label="15:CtVirtualElement@put" shape=ellipse]
84 [label="15:CtFieldReadImpl@m_serviceManager" shape=ellipse]
85 [label="15:CtTypeAccessImpl@ROLE" shape=ellipse]
86 [label="15:CtThisAccessImpl@this" shape=ellipse]
87 [label="15:CtInvocationImpl@m_serviceManager.put(ROLE, this)" shape=ellipse]
88 [label="16:CtTypeReferenceImpl@Iterator" shape=ellipse]
89 [label="16:CtExecutableReferenceImpl@iterator()" shape=ellipse]
90 [label="16:CtVirtualElement@iterator" shape=ellipse]
91 [label="16:CtFieldReadImpl@m_components" shape=ellipse]
92 [label="16:CtInvocationImpl@m_components.iterator()" shape=ellipse]
93 [label="16:CtVirtualElement@iterator" shape=ellipse]
94 [label="16:CtLocalVariableImpl@Iterator iterator = m_components.iterator()" shape=ellipse]
95 [label="16:CtExecutableReferenceImpl@hasNext()" shape=ellipse]
96 [label="16:CtVirtualElement@hasNext" shape=ellipse]
97 [label="16:CtVariableReadImpl@iterator" shape=ellipse]
98 [label="16:CtInvocationImpl@iterator.hasNext()" shape=ellipse]
99 [label="17:CtTypeReferenceImpl@Object" shape=ellipse]
100 [label="17:CtExecutableReferenceImpl@next()" shape=ellipse]
101 [label="17:CtVirtualElement@next" shape=ellipse]
102 [label="17:CtVariableReadImpl@iterator" shape=ellipse]
103 [label="17:CtInvocationImpl@iterator.next()" shape=ellipse]
104 [label="17:CtVirtualElement@component" shape=ellipse]
105 [label="17:CtLocalVariableImpl@final Object component = iterator.next()" shape=ellipse]
106 [label="18:CtExecutableReferenceImpl@setupObject(java.lang.Object,<unknown>,<unknown>)" shape=ellipse]
107 [label="18:CtVirtualElement@setupObject" shape=ellipse]
108 [label="18:CtVariableReadImpl@component" shape=ellipse]
109 [label="18:CtFieldReadImpl@m_serviceManager" shape=ellipse]
110 [label="18:CtFieldReadImpl@m_parameters" shape=ellipse]
111 [label="18:CtInvocationImpl@setupObject(component, m_serviceManager, m_parameters)" shape=ellipse]
112 [label="16:CtBlockImpl@\{
    final Object component = iterator.next();
    setupObject(component, m_serviceManager, m_parameters);
\}" shape=ellipse]
113 [label="16:CtForImpl@for (Iterator iterator = m_components.iterator(); iterator.hasNext();) \{
    final Object component = iterator.next();
    setupObject(component, m_serviceManager, m_parameters);
\}" shape=ellipse]
114 [label="2:CtBlockImpl@\{
    createComponent(ExtensionManager.class, PREFIX + \"extensions.DefaultExtensionManager\");
    final Object converter = createComponent(Converter.class, PREFIX + \"converter.DefaultMasterConverter\");
    m_serviceManager.put(ROLE, converter);
    createComponent(Configurer.class, PREFIX + \"configurer.DefaultConfigurer\");
    createComponent(TypeManager.class, PREFIX + \"type.DefaultTypeManager\");
    createComponent(RoleManager.class, PREFIX + \"role.DefaultRoleManager\");
    createComponent(AspectManager.class, PREFIX + \"aspect.DefaultAspectManager\");
    createComponent(Deployer.class, PREFIX + \"deployer.DefaultDeployer\");
    createComponent(ClassLoaderManager.class, PREFIX + \"classloader.DefaultClassLoaderManager\");
    createComponent(Executor.class, PREFIX + \"executor.AspectAwareExecutor\");
    createComponent(PropertyResolver.class, PREFIX + \"property.DefaultPropertyResolver\");
    m_serviceManager.put(ROLE, this);
    for (Iterator iterator = m_components.iterator(); iterator.hasNext();) \{
        final Object component = iterator.next();
        setupObject(component, m_serviceManager, m_parameters);
    \}
\}" shape=ellipse]
115 [label="2:CtMethodImpl@private void setupComponents() throws Exception \{
    createComponent(ExtensionManager.class, PREFIX + \"extensions.DefaultExtensionManager\");
    final Object converter = createComponent(Converter.class, PREFIX + \"converter.DefaultMasterConverter\");
    m_serviceManager.put(ROLE, converter);
    createComponent(Configurer.class, PREFIX + \"configurer.DefaultConfigurer\");
    createComponent(TypeManager.class, PREFIX + \"type.DefaultTypeManager\");
    createComponent(RoleManager.class, PREFIX + \"role.DefaultRoleManager\");
    createComponent(AspectManager.class, PREFIX + \"aspect.DefaultAspectManager\");
    createComponent(Deployer.class, PREFIX + \"deployer.DefaultDeployer\");
    createComponent(ClassLoaderManager.class, PREFIX + \"classloader.DefaultClassLoaderManager\");
    createComponent(Executor.class, PREFIX + \"executor.AspectAwareExecutor\");
    createComponent(PropertyResolver.class, PREFIX + \"property.DefaultPropertyResolver\");
    m_serviceManager.put(ROLE, this);
    for (Iterator iterator = m_components.iterator(); iterator.hasNext();) \{
        final Object component = iterator.next();
        setupObject(component, m_serviceManager, m_parameters);
    \}
\}" shape=ellipse]
116 [label="18:Delete@DELETE" shape=ellipse]
117 [label="18:Insert@INSERT" shape=ellipse]
118 [label="18:CtLiteralImpl@null" shape=ellipse]
8 -> 6 [label="AST"];
8 -> 7 [label="AST"];
9 -> 4 [label="AST"];
9 -> 3 [label="AST"];
9 -> 5 [label="AST"];
9 -> 8 [label="AST"];
13 -> 18 [label="Data Dep"];
14 -> 18 [label="Data Dep"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
17 -> 12 [label="AST"];
17 -> 11 [label="AST"];
17 -> 13 [label="AST"];
17 -> 16 [label="AST"];
18 -> 24 [label="Define-Use"];
19 -> 18 [label="AST"];
19 -> 10 [label="AST"];
19 -> 17 [label="AST"];
25 -> 21 [label="AST"];
25 -> 22 [label="AST"];
25 -> 20 [label="AST"];
25 -> 23 [label="AST"];
25 -> 24 [label="AST"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
32 -> 27 [label="AST"];
32 -> 26 [label="AST"];
32 -> 28 [label="AST"];
32 -> 31 [label="AST"];
38 -> 36 [label="AST"];
38 -> 37 [label="AST"];
39 -> 34 [label="AST"];
39 -> 33 [label="AST"];
39 -> 35 [label="AST"];
39 -> 38 [label="AST"];
45 -> 43 [label="AST"];
45 -> 44 [label="AST"];
46 -> 41 [label="AST"];
46 -> 40 [label="AST"];
46 -> 42 [label="AST"];
46 -> 45 [label="AST"];
52 -> 50 [label="AST"];
52 -> 51 [label="AST"];
53 -> 48 [label="AST"];
53 -> 47 [label="AST"];
53 -> 49 [label="AST"];
53 -> 52 [label="AST"];
59 -> 57 [label="AST"];
59 -> 58 [label="AST"];
60 -> 55 [label="AST"];
60 -> 54 [label="AST"];
60 -> 56 [label="AST"];
60 -> 59 [label="AST"];
66 -> 64 [label="AST"];
66 -> 65 [label="AST"];
67 -> 62 [label="AST"];
67 -> 61 [label="AST"];
67 -> 63 [label="AST"];
67 -> 66 [label="AST"];
73 -> 71 [label="AST"];
73 -> 72 [label="AST"];
74 -> 69 [label="AST"];
74 -> 68 [label="AST"];
74 -> 70 [label="AST"];
74 -> 73 [label="AST"];
80 -> 78 [label="AST"];
80 -> 79 [label="AST"];
81 -> 76 [label="AST"];
81 -> 75 [label="AST"];
81 -> 77 [label="AST"];
81 -> 80 [label="AST"];
87 -> 83 [label="AST"];
87 -> 84 [label="AST"];
87 -> 82 [label="AST"];
87 -> 85 [label="AST"];
87 -> 86 [label="AST"];
91 -> 93 [label="Data Dep"];
92 -> 90 [label="AST"];
92 -> 91 [label="AST"];
92 -> 89 [label="AST"];
93 -> 97 [label="Define-Use"];
93 -> 102 [label="Define-Use"];
94 -> 93 [label="AST"];
94 -> 88 [label="AST"];
94 -> 92 [label="AST"];
98 -> 96 [label="AST"];
98 -> 97 [label="AST"];
98 -> 95 [label="AST"];
98 -> 112 [label="Control Dep"];
98 -> 105 [label="Control Dep"];
98 -> 103 [label="Control Dep"];
98 -> 100 [label="Control Dep"];
98 -> 102 [label="Control Dep"];
98 -> 111 [label="Control Dep"];
98 -> 106 [label="Control Dep"];
98 -> 108 [label="Control Dep"];
98 -> 109 [label="Control Dep"];
98 -> 110 [label="Control Dep"];
102 -> 104 [label="Data Dep"];
103 -> 101 [label="AST"];
103 -> 102 [label="AST"];
103 -> 100 [label="AST"];
104 -> 108 [label="Define-Use"];
105 -> 104 [label="AST"];
105 -> 99 [label="AST"];
105 -> 103 [label="AST"];
110 -> 116 [label="Action"];
111 -> 107 [label="AST"];
111 -> 106 [label="AST"];
111 -> 108 [label="AST"];
111 -> 109 [label="AST"];
111 -> 110 [label="AST"];
111 -> 117 [label="Action"];
112 -> 105 [label="AST"];
112 -> 111 [label="AST"];
113 -> 94 [label="AST"];
113 -> 98 [label="AST"];
113 -> 112 [label="AST"];
114 -> 9 [label="AST"];
114 -> 19 [label="AST"];
114 -> 25 [label="AST"];
114 -> 32 [label="AST"];
114 -> 39 [label="AST"];
114 -> 46 [label="AST"];
114 -> 53 [label="AST"];
114 -> 60 [label="AST"];
114 -> 67 [label="AST"];
114 -> 74 [label="AST"];
114 -> 81 [label="AST"];
114 -> 87 [label="AST"];
114 -> 113 [label="AST"];
115 -> 1 [label="AST"];
115 -> 0 [label="AST"];
115 -> 2 [label="AST"];
115 -> 114 [label="AST"];
117 -> 118 [label="Action"];
}