digraph "createWorkspace#?,Map" {
0 [label="2:CtTypeReferenceImpl@Workspace" shape=ellipse]
1 [label="2:CtVirtualElement@createWorkspace" shape=ellipse]
2 [label="2:CtParameterImpl@final Map properties" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Map" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@Workspace" shape=ellipse]
6 [label="4:CtExecutableReferenceImpl@createService(java.lang.Class,<unknown>)" shape=ellipse]
7 [label="4:CtVirtualElement@createService" shape=ellipse]
8 [label="4:CtFieldReadImpl@Workspace.class" shape=ellipse]
9 [label="4:CtFieldReadImpl@PREFIX" shape=ellipse]
10 [label="4:CtLiteralImpl@\"workspace.DefaultWorkspace\"" shape=ellipse]
11 [label="4:CtBinaryOperatorImpl@PREFIX + \"workspace.DefaultWorkspace\"" shape=ellipse]
12 [label="4:CtInvocationImpl@((Workspace) (createService(Workspace.class, PREFIX + \"workspace.DefaultWorkspace\")))" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@Workspace" shape=ellipse]
14 [label="3:CtVirtualElement@workspace" shape=ellipse]
15 [label="3:CtLocalVariableImpl@final Workspace workspace = ((Workspace) (createService(Workspace.class, PREFIX + \"workspace.DefaultWorkspace\")))" shape=ellipse]
16 [label="5:CtExecutableReferenceImpl@setupObject(<unknown>,<unknown>,<unknown>)" shape=ellipse]
17 [label="5:CtVirtualElement@setupObject" shape=ellipse]
18 [label="5:CtVariableReadImpl@workspace" shape=ellipse]
19 [label="5:CtFieldReadImpl@m_workspaceServiceManager" shape=ellipse]
20 [label="5:CtFieldReadImpl@m_parameters" shape=ellipse]
21 [label="5:CtInvocationImpl@setupObject(workspace, m_workspaceServiceManager, m_parameters)" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@PropertyStore" shape=ellipse]
23 [label="6:CtExecutableReferenceImpl@createBaseStore(<unknown>)" shape=ellipse]
24 [label="6:CtVirtualElement@createBaseStore" shape=ellipse]
25 [label="6:CtVariableReadImpl@properties" shape=ellipse]
26 [label="6:CtInvocationImpl@createBaseStore(properties)" shape=ellipse]
27 [label="6:CtVirtualElement@propStore" shape=ellipse]
28 [label="6:CtLocalVariableImpl@final PropertyStore propStore = createBaseStore(properties)" shape=ellipse]
29 [label="7:CtTypeReferenceImpl@ExecutionFrame" shape=ellipse]
30 [label="8:CtTypeReferenceImpl@DefaultExecutionFrame" shape=ellipse]
31 [label="8:CtExecutableReferenceImpl@getLogger()" shape=ellipse]
32 [label="8:CtVirtualElement@getLogger" shape=ellipse]
33 [label="8:CtInvocationImpl@getLogger()" shape=ellipse]
34 [label="8:CtVariableReadImpl@propStore" shape=ellipse]
35 [label="8:CtFieldReadImpl@m_workspaceServiceManager" shape=ellipse]
36 [label="8:CtConstructorCallImpl@new DefaultExecutionFrame(getLogger(), propStore, m_workspaceServiceManager)" shape=ellipse]
37 [label="7:CtVirtualElement@frame" shape=ellipse]
38 [label="7:CtLocalVariableImpl@final ExecutionFrame frame = new DefaultExecutionFrame(getLogger(), propStore, m_workspaceServiceManager)" shape=ellipse]
39 [label="9:CtExecutableReferenceImpl@setRootExecutionFrame(ExecutionFrame)" shape=ellipse]
40 [label="9:CtVirtualElement@setRootExecutionFrame" shape=ellipse]
41 [label="9:CtVariableReadImpl@((ExecutionContainer) (workspace))" shape=ellipse]
42 [label="9:CtTypeReferenceImpl@ExecutionContainer" shape=ellipse]
43 [label="9:CtVariableReadImpl@frame" shape=ellipse]
44 [label="9:CtInvocationImpl@((ExecutionContainer) (workspace)).setRootExecutionFrame(frame)" shape=ellipse]
45 [label="10:CtVariableReadImpl@workspace" shape=ellipse]
46 [label="10:CtReturnImpl@return workspace" shape=ellipse]
47 [label="2:CtBlockImpl@\{
    final Workspace workspace = ((Workspace) (createService(Workspace.class, PREFIX + \"workspace.DefaultWorkspace\")));
    setupObject(workspace, m_workspaceServiceManager, m_parameters);
    final PropertyStore propStore = createBaseStore(properties);
    final ExecutionFrame frame = new DefaultExecutionFrame(getLogger(), propStore, m_workspaceServiceManager);
    ((ExecutionContainer) (workspace)).setRootExecutionFrame(frame);
    return workspace;
\}" shape=ellipse]
48 [label="2:CtMethodImpl@public Workspace createWorkspace(final Map properties) throws Exception \{
    final Workspace workspace = ((Workspace) (createService(Workspace.class, PREFIX + \"workspace.DefaultWorkspace\")));
    setupObject(workspace, m_workspaceServiceManager, m_parameters);
    final PropertyStore propStore = createBaseStore(properties);
    final ExecutionFrame frame = new DefaultExecutionFrame(getLogger(), propStore, m_workspaceServiceManager);
    ((ExecutionContainer) (workspace)).setRootExecutionFrame(frame);
    return workspace;
\}" shape=ellipse]
49 [label="5:Delete@DELETE" shape=ellipse]
50 [label="5:Insert@INSERT" shape=ellipse]
51 [label="5:CtLiteralImpl@null" shape=ellipse]
2 -> 3 [label="AST"];
8 -> 14 [label="Data Dep"];
9 -> 14 [label="Data Dep"];
11 -> 9 [label="AST"];
11 -> 10 [label="AST"];
12 -> 7 [label="AST"];
12 -> 13 [label="AST"];
12 -> 6 [label="AST"];
12 -> 8 [label="AST"];
12 -> 11 [label="AST"];
14 -> 18 [label="Define-Use"];
14 -> 41 [label="Define-Use"];
14 -> 45 [label="Define-Use"];
15 -> 14 [label="AST"];
15 -> 5 [label="AST"];
15 -> 12 [label="AST"];
20 -> 49 [label="Action"];
21 -> 17 [label="AST"];
21 -> 16 [label="AST"];
21 -> 18 [label="AST"];
21 -> 19 [label="AST"];
21 -> 20 [label="AST"];
21 -> 50 [label="Action"];
25 -> 27 [label="Data Dep"];
26 -> 24 [label="AST"];
26 -> 23 [label="AST"];
26 -> 25 [label="AST"];
27 -> 34 [label="Define-Use"];
28 -> 27 [label="AST"];
28 -> 22 [label="AST"];
28 -> 26 [label="AST"];
33 -> 32 [label="AST"];
33 -> 31 [label="AST"];
34 -> 37 [label="Data Dep"];
35 -> 37 [label="Data Dep"];
36 -> 33 [label="AST"];
36 -> 34 [label="AST"];
36 -> 35 [label="AST"];
37 -> 43 [label="Define-Use"];
38 -> 37 [label="AST"];
38 -> 29 [label="AST"];
38 -> 36 [label="AST"];
41 -> 42 [label="AST"];
44 -> 40 [label="AST"];
44 -> 41 [label="AST"];
44 -> 39 [label="AST"];
44 -> 43 [label="AST"];
46 -> 45 [label="AST"];
47 -> 15 [label="AST"];
47 -> 21 [label="AST"];
47 -> 28 [label="AST"];
47 -> 38 [label="AST"];
47 -> 44 [label="AST"];
47 -> 46 [label="AST"];
48 -> 1 [label="AST"];
48 -> 0 [label="AST"];
48 -> 2 [label="AST"];
48 -> 4 [label="AST"];
48 -> 47 [label="AST"];
50 -> 51 [label="Action"];
}