digraph "Pattern" {
0 [label="testFullPathMatchesCaseInsensitive#?#8:INSERT
test2bisButCaseInsensitive#?#7:INSERT" shape=ellipse]
1 [label="testFullPathMatchesCaseInsensitive#?#7:getProject()
test2bisButCaseInsensitive#?#6:getProject()" shape=ellipse]
2 [label="testFullPathMatchesCaseInsensitive#?#4:changeRemoteDir(remoteTmpDir)
test2bisButCaseInsensitive#?#4:changeRemoteDir(remoteTmpDir)" shape=ellipse]
3 [label="testFullPathMatchesCaseInsensitive#?#3:loginSuceeded
test2bisButCaseInsensitive#?#3:loginSuceeded" shape=ellipse]
4 [label="testFullPathMatchesCaseInsensitive#?#4:if (changeRemoteDir(remoteTmpDir)) \{
    FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
    ds.setCaseSensitive(false);
    ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
    ds.setIncludes(new String[]\{ \"alpha/beta/gamma/GAMMA.XML\" \});
    ds.scan();
    compareFiles(ds, new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{  \});
\}
test2bisButCaseInsensitive#?#4:if (changeRemoteDir(remoteTmpDir)) \{
    FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
    ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
    ds.setIncludes(new String[]\{ \"alpha/BETA/gamma/\" \});
    ds.setCaseSensitive(false);
    ds.scan();
    compareFiles(ds, new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{ \"alpha/beta/gamma\" \});
\}" shape=ellipse]
5 [label="testFullPathMatchesCaseInsensitive#?#4:changeRemoteDir
test2bisButCaseInsensitive#?#4:changeRemoteDir" shape=ellipse]
6 [label="testFullPathMatchesCaseInsensitive#?#-1:
test2bisButCaseInsensitive#?#-1:" shape=ellipse]
7 [label="testFullPathMatchesCaseInsensitive#?#4:changeRemoteDir(<unknown>)
test2bisButCaseInsensitive#?#4:changeRemoteDir(<unknown>)" shape=ellipse]
8 [label="testFullPathMatchesCaseInsensitive#?#4:remoteTmpDir
test2bisButCaseInsensitive#?#4:remoteTmpDir" shape=ellipse]
9 [label="testFullPathMatchesCaseInsensitive#?#4:\{
    FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
    ds.setCaseSensitive(false);
    ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
    ds.setIncludes(new String[]\{ \"alpha/beta/gamma/GAMMA.XML\" \});
    ds.scan();
    compareFiles(ds, new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{  \});
\}
test2bisButCaseInsensitive#?#4:\{
    FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp);
    ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));
    ds.setIncludes(new String[]\{ \"alpha/BETA/gamma/\" \});
    ds.setCaseSensitive(false);
    ds.scan();
    compareFiles(ds, new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{ \"alpha/beta/gamma\" \});
\}" shape=ellipse]
10 [label="testFullPathMatchesCaseInsensitive#?#5:FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp)
test2bisButCaseInsensitive#?#5:FTP.FTPDirectoryScanner ds = myFTPTask.newScanner(ftp)" shape=ellipse]
11 [label="testFullPathMatchesCaseInsensitive#?#5:myFTPTask.newScanner(ftp)
test2bisButCaseInsensitive#?#5:myFTPTask.newScanner(ftp)" shape=ellipse]
12 [label="testFullPathMatchesCaseInsensitive#?#5:newScanner()
test2bisButCaseInsensitive#?#5:newScanner()" shape=ellipse]
13 [label="testFullPathMatchesCaseInsensitive#?#5:myFTPTask
test2bisButCaseInsensitive#?#5:myFTPTask" shape=ellipse]
14 [label="testFullPathMatchesCaseInsensitive#?#5:ftp
test2bisButCaseInsensitive#?#5:ftp" shape=ellipse]
15 [label="testFullPathMatchesCaseInsensitive#?#6:ds.setCaseSensitive(false)
test2bisButCaseInsensitive#?#8:ds.setCaseSensitive(false)" shape=ellipse]
16 [label="testFullPathMatchesCaseInsensitive#?#6:setCaseSensitive(boolean)
test2bisButCaseInsensitive#?#8:setCaseSensitive(boolean)" shape=ellipse]
17 [label="testFullPathMatchesCaseInsensitive#?#6:ds
test2bisButCaseInsensitive#?#8:ds" shape=ellipse]
18 [label="testFullPathMatchesCaseInsensitive#?#6:false
test2bisButCaseInsensitive#?#8:false" shape=ellipse]
19 [label="testFullPathMatchesCaseInsensitive#?#7:ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"))
test2bisButCaseInsensitive#?#6:ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"))" shape=ellipse]
20 [label="testFullPathMatchesCaseInsensitive#?#7:setBasedir(File)
test2bisButCaseInsensitive#?#6:setBasedir(File)" shape=ellipse]
21 [label="testFullPathMatchesCaseInsensitive#?#7:ds
test2bisButCaseInsensitive#?#6:ds" shape=ellipse]
22 [label="testFullPathMatchesCaseInsensitive#?#7:new File(getProject().getBaseDir(), \"tmp\")
test2bisButCaseInsensitive#?#6:new File(getProject().getBaseDir(), \"tmp\")" shape=ellipse]
23 [label="testFullPathMatchesCaseInsensitive#?#-1:File()
test2bisButCaseInsensitive#?#-1:File()" shape=ellipse]
24 [label="testFullPathMatchesCaseInsensitive#?#7:getProject().getBaseDir()
test2bisButCaseInsensitive#?#6:getProject().getBaseDir()" shape=ellipse]
25 [label="testFullPathMatchesCaseInsensitive#?#7:getBaseDir()
test2bisButCaseInsensitive#?#6:getBaseDir()" shape=ellipse]
26 [label="testFullPathMatchesCaseInsensitive#?#7:getProject()
test2bisButCaseInsensitive#?#6:getProject()" shape=ellipse]
27 [label="testFullPathMatchesCaseInsensitive#?#-1:
test2bisButCaseInsensitive#?#-1:" shape=ellipse]
28 [label="testFullPathMatchesCaseInsensitive#?#-1:PlaceHold
test2bisButCaseInsensitive#?#-1:PlaceHold" shape=ellipse]
29 [label="testFullPathMatchesCaseInsensitive#?#7:\"tmp\"
test2bisButCaseInsensitive#?#6:\"tmp\"" shape=ellipse]
30 [label="testFullPathMatchesCaseInsensitive#?#8:ds.setIncludes(new String[]\{ \"alpha/beta/gamma/GAMMA.XML\" \})
test2bisButCaseInsensitive#?#7:ds.setIncludes(new String[]\{ \"alpha/BETA/gamma/\" \})" shape=ellipse]
31 [label="testFullPathMatchesCaseInsensitive#?#8:setIncludes(java.lang.String[])
test2bisButCaseInsensitive#?#7:setIncludes(java.lang.String[])" shape=ellipse]
32 [label="testFullPathMatchesCaseInsensitive#?#8:ds
test2bisButCaseInsensitive#?#7:ds" shape=ellipse]
33 [label="testFullPathMatchesCaseInsensitive#?#8:new String[]\{ \"alpha/beta/gamma/GAMMA.XML\" \}
test2bisButCaseInsensitive#?#7:new String[]\{ \"alpha/BETA/gamma/\" \}" shape=ellipse]
34 [label="testFullPathMatchesCaseInsensitive#?#9:ds.scan()
test2bisButCaseInsensitive#?#9:ds.scan()" shape=ellipse]
35 [label="testFullPathMatchesCaseInsensitive#?#9:scan()
test2bisButCaseInsensitive#?#9:scan()" shape=ellipse]
36 [label="testFullPathMatchesCaseInsensitive#?#9:ds
test2bisButCaseInsensitive#?#9:ds" shape=ellipse]
37 [label="testFullPathMatchesCaseInsensitive#?#10:compareFiles(ds, new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{  \})
test2bisButCaseInsensitive#?#10:compareFiles(ds, new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}, new String[]\{ \"alpha/beta/gamma\" \})" shape=ellipse]
38 [label="testFullPathMatchesCaseInsensitive#?#10:compareFiles(<unknown>,java.lang.String[],java.lang.String[])
test2bisButCaseInsensitive#?#10:compareFiles(<unknown>,java.lang.String[],java.lang.String[])" shape=ellipse]
39 [label="testFullPathMatchesCaseInsensitive#?#-1:
test2bisButCaseInsensitive#?#-1:" shape=ellipse]
40 [label="testFullPathMatchesCaseInsensitive#?#-1:PlaceHold
test2bisButCaseInsensitive#?#-1:PlaceHold" shape=ellipse]
41 [label="testFullPathMatchesCaseInsensitive#?#10:ds
test2bisButCaseInsensitive#?#11:ds" shape=ellipse]
42 [label="testFullPathMatchesCaseInsensitive#?#10:new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}
test2bisButCaseInsensitive#?#11:new String[]\{ \"alpha/beta/gamma/gamma.xml\" \}" shape=ellipse]
43 [label="testFullPathMatchesCaseInsensitive#?#10:new String[]\{  \}
test2bisButCaseInsensitive#?#11:new String[]\{ \"alpha/beta/gamma\" \}" shape=ellipse]
44 [label="testFullPathMatchesCaseInsensitive#?#4:MOVE
test2bisButCaseInsensitive#?#4:MOVE" shape=ellipse]
45 [label="testFullPathMatchesCaseInsensitive#?#7:getProject
test2bisButCaseInsensitive#?#6:getProject" shape=ellipse]
46 [label="testFullPathMatchesCaseInsensitive#?#8:buildRule
test2bisButCaseInsensitive#?#7:buildRule" shape=ellipse]
0 -> 46 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 45 [label="AST:2"];
1 -> 27 [label="AST:2"];
1 -> 26 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
2 -> 8 [label="AST:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:2"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:2"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:2"];
2 -> 26 [label="Control Dep:2"];
2 -> 27 [label="Control Dep:2"];
2 -> 28 [label="Control Dep:2"];
2 -> 29 [label="Control Dep:2"];
2 -> 30 [label="Control Dep:2"];
2 -> 31 [label="Control Dep:2"];
2 -> 32 [label="Control Dep:2"];
2 -> 33 [label="Control Dep:2"];
2 -> 34 [label="Control Dep:2"];
2 -> 35 [label="Control Dep:2"];
2 -> 36 [label="Control Dep:2"];
2 -> 37 [label="Control Dep:2"];
2 -> 38 [label="Control Dep:2"];
2 -> 39 [label="Control Dep:2"];
2 -> 40 [label="Control Dep:2"];
2 -> 41 [label="Control Dep:2"];
2 -> 42 [label="Control Dep:2"];
2 -> 43 [label="Control Dep:2"];
2 -> 44 [label="Action:2"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 7 [label="Control Dep:2"];
3 -> 6 [label="Control Dep:2"];
3 -> 8 [label="Control Dep:2"];
4 -> 2 [label="AST:2"];
4 -> 9 [label="AST:2"];
9 -> 10 [label="AST:2"];
9 -> 15 [label="AST:2"];
9 -> 19 [label="AST:2"];
9 -> 30 [label="AST:2"];
9 -> 34 [label="AST:2"];
9 -> 37 [label="AST:2"];
10 -> 11 [label="AST:2"];
11 -> 13 [label="AST:2"];
11 -> 12 [label="AST:2"];
11 -> 14 [label="AST:2"];
15 -> 17 [label="AST:2"];
15 -> 16 [label="AST:2"];
15 -> 18 [label="AST:2"];
19 -> 21 [label="AST:2"];
19 -> 20 [label="AST:2"];
19 -> 22 [label="AST:2"];
22 -> 23 [label="AST:2"];
22 -> 24 [label="AST:2"];
22 -> 29 [label="AST:2"];
24 -> 1 [label="AST:2"];
24 -> 25 [label="AST:2"];
27 -> 28 [label="AST:2"];
30 -> 32 [label="AST:2"];
30 -> 31 [label="AST:2"];
30 -> 33 [label="AST:2"];
34 -> 36 [label="AST:2"];
34 -> 35 [label="AST:2"];
37 -> 39 [label="AST:2"];
37 -> 38 [label="AST:2"];
37 -> 41 [label="AST:2"];
37 -> 42 [label="AST:2"];
37 -> 43 [label="AST:2"];
39 -> 40 [label="AST:2"];
}