digraph "Pattern" {
0 [label="testFilterReaderHeadLinesSkip#?#2:INSERT
testFilterReaderTailLinesSkip#?#2:INSERT" shape=ellipse]
1 [label="testFilterReaderHeadLinesSkip#?#2:public void testFilterReaderHeadLinesSkip() throws IOException \{
    executeTarget(\"testFilterReaderHeadLinesSkip\");
    File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headLinesSkip.test\");
    File result = new File(getProject().getProperty(\"output\") + \"/head-tail.filterReaderHeadLinesSkip.test\");
    assertTrue(\"testFilterReaderHeadLinesSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result));
\}
testFilterReaderTailLinesSkip#?#2:public void testFilterReaderTailLinesSkip() throws IOException \{
    executeTarget(\"testFilterReaderTailLinesSkip\");
    File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.tailLinesSkip.test\");
    File result = new File(getProject().getProperty(\"output\") + \"/head-tail.filterReaderTailLinesSkip.test\");
    assertTrue(\"testFilterReaderTailLinesSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result));
\}" shape=ellipse]
2 [label="testFilterReaderHeadLinesSkip#?#2:testFilterReaderHeadLinesSkip
testFilterReaderTailLinesSkip#?#2:testFilterReaderTailLinesSkip" shape=ellipse]
3 [label="testFilterReaderHeadLinesSkip#?#2:void
testFilterReaderTailLinesSkip#?#2:void" shape=ellipse]
4 [label="testFilterReaderHeadLinesSkip#?#2:IOException
testFilterReaderTailLinesSkip#?#2:IOException" shape=ellipse]
5 [label="testFilterReaderHeadLinesSkip#?#-1:
testFilterReaderTailLinesSkip#?#-1:" shape=ellipse]
6 [label="testFilterReaderHeadLinesSkip#?#2:\{
    executeTarget(\"testFilterReaderHeadLinesSkip\");
    File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headLinesSkip.test\");
    File result = new File(getProject().getProperty(\"output\") + \"/head-tail.filterReaderHeadLinesSkip.test\");
    assertTrue(\"testFilterReaderHeadLinesSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result));
\}
testFilterReaderTailLinesSkip#?#2:\{
    executeTarget(\"testFilterReaderTailLinesSkip\");
    File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.tailLinesSkip.test\");
    File result = new File(getProject().getProperty(\"output\") + \"/head-tail.filterReaderTailLinesSkip.test\");
    assertTrue(\"testFilterReaderTailLinesSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result));
\}" shape=ellipse]
7 [label="testFilterReaderHeadLinesSkip#?#3:executeTarget(\"testFilterReaderHeadLinesSkip\")
testFilterReaderTailLinesSkip#?#3:executeTarget(\"testFilterReaderTailLinesSkip\")" shape=ellipse]
8 [label="testFilterReaderHeadLinesSkip#?#4:File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headLinesSkip.test\")
testFilterReaderTailLinesSkip#?#4:File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.tailLinesSkip.test\")" shape=ellipse]
9 [label="testFilterReaderHeadLinesSkip#?#6:File result = new File(getProject().getProperty(\"output\") + \"/head-tail.filterReaderHeadLinesSkip.test\")
testFilterReaderTailLinesSkip#?#6:File result = new File(getProject().getProperty(\"output\") + \"/head-tail.filterReaderTailLinesSkip.test\")" shape=ellipse]
10 [label="testFilterReaderHeadLinesSkip#?#8:assertTrue(\"testFilterReaderHeadLinesSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result))
testFilterReaderTailLinesSkip#?#8:assertTrue(\"testFilterReaderTailLinesSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result))" shape=ellipse]
11 [label="testFilterReaderHeadLinesSkip#?#2:VE: Modifiers_Method
testFilterReaderTailLinesSkip#?#2:VE: Modifiers_Method" shape=ellipse]
12 [label="testFilterReaderHeadLinesSkip#?#2:VE: ThrownTypes_testFilterReaderHeadLinesSkip
testFilterReaderTailLinesSkip#?#2:VE: ThrownTypes_testFilterReaderTailLinesSkip" shape=ellipse]
13 [label="testFilterReaderHeadLinesSkip#?#2:public
testFilterReaderTailLinesSkip#?#2:public" shape=ellipse]
14 [label="testFilterReaderHeadLinesSkip#?#2:@Test
testFilterReaderTailLinesSkip#?#2:@Test" shape=ellipse]
0 -> 14 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 2 [label="AST:2"];
1 -> 3 [label="AST:2"];
1 -> 4 [label="AST:2"];
1 -> 6 [label="AST:2"];
1 -> 11 [label="AST:2"];
1 -> 12 [label="AST:2"];
1 -> 13 [label="AST:2"];
4 -> 5 [label="AST:2"];
6 -> 7 [label="AST:2"];
6 -> 8 [label="AST:2"];
6 -> 9 [label="AST:2"];
6 -> 10 [label="AST:2"];
}