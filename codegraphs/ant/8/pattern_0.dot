digraph "Pattern" {
0 [label="handleOutput#?,String#3:INSERT
handleErrorOutput#?,String#3:INSERT" shape=ellipse]
1 [label="handleOutput#?,String#3:if (!line.equals(randomOutValue)) \{
    String message = (((\"Received = [\" + line) + \"], expected = [\") + randomOutValue) + \"]\";
    throw new BuildException(message);
\}
handleErrorOutput#?,String#3:if (!line.equals(randomErrValue)) \{
    String message = (((\"Received = [\" + line) + \"], expected = [\") + randomErrValue) + \"]\";
    throw new BuildException(message);
\}" shape=ellipse]
2 [label="handleOutput#?,String#2:\{
    if (!line.equals(randomOutValue)) \{
        String message = (((\"Received = [\" + line) + \"], expected = [\") + randomOutValue) + \"]\";
        throw new BuildException(message);
    \}
    outputReceived = true;
\}
handleErrorOutput#?,String#2:\{
    if (!line.equals(randomErrValue)) \{
        String message = (((\"Received = [\" + line) + \"], expected = [\") + randomErrValue) + \"]\";
        throw new BuildException(message);
    \}
    errorReceived = true;
\}" shape=ellipse]
3 [label="handleOutput#?,String#2:protected void handleOutput(String line) \{
    if (!line.equals(randomOutValue)) \{
        String message = (((\"Received = [\" + line) + \"], expected = [\") + randomOutValue) + \"]\";
        throw new BuildException(message);
    \}
    outputReceived = true;
\}
handleErrorOutput#?,String#2:protected void handleErrorOutput(String line) \{
    if (!line.equals(randomErrValue)) \{
        String message = (((\"Received = [\" + line) + \"], expected = [\") + randomErrValue) + \"]\";
        throw new BuildException(message);
    \}
    errorReceived = true;
\}" shape=ellipse]
4 [label="handleOutput#?,String#7:outputReceived = true
handleErrorOutput#?,String#7:errorReceived = true" shape=ellipse]
5 [label="handleOutput#?,String#3:!line.equals(randomOutValue)
handleErrorOutput#?,String#3:!line.equals(randomErrValue)" shape=ellipse]
6 [label="handleOutput#?,String#3:line.equals(randomOutValue)
handleErrorOutput#?,String#3:line.equals(randomErrValue)" shape=ellipse]
7 [label="handleOutput#?,String#3:\{
    String message = (((\"Received = [\" + line) + \"], expected = [\") + randomOutValue) + \"]\";
    throw new BuildException(message);
\}
handleErrorOutput#?,String#3:\{
    String message = (((\"Received = [\" + line) + \"], expected = [\") + randomErrValue) + \"]\";
    throw new BuildException(message);
\}" shape=ellipse]
8 [label="handleOutput#?,String#4:String message = (((\"Received = [\" + line) + \"], expected = [\") + randomOutValue) + \"]\"
handleErrorOutput#?,String#4:String message = (((\"Received = [\" + line) + \"], expected = [\") + randomErrValue) + \"]\"" shape=ellipse]
9 [label="handleOutput#?,String#4:(((\"Received = [\" + line) + \"], expected = [\") + randomOutValue) + \"]\"
handleErrorOutput#?,String#4:(((\"Received = [\" + line) + \"], expected = [\") + randomErrValue) + \"]\"" shape=ellipse]
10 [label="handleOutput#?,String#4:(((\"Received = [\" + line) + \"], expected = [\") + randomOutValue)
handleErrorOutput#?,String#4:(((\"Received = [\" + line) + \"], expected = [\") + randomErrValue)" shape=ellipse]
11 [label="handleOutput#?,String#4:((\"Received = [\" + line) + \"], expected = [\")
handleErrorOutput#?,String#4:((\"Received = [\" + line) + \"], expected = [\")" shape=ellipse]
12 [label="handleOutput#?,String#4:(\"Received = [\" + line)
handleErrorOutput#?,String#4:(\"Received = [\" + line)" shape=ellipse]
13 [label="handleOutput#?,String#4:\"Received = [\"
handleErrorOutput#?,String#4:\"Received = [\"" shape=ellipse]
14 [label="handleOutput#?,String#4:line
handleErrorOutput#?,String#4:line" shape=ellipse]
15 [label="handleOutput#?,String#4:\"], expected = [\"
handleErrorOutput#?,String#4:\"], expected = [\"" shape=ellipse]
16 [label="handleOutput#?,String#4:randomOutValue
handleErrorOutput#?,String#4:randomErrValue" shape=ellipse]
17 [label="handleOutput#?,String#4:\"]\"
handleErrorOutput#?,String#4:\"]\"" shape=ellipse]
18 [label="handleOutput#?,String#5:throw new BuildException(message)
handleErrorOutput#?,String#5:throw new BuildException(message)" shape=ellipse]
19 [label="handleOutput#?,String#5:new BuildException(message)
handleErrorOutput#?,String#5:new BuildException(message)" shape=ellipse]
20 [label="handleOutput#?,String#-1:BuildException(java.lang.String)
handleErrorOutput#?,String#-1:BuildException(java.lang.String)" shape=ellipse]
21 [label="handleOutput#?,String#5:message
handleErrorOutput#?,String#5:message" shape=ellipse]
22 [label="handleOutput#?,String#3:MOVE
handleErrorOutput#?,String#3:MOVE" shape=ellipse]
23 [label="handleOutput#?,String#3:(line.length() != 0) && (!line.equals(randomOutValue))
handleErrorOutput#?,String#3:(line.length() != 0) && (!line.equals(randomErrValue))" shape=ellipse]
24 [label="handleOutput#?,String#-1:BuildException(java.lang.String)
handleErrorOutput#?,String#-1:BuildException(java.lang.String)" shape=ellipse]
0 -> 23 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 5 [label="AST:2"];
1 -> 7 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
3 -> 2 [label="AST:2"];
5 -> 6 [label="AST:2"];
5 -> 7 [label="Control Dep:2"];
5 -> 8 [label="Control Dep:2"];
5 -> 9 [label="Control Dep:2"];
5 -> 10 [label="Control Dep:2"];
5 -> 11 [label="Control Dep:2"];
5 -> 12 [label="Control Dep:2"];
5 -> 13 [label="Control Dep:2"];
5 -> 14 [label="Control Dep:2"];
5 -> 15 [label="Control Dep:2"];
5 -> 16 [label="Control Dep:2"];
5 -> 17 [label="Control Dep:2"];
5 -> 18 [label="Control Dep:2"];
5 -> 19 [label="Control Dep:2"];
5 -> 20 [label="Control Dep:2"];
5 -> 21 [label="Control Dep:2"];
5 -> 22 [label="Action:2"];
7 -> 8 [label="AST:2"];
7 -> 18 [label="AST:2"];
8 -> 9 [label="AST:2"];
9 -> 10 [label="AST:2"];
9 -> 17 [label="AST:2"];
10 -> 11 [label="AST:2"];
10 -> 16 [label="AST:2"];
11 -> 12 [label="AST:2"];
11 -> 15 [label="AST:2"];
12 -> 13 [label="AST:2"];
12 -> 14 [label="AST:2"];
18 -> 19 [label="AST:2"];
19 -> 20 [label="AST:2"];
19 -> 21 [label="AST:2"];
22 -> 23 [label="Action:2"];
23 -> 24 [label="Control Dep:2"];
}