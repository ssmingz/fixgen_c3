digraph "getValue#?" {
0 [label="2:CtTypeReferenceImpl@String" shape=ellipse]
1 [label="2:CtVirtualElement@getValue" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@size()" shape=ellipse]
3 [label="3:CtVirtualElement@size" shape=ellipse]
4 [label="3:CtFieldReadImpl@values" shape=ellipse]
5 [label="3:CtInvocationImpl@values.size()" shape=ellipse]
6 [label="3:CtLiteralImpl@0" shape=ellipse]
7 [label="3:CtBinaryOperatorImpl@values.size() == 0" shape=ellipse]
8 [label="4:CtLiteralImpl@null" shape=ellipse]
9 [label="4:CtReturnImpl@return null" shape=ellipse]
10 [label="3:CtBlockImpl@\{
    return null;
\}" shape=ellipse]
11 [label="3:CtIfImpl@if (values.size() == 0) \{
    return null;
\}" shape=ellipse]
12 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
13 [label="6:CtLiteralImpl@\"\"" shape=ellipse]
14 [label="6:CtVirtualElement@fullValue" shape=ellipse]
15 [label="6:CtLocalVariableImpl@String fullValue = \"\"" shape=ellipse]
16 [label="7:CtTypeReferenceImpl@Enumeration" shape=ellipse]
17 [label="7:CtExecutableReferenceImpl@getValues()" shape=ellipse]
18 [label="7:CtVirtualElement@getValues" shape=ellipse]
19 [label="7:CtInvocationImpl@getValues()" shape=ellipse]
20 [label="7:CtVirtualElement@e" shape=ellipse]
21 [label="7:CtLocalVariableImpl@Enumeration e = getValues()" shape=ellipse]
22 [label="7:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
23 [label="7:CtVirtualElement@hasMoreElements" shape=ellipse]
24 [label="7:CtVariableReadImpl@e" shape=ellipse]
25 [label="7:CtInvocationImpl@e.hasMoreElements()" shape=ellipse]
26 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
27 [label="8:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
28 [label="8:CtVirtualElement@nextElement" shape=ellipse]
29 [label="8:CtVariableReadImpl@e" shape=ellipse]
30 [label="8:CtInvocationImpl@((String) (e.nextElement()))" shape=ellipse]
31 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
32 [label="8:CtVirtualElement@value" shape=ellipse]
33 [label="8:CtLocalVariableImpl@String value = ((String) (e.nextElement()))" shape=ellipse]
34 [label="9:CtVariableWriteImpl@fullValue" shape=ellipse]
35 [label="9:CtVariableReadImpl@value" shape=ellipse]
36 [label="9:CtLiteralImpl@\" \"" shape=ellipse]
37 [label="9:CtBinaryOperatorImpl@value + \" \"" shape=ellipse]
38 [label="9:CtOperatorAssignmentImpl@fullValue += value + \" \"" shape=ellipse]
39 [label="7:CtBlockImpl@\{
    String value = ((String) (e.nextElement()));
    fullValue += value + \" \";
\}" shape=ellipse]
40 [label="7:CtForImpl@for (Enumeration e = getValues(); e.hasMoreElements();) \{
    String value = ((String) (e.nextElement()));
    fullValue += value + \" \";
\}" shape=ellipse]
41 [label="11:CtExecutableReferenceImpl@trim()" shape=ellipse]
42 [label="11:CtVirtualElement@trim" shape=ellipse]
43 [label="11:CtVariableReadImpl@fullValue" shape=ellipse]
44 [label="11:CtInvocationImpl@fullValue.trim()" shape=ellipse]
45 [label="11:CtReturnImpl@return fullValue.trim()" shape=ellipse]
46 [label="2:CtBlockImpl@\{
    if (values.size() == 0) \{
        return null;
    \}
    String fullValue = \"\";
    for (Enumeration e = getValues(); e.hasMoreElements();) \{
        String value = ((String) (e.nextElement()));
        fullValue += value + \" \";
    \}
    return fullValue.trim();
\}" shape=ellipse]
47 [label="2:CtMethodImpl@public String getValue() \{
    if (values.size() == 0) \{
        return null;
    \}
    String fullValue = \"\";
    for (Enumeration e = getValues(); e.hasMoreElements();) \{
        String value = ((String) (e.nextElement()));
        fullValue += value + \" \";
    \}
    return fullValue.trim();
\}" shape=ellipse]
48 [label="8:Delete@DELETE" shape=ellipse]
49 [label="7:Insert@INSERT" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
5 -> 3 [label="AST"];
5 -> 4 [label="AST"];
5 -> 2 [label="AST"];
7 -> 5 [label="AST"];
7 -> 6 [label="AST"];
7 -> 10 [label="Control Dep"];
7 -> 9 [label="Control Dep"];
7 -> 8 [label="Control Dep"];
9 -> 8 [label="AST"];
10 -> 9 [label="AST"];
11 -> 7 [label="AST"];
11 -> 10 [label="AST"];
15 -> 14 [label="AST"];
15 -> 12 [label="AST"];
15 -> 13 [label="AST"];
16 -> 49 [label="Action"];
19 -> 18 [label="AST"];
19 -> 17 [label="AST"];
20 -> 24 [label="Define-Use"];
20 -> 29 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 16 [label="AST"];
21 -> 19 [label="AST"];
25 -> 23 [label="AST"];
25 -> 24 [label="AST"];
25 -> 22 [label="AST"];
25 -> 39 [label="Control Dep"];
25 -> 33 [label="Control Dep"];
25 -> 30 [label="Control Dep"];
25 -> 27 [label="Control Dep"];
25 -> 29 [label="Control Dep"];
25 -> 38 [label="Control Dep"];
25 -> 34 [label="Control Dep"];
25 -> 37 [label="Control Dep"];
25 -> 35 [label="Control Dep"];
25 -> 36 [label="Control Dep"];
29 -> 32 [label="Data Dep"];
30 -> 28 [label="AST"];
30 -> 31 [label="AST"];
30 -> 29 [label="AST"];
30 -> 27 [label="AST"];
31 -> 48 [label="Action"];
32 -> 35 [label="Define-Use"];
33 -> 32 [label="AST"];
33 -> 26 [label="AST"];
33 -> 30 [label="AST"];
34 -> 43 [label="Define-Use"];
35 -> 34 [label="Data Dep"];
37 -> 35 [label="AST"];
37 -> 36 [label="AST"];
38 -> 34 [label="AST"];
38 -> 37 [label="AST"];
39 -> 33 [label="AST"];
39 -> 38 [label="AST"];
40 -> 21 [label="AST"];
40 -> 25 [label="AST"];
40 -> 39 [label="AST"];
44 -> 42 [label="AST"];
44 -> 43 [label="AST"];
44 -> 41 [label="AST"];
45 -> 44 [label="AST"];
46 -> 11 [label="AST"];
46 -> 15 [label="AST"];
46 -> 40 [label="AST"];
46 -> 45 [label="AST"];
47 -> 1 [label="AST"];
47 -> 0 [label="AST"];
47 -> 46 [label="AST"];
49 -> 50 [label="Action"];
}