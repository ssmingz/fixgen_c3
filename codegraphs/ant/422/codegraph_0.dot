digraph "runExec#?,Execute" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@runExec" shape=ellipse]
2 [label="2:CtParameterImpl@Execute exe" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Execute" shape=ellipse]
4 [label="2:CtTypeReferenceImpl@BuildException" shape=ellipse]
5 [label="3:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
6 [label="3:CtVirtualElement@log" shape=ellipse]
7 [label="3:CtExecutableReferenceImpl@describeCommand()" shape=ellipse]
8 [label="3:CtVirtualElement@describeCommand" shape=ellipse]
9 [label="3:CtFieldReadImpl@cmdl" shape=ellipse]
10 [label="3:CtInvocationImpl@cmdl.describeCommand()" shape=ellipse]
11 [label="3:CtTypeAccessImpl@MSG_VERBOSE" shape=ellipse]
12 [label="3:CtInvocationImpl@log(cmdl.describeCommand(), MSG_VERBOSE)" shape=ellipse]
13 [label="4:CtExecutableReferenceImpl@setCommandline()" shape=ellipse]
14 [label="4:CtVirtualElement@setCommandline" shape=ellipse]
15 [label="4:CtVariableReadImpl@exe" shape=ellipse]
16 [label="4:CtExecutableReferenceImpl@getCommandline()" shape=ellipse]
17 [label="4:CtVirtualElement@getCommandline" shape=ellipse]
18 [label="4:CtFieldReadImpl@cmdl" shape=ellipse]
19 [label="4:CtInvocationImpl@cmdl.getCommandline()" shape=ellipse]
20 [label="4:CtInvocationImpl@exe.setCommandline(cmdl.getCommandline())" shape=ellipse]
21 [label="6:CtExecutableReferenceImpl@runExecute(<unknown>)" shape=ellipse]
22 [label="6:CtVirtualElement@runExecute" shape=ellipse]
23 [label="6:CtVariableReadImpl@exe" shape=ellipse]
24 [label="6:CtInvocationImpl@runExecute(exe)" shape=ellipse]
25 [label="5:CtBlockImpl@\{
    runExecute(exe);
\}" shape=ellipse]
26 [label="7:CtVirtualElement@e" shape=ellipse]
27 [label="7:CtTypeReferenceImpl@IOException" shape=ellipse]
28 [label="7:CtCatchVariableImpl@IOException e" shape=ellipse]
29 [label="8:CtFieldReadImpl@failIfExecFails" shape=ellipse]
30 [label="9:CtTypeReferenceImpl@BuildException" shape=ellipse]
31 [label="9:CtLiteralImpl@\"Execute failed: \"" shape=ellipse]
32 [label="9:CtExecutableReferenceImpl@toString()" shape=ellipse]
33 [label="9:CtVirtualElement@toString" shape=ellipse]
34 [label="9:CtVariableReadImpl@e" shape=ellipse]
35 [label="9:CtInvocationImpl@e.toString()" shape=ellipse]
36 [label="9:CtBinaryOperatorImpl@\"Execute failed: \" + e.toString()" shape=ellipse]
37 [label="9:CtVariableReadImpl@e" shape=ellipse]
38 [label="9:CtFieldReadImpl@location" shape=ellipse]
39 [label="9:CtConstructorCallImpl@new BuildException(\"Execute failed: \" + e.toString(), e, location)" shape=ellipse]
40 [label="9:CtThrowImpl@throw new BuildException(\"Execute failed: \" + e.toString(), e, location)" shape=ellipse]
41 [label="8:CtBlockImpl@\{
    throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
\}" shape=ellipse]
42 [label="11:CtExecutableReferenceImpl@log(<unknown>,<unknown>)" shape=ellipse]
43 [label="11:CtVirtualElement@log" shape=ellipse]
44 [label="11:CtLiteralImpl@\"Execute failed: \"" shape=ellipse]
45 [label="11:CtExecutableReferenceImpl@toString()" shape=ellipse]
46 [label="11:CtVirtualElement@toString" shape=ellipse]
47 [label="11:CtVariableReadImpl@e" shape=ellipse]
48 [label="11:CtInvocationImpl@e.toString()" shape=ellipse]
49 [label="11:CtBinaryOperatorImpl@\"Execute failed: \" + e.toString()" shape=ellipse]
50 [label="11:CtTypeAccessImpl@MSG_ERR" shape=ellipse]
51 [label="11:CtInvocationImpl@log(\"Execute failed: \" + e.toString(), MSG_ERR)" shape=ellipse]
52 [label="10:CtBlockImpl@\{
    log(\"Execute failed: \" + e.toString(), MSG_ERR);
\}" shape=ellipse]
53 [label="8:CtIfImpl@if (failIfExecFails) \{
    throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
\} else \{
    log(\"Execute failed: \" + e.toString(), MSG_ERR);
\}" shape=ellipse]
54 [label="7:CtBlockImpl@\{
    if (failIfExecFails) \{
        throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
    \} else \{
        log(\"Execute failed: \" + e.toString(), MSG_ERR);
    \}
\}" shape=ellipse]
55 [label="7:CtCatchImpl@ catch (IOException e) \{
    if (failIfExecFails) \{
        throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
    \} else \{
        log(\"Execute failed: \" + e.toString(), MSG_ERR);
    \}
\}" shape=ellipse]
56 [label="14:CtExecutableReferenceImpl@logFlush()" shape=ellipse]
57 [label="14:CtVirtualElement@logFlush" shape=ellipse]
58 [label="14:CtInvocationImpl@logFlush()" shape=ellipse]
59 [label="13:CtBlockImpl@\{
    logFlush();
\}" shape=ellipse]
60 [label="5:CtTryImpl@try \{
    runExecute(exe);
\} catch (IOException e) \{
    if (failIfExecFails) \{
        throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
    \} else \{
        log(\"Execute failed: \" + e.toString(), MSG_ERR);
    \}
\} finally \{
    logFlush();
\}" shape=ellipse]
61 [label="2:CtBlockImpl@\{
    log(cmdl.describeCommand(), MSG_VERBOSE);
    exe.setCommandline(cmdl.getCommandline());
    try \{
        runExecute(exe);
    \} catch (IOException e) \{
        if (failIfExecFails) \{
            throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
        \} else \{
            log(\"Execute failed: \" + e.toString(), MSG_ERR);
        \}
    \} finally \{
        logFlush();
    \}
\}" shape=ellipse]
62 [label="2:CtMethodImpl@protected void runExec(Execute exe) throws BuildException \{
    log(cmdl.describeCommand(), MSG_VERBOSE);
    exe.setCommandline(cmdl.getCommandline());
    try \{
        runExecute(exe);
    \} catch (IOException e) \{
        if (failIfExecFails) \{
            throw new BuildException(\"Execute failed: \" + e.toString(), e, location);
        \} else \{
            log(\"Execute failed: \" + e.toString(), MSG_ERR);
        \}
    \} finally \{
        logFlush();
    \}
\}" shape=ellipse]
63 [label="9:Delete@DELETE" shape=ellipse]
64 [label="9:Insert@INSERT" shape=ellipse]
65 [label="9:CtInvocationImpl@getLocation()" shape=ellipse]
2 -> 3 [label="AST"];
10 -> 8 [label="AST"];
10 -> 9 [label="AST"];
10 -> 7 [label="AST"];
12 -> 6 [label="AST"];
12 -> 5 [label="AST"];
12 -> 10 [label="AST"];
12 -> 11 [label="AST"];
19 -> 17 [label="AST"];
19 -> 18 [label="AST"];
19 -> 16 [label="AST"];
20 -> 14 [label="AST"];
20 -> 15 [label="AST"];
20 -> 13 [label="AST"];
20 -> 19 [label="AST"];
24 -> 22 [label="AST"];
24 -> 21 [label="AST"];
24 -> 23 [label="AST"];
25 -> 24 [label="AST"];
26 -> 34 [label="Define-Use"];
26 -> 37 [label="Define-Use"];
26 -> 47 [label="Define-Use"];
28 -> 26 [label="AST"];
28 -> 27 [label="AST"];
28 -> 54 [label="Control Dep"];
28 -> 53 [label="Control Dep"];
28 -> 29 [label="Control Dep"];
29 -> 41 [label="Control Dep"];
29 -> 40 [label="Control Dep"];
29 -> 39 [label="Control Dep"];
29 -> 36 [label="Control Dep"];
29 -> 31 [label="Control Dep"];
29 -> 35 [label="Control Dep"];
29 -> 32 [label="Control Dep"];
29 -> 34 [label="Control Dep"];
29 -> 37 [label="Control Dep"];
29 -> 38 [label="Control Dep"];
29 -> 52 [label="Control Dep"];
29 -> 51 [label="Control Dep"];
29 -> 42 [label="Control Dep"];
29 -> 49 [label="Control Dep"];
29 -> 44 [label="Control Dep"];
29 -> 48 [label="Control Dep"];
29 -> 45 [label="Control Dep"];
29 -> 47 [label="Control Dep"];
29 -> 50 [label="Control Dep"];
35 -> 33 [label="AST"];
35 -> 34 [label="AST"];
35 -> 32 [label="AST"];
36 -> 31 [label="AST"];
36 -> 35 [label="AST"];
38 -> 63 [label="Action"];
39 -> 36 [label="AST"];
39 -> 37 [label="AST"];
39 -> 38 [label="AST"];
39 -> 64 [label="Action"];
40 -> 39 [label="AST"];
41 -> 40 [label="AST"];
48 -> 46 [label="AST"];
48 -> 47 [label="AST"];
48 -> 45 [label="AST"];
49 -> 44 [label="AST"];
49 -> 48 [label="AST"];
51 -> 43 [label="AST"];
51 -> 42 [label="AST"];
51 -> 49 [label="AST"];
51 -> 50 [label="AST"];
52 -> 51 [label="AST"];
53 -> 29 [label="AST"];
53 -> 41 [label="AST"];
53 -> 52 [label="AST"];
54 -> 53 [label="AST"];
55 -> 28 [label="AST"];
55 -> 54 [label="AST"];
58 -> 57 [label="AST"];
58 -> 56 [label="AST"];
59 -> 58 [label="AST"];
60 -> 25 [label="AST"];
60 -> 55 [label="AST"];
60 -> 59 [label="AST"];
61 -> 12 [label="AST"];
61 -> 20 [label="AST"];
61 -> 60 [label="AST"];
62 -> 1 [label="AST"];
62 -> 0 [label="AST"];
62 -> 2 [label="AST"];
62 -> 4 [label="AST"];
62 -> 61 [label="AST"];
64 -> 65 [label="Action"];
}