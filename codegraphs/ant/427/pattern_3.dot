digraph "Pattern" {
0 [label="testImplicitNotOptional#?#6:MOVE
testIsfalseIncomplete1#?#4:MOVE
testFilesmatchIncomplete#?#6:MOVE
testConditionEmpty#?#4:MOVE
testContainsIncomplete1#?#6:MOVE
testContainsIncomplete2#?#6:MOVE
testIstrueIncomplete1#?#4:MOVE
testImplicitExplicit#?#6:MOVE
testConditionIncomplete#?#6:MOVE
testNegationIncomplete#?#4:MOVE" shape=ellipse]
1 [label="testImplicitNotOptional#?#6:\"Missing nested elements for implicit element implicit\"
testIsfalseIncomplete1#?#4:\"Nothing to test for falsehood\"
testFilesmatchIncomplete#?#6:\"both file1 and file2 are required in filesmatch\"
testConditionEmpty#?#4:\"You must nest a condition into <condition>\"
testContainsIncomplete1#?#6:\"both string and substring are required in contains\"
testContainsIncomplete2#?#6:\"both string and substring are required in contains\"
testIstrueIncomplete1#?#4:\"Nothing to test for truth\"
testImplicitExplicit#?#6:\"Only one element allowed when using implicit elements\"
testConditionIncomplete#?#6:\"The property attribute is required.\"
testNegationIncomplete#?#4:\"You must nest a condition into <not>\"" shape=ellipse]
2 [label="testImplicitNotOptional#?#3:expectSpecificBuildException(\"implicit.notoptional\", \"Missing nested elements for implicit element implicit\", \"Missing nested elements for implicit element implicit\")
testIsfalseIncomplete1#?#3:expectSpecificBuildException(\"isfalse-incomplete\", \"Missing attribute\", \"Nothing to test for falsehood\")
testFilesmatchIncomplete#?#3:expectSpecificBuildException(\"filesmatch-incomplete\", \"Missing file2 attribute\", \"both file1 and file2 are required in filesmatch\")
testConditionEmpty#?#3:expectSpecificBuildException(\"condition-empty\", \"no conditions\", \"You must nest a condition into <condition>\")
testContainsIncomplete1#?#3:expectSpecificBuildException(\"contains-incomplete1\", \"Missing contains attribute\", \"both string and substring are required in contains\")
testContainsIncomplete2#?#3:expectSpecificBuildException(\"contains-incomplete2\", \"Missing contains attribute\", \"both string and substring are required in contains\")
testIstrueIncomplete1#?#3:expectSpecificBuildException(\"istrue-incomplete\", \"Missing attribute\", \"Nothing to test for truth\")
testImplicitExplicit#?#3:expectSpecificBuildException(\"implicit.explicit\", \"Only one element allowed when using implicit elements\", \"Only one element allowed when using implicit elements\")
testConditionIncomplete#?#3:expectSpecificBuildException(\"condition-incomplete\", \"property attribute has been omitted\", \"The property attribute is required.\")
testNegationIncomplete#?#3:expectSpecificBuildException(\"negationincomplete\", \"no conditions in <not>\", \"You must nest a condition into <not>\")" shape=ellipse]
3 [label="testImplicitNotOptional#?#2:\{
    expectSpecificBuildException(\"implicit.notoptional\", \"Missing nested elements for implicit element implicit\", \"Missing nested elements for implicit element implicit\");
\}
testIsfalseIncomplete1#?#2:\{
    expectSpecificBuildException(\"isfalse-incomplete\", \"Missing attribute\", \"Nothing to test for falsehood\");
\}
testFilesmatchIncomplete#?#2:\{
    expectSpecificBuildException(\"filesmatch-incomplete\", \"Missing file2 attribute\", \"both file1 and file2 are required in filesmatch\");
\}
testConditionEmpty#?#2:\{
    expectSpecificBuildException(\"condition-empty\", \"no conditions\", \"You must nest a condition into <condition>\");
\}
testContainsIncomplete1#?#2:\{
    expectSpecificBuildException(\"contains-incomplete1\", \"Missing contains attribute\", \"both string and substring are required in contains\");
\}
testContainsIncomplete2#?#2:\{
    expectSpecificBuildException(\"contains-incomplete2\", \"Missing contains attribute\", \"both string and substring are required in contains\");
\}
testIstrueIncomplete1#?#2:\{
    expectSpecificBuildException(\"istrue-incomplete\", \"Missing attribute\", \"Nothing to test for truth\");
\}
testImplicitExplicit#?#2:\{
    expectSpecificBuildException(\"implicit.explicit\", \"Only one element allowed when using implicit elements\", \"Only one element allowed when using implicit elements\");
\}
testConditionIncomplete#?#2:\{
    expectSpecificBuildException(\"condition-incomplete\", \"property attribute has been omitted\", \"The property attribute is required.\");
\}
testNegationIncomplete#?#2:\{
    expectSpecificBuildException(\"negationincomplete\", \"no conditions in <not>\", \"You must nest a condition into <not>\");
\}" shape=ellipse]
4 [label="testImplicitNotOptional#?#3:expectSpecificBuildException
testIsfalseIncomplete1#?#3:expectSpecificBuildException
testFilesmatchIncomplete#?#3:expectSpecificBuildException
testConditionEmpty#?#3:expectSpecificBuildException
testContainsIncomplete1#?#3:expectSpecificBuildException
testContainsIncomplete2#?#3:expectSpecificBuildException
testIstrueIncomplete1#?#3:expectSpecificBuildException
testImplicitExplicit#?#3:expectSpecificBuildException
testConditionIncomplete#?#3:expectSpecificBuildException
testNegationIncomplete#?#3:expectSpecificBuildException" shape=ellipse]
5 [label="testImplicitNotOptional#?#-1:
testIsfalseIncomplete1#?#-1:
testFilesmatchIncomplete#?#-1:
testConditionEmpty#?#-1:
testContainsIncomplete1#?#-1:
testContainsIncomplete2#?#-1:
testIstrueIncomplete1#?#-1:
testImplicitExplicit#?#-1:
testConditionIncomplete#?#-1:
testNegationIncomplete#?#-1:" shape=ellipse]
6 [label="testImplicitNotOptional#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testIsfalseIncomplete1#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testFilesmatchIncomplete#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testConditionEmpty#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testContainsIncomplete1#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testContainsIncomplete2#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testIstrueIncomplete1#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testImplicitExplicit#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testConditionIncomplete#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)
testNegationIncomplete#?#3:expectSpecificBuildException(java.lang.String,java.lang.String,java.lang.String)" shape=ellipse]
7 [label="testImplicitNotOptional#?#4:\"implicit.notoptional\"
testIsfalseIncomplete1#?#4:\"isfalse-incomplete\"
testFilesmatchIncomplete#?#4:\"filesmatch-incomplete\"
testConditionEmpty#?#4:\"condition-empty\"
testContainsIncomplete1#?#4:\"contains-incomplete1\"
testContainsIncomplete2#?#4:\"contains-incomplete2\"
testIstrueIncomplete1#?#4:\"istrue-incomplete\"
testImplicitExplicit#?#4:\"implicit.explicit\"
testConditionIncomplete#?#4:\"condition-incomplete\"
testNegationIncomplete#?#4:\"negationincomplete\"" shape=ellipse]
8 [label="testImplicitNotOptional#?#5:\"Missing nested elements for implicit element implicit\"
testIsfalseIncomplete1#?#4:\"Missing attribute\"
testFilesmatchIncomplete#?#5:\"Missing file2 attribute\"
testConditionEmpty#?#4:\"no conditions\"
testContainsIncomplete1#?#5:\"Missing contains attribute\"
testContainsIncomplete2#?#5:\"Missing contains attribute\"
testIstrueIncomplete1#?#4:\"Missing attribute\"
testImplicitExplicit#?#5:\"Only one element allowed when using implicit elements\"
testConditionIncomplete#?#5:\"property attribute has been omitted\"
testNegationIncomplete#?#4:\"no conditions in <not>\"" shape=ellipse]
9 [label="testImplicitNotOptional#?#3:DELETE
testIsfalseIncomplete1#?#3:DELETE
testFilesmatchIncomplete#?#3:DELETE
testConditionEmpty#?#3:DELETE
testContainsIncomplete1#?#3:DELETE
testContainsIncomplete2#?#3:DELETE
testIstrueIncomplete1#?#3:DELETE
testImplicitExplicit#?#3:DELETE
testConditionIncomplete#?#3:DELETE
testNegationIncomplete#?#3:DELETE" shape=ellipse]
10 [label="testImplicitNotOptional#?#-1:String
testIsfalseIncomplete1#?#-1:String
testFilesmatchIncomplete#?#-1:String
testConditionEmpty#?#-1:String
testContainsIncomplete1#?#-1:String
testContainsIncomplete2#?#-1:String
testIstrueIncomplete1#?#-1:String
testImplicitExplicit#?#-1:String
testConditionIncomplete#?#-1:String
testNegationIncomplete#?#-1:String" shape=ellipse]
11 [label="testImplicitNotOptional#?#8:assertEquals(\"Missing nested elements for implicit element implicit\", ex.getMessage())
testIsfalseIncomplete1#?#8:assertEquals(\"Nothing to test for falsehood\", ex.getMessage())
testFilesmatchIncomplete#?#8:assertEquals(\"both file1 and file2 are required in filesmatch\", ex.getMessage())
testConditionEmpty#?#8:assertEquals(\"You must nest a condition into <condition>\", ex.getMessage())
testContainsIncomplete1#?#8:assertEquals(\"both string and substring are required in contains\", ex.getMessage())
testContainsIncomplete2#?#8:assertEquals(\"both string and substring are required in contains\", ex.getMessage())
testIstrueIncomplete1#?#8:assertEquals(\"Nothing to test for truth\", ex.getMessage())
testImplicitExplicit#?#8:assertEquals(\"Only one element allowed when using implicit elements\", ex.getMessage())
testConditionIncomplete#?#8:assertEquals(\"The property attribute is required.\", ex.getMessage())
testNegationIncomplete#?#8:assertEquals(\"You must nest a condition into <not>\", ex.getMessage())" shape=ellipse]
12 [label="testImplicitNotOptional#?#7:BuildException ex
testIsfalseIncomplete1#?#7:BuildException ex
testFilesmatchIncomplete#?#7:BuildException ex
testConditionEmpty#?#7:BuildException ex
testContainsIncomplete1#?#7:BuildException ex
testContainsIncomplete2#?#7:BuildException ex
testIstrueIncomplete1#?#7:BuildException ex
testImplicitExplicit#?#7:BuildException ex
testConditionIncomplete#?#7:BuildException ex
testNegationIncomplete#?#7:BuildException ex" shape=ellipse]
13 [label="testImplicitNotOptional#?#7:\{
    assertEquals(\"Missing nested elements for implicit element implicit\", ex.getMessage());
\}
testIsfalseIncomplete1#?#7:\{
    assertEquals(\"Nothing to test for falsehood\", ex.getMessage());
\}
testFilesmatchIncomplete#?#7:\{
    assertEquals(\"both file1 and file2 are required in filesmatch\", ex.getMessage());
\}
testConditionEmpty#?#7:\{
    assertEquals(\"You must nest a condition into <condition>\", ex.getMessage());
\}
testContainsIncomplete1#?#7:\{
    assertEquals(\"both string and substring are required in contains\", ex.getMessage());
\}
testContainsIncomplete2#?#7:\{
    assertEquals(\"both string and substring are required in contains\", ex.getMessage());
\}
testIstrueIncomplete1#?#7:\{
    assertEquals(\"Nothing to test for truth\", ex.getMessage());
\}
testImplicitExplicit#?#7:\{
    assertEquals(\"Only one element allowed when using implicit elements\", ex.getMessage());
\}
testConditionIncomplete#?#7:\{
    assertEquals(\"The property attribute is required.\", ex.getMessage());
\}
testNegationIncomplete#?#7:\{
    assertEquals(\"You must nest a condition into <not>\", ex.getMessage());
\}" shape=ellipse]
14 [label="testImplicitNotOptional#?#8:assertEquals(java.lang.String,<unknown>)
testIsfalseIncomplete1#?#8:assertEquals(java.lang.String,<unknown>)
testFilesmatchIncomplete#?#8:assertEquals(java.lang.String,<unknown>)
testConditionEmpty#?#8:assertEquals(java.lang.String,<unknown>)
testContainsIncomplete1#?#8:assertEquals(java.lang.String,<unknown>)
testContainsIncomplete2#?#8:assertEquals(java.lang.String,<unknown>)
testIstrueIncomplete1#?#8:assertEquals(java.lang.String,<unknown>)
testImplicitExplicit#?#8:assertEquals(java.lang.String,<unknown>)
testConditionIncomplete#?#8:assertEquals(java.lang.String,<unknown>)
testNegationIncomplete#?#8:assertEquals(java.lang.String,<unknown>)" shape=ellipse]
15 [label="testImplicitNotOptional#?#-1:
testIsfalseIncomplete1#?#-1:
testFilesmatchIncomplete#?#-1:
testConditionEmpty#?#-1:
testContainsIncomplete1#?#-1:
testContainsIncomplete2#?#-1:
testIstrueIncomplete1#?#-1:
testImplicitExplicit#?#-1:
testConditionIncomplete#?#-1:
testNegationIncomplete#?#-1:" shape=ellipse]
16 [label="testImplicitNotOptional#?#-1:PlaceHold
testIsfalseIncomplete1#?#-1:PlaceHold
testFilesmatchIncomplete#?#-1:PlaceHold
testConditionEmpty#?#-1:PlaceHold
testContainsIncomplete1#?#-1:PlaceHold
testContainsIncomplete2#?#-1:PlaceHold
testIstrueIncomplete1#?#-1:PlaceHold
testImplicitExplicit#?#-1:PlaceHold
testConditionIncomplete#?#-1:PlaceHold
testNegationIncomplete#?#-1:PlaceHold" shape=ellipse]
17 [label="testImplicitNotOptional#?#8:ex.getMessage()
testIsfalseIncomplete1#?#8:ex.getMessage()
testFilesmatchIncomplete#?#8:ex.getMessage()
testConditionEmpty#?#8:ex.getMessage()
testContainsIncomplete1#?#8:ex.getMessage()
testContainsIncomplete2#?#8:ex.getMessage()
testIstrueIncomplete1#?#8:ex.getMessage()
testImplicitExplicit#?#8:ex.getMessage()
testConditionIncomplete#?#8:ex.getMessage()
testNegationIncomplete#?#8:ex.getMessage()" shape=ellipse]
18 [label="testImplicitNotOptional#?#8:getMessage()
testIsfalseIncomplete1#?#8:getMessage()
testFilesmatchIncomplete#?#8:getMessage()
testConditionEmpty#?#8:getMessage()
testContainsIncomplete1#?#8:getMessage()
testContainsIncomplete2#?#8:getMessage()
testIstrueIncomplete1#?#8:getMessage()
testImplicitExplicit#?#8:getMessage()
testConditionIncomplete#?#8:getMessage()
testNegationIncomplete#?#8:getMessage()" shape=ellipse]
19 [label="testImplicitNotOptional#?#8:ex
testIsfalseIncomplete1#?#8:ex
testFilesmatchIncomplete#?#8:ex
testConditionEmpty#?#8:ex
testContainsIncomplete1#?#8:ex
testContainsIncomplete2#?#8:ex
testIstrueIncomplete1#?#8:ex
testImplicitExplicit#?#8:ex
testConditionIncomplete#?#8:ex
testNegationIncomplete#?#8:ex" shape=ellipse]
0 -> 11 [label="Action:10"];
1 -> 0 [label="Action:10"];
1 -> 10 [label="AST:10"];
2 -> 1 [label="AST:10"];
2 -> 4 [label="AST:10"];
2 -> 5 [label="AST:10"];
2 -> 6 [label="AST:10"];
2 -> 7 [label="AST:10"];
2 -> 8 [label="AST:10"];
2 -> 9 [label="Action:10"];
3 -> 2 [label="AST:10"];
11 -> 15 [label="AST:10"];
11 -> 14 [label="AST:10"];
11 -> 17 [label="AST:10"];
12 -> 11 [label="Control Dep:10"];
12 -> 13 [label="Control Dep:10"];
12 -> 14 [label="Control Dep:10"];
12 -> 15 [label="Control Dep:10"];
12 -> 16 [label="Control Dep:10"];
12 -> 17 [label="Control Dep:10"];
12 -> 18 [label="Control Dep:10"];
12 -> 19 [label="Control Dep:10"];
13 -> 11 [label="AST:10"];
15 -> 16 [label="AST:10"];
17 -> 19 [label="AST:10"];
17 -> 18 [label="AST:10"];
}