digraph "Pattern" {
0 [label="collectProjectHelpers#?#11:UPDATE
collectArgumentProcessors#?#9:UPDATE
parse#?,Project,Object,RootHandler#54:UPDATE" shape=ellipse]
1 [label="collectProjectHelpers#?#11:resource.openStream()
collectArgumentProcessors#?#9:resource.openStream()
parse#?,Project,Object,RootHandler#56:conn.getInputStream()" shape=ellipse]
2 [label="collectProjectHelpers#?#9:resources.hasMoreElements()
collectArgumentProcessors#?#7:resources.hasMoreElements()" shape=ellipse]
3 [label="collectProjectHelpers#?#7:classLoader != null
collectArgumentProcessors#?#5:classLoader != null
parse#?,Project,Object,RootHandler#44:buildFile != null" shape=ellipse]
4 [label="collectProjectHelpers#?#9:while (resources.hasMoreElements()) \{
    URL resource = resources.nextElement();
    projectHelper = getProjectHelperByService(resource.openStream());
    registerProjectHelper(projectHelper);
\} 
collectArgumentProcessors#?#7:while (resources.hasMoreElements()) \{
    URL resource = resources.nextElement();
    ArgumentProcessor processor = getProcessorByService(resource.openStream());
    registerArgumentProcessor(processor);
\} " shape=ellipse]
5 [label="collectProjectHelpers#?#9:hasMoreElements
collectArgumentProcessors#?#7:hasMoreElements
parse#?,Project,Object,RootHandler#54:openStream" shape=ellipse]
6 [label="collectProjectHelpers#?#9:resources
collectArgumentProcessors#?#7:resources" shape=ellipse]
7 [label="collectProjectHelpers#?#9:hasMoreElements()
collectArgumentProcessors#?#7:hasMoreElements()" shape=ellipse]
8 [label="collectProjectHelpers#?#9:\{
    URL resource = resources.nextElement();
    projectHelper = getProjectHelperByService(resource.openStream());
    registerProjectHelper(projectHelper);
\}
collectArgumentProcessors#?#7:\{
    URL resource = resources.nextElement();
    ArgumentProcessor processor = getProcessorByService(resource.openStream());
    registerArgumentProcessor(processor);
\}
parse#?,Project,Object,RootHandler#53:\{
    inputStream = url.openStream();
\}" shape=ellipse]
9 [label="collectProjectHelpers#?#10:URL resource = resources.nextElement()
collectArgumentProcessors#?#8:URL resource = resources.nextElement()
parse#?,Project,Object,RootHandler#54:inputStream = url.openStream()" shape=ellipse]
10 [label="collectProjectHelpers#?#10:resources.nextElement()
collectArgumentProcessors#?#8:resources.nextElement()" shape=ellipse]
11 [label="collectProjectHelpers#?#10:nextElement()
collectArgumentProcessors#?#8:nextElement()
parse#?,Project,Object,RootHandler#54:openStream()" shape=ellipse]
12 [label="collectProjectHelpers#?#10:resources
collectArgumentProcessors#?#8:resources
parse#?,Project,Object,RootHandler#51:uri" shape=ellipse]
13 [label="collectProjectHelpers#?#11:projectHelper = getProjectHelperByService(resource.openStream())
collectArgumentProcessors#?#9:ArgumentProcessor processor = getProcessorByService(resource.openStream())" shape=ellipse]
14 [label="collectProjectHelpers#?#11:projectHelper
parse#?,Project,Object,RootHandler#54:url" shape=ellipse]
15 [label="collectProjectHelpers#?#11:getProjectHelperByService(resource.openStream())
collectArgumentProcessors#?#9:getProcessorByService(resource.openStream())" shape=ellipse]
16 [label="collectProjectHelpers#?#11:getProjectHelperByService(<unknown>)
collectArgumentProcessors#?#9:getProcessorByService(<unknown>)
parse#?,Project,Object,RootHandler#52:getEntry(java.lang.String)" shape=ellipse]
17 [label="collectProjectHelpers#?#-1:
collectArgumentProcessors#?#-1:" shape=ellipse]
18 [label="collectProjectHelpers#?#-1:PlaceHold
collectArgumentProcessors#?#-1:PlaceHold
parse#?,Project,Object,RootHandler#51:Locator" shape=ellipse]
19 [label="collectProjectHelpers#?#11:openStream()
collectArgumentProcessors#?#9:openStream()" shape=ellipse]
20 [label="collectProjectHelpers#?#11:resource
collectArgumentProcessors#?#9:resource" shape=ellipse]
21 [label="collectProjectHelpers#?#12:registerProjectHelper(projectHelper)
collectArgumentProcessors#?#10:registerArgumentProcessor(processor)" shape=ellipse]
22 [label="collectProjectHelpers#?#12:registerProjectHelper(<unknown>)
collectArgumentProcessors#?#10:registerArgumentProcessor(<unknown>)
parse#?,Project,Object,RootHandler#52:substring(int)" shape=ellipse]
23 [label="collectProjectHelpers#?#-1:
collectArgumentProcessors#?#-1:
parse#?,Project,Object,RootHandler#52:zf" shape=ellipse]
24 [label="collectProjectHelpers#?#-1:PlaceHold
collectArgumentProcessors#?#-1:PlaceHold" shape=ellipse]
25 [label="collectProjectHelpers#?#12:projectHelper" shape=ellipse]
26 [label="collectProjectHelpers#?#11:openStream
collectArgumentProcessors#?#9:openStream" shape=ellipse]
27 [label="collectProjectHelpers#?#13:conn.getInputStream()
collectArgumentProcessors#?#11:conn.getInputStream()" shape=ellipse]
28 [label="collectArgumentProcessors#?#10:processor
parse#?,Project,Object,RootHandler#52:uri" shape=ellipse]
29 [label="parse#?,Project,Object,RootHandler#51:zf = new ZipFile(Locator.fromJarURI(uri), \"UTF-8\")" shape=ellipse]
30 [label="parse#?,Project,Object,RootHandler#52:zf.getEntry(uri.substring(pling + 1))" shape=ellipse]
31 [label="parse#?,Project,Object,RootHandler#52:inputStream" shape=ellipse]
32 [label="parse#?,Project,Object,RootHandler#54:url.openStream()" shape=ellipse]
33 [label="parse#?,Project,Object,RootHandler#52:zf" shape=ellipse]
34 [label="parse#?,Project,Object,RootHandler#54:inputStream" shape=ellipse]
35 [label="parse#?,Project,Object,RootHandler#50:uri.startsWith(\"jar:file\") && ((pling = uri.indexOf(\"!/\")) > (-1))" shape=ellipse]
36 [label="parse#?,Project,Object,RootHandler#50:\{
    zf = new ZipFile(Locator.fromJarURI(uri), \"UTF-8\");
    inputStream = zf.getInputStream(zf.getEntry(uri.substring(pling + 1)));
\}" shape=ellipse]
37 [label="parse#?,Project,Object,RootHandler#-1:ZipFile()" shape=ellipse]
38 [label="parse#?,Project,Object,RootHandler#52:zf.getInputStream(zf.getEntry(uri.substring(pling + 1)))" shape=ellipse]
39 [label="parse#?,Project,Object,RootHandler#51:new ZipFile(Locator.fromJarURI(uri), \"UTF-8\")" shape=ellipse]
40 [label="parse#?,Project,Object,RootHandler#50:((pling = uri.indexOf(\"!/\")) > (-1))" shape=ellipse]
41 [label="parse#?,Project,Object,RootHandler#52:uri.substring(pling + 1)" shape=ellipse]
42 [label="parse#?,Project,Object,RootHandler#52:pling" shape=ellipse]
43 [label="parse#?,Project,Object,RootHandler#51:Locator.fromJarURI(uri)" shape=ellipse]
44 [label="parse#?,Project,Object,RootHandler#51:\"UTF-8\"" shape=ellipse]
45 [label="parse#?,Project,Object,RootHandler#52:pling + 1" shape=ellipse]
46 [label="parse#?,Project,Object,RootHandler#52:1" shape=ellipse]
47 [label="parse#?,Project,Object,RootHandler#52:getInputStream()" shape=ellipse]
48 [label="parse#?,Project,Object,RootHandler#52:inputStream = zf.getInputStream(zf.getEntry(uri.substring(pling + 1)))" shape=ellipse]
49 [label="parse#?,Project,Object,RootHandler#50:if (uri.startsWith(\"jar:file\") && ((pling = uri.indexOf(\"!/\")) > (-1))) \{
    zf = new ZipFile(Locator.fromJarURI(uri), \"UTF-8\");
    inputStream = zf.getInputStream(zf.getEntry(uri.substring(pling + 1)));
\} else \{
    inputStream = url.openStream();
\}" shape=ellipse]
50 [label="parse#?,Project,Object,RootHandler#51:fromJarURI(java.lang.String)" shape=ellipse]
51 [label="parse#?,Project,Object,RootHandler#50:uri.startsWith(\"jar:file\")" shape=ellipse]
52 [label="parse#?,Project,Object,RootHandler#-1:boolean" shape=ellipse]
53 [label="parse#?,Project,Object,RootHandler#51:zf" shape=ellipse]
0 -> 27 [label="Action:2"];
0 -> 1 [label="Action:1"];
1 -> 0 [label="Action:2"];
1 -> 26 [label="AST:2"];
1 -> 20 [label="AST:2"];
1 -> 19 [label="AST:2"];
2 -> 1 [label="Control Dep:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
2 -> 8 [label="Control Dep:2"];
2 -> 9 [label="Control Dep:2"];
2 -> 10 [label="Control Dep:2"];
2 -> 11 [label="Control Dep:2"];
2 -> 12 [label="Control Dep:2"];
2 -> 13 [label="Control Dep:2"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:2"];
2 -> 16 [label="Control Dep:2"];
2 -> 17 [label="Control Dep:2"];
2 -> 18 [label="Control Dep:2"];
2 -> 19 [label="Control Dep:2"];
2 -> 20 [label="Control Dep:2"];
2 -> 21 [label="Control Dep:2"];
2 -> 22 [label="Control Dep:2"];
2 -> 23 [label="Control Dep:2"];
2 -> 24 [label="Control Dep:2"];
2 -> 25 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:2"];
3 -> 4 [label="Control Dep:2"];
3 -> 7 [label="Control Dep:2"];
3 -> 6 [label="Control Dep:2"];
3 -> 35 [label="Control Dep:1"];
3 -> 40 [label="Control Dep:1"];
3 -> 49 [label="Control Dep:1"];
3 -> 51 [label="Control Dep:1"];
4 -> 2 [label="AST:2"];
4 -> 8 [label="AST:2"];
8 -> 9 [label="AST:3"];
8 -> 13 [label="AST:2"];
8 -> 21 [label="AST:2"];
9 -> 10 [label="AST:2"];
9 -> 32 [label="AST:1"];
9 -> 34 [label="AST:1"];
10 -> 12 [label="AST:2"];
10 -> 11 [label="AST:2"];
12 -> 53 [label="Data Dep:1"];
13 -> 14 [label="AST:1"];
13 -> 15 [label="AST:2"];
14 -> 25 [label="Define Use:1"];
14 -> 34 [label="Data Dep:1"];
15 -> 1 [label="AST:2"];
15 -> 17 [label="AST:2"];
15 -> 16 [label="AST:2"];
17 -> 14 [label="Data Dep:1"];
17 -> 18 [label="AST:2"];
20 -> 14 [label="Data Dep:1"];
21 -> 23 [label="AST:2"];
21 -> 22 [label="AST:2"];
21 -> 25 [label="AST:1"];
21 -> 28 [label="AST:1"];
23 -> 24 [label="AST:2"];
23 -> 31 [label="Data Dep:1"];
28 -> 31 [label="Data Dep:1"];
29 -> 53 [label="AST:1"];
29 -> 39 [label="AST:1"];
30 -> 33 [label="AST:1"];
30 -> 16 [label="AST:1"];
30 -> 41 [label="AST:1"];
32 -> 5 [label="AST:1"];
32 -> 14 [label="AST:1"];
32 -> 11 [label="AST:1"];
32 -> 0 [label="Action:1"];
33 -> 31 [label="Data Dep:1"];
35 -> 29 [label="Control Dep:1"];
35 -> 30 [label="Control Dep:1"];
35 -> 31 [label="Control Dep:1"];
35 -> 32 [label="Control Dep:1"];
35 -> 33 [label="Control Dep:1"];
35 -> 34 [label="Control Dep:1"];
35 -> 52 [label="AST:1"];
35 -> 51 [label="AST:1"];
35 -> 40 [label="AST:1"];
35 -> 36 [label="Control Dep:1"];
35 -> 53 [label="Control Dep:1"];
35 -> 39 [label="Control Dep:1"];
35 -> 37 [label="Control Dep:1"];
35 -> 43 [label="Control Dep:1"];
35 -> 50 [label="Control Dep:1"];
35 -> 18 [label="Control Dep:1"];
35 -> 12 [label="Control Dep:1"];
35 -> 44 [label="Control Dep:1"];
35 -> 48 [label="Control Dep:1"];
35 -> 38 [label="Control Dep:1"];
35 -> 47 [label="Control Dep:1"];
35 -> 23 [label="Control Dep:1"];
35 -> 16 [label="Control Dep:1"];
35 -> 41 [label="Control Dep:1"];
35 -> 22 [label="Control Dep:1"];
35 -> 28 [label="Control Dep:1"];
35 -> 45 [label="Control Dep:1"];
35 -> 42 [label="Control Dep:1"];
35 -> 46 [label="Control Dep:1"];
35 -> 8 [label="Control Dep:1"];
35 -> 9 [label="Control Dep:1"];
35 -> 11 [label="Control Dep:1"];
35 -> 14 [label="Control Dep:1"];
36 -> 29 [label="AST:1"];
36 -> 48 [label="AST:1"];
38 -> 30 [label="AST:1"];
38 -> 23 [label="AST:1"];
38 -> 47 [label="AST:1"];
39 -> 37 [label="AST:1"];
39 -> 43 [label="AST:1"];
39 -> 44 [label="AST:1"];
41 -> 28 [label="AST:1"];
41 -> 22 [label="AST:1"];
41 -> 45 [label="AST:1"];
42 -> 31 [label="Data Dep:1"];
43 -> 18 [label="AST:1"];
43 -> 50 [label="AST:1"];
43 -> 12 [label="AST:1"];
45 -> 42 [label="AST:1"];
45 -> 46 [label="AST:1"];
48 -> 31 [label="AST:1"];
48 -> 38 [label="AST:1"];
49 -> 35 [label="AST:1"];
49 -> 36 [label="AST:1"];
49 -> 8 [label="AST:1"];
53 -> 33 [label="Define Use:1"];
53 -> 23 [label="Define Use:1"];
}