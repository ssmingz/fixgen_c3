digraph "Pattern" {
0 [label="testOnErrorIgnore#?#2:INSERT
testXmlnsFile#?#2:INSERT
testNsAttributes#?#2:INSERT
testImplicitOptional#?#2:INSERT
testOverrideDefault#?#2:INSERT
testElementOrder#?#2:INSERT
testXmlns#?#2:INSERT
testGlobal#?#2:INSERT
testElementOrder2#?#2:INSERT
testAntTypeTest#?#2:INSERT
testDoubleDefault#?#2:INSERT
test6#?#2:INSERT" shape=ellipse]
1 [label="testOnErrorIgnore#?#2:public void testOnErrorIgnore() \{
    expectLog(\"onerror.ignore\", \"\");
\}
testXmlnsFile#?#2:public void testXmlnsFile() \{
    expectLog(\"xmlns.file\", \"MyTask called\");
\}
testNsAttributes#?#2:public void testNsAttributes() \{
    expectLog(\"ns.attributes\", \"hello world\");
\}
testImplicitOptional#?#2:public void testImplicitOptional() \{
    expectLog(\"implicit.optional\", \"Before implicitAfter implicit\");
\}
testOverrideDefault#?#2:public void testOverrideDefault() \{
    expectLog(\"override.default\", \"value is new\");
\}
testElementOrder#?#2:public void testElementOrder() \{
    expectLog(\"element.order\", \"Line 1Line 2\");
\}
testXmlns#?#2:public void testXmlns() \{
    expectLog(\"xmlns\", \"MyTask called\");
\}
testGlobal#?#2:public void testGlobal() \{
    expectLog(\"testGlobal\", \"worked\");
\}
testElementOrder2#?#2:public void testElementOrder2() \{
    expectLog(\"element.order2\", \"Line 1Line 2Line 3\");
\}
testAntTypeTest#?#2:public void testAntTypeTest() \{
    expectLog(\"antTypeTest\", \"\");
\}
testDoubleDefault#?#2:public void testDoubleDefault() \{
    expectLog(\"doubledefault\", \"attribute is falseattribute is true\");
\}
test6#?#2:public void test6() \{
    expectLog(\"test6\", \"simpletask: worked\");
\}" shape=ellipse]
2 [label="testOnErrorIgnore#?#2:testOnErrorIgnore
testXmlnsFile#?#2:VE: Modifiers_Method
testNsAttributes#?#2:VE: Modifiers_Method
testImplicitOptional#?#2:testImplicitOptional
testOverrideDefault#?#2:VE: Modifiers_Method
testElementOrder#?#2:testElementOrder
testXmlns#?#2:VE: Modifiers_Method
testGlobal#?#2:VE: Modifiers_Method
testElementOrder2#?#2:testElementOrder2
testAntTypeTest#?#2:VE: Modifiers_Method
testDoubleDefault#?#2:VE: Modifiers_Method
test6#?#2:VE: Modifiers_Method" shape=ellipse]
3 [label="testOnErrorIgnore#?#2:void
testXmlnsFile#?#2:void
testNsAttributes#?#2:void
testImplicitOptional#?#2:void
testOverrideDefault#?#2:void
testElementOrder#?#2:void
testXmlns#?#2:void
testGlobal#?#2:void
testElementOrder2#?#2:void
testAntTypeTest#?#2:void
testDoubleDefault#?#2:void
test6#?#2:void" shape=ellipse]
4 [label="testOnErrorIgnore#?#2:\{
    expectLog(\"onerror.ignore\", \"\");
\}
testXmlnsFile#?#2:\{
    expectLog(\"xmlns.file\", \"MyTask called\");
\}
testNsAttributes#?#2:\{
    expectLog(\"ns.attributes\", \"hello world\");
\}
testImplicitOptional#?#2:\{
    expectLog(\"implicit.optional\", \"Before implicitAfter implicit\");
\}
testOverrideDefault#?#2:\{
    expectLog(\"override.default\", \"value is new\");
\}
testElementOrder#?#2:\{
    expectLog(\"element.order\", \"Line 1Line 2\");
\}
testXmlns#?#2:\{
    expectLog(\"xmlns\", \"MyTask called\");
\}
testGlobal#?#2:\{
    expectLog(\"testGlobal\", \"worked\");
\}
testElementOrder2#?#2:\{
    expectLog(\"element.order2\", \"Line 1Line 2Line 3\");
\}
testAntTypeTest#?#2:\{
    expectLog(\"antTypeTest\", \"\");
\}
testDoubleDefault#?#2:\{
    expectLog(\"doubledefault\", \"attribute is falseattribute is true\");
\}
test6#?#2:\{
    expectLog(\"test6\", \"simpletask: worked\");
\}" shape=ellipse]
5 [label="testOnErrorIgnore#?#3:expectLog(\"onerror.ignore\", \"\")
testXmlnsFile#?#3:expectLog(\"xmlns.file\", \"MyTask called\")
testNsAttributes#?#3:expectLog(\"ns.attributes\", \"hello world\")
testImplicitOptional#?#3:expectLog(\"implicit.optional\", \"Before implicitAfter implicit\")
testOverrideDefault#?#3:expectLog(\"override.default\", \"value is new\")
testElementOrder#?#3:expectLog(\"element.order\", \"Line 1Line 2\")
testXmlns#?#3:expectLog(\"xmlns\", \"MyTask called\")
testGlobal#?#3:expectLog(\"testGlobal\", \"worked\")
testElementOrder2#?#3:expectLog(\"element.order2\", \"Line 1Line 2Line 3\")
testAntTypeTest#?#3:expectLog(\"antTypeTest\", \"\")
testDoubleDefault#?#3:expectLog(\"doubledefault\", \"attribute is falseattribute is true\")
test6#?#3:expectLog(\"test6\", \"simpletask: worked\")" shape=ellipse]
6 [label="testOnErrorIgnore#?#2:VE: Modifiers_Method
testXmlnsFile#?#2:testXmlnsFile
testNsAttributes#?#2:testNsAttributes
testImplicitOptional#?#2:VE: Modifiers_Method
testOverrideDefault#?#2:testOverrideDefault
testElementOrder#?#2:VE: Modifiers_Method
testXmlns#?#2:testXmlns
testGlobal#?#2:testGlobal
testElementOrder2#?#2:VE: Modifiers_Method
testAntTypeTest#?#2:testAntTypeTest
testDoubleDefault#?#2:testDoubleDefault
test6#?#2:test6" shape=ellipse]
7 [label="testOnErrorIgnore#?#2:public
testXmlnsFile#?#2:public
testNsAttributes#?#2:public
testImplicitOptional#?#2:public
testOverrideDefault#?#2:public
testElementOrder#?#2:public
testXmlns#?#2:public
testGlobal#?#2:public
testElementOrder2#?#2:public
testAntTypeTest#?#2:public
testDoubleDefault#?#2:public
test6#?#2:public" shape=ellipse]
8 [label="testOnErrorIgnore#?#4:INSERT
testXmlnsFile#?#4:INSERT
testNsAttributes#?#4:INSERT
testImplicitOptional#?#4:INSERT
testOverrideDefault#?#4:INSERT
testElementOrder#?#4:INSERT
testXmlns#?#4:INSERT
testGlobal#?#4:INSERT
testElementOrder2#?#4:INSERT
testAntTypeTest#?#4:INSERT
testDoubleDefault#?#4:INSERT
test6#?#4:INSERT" shape=ellipse]
9 [label="testOnErrorIgnore#?#4:buildRule.executeTarget(\"onerror.ignore\")
testXmlnsFile#?#4:buildRule.executeTarget(\"xmlns.file\")
testNsAttributes#?#4:buildRule.executeTarget(\"ns.attributes\")
testImplicitOptional#?#4:buildRule.executeTarget(\"implicit.optional\")
testOverrideDefault#?#4:buildRule.executeTarget(\"override.default\")
testElementOrder#?#4:buildRule.executeTarget(\"element.order\")
testXmlns#?#4:buildRule.executeTarget(\"xmlns\")
testGlobal#?#4:buildRule.executeTarget(\"testGlobal\")
testElementOrder2#?#4:buildRule.executeTarget(\"element.order2\")
testAntTypeTest#?#4:buildRule.executeTarget(\"antTypeTest\")
testDoubleDefault#?#4:buildRule.executeTarget(\"doubledefault\")
test6#?#4:buildRule.executeTarget(\"test6\")" shape=ellipse]
10 [label="testOnErrorIgnore#?#2:@Test
testXmlnsFile#?#2:@Test
testNsAttributes#?#2:@Test
testImplicitOptional#?#2:@Test
testOverrideDefault#?#2:@Test
testElementOrder#?#2:@Test
testXmlns#?#2:@Test
testGlobal#?#2:@Test
testElementOrder2#?#2:@Test
testAntTypeTest#?#2:@Test
testDoubleDefault#?#2:@Test
test6#?#2:@Test" shape=ellipse]
0 -> 10 [label="Action:12"];
1 -> 0 [label="Action:12"];
1 -> 2 [label="AST:12"];
1 -> 3 [label="AST:12"];
1 -> 4 [label="AST:12"];
1 -> 6 [label="AST:12"];
1 -> 7 [label="AST:12"];
1 -> 8 [label="Action:12"];
4 -> 5 [label="AST:12"];
8 -> 9 [label="Action:12"];
}