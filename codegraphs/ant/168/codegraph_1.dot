digraph "testElementOrder#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testElementOrder" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@expectLog(java.lang.String,java.lang.String)" shape=ellipse]
3 [label="3:CtVirtualElement@expectLog" shape=ellipse]
4 [label="3:CtLiteralImpl@\"element.order\"" shape=ellipse]
5 [label="3:CtLiteralImpl@\"Line 1Line 2\"" shape=ellipse]
6 [label="3:CtInvocationImpl@expectLog(\"element.order\", \"Line 1Line 2\")" shape=ellipse]
7 [label="2:CtBlockImpl@\{
    expectLog(\"element.order\", \"Line 1Line 2\");
\}" shape=ellipse]
8 [label="2:CtMethodImpl@public void testElementOrder() \{
    expectLog(\"element.order\", \"Line 1Line 2\");
\}" shape=ellipse]
9 [label="3:Update@UPDATE" shape=ellipse]
10 [label="5:CtInvocationImpl@assertEquals(\"Line 1Line 2\", buildRule.getLog())" shape=ellipse]
11 [label="2:Insert@INSERT" shape=ellipse]
12 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
13 [label="4:Insert@INSERT" shape=ellipse]
14 [label="4:CtInvocationImpl@buildRule.executeTarget(\"element.order\")" shape=ellipse]
6 -> 3 [label="AST"];
6 -> 2 [label="AST"];
6 -> 4 [label="AST"];
6 -> 5 [label="AST"];
6 -> 9 [label="Action"];
7 -> 6 [label="AST"];
8 -> 1 [label="AST"];
8 -> 0 [label="AST"];
8 -> 7 [label="AST"];
8 -> 11 [label="Action"];
8 -> 13 [label="Action"];
9 -> 10 [label="Action"];
11 -> 12 [label="Action"];
13 -> 14 [label="Action"];
}