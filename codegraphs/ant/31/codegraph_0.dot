digraph "getWidth#?" {
0 [label="2:CtTypeReferenceImpl@float" shape=ellipse]
1 [label="2:CtVirtualElement@getWidth" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@float" shape=ellipse]
3 [label="3:CtLiteralImpl@0.0F" shape=ellipse]
4 [label="3:CtVirtualElement@width" shape=ellipse]
5 [label="3:CtLocalVariableImpl@float width = 0.0F" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
7 [label="4:CtExecutableReferenceImpl@indexOf(char)" shape=ellipse]
8 [label="4:CtVirtualElement@indexOf" shape=ellipse]
9 [label="4:CtFieldReadImpl@widthStr" shape=ellipse]
10 [label="4:CtLiteralImpl@'%'" shape=ellipse]
11 [label="4:CtInvocationImpl@widthStr.indexOf('%')" shape=ellipse]
12 [label="4:CtVirtualElement@percIndex" shape=ellipse]
13 [label="4:CtLocalVariableImpl@int percIndex = widthStr.indexOf('%')" shape=ellipse]
14 [label="5:CtVariableReadImpl@percIndex" shape=ellipse]
15 [label="5:CtLiteralImpl@0" shape=ellipse]
16 [label="5:CtBinaryOperatorImpl@percIndex > 0" shape=ellipse]
17 [label="6:CtVariableWriteImpl@width" shape=ellipse]
18 [label="6:CtExecutableReferenceImpl@parseFloat(java.lang.String)" shape=ellipse]
19 [label="6:CtVirtualElement@parseFloat" shape=ellipse]
20 [label="6:CtTypeAccessImpl@Float" shape=ellipse]
21 [label="6:CtExecutableReferenceImpl@substring(int,int)" shape=ellipse]
22 [label="6:CtVirtualElement@substring" shape=ellipse]
23 [label="6:CtFieldReadImpl@widthStr" shape=ellipse]
24 [label="6:CtLiteralImpl@0" shape=ellipse]
25 [label="6:CtVariableReadImpl@percIndex" shape=ellipse]
26 [label="6:CtInvocationImpl@widthStr.substring(0, percIndex)" shape=ellipse]
27 [label="6:CtInvocationImpl@Float.parseFloat(widthStr.substring(0, percIndex))" shape=ellipse]
28 [label="6:CtAssignmentImpl@width = Float.parseFloat(widthStr.substring(0, percIndex))" shape=ellipse]
29 [label="7:CtFieldWriteImpl@xPercent" shape=ellipse]
30 [label="7:CtLiteralImpl@true" shape=ellipse]
31 [label="7:CtAssignmentImpl@xPercent = true" shape=ellipse]
32 [label="8:CtVariableReadImpl@width" shape=ellipse]
33 [label="8:CtLiteralImpl@100" shape=ellipse]
34 [label="8:CtBinaryOperatorImpl@width / 100" shape=ellipse]
35 [label="8:CtReturnImpl@return width / 100" shape=ellipse]
36 [label="5:CtBlockImpl@\{
    width = Float.parseFloat(widthStr.substring(0, percIndex));
    xPercent = true;
    return width / 100;
\}" shape=ellipse]
37 [label="10:CtFieldWriteImpl@xPercent" shape=ellipse]
38 [label="10:CtLiteralImpl@false" shape=ellipse]
39 [label="10:CtAssignmentImpl@xPercent = false" shape=ellipse]
40 [label="11:CtExecutableReferenceImpl@parseFloat(java.lang.String)" shape=ellipse]
41 [label="11:CtVirtualElement@parseFloat" shape=ellipse]
42 [label="11:CtTypeAccessImpl@Float" shape=ellipse]
43 [label="11:CtFieldReadImpl@widthStr" shape=ellipse]
44 [label="11:CtInvocationImpl@Float.parseFloat(widthStr)" shape=ellipse]
45 [label="11:CtReturnImpl@return Float.parseFloat(widthStr)" shape=ellipse]
46 [label="9:CtBlockImpl@\{
    xPercent = false;
    return Float.parseFloat(widthStr);
\}" shape=ellipse]
47 [label="5:CtIfImpl@if (percIndex > 0) \{
    width = Float.parseFloat(widthStr.substring(0, percIndex));
    xPercent = true;
    return width / 100;
\} else \{
    xPercent = false;
    return Float.parseFloat(widthStr);
\}" shape=ellipse]
48 [label="2:CtBlockImpl@\{
    float width = 0.0F;
    int percIndex = widthStr.indexOf('%');
    if (percIndex > 0) \{
        width = Float.parseFloat(widthStr.substring(0, percIndex));
        xPercent = true;
        return width / 100;
    \} else \{
        xPercent = false;
        return Float.parseFloat(widthStr);
    \}
\}" shape=ellipse]
49 [label="2:CtMethodImpl@public float getWidth() \{
    float width = 0.0F;
    int percIndex = widthStr.indexOf('%');
    if (percIndex > 0) \{
        width = Float.parseFloat(widthStr.substring(0, percIndex));
        xPercent = true;
        return width / 100;
    \} else \{
        xPercent = false;
        return Float.parseFloat(widthStr);
    \}
\}" shape=ellipse]
50 [label="8:Delete@DELETE" shape=ellipse]
51 [label="8:Insert@INSERT" shape=ellipse]
52 [label="8:CtFieldReadImpl@HUNDRED" shape=ellipse]
4 -> 32 [label="Define-Use"];
5 -> 4 [label="AST"];
5 -> 2 [label="AST"];
5 -> 3 [label="AST"];
9 -> 12 [label="Data Dep"];
11 -> 8 [label="AST"];
11 -> 9 [label="AST"];
11 -> 7 [label="AST"];
11 -> 10 [label="AST"];
12 -> 14 [label="Define-Use"];
12 -> 25 [label="Define-Use"];
13 -> 12 [label="AST"];
13 -> 6 [label="AST"];
13 -> 11 [label="AST"];
16 -> 14 [label="AST"];
16 -> 15 [label="AST"];
16 -> 36 [label="Control Dep"];
16 -> 28 [label="Control Dep"];
16 -> 17 [label="Control Dep"];
16 -> 27 [label="Control Dep"];
16 -> 18 [label="Control Dep"];
16 -> 20 [label="Control Dep"];
16 -> 26 [label="Control Dep"];
16 -> 21 [label="Control Dep"];
16 -> 23 [label="Control Dep"];
16 -> 24 [label="Control Dep"];
16 -> 25 [label="Control Dep"];
16 -> 31 [label="Control Dep"];
16 -> 29 [label="Control Dep"];
16 -> 30 [label="Control Dep"];
16 -> 35 [label="Control Dep"];
16 -> 34 [label="Control Dep"];
16 -> 32 [label="Control Dep"];
16 -> 33 [label="Control Dep"];
16 -> 46 [label="Control Dep"];
16 -> 39 [label="Control Dep"];
16 -> 37 [label="Control Dep"];
16 -> 38 [label="Control Dep"];
16 -> 45 [label="Control Dep"];
16 -> 44 [label="Control Dep"];
16 -> 40 [label="Control Dep"];
16 -> 42 [label="Control Dep"];
16 -> 43 [label="Control Dep"];
17 -> 32 [label="Define-Use"];
23 -> 17 [label="Data Dep"];
25 -> 17 [label="Data Dep"];
26 -> 22 [label="AST"];
26 -> 23 [label="AST"];
26 -> 21 [label="AST"];
26 -> 24 [label="AST"];
26 -> 25 [label="AST"];
27 -> 19 [label="AST"];
27 -> 20 [label="AST"];
27 -> 18 [label="AST"];
27 -> 26 [label="AST"];
28 -> 17 [label="AST"];
28 -> 27 [label="AST"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
33 -> 50 [label="Action"];
34 -> 32 [label="AST"];
34 -> 33 [label="AST"];
34 -> 51 [label="Action"];
35 -> 34 [label="AST"];
36 -> 28 [label="AST"];
36 -> 31 [label="AST"];
36 -> 35 [label="AST"];
39 -> 37 [label="AST"];
39 -> 38 [label="AST"];
44 -> 41 [label="AST"];
44 -> 42 [label="AST"];
44 -> 40 [label="AST"];
44 -> 43 [label="AST"];
45 -> 44 [label="AST"];
46 -> 39 [label="AST"];
46 -> 45 [label="AST"];
47 -> 16 [label="AST"];
47 -> 36 [label="AST"];
47 -> 46 [label="AST"];
48 -> 5 [label="AST"];
48 -> 13 [label="AST"];
48 -> 47 [label="AST"];
49 -> 1 [label="AST"];
49 -> 0 [label="AST"];
49 -> 48 [label="AST"];
51 -> 52 [label="Action"];
}