digraph "Pattern" {
0 [label="append#?,Path#3:INSERT
getImageIcon#?,String#3:INSERT
tokenize#?,String#4:INSERT" shape=ellipse]
1 [label="append#?,Path#2:public void append(Path other) \{
    String[] l = other.list();
    for (int i = 0; i < l.length; i++) \{
        if (elements.indexOf(l[i]) == (-1)) \{
            elements.addElement(l[i]);
        \}
    \}
\}
getImageIcon#?,String#2:public ImageIcon getImageIcon(String fileName) \{
    ImageIcon icon = null;
    URL location = getClass().getResource(\"resources/\" + fileName);
    if (location != null) \{
        icon = new ImageIcon(location);
    \}
    return icon;
\}
tokenize#?,String#2:protected Vector tokenize(String args) \{
    Vector v = new Vector();
    StringTokenizer t = new StringTokenizer(args, \" \");
    while (t.hasMoreTokens()) \{
        v.addElement(t.nextToken());
    \} 
    return v;
\}" shape=ellipse]
2 [label="append#?,Path#2:append
getImageIcon#?,String#2:getImageIcon
tokenize#?,String#2:protected" shape=ellipse]
3 [label="append#?,Path#2:void
getImageIcon#?,String#2:ImageIcon
tokenize#?,String#2:Vector" shape=ellipse]
4 [label="append#?,Path#2:Path other
getImageIcon#?,String#2:String fileName
tokenize#?,String#2:String args" shape=ellipse]
5 [label="append#?,Path#2:Path
getImageIcon#?,String#2:String
tokenize#?,String#2:String" shape=ellipse]
6 [label="append#?,Path#2:\{
    String[] l = other.list();
    for (int i = 0; i < l.length; i++) \{
        if (elements.indexOf(l[i]) == (-1)) \{
            elements.addElement(l[i]);
        \}
    \}
\}
getImageIcon#?,String#2:\{
    ImageIcon icon = null;
    URL location = getClass().getResource(\"resources/\" + fileName);
    if (location != null) \{
        icon = new ImageIcon(location);
    \}
    return icon;
\}
tokenize#?,String#2:\{
    Vector v = new Vector();
    StringTokenizer t = new StringTokenizer(args, \" \");
    while (t.hasMoreTokens()) \{
        v.addElement(t.nextToken());
    \} 
    return v;
\}" shape=ellipse]
7 [label="append#?,Path#3:String[] l = other.list()
getImageIcon#?,String#4:URL location = getClass().getResource(\"resources/\" + fileName)
tokenize#?,String#4:StringTokenizer t = new StringTokenizer(args, \" \")" shape=ellipse]
8 [label="append#?,Path#4:for (int i = 0; i < l.length; i++) \{
    if (elements.indexOf(l[i]) == (-1)) \{
        elements.addElement(l[i]);
    \}
\}
tokenize#?,String#5:while (t.hasMoreTokens()) \{
    v.addElement(t.nextToken());
\} " shape=ellipse]
9 [label="append#?,Path#2:public
getImageIcon#?,String#2:public
tokenize#?,String#2:tokenize" shape=ellipse]
10 [label="append#?,Path#2:VE: Modifiers_Method
getImageIcon#?,String#2:VE: Modifiers_Method
tokenize#?,String#2:VE: Modifiers_Method" shape=ellipse]
11 [label="append#?,Path#3:if (other == null) \{
    return;
\}
getImageIcon#?,String#3:if (fileName == null) \{
    return null;
\}
tokenize#?,String#4:if (args == null) \{
    return v;
\}" shape=ellipse]
12 [label="getImageIcon#?,String#3:ImageIcon icon = null" shape=ellipse]
13 [label="getImageIcon#?,String#-1:" shape=ellipse]
14 [label="getImageIcon#?,String#5:if (location != null) \{
    icon = new ImageIcon(location);
\}" shape=ellipse]
15 [label="getImageIcon#?,String#8:return icon" shape=ellipse]
16 [label="tokenize#?,String#-1:" shape=ellipse]
17 [label="tokenize#?,String#8:return v" shape=ellipse]
18 [label="tokenize#?,String#3:Vector v = new Vector()" shape=ellipse]
0 -> 11 [label="Action:3"];
1 -> 0 [label="Action:3"];
1 -> 2 [label="AST:3"];
1 -> 3 [label="AST:3"];
1 -> 4 [label="AST:3"];
1 -> 6 [label="AST:3"];
1 -> 9 [label="AST:3"];
1 -> 10 [label="AST:3"];
3 -> 13 [label="AST:1"];
3 -> 16 [label="AST:1"];
4 -> 5 [label="AST:3"];
6 -> 7 [label="AST:3"];
6 -> 8 [label="AST:2"];
6 -> 12 [label="AST:1"];
6 -> 14 [label="AST:1"];
6 -> 15 [label="AST:1"];
6 -> 17 [label="AST:1"];
6 -> 18 [label="AST:1"];
}