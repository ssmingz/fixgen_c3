digraph "getFilterHash#?" {
0 [label="2:CtTypeReferenceImpl@Hashtable" shape=ellipse]
1 [label="2:CtVirtualElement@getFilterHash" shape=ellipse]
2 [label="3:CtFieldReadImpl@filterHash" shape=ellipse]
3 [label="3:CtLiteralImpl@null" shape=ellipse]
4 [label="3:CtBinaryOperatorImpl@filterHash == null" shape=ellipse]
5 [label="4:CtFieldWriteImpl@filterHash" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@Hashtable" shape=ellipse]
7 [label="4:CtExecutableReferenceImpl@size()" shape=ellipse]
8 [label="4:CtVirtualElement@size" shape=ellipse]
9 [label="4:CtExecutableReferenceImpl@getFilters()" shape=ellipse]
10 [label="4:CtVirtualElement@getFilters" shape=ellipse]
11 [label="4:CtInvocationImpl@getFilters()" shape=ellipse]
12 [label="4:CtInvocationImpl@getFilters().size()" shape=ellipse]
13 [label="4:CtConstructorCallImpl@new Hashtable(getFilters().size())" shape=ellipse]
14 [label="4:CtAssignmentImpl@filterHash = new Hashtable(getFilters().size())" shape=ellipse]
15 [label="5:CtTypeReferenceImpl@Enumeration" shape=ellipse]
16 [label="5:CtExecutableReferenceImpl@elements()" shape=ellipse]
17 [label="5:CtVirtualElement@elements" shape=ellipse]
18 [label="5:CtExecutableReferenceImpl@getFilters()" shape=ellipse]
19 [label="5:CtVirtualElement@getFilters" shape=ellipse]
20 [label="5:CtInvocationImpl@getFilters()" shape=ellipse]
21 [label="5:CtInvocationImpl@getFilters().elements()" shape=ellipse]
22 [label="5:CtVirtualElement@e" shape=ellipse]
23 [label="5:CtLocalVariableImpl@Enumeration e = getFilters().elements()" shape=ellipse]
24 [label="5:CtExecutableReferenceImpl@hasMoreElements()" shape=ellipse]
25 [label="5:CtVirtualElement@hasMoreElements" shape=ellipse]
26 [label="5:CtVariableReadImpl@e" shape=ellipse]
27 [label="5:CtInvocationImpl@e.hasMoreElements()" shape=ellipse]
28 [label="6:CtTypeReferenceImpl@Filter" shape=ellipse]
29 [label="6:CtExecutableReferenceImpl@nextElement()" shape=ellipse]
30 [label="6:CtVirtualElement@nextElement" shape=ellipse]
31 [label="6:CtVariableReadImpl@e" shape=ellipse]
32 [label="6:CtInvocationImpl@((Filter) (e.nextElement()))" shape=ellipse]
33 [label="6:CtTypeReferenceImpl@Filter" shape=ellipse]
34 [label="6:CtVirtualElement@filter" shape=ellipse]
35 [label="6:CtLocalVariableImpl@Filter filter = ((Filter) (e.nextElement()))" shape=ellipse]
36 [label="7:CtExecutableReferenceImpl@put()" shape=ellipse]
37 [label="7:CtVirtualElement@put" shape=ellipse]
38 [label="7:CtFieldReadImpl@filterHash" shape=ellipse]
39 [label="7:CtExecutableReferenceImpl@getToken()" shape=ellipse]
40 [label="7:CtVirtualElement@getToken" shape=ellipse]
41 [label="7:CtVariableReadImpl@filter" shape=ellipse]
42 [label="7:CtInvocationImpl@filter.getToken()" shape=ellipse]
43 [label="7:CtExecutableReferenceImpl@getValue()" shape=ellipse]
44 [label="7:CtVirtualElement@getValue" shape=ellipse]
45 [label="7:CtVariableReadImpl@filter" shape=ellipse]
46 [label="7:CtInvocationImpl@filter.getValue()" shape=ellipse]
47 [label="7:CtInvocationImpl@filterHash.put(filter.getToken(), filter.getValue())" shape=ellipse]
48 [label="5:CtBlockImpl@\{
    Filter filter = ((Filter) (e.nextElement()));
    filterHash.put(filter.getToken(), filter.getValue());
\}" shape=ellipse]
49 [label="5:CtForImpl@for (Enumeration e = getFilters().elements(); e.hasMoreElements();) \{
    Filter filter = ((Filter) (e.nextElement()));
    filterHash.put(filter.getToken(), filter.getValue());
\}" shape=ellipse]
50 [label="3:CtBlockImpl@\{
    filterHash = new Hashtable(getFilters().size());
    for (Enumeration e = getFilters().elements(); e.hasMoreElements();) \{
        Filter filter = ((Filter) (e.nextElement()));
        filterHash.put(filter.getToken(), filter.getValue());
    \}
\}" shape=ellipse]
51 [label="3:CtIfImpl@if (filterHash == null) \{
    filterHash = new Hashtable(getFilters().size());
    for (Enumeration e = getFilters().elements(); e.hasMoreElements();) \{
        Filter filter = ((Filter) (e.nextElement()));
        filterHash.put(filter.getToken(), filter.getValue());
    \}
\}" shape=ellipse]
52 [label="10:CtFieldReadImpl@filterHash" shape=ellipse]
53 [label="10:CtReturnImpl@return filterHash" shape=ellipse]
54 [label="2:CtBlockImpl@\{
    if (filterHash == null) \{
        filterHash = new Hashtable(getFilters().size());
        for (Enumeration e = getFilters().elements(); e.hasMoreElements();) \{
            Filter filter = ((Filter) (e.nextElement()));
            filterHash.put(filter.getToken(), filter.getValue());
        \}
    \}
    return filterHash;
\}" shape=ellipse]
55 [label="2:CtMethodImpl@public synchronized Hashtable getFilterHash() \{
    if (filterHash == null) \{
        filterHash = new Hashtable(getFilters().size());
        for (Enumeration e = getFilters().elements(); e.hasMoreElements();) \{
            Filter filter = ((Filter) (e.nextElement()));
            filterHash.put(filter.getToken(), filter.getValue());
        \}
    \}
    return filterHash;
\}" shape=ellipse]
56 [label="3:Insert@INSERT" shape=ellipse]
57 [label="3:CtIfImpl@if (isReference()) \{
    return getRef().getFilterHash();
\}" shape=ellipse]
58 [label="6:Insert@INSERT" shape=ellipse]
59 [label="6:CtInvocationImpl@dieOnCircularReference()" shape=ellipse]
4 -> 2 [label="AST"];
4 -> 3 [label="AST"];
4 -> 50 [label="Control Dep"];
4 -> 14 [label="Control Dep"];
4 -> 5 [label="Control Dep"];
4 -> 13 [label="Control Dep"];
4 -> 12 [label="Control Dep"];
4 -> 7 [label="Control Dep"];
4 -> 11 [label="Control Dep"];
4 -> 9 [label="Control Dep"];
4 -> 49 [label="Control Dep"];
4 -> 23 [label="Control Dep"];
4 -> 21 [label="Control Dep"];
4 -> 16 [label="Control Dep"];
4 -> 20 [label="Control Dep"];
4 -> 18 [label="Control Dep"];
4 -> 27 [label="Control Dep"];
4 -> 24 [label="Control Dep"];
4 -> 26 [label="Control Dep"];
5 -> 38 [label="Define-Use"];
5 -> 52 [label="Define-Use"];
11 -> 10 [label="AST"];
11 -> 9 [label="AST"];
12 -> 8 [label="AST"];
12 -> 11 [label="AST"];
12 -> 7 [label="AST"];
13 -> 12 [label="AST"];
14 -> 5 [label="AST"];
14 -> 13 [label="AST"];
20 -> 19 [label="AST"];
20 -> 18 [label="AST"];
21 -> 17 [label="AST"];
21 -> 20 [label="AST"];
21 -> 16 [label="AST"];
22 -> 26 [label="Define-Use"];
22 -> 31 [label="Define-Use"];
23 -> 22 [label="AST"];
23 -> 15 [label="AST"];
23 -> 21 [label="AST"];
27 -> 25 [label="AST"];
27 -> 26 [label="AST"];
27 -> 24 [label="AST"];
27 -> 48 [label="Control Dep"];
27 -> 35 [label="Control Dep"];
27 -> 32 [label="Control Dep"];
27 -> 29 [label="Control Dep"];
27 -> 31 [label="Control Dep"];
27 -> 47 [label="Control Dep"];
27 -> 36 [label="Control Dep"];
27 -> 38 [label="Control Dep"];
27 -> 42 [label="Control Dep"];
27 -> 39 [label="Control Dep"];
27 -> 41 [label="Control Dep"];
27 -> 46 [label="Control Dep"];
27 -> 43 [label="Control Dep"];
27 -> 45 [label="Control Dep"];
31 -> 34 [label="Data Dep"];
32 -> 30 [label="AST"];
32 -> 33 [label="AST"];
32 -> 31 [label="AST"];
32 -> 29 [label="AST"];
34 -> 41 [label="Define-Use"];
34 -> 45 [label="Define-Use"];
35 -> 34 [label="AST"];
35 -> 28 [label="AST"];
35 -> 32 [label="AST"];
42 -> 40 [label="AST"];
42 -> 41 [label="AST"];
42 -> 39 [label="AST"];
46 -> 44 [label="AST"];
46 -> 45 [label="AST"];
46 -> 43 [label="AST"];
47 -> 37 [label="AST"];
47 -> 38 [label="AST"];
47 -> 36 [label="AST"];
47 -> 42 [label="AST"];
47 -> 46 [label="AST"];
48 -> 35 [label="AST"];
48 -> 47 [label="AST"];
49 -> 23 [label="AST"];
49 -> 27 [label="AST"];
49 -> 48 [label="AST"];
50 -> 14 [label="AST"];
50 -> 49 [label="AST"];
51 -> 4 [label="AST"];
51 -> 50 [label="AST"];
53 -> 52 [label="AST"];
54 -> 51 [label="AST"];
54 -> 53 [label="AST"];
55 -> 1 [label="AST"];
55 -> 0 [label="AST"];
55 -> 54 [label="AST"];
55 -> 56 [label="Action"];
55 -> 58 [label="Action"];
56 -> 57 [label="Action"];
58 -> 59 [label="Action"];
}