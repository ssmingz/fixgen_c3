digraph "Pattern" {
0 [label="test3#?#2:INSERT
test2#?#2:INSERT" shape=ellipse]
1 [label="test3#?#2:public void test3() \{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\" \};
    project.executeTarget(\"test3\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}
test2#?#2:public void test2() \{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\", \"foo\" \};
    project.executeTarget(\"test2\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}" shape=ellipse]
2 [label="test3#?#2:test3
test2#?#2:test2" shape=ellipse]
3 [label="test3#?#2:void
test2#?#2:void" shape=ellipse]
4 [label="test3#?#2:\{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\" \};
    project.executeTarget(\"test3\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}
test2#?#2:\{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\", \"foo\" \};
    project.executeTarget(\"test2\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}" shape=ellipse]
5 [label="test3#?#3:String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\" \}
test2#?#3:String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\", \"foo\" \}" shape=ellipse]
6 [label="test3#?#33:project.executeTarget(\"test3\")
test2#?#35:project.executeTarget(\"test2\")" shape=ellipse]
7 [label="test3#?#34:assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes())
test2#?#36:assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes())" shape=ellipse]
8 [label="test3#?#2:VE: Modifiers_Method
test2#?#2:VE: Modifiers_Method" shape=ellipse]
9 [label="test3#?#2:public
test2#?#2:public" shape=ellipse]
10 [label="test3#?#2:@Test
test2#?#2:@Test" shape=ellipse]
0 -> 10 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 2 [label="AST:2"];
1 -> 3 [label="AST:2"];
1 -> 4 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 9 [label="AST:2"];
4 -> 5 [label="AST:2"];
4 -> 6 [label="AST:2"];
4 -> 7 [label="AST:2"];
}