digraph "Pattern" {
0 [label="test3#?#34:UPDATE
test2#?#36:UPDATE" shape=ellipse]
1 [label="test3#?#34:assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes())
test2#?#36:assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes())" shape=ellipse]
2 [label="test3#?#2:\{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\" \};
    project.executeTarget(\"test3\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}
test2#?#2:\{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\", \"foo\" \};
    project.executeTarget(\"test2\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}" shape=ellipse]
3 [label="test3#?#2:public void test3() \{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\" \};
    project.executeTarget(\"test3\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}
test2#?#2:public void test2() \{
    String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\", \"foo\" \};
    project.executeTarget(\"test2\");
    assertEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes());
\}" shape=ellipse]
4 [label="test3#?#3:String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\" \}
test2#?#3:String[] expected = new String[]\{ \"**/*~\", \"**/#*#\", \"**/.#*\", \"**/%*%\", \"**/._*\", \"**/CVS\", \"**/CVS/**\", \"**/.cvsignore\", \"**/SCCS\", \"**/SCCS/**\", \"**/vssver.scc\", \"**/.svn\", \"**/.svn/**\", \"**/.git\", \"**/.git/**\", \"**/.gitattributes\", \"**/.gitignore\", \"**/.gitmodules\", \"**/.hg\", \"**/.hg/**\", \"**/.hgignore\", \"**/.hgsub\", \"**/.hgsubstate\", \"**/.hgtags\", \"**/.bzr\", \"**/.bzr/**\", \"**/.bzrignore\", \"**/.DS_Store\", \"foo\" \}" shape=ellipse]
5 [label="test3#?#33:project.executeTarget(\"test3\")
test2#?#35:project.executeTarget(\"test2\")" shape=ellipse]
6 [label="test3#?#34:assertEquals
test2#?#36:assertEquals" shape=ellipse]
7 [label="test3#?#-1:
test2#?#-1:" shape=ellipse]
8 [label="test3#?#-1:PlaceHold
test2#?#-1:PlaceHold" shape=ellipse]
9 [label="test3#?#-1:PlaceHold
test2#?#-1:PlaceHold" shape=ellipse]
10 [label="test3#?#34:assertEquals(java.lang.String,java.lang.String[],<unknown>)
test2#?#36:assertEquals(java.lang.String,java.lang.String[],<unknown>)" shape=ellipse]
11 [label="test3#?#-1:String
test2#?#-1:String" shape=ellipse]
12 [label="test3#?#-1:String[]
test2#?#-1:String[]" shape=ellipse]
13 [label="test3#?#-1:null
test2#?#-1:null" shape=ellipse]
14 [label="test3#?#34:\"current default excludes\"
test2#?#36:\"current default excludes\"" shape=ellipse]
15 [label="test3#?#-1:String
test2#?#-1:String" shape=ellipse]
16 [label="test3#?#34:expected
test2#?#36:expected" shape=ellipse]
17 [label="test3#?#3:expected
test2#?#3:expected" shape=ellipse]
18 [label="test3#?#-1:expected
test2#?#-1:expected" shape=ellipse]
19 [label="test3#?#34:DirectoryScanner.getDefaultExcludes()
test2#?#36:DirectoryScanner.getDefaultExcludes()" shape=ellipse]
20 [label="test3#?#34:getDefaultExcludes
test2#?#36:getDefaultExcludes" shape=ellipse]
21 [label="test3#?#34:DirectoryScanner
test2#?#36:DirectoryScanner" shape=ellipse]
22 [label="test3#?#34:getDefaultExcludes()
test2#?#36:getDefaultExcludes()" shape=ellipse]
23 [label="test3#?#35:assertArrayContentsEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes())
test2#?#37:assertArrayContentsEquals(\"current default excludes\", expected, DirectoryScanner.getDefaultExcludes())" shape=ellipse]
0 -> 23 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 6 [label="AST:2"];
1 -> 7 [label="AST:2"];
1 -> 10 [label="AST:2"];
1 -> 14 [label="AST:2"];
1 -> 16 [label="AST:2"];
1 -> 19 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
3 -> 2 [label="AST:2"];
4 -> 17 [label="AST:2"];
7 -> 8 [label="AST:2"];
7 -> 9 [label="AST:2"];
10 -> 11 [label="AST:2"];
10 -> 12 [label="AST:2"];
10 -> 13 [label="AST:2"];
14 -> 15 [label="AST:2"];
16 -> 18 [label="AST:2"];
17 -> 16 [label="Define Use:2"];
19 -> 20 [label="AST:2"];
19 -> 21 [label="AST:2"];
19 -> 22 [label="AST:2"];
}