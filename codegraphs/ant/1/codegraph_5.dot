digraph "testHeadSkip#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testHeadSkip" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@IOException" shape=ellipse]
3 [label="3:CtExecutableReferenceImpl@executeTarget(java.lang.String)" shape=ellipse]
4 [label="3:CtVirtualElement@executeTarget" shape=ellipse]
5 [label="3:CtLiteralImpl@\"testHeadSkip\"" shape=ellipse]
6 [label="3:CtInvocationImpl@executeTarget(\"testHeadSkip\")" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@File" shape=ellipse]
8 [label="5:CtExecutableReferenceImpl@resolveFile(java.lang.String)" shape=ellipse]
9 [label="5:CtVirtualElement@resolveFile" shape=ellipse]
10 [label="5:CtTypeAccessImpl@FILE_UTILS" shape=ellipse]
11 [label="5:CtExecutableReferenceImpl@getBaseDir()" shape=ellipse]
12 [label="5:CtVirtualElement@getBaseDir" shape=ellipse]
13 [label="5:CtExecutableReferenceImpl@getProject()" shape=ellipse]
14 [label="5:CtVirtualElement@getProject" shape=ellipse]
15 [label="5:CtInvocationImpl@getProject()" shape=ellipse]
16 [label="5:CtInvocationImpl@getProject().getBaseDir()" shape=ellipse]
17 [label="5:CtLiteralImpl@\"expected/head-tail.headSkip.test\"" shape=ellipse]
18 [label="5:CtInvocationImpl@FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headSkip.test\")" shape=ellipse]
19 [label="4:CtVirtualElement@expected" shape=ellipse]
20 [label="4:CtLocalVariableImpl@File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headSkip.test\")" shape=ellipse]
21 [label="6:CtTypeReferenceImpl@File" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@File" shape=ellipse]
23 [label="6:CtExecutableReferenceImpl@getProperty(java.lang.String)" shape=ellipse]
24 [label="6:CtVirtualElement@getProperty" shape=ellipse]
25 [label="6:CtExecutableReferenceImpl@getProject()" shape=ellipse]
26 [label="6:CtVirtualElement@getProject" shape=ellipse]
27 [label="6:CtInvocationImpl@getProject()" shape=ellipse]
28 [label="6:CtLiteralImpl@\"output\"" shape=ellipse]
29 [label="6:CtInvocationImpl@getProject().getProperty(\"output\")" shape=ellipse]
30 [label="6:CtLiteralImpl@\"/head-tail.headSkip.test\"" shape=ellipse]
31 [label="6:CtBinaryOperatorImpl@getProject().getProperty(\"output\") + \"/head-tail.headSkip.test\"" shape=ellipse]
32 [label="6:CtConstructorCallImpl@new File(getProject().getProperty(\"output\") + \"/head-tail.headSkip.test\")" shape=ellipse]
33 [label="6:CtVirtualElement@result" shape=ellipse]
34 [label="6:CtLocalVariableImpl@File result = new File(getProject().getProperty(\"output\") + \"/head-tail.headSkip.test\")" shape=ellipse]
35 [label="7:CtExecutableReferenceImpl@assertTrue(java.lang.String,<unknown>)" shape=ellipse]
36 [label="7:CtVirtualElement@assertTrue" shape=ellipse]
37 [label="8:CtLiteralImpl@\"testHeadSkip: Result not like expected\"" shape=ellipse]
38 [label="8:CtExecutableReferenceImpl@contentEquals(File,File)" shape=ellipse]
39 [label="8:CtVirtualElement@contentEquals" shape=ellipse]
40 [label="8:CtTypeAccessImpl@FILE_UTILS" shape=ellipse]
41 [label="8:CtVariableReadImpl@expected" shape=ellipse]
42 [label="8:CtVariableReadImpl@result" shape=ellipse]
43 [label="8:CtInvocationImpl@FILE_UTILS.contentEquals(expected, result)" shape=ellipse]
44 [label="7:CtInvocationImpl@assertTrue(\"testHeadSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result))" shape=ellipse]
45 [label="2:CtBlockImpl@\{
    executeTarget(\"testHeadSkip\");
    File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headSkip.test\");
    File result = new File(getProject().getProperty(\"output\") + \"/head-tail.headSkip.test\");
    assertTrue(\"testHeadSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result));
\}" shape=ellipse]
46 [label="2:CtMethodImpl@public void testHeadSkip() throws IOException \{
    executeTarget(\"testHeadSkip\");
    File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headSkip.test\");
    File result = new File(getProject().getProperty(\"output\") + \"/head-tail.headSkip.test\");
    assertTrue(\"testHeadSkip: Result not like expected\", FILE_UTILS.contentEquals(expected, result));
\}" shape=ellipse]
47 [label="7:Update@UPDATE" shape=ellipse]
48 [label="8:CtInvocationImpl@assertEquals(\"testHeadSkip: Result not like expected\", FileUtilities.getFileContents(expected), FileUtilities.getFileContents(result))" shape=ellipse]
49 [label="8:Update@UPDATE" shape=ellipse]
50 [label="10:CtTypeAccessImpl@FileUtilities" shape=ellipse]
51 [label="5:Delete@DELETE" shape=ellipse]
52 [label="5:Delete@DELETE" shape=ellipse]
53 [label="2:Insert@INSERT" shape=ellipse]
54 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
55 [label="4:Insert@INSERT" shape=ellipse]
56 [label="4:CtFieldReadImpl@buildRule" shape=ellipse]
57 [label="5:Insert@INSERT" shape=ellipse]
58 [label="5:CtFieldReadImpl@buildRule" shape=ellipse]
59 [label="7:Insert@INSERT" shape=ellipse]
60 [label="7:CtFieldReadImpl@buildRule" shape=ellipse]
61 [label="5:Move@MOVE" shape=ellipse]
62 [label="8:Move@MOVE" shape=ellipse]
63 [label="8:Move@MOVE" shape=ellipse]
64 [label="8:Move@MOVE" shape=ellipse]
6 -> 4 [label="AST"];
6 -> 3 [label="AST"];
6 -> 5 [label="AST"];
6 -> 55 [label="Action"];
10 -> 51 [label="Action"];
15 -> 14 [label="AST"];
15 -> 13 [label="AST"];
15 -> 57 [label="Action"];
15 -> 61 [label="Action"];
16 -> 12 [label="AST"];
16 -> 15 [label="AST"];
16 -> 11 [label="AST"];
16 -> 52 [label="Action"];
18 -> 9 [label="AST"];
18 -> 10 [label="AST"];
18 -> 8 [label="AST"];
18 -> 16 [label="AST"];
18 -> 17 [label="AST"];
19 -> 41 [label="Define-Use"];
20 -> 19 [label="AST"];
20 -> 7 [label="AST"];
20 -> 18 [label="AST"];
27 -> 26 [label="AST"];
27 -> 25 [label="AST"];
27 -> 59 [label="Action"];
29 -> 24 [label="AST"];
29 -> 27 [label="AST"];
29 -> 23 [label="AST"];
29 -> 28 [label="AST"];
31 -> 29 [label="AST"];
31 -> 30 [label="AST"];
32 -> 31 [label="AST"];
33 -> 42 [label="Define-Use"];
34 -> 33 [label="AST"];
34 -> 21 [label="AST"];
34 -> 32 [label="AST"];
40 -> 49 [label="Action"];
40 -> 62 [label="Action"];
41 -> 63 [label="Action"];
42 -> 64 [label="Action"];
43 -> 39 [label="AST"];
43 -> 40 [label="AST"];
43 -> 38 [label="AST"];
43 -> 41 [label="AST"];
43 -> 42 [label="AST"];
44 -> 36 [label="AST"];
44 -> 35 [label="AST"];
44 -> 37 [label="AST"];
44 -> 43 [label="AST"];
44 -> 47 [label="Action"];
45 -> 6 [label="AST"];
45 -> 20 [label="AST"];
45 -> 34 [label="AST"];
45 -> 44 [label="AST"];
46 -> 1 [label="AST"];
46 -> 0 [label="AST"];
46 -> 2 [label="AST"];
46 -> 45 [label="AST"];
46 -> 53 [label="Action"];
47 -> 48 [label="Action"];
49 -> 50 [label="Action"];
53 -> 54 [label="Action"];
55 -> 56 [label="Action"];
57 -> 58 [label="Action"];
59 -> 60 [label="Action"];
61 -> 18 [label="Action"];
}