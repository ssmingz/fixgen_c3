digraph "testNoDuplicateSchema#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testNoDuplicateSchema" shape=ellipse]
2 [label="2:CtTypeReferenceImpl@Exception" shape=ellipse]
3 [label="3:CtExecutableReferenceImpl@expectBuildExceptionContaining(java.lang.String,java.lang.String,<unknown>)" shape=ellipse]
4 [label="3:CtVirtualElement@expectBuildExceptionContaining" shape=ellipse]
5 [label="4:CtLiteralImpl@\"testNoDuplicateSchema\"" shape=ellipse]
6 [label="4:CtLiteralImpl@\"duplicate schemas with different values\"" shape=ellipse]
7 [label="4:CtTypeAccessImpl@ERROR_DUPLICATE_SCHEMA" shape=ellipse]
8 [label="3:CtInvocationImpl@expectBuildExceptionContaining(\"testNoDuplicateSchema\", \"duplicate schemas with different values\", ERROR_DUPLICATE_SCHEMA)" shape=ellipse]
9 [label="2:CtBlockImpl@\{
    expectBuildExceptionContaining(\"testNoDuplicateSchema\", \"duplicate schemas with different values\", ERROR_DUPLICATE_SCHEMA);
\}" shape=ellipse]
10 [label="2:CtMethodImpl@public void testNoDuplicateSchema() throws Exception \{
    expectBuildExceptionContaining(\"testNoDuplicateSchema\", \"duplicate schemas with different values\", ERROR_DUPLICATE_SCHEMA);
\}" shape=ellipse]
11 [label="3:Delete@DELETE" shape=ellipse]
12 [label="2:Insert@INSERT" shape=ellipse]
13 [label="2:CtAnnotationImpl@@Test" shape=ellipse]
14 [label="4:Insert@INSERT" shape=ellipse]
15 [label="4:CtTryImpl@try \{
    buildRule.executeTarget(\"testNoDuplicateSchema\");
    fail(\"duplicate schemas with different values\");
\} catch (BuildException ex) \{
    AntAssert.assertContains(ERROR_DUPLICATE_SCHEMA, ex.getMessage());
\}" shape=ellipse]
16 [label="4:Move@MOVE" shape=ellipse]
17 [label="4:Move@MOVE" shape=ellipse]
6 -> 16 [label="Action"];
7 -> 17 [label="Action"];
8 -> 4 [label="AST"];
8 -> 3 [label="AST"];
8 -> 5 [label="AST"];
8 -> 6 [label="AST"];
8 -> 7 [label="AST"];
8 -> 11 [label="Action"];
9 -> 8 [label="AST"];
10 -> 1 [label="AST"];
10 -> 0 [label="AST"];
10 -> 2 [label="AST"];
10 -> 9 [label="AST"];
10 -> 12 [label="Action"];
10 -> 14 [label="Action"];
12 -> 13 [label="Action"];
14 -> 15 [label="Action"];
}