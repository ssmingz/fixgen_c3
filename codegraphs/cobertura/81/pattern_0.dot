digraph "Pattern" {
0 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:INSERT
addInstrumentationToSingleClass#?,File#11:INSERT" shape=ellipse]
1 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#29:new ClassInstrumenter(projectData, cw, ignoreRegexes)
addInstrumentationToSingleClass#?,File#11:new ClassInstrumenter(projectData, cw, ignoreRegexes)" shape=ellipse]
2 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#26:isClass(entry) && classPattern.matches(entryName)" shape=ellipse]
3 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#18:classPattern.isSpecified() && ArchiveUtil.isArchive(entryName)" shape=ellipse]
4 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#26:if (isClass(entry) && classPattern.matches(entryName)) \{
    ClassReader cr = new ClassReader(entryBytes);
    ClassWriter cw = new ClassWriter(true);
    ClassInstrumenter cv = new ClassInstrumenter(projectData, cw, ignoreRegexes);
    cr.accept(cv, false);
    if (cv.isInstrumented()) \{
        logger.debug(\"Putting instrumented entry: \" + entry.getName());
        entryBytes = cw.toByteArray();
        modified = true;
        outputEntry.setTime(System.currentTimeMillis());
    \}
\}" shape=ellipse]
5 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#26:isClass(entry)" shape=ellipse]
6 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#26:classPattern.matches(entryName)" shape=ellipse]
7 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#26:\{
    ClassReader cr = new ClassReader(entryBytes);
    ClassWriter cw = new ClassWriter(true);
    ClassInstrumenter cv = new ClassInstrumenter(projectData, cw, ignoreRegexes);
    cr.accept(cv, false);
    if (cv.isInstrumented()) \{
        logger.debug(\"Putting instrumented entry: \" + entry.getName());
        entryBytes = cw.toByteArray();
        modified = true;
        outputEntry.setTime(System.currentTimeMillis());
    \}
\}
addInstrumentationToSingleClass#?,File#7:\{
    inputStream = new FileInputStream(file);
    ClassReader cr = new ClassReader(inputStream);
    cw = new ClassWriter(true);
    cv = new ClassInstrumenter(projectData, cw, ignoreRegexes);
    cr.accept(cv, false);
\}" shape=ellipse]
8 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#27:ClassReader cr = new ClassReader(entryBytes)" shape=ellipse]
9 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#27:new ClassReader(entryBytes)" shape=ellipse]
10 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#27:ClassReader(byte[])
addInstrumentationToSingleClass#?,File#11:ClassInstrumenter" shape=ellipse]
11 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#27:entryBytes
addInstrumentationToSingleClass#?,File#11:cv" shape=ellipse]
12 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#28:ClassWriter cw = new ClassWriter(true)" shape=ellipse]
13 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#28:new ClassWriter(true)" shape=ellipse]
14 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#28:ClassWriter(boolean)
addInstrumentationToSingleClass#?,File#11:ClassInstrumenter" shape=ellipse]
15 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#28:true" shape=ellipse]
16 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#29:ClassInstrumenter cv = new ClassInstrumenter(projectData, cw, ignoreRegexes)" shape=ellipse]
17 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#29:ClassInstrumenter()" shape=ellipse]
18 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#29:projectData" shape=ellipse]
19 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#29:cw" shape=ellipse]
20 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#29:ignoreRegexes" shape=ellipse]
21 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:cr.accept(cv, false)" shape=ellipse]
22 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:accept(ClassInstrumenter,boolean)
addInstrumentationToSingleClass#?,File#11:PlaceHold" shape=ellipse]
23 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:cr
addInstrumentationToSingleClass#?,File#10:cw" shape=ellipse]
24 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:cv" shape=ellipse]
25 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:false" shape=ellipse]
26 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#31:if (cv.isInstrumented()) \{
    logger.debug(\"Putting instrumented entry: \" + entry.getName());
    entryBytes = cw.toByteArray();
    modified = true;
    outputEntry.setTime(System.currentTimeMillis());
\}" shape=ellipse]
27 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#31:cv.isInstrumented()" shape=ellipse]
28 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#31:isInstrumented()" shape=ellipse]
29 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#31:cv" shape=ellipse]
30 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:ignoreBranchesRegexes" shape=ellipse]
31 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:ignoreBranchesRegexes
addInstrumentationToSingleClass#?,File#11:ignoreRegexes" shape=ellipse]
32 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:PlaceHold" shape=ellipse]
33 [label="addInstrumentationToArchive#?,CoberturaFile,ZipInputStream,ZipOutputStream#30:" shape=ellipse]
34 [label="addInstrumentationToSingleClass#?,File#11:cv = new ClassInstrumenter(projectData, cw, ignoreRegexes)" shape=ellipse]
35 [label="addInstrumentationToSingleClass#?,File#11:ignoreBranchesRegexes" shape=ellipse]
36 [label="addInstrumentationToSingleClass#?,File#11:" shape=ellipse]
37 [label="addInstrumentationToSingleClass#?,File#11:projectData" shape=ellipse]
38 [label="addInstrumentationToSingleClass#?,File#11:cw" shape=ellipse]
39 [label="addInstrumentationToSingleClass#?,File#11:ignoreRegexes" shape=ellipse]
40 [label="addInstrumentationToSingleClass#?,File#11:cw" shape=ellipse]
41 [label="addInstrumentationToSingleClass#?,File#11:ignoreBranchesRegexes" shape=ellipse]
42 [label="addInstrumentationToSingleClass#?,File#11:projectData" shape=ellipse]
43 [label="addInstrumentationToSingleClass#?,File#11:ClassInstrumenter()" shape=ellipse]
0 -> 30 [label="Action:1"];
0 -> 35 [label="Action:1"];
1 -> 0 [label="Action:2"];
1 -> 17 [label="AST:1"];
1 -> 18 [label="AST:1"];
1 -> 19 [label="AST:1"];
1 -> 20 [label="AST:1"];
1 -> 37 [label="AST:1"];
1 -> 38 [label="AST:1"];
1 -> 39 [label="AST:1"];
1 -> 43 [label="AST:1"];
2 -> 1 [label="Control Dep:1"];
2 -> 5 [label="AST:1"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="Control Dep:1"];
2 -> 8 [label="Control Dep:1"];
2 -> 9 [label="Control Dep:1"];
2 -> 10 [label="Control Dep:1"];
2 -> 11 [label="Control Dep:1"];
2 -> 12 [label="Control Dep:1"];
2 -> 13 [label="Control Dep:1"];
2 -> 14 [label="Control Dep:1"];
2 -> 15 [label="Control Dep:1"];
2 -> 16 [label="Control Dep:1"];
2 -> 17 [label="Control Dep:1"];
2 -> 18 [label="Control Dep:1"];
2 -> 19 [label="Control Dep:1"];
2 -> 20 [label="Control Dep:1"];
2 -> 21 [label="Control Dep:1"];
2 -> 22 [label="Control Dep:1"];
2 -> 23 [label="Control Dep:1"];
2 -> 24 [label="Control Dep:1"];
2 -> 25 [label="Control Dep:1"];
2 -> 26 [label="Control Dep:1"];
2 -> 27 [label="Control Dep:1"];
2 -> 28 [label="Control Dep:1"];
2 -> 29 [label="Control Dep:1"];
2 -> 30 [label="Control Dep:1"];
3 -> 2 [label="Control Dep:1"];
3 -> 4 [label="Control Dep:1"];
3 -> 5 [label="Control Dep:1"];
3 -> 6 [label="Control Dep:1"];
4 -> 2 [label="AST:1"];
4 -> 7 [label="AST:1"];
7 -> 8 [label="AST:1"];
7 -> 12 [label="AST:1"];
7 -> 16 [label="AST:1"];
7 -> 21 [label="AST:1"];
7 -> 26 [label="AST:1"];
7 -> 34 [label="AST:1"];
8 -> 9 [label="AST:1"];
9 -> 10 [label="AST:1"];
9 -> 11 [label="AST:1"];
12 -> 13 [label="AST:1"];
13 -> 14 [label="AST:1"];
13 -> 15 [label="AST:1"];
16 -> 1 [label="AST:1"];
21 -> 23 [label="AST:1"];
21 -> 22 [label="AST:1"];
21 -> 24 [label="AST:1"];
21 -> 25 [label="AST:1"];
22 -> 36 [label="AST:1"];
23 -> 38 [label="Define Use:1"];
26 -> 27 [label="AST:1"];
27 -> 29 [label="AST:1"];
27 -> 28 [label="AST:1"];
30 -> 31 [label="AST:1"];
31 -> 32 [label="AST:1"];
32 -> 33 [label="AST:1"];
34 -> 11 [label="AST:1"];
34 -> 1 [label="AST:1"];
35 -> 41 [label="AST:1"];
35 -> 11 [label="Data Dep:1"];
35 -> 11 [label="Control Dep:1"];
37 -> 42 [label="AST:1"];
37 -> 11 [label="Data Dep:1"];
38 -> 40 [label="AST:1"];
38 -> 11 [label="Data Dep:1"];
39 -> 31 [label="AST:1"];
39 -> 11 [label="Data Dep:1"];
41 -> 22 [label="AST:1"];
43 -> 10 [label="AST:1"];
43 -> 14 [label="AST:1"];
}