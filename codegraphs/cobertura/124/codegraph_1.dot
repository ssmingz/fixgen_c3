digraph "getNumberOfCoveredBranches#?" {
0 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
1 [label="2:CtVirtualElement@getNumberOfCoveredBranches" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
3 [label="3:CtLiteralImpl@0" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="3:CtVirtualElement@number" shape=ellipse]
6 [label="3:CtLocalVariableImpl@int number = 0" shape=ellipse]
7 [label="4:CtExecutableReferenceImpl@lock()" shape=ellipse]
8 [label="4:CtTypeReferenceImpl@lock" shape=ellipse]
9 [label="4:CtVirtualElement@lock" shape=ellipse]
10 [label="4:CtFieldReferenceImpl@lock" shape=ellipse]
11 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
12 [label="4:CtFieldReadImpl@lock" shape=ellipse]
13 [label="4:CtInvocationImpl@lock.lock()" shape=ellipse]
14 [label="6:CtTypeReferenceImpl@Iterator" shape=ellipse]
15 [label="6:CtPackageReferenceImpl@" shape=ellipse]
16 [label="6:CtExecutableReferenceImpl@iterator()" shape=ellipse]
17 [label="6:CtTypeReferenceImpl@Iterator" shape=ellipse]
18 [label="6:CtVirtualElement@iterator" shape=ellipse]
19 [label="6:CtExecutableReferenceImpl@values()" shape=ellipse]
20 [label="6:CtTypeReferenceImpl@branches" shape=ellipse]
21 [label="6:CtVirtualElement@values" shape=ellipse]
22 [label="6:CtFieldReferenceImpl@branches" shape=ellipse]
23 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
24 [label="6:CtFieldReadImpl@branches" shape=ellipse]
25 [label="6:CtInvocationImpl@branches.values()" shape=ellipse]
26 [label="6:CtInvocationImpl@branches.values().iterator()" shape=ellipse]
27 [label="6:CtVirtualElement@i" shape=ellipse]
28 [label="6:CtLocalVariableImpl@Iterator i = branches.values().iterator()" shape=ellipse]
29 [label="7:CtExecutableReferenceImpl@hasNext()" shape=ellipse]
30 [label="7:CtTypeReferenceImpl@Iterator" shape=ellipse]
31 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
32 [label="7:CtVirtualElement@hasNext" shape=ellipse]
33 [label="7:CtVariableReadImpl@i" shape=ellipse]
34 [label="7:CtLocalVariableReferenceImpl@i" shape=ellipse]
35 [label="7:CtInvocationImpl@i.hasNext()" shape=ellipse]
36 [label="8:CtVariableWriteImpl@number" shape=ellipse]
37 [label="8:CtLocalVariableReferenceImpl@number" shape=ellipse]
38 [label="8:CtExecutableReferenceImpl@getNumberOfCoveredBranches()" shape=ellipse]
39 [label="8:CtVirtualElement@getNumberOfCoveredBranches" shape=ellipse]
40 [label="8:CtExecutableReferenceImpl@next()" shape=ellipse]
41 [label="8:CtTypeReferenceImpl@Iterator" shape=ellipse]
42 [label="8:CtVirtualElement@next" shape=ellipse]
43 [label="8:CtVariableReadImpl@i" shape=ellipse]
44 [label="8:CtLocalVariableReferenceImpl@i" shape=ellipse]
45 [label="8:CtInvocationImpl@((LineData) (i.next()))" shape=ellipse]
46 [label="8:CtTypeReferenceImpl@LineData" shape=ellipse]
47 [label="8:CtInvocationImpl@((LineData) (i.next())).getNumberOfCoveredBranches()" shape=ellipse]
48 [label="8:CtOperatorAssignmentImpl@number += ((LineData) (i.next())).getNumberOfCoveredBranches()" shape=ellipse]
49 [label="6:CtForImpl@for (Iterator i = branches.values().iterator(); i.hasNext(); number += ((LineData) (i.next())).getNumberOfCoveredBranches());" shape=ellipse]
50 [label="10:CtVariableReadImpl@number" shape=ellipse]
51 [label="10:CtLocalVariableReferenceImpl@number" shape=ellipse]
52 [label="10:CtReturnImpl@return number" shape=ellipse]
53 [label="5:CtBlockImpl@\{
    for (Iterator i = branches.values().iterator(); i.hasNext(); number += ((LineData) (i.next())).getNumberOfCoveredBranches());
    return number;
\}" shape=ellipse]
54 [label="12:CtExecutableReferenceImpl@unlock()" shape=ellipse]
55 [label="12:CtTypeReferenceImpl@lock" shape=ellipse]
56 [label="12:CtVirtualElement@unlock" shape=ellipse]
57 [label="12:CtFieldReferenceImpl@lock" shape=ellipse]
58 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
59 [label="12:CtFieldReadImpl@lock" shape=ellipse]
60 [label="12:CtInvocationImpl@lock.unlock()" shape=ellipse]
61 [label="11:CtBlockImpl@\{
    lock.unlock();
\}" shape=ellipse]
62 [label="5:CtTryImpl@try \{
    for (Iterator i = branches.values().iterator(); i.hasNext(); number += ((LineData) (i.next())).getNumberOfCoveredBranches());
    return number;
\} finally \{
    lock.unlock();
\}" shape=ellipse]
63 [label="2:CtBlockImpl@\{
    int number = 0;
    lock.lock();
    try \{
        for (Iterator i = branches.values().iterator(); i.hasNext(); number += ((LineData) (i.next())).getNumberOfCoveredBranches());
        return number;
    \} finally \{
        lock.unlock();
    \}
\}" shape=ellipse]
64 [label="2:CtMethodImpl@public int getNumberOfCoveredBranches() \{
    int number = 0;
    lock.lock();
    try \{
        for (Iterator i = branches.values().iterator(); i.hasNext(); number += ((LineData) (i.next())).getNumberOfCoveredBranches());
        return number;
    \} finally \{
        lock.unlock();
    \}
\}" shape=ellipse]
65 [label="6:Insert@INSERT" shape=ellipse]
66 [label="6:CtPackageReferenceImpl@" shape=ellipse]
67 [label="6:CtTypeReferenceImpl@LineData" shape=ellipse]
3 -> 4 [label="AST"];
6 -> 5 [label="AST"];
6 -> 2 [label="AST"];
6 -> 3 [label="AST"];
7 -> 8 [label="AST"];
10 -> 11 [label="AST"];
12 -> 10 [label="AST"];
13 -> 9 [label="AST"];
13 -> 12 [label="AST"];
13 -> 7 [label="AST"];
14 -> 15 [label="AST"];
14 -> 65 [label="Action"];
16 -> 17 [label="AST"];
19 -> 20 [label="AST"];
22 -> 23 [label="AST"];
24 -> 22 [label="AST"];
24 -> 27 [label="Data Dep"];
25 -> 21 [label="AST"];
25 -> 24 [label="AST"];
25 -> 19 [label="AST"];
26 -> 18 [label="AST"];
26 -> 25 [label="AST"];
26 -> 16 [label="AST"];
27 -> 33 [label="Define-Use"];
27 -> 43 [label="Define-Use"];
28 -> 27 [label="AST"];
28 -> 14 [label="AST"];
28 -> 26 [label="AST"];
29 -> 30 [label="AST"];
29 -> 31 [label="AST"];
33 -> 34 [label="AST"];
35 -> 32 [label="AST"];
35 -> 33 [label="AST"];
35 -> 29 [label="AST"];
36 -> 37 [label="AST"];
36 -> 50 [label="Define-Use"];
40 -> 41 [label="AST"];
43 -> 44 [label="AST"];
43 -> 36 [label="Data Dep"];
45 -> 42 [label="AST"];
45 -> 46 [label="AST"];
45 -> 43 [label="AST"];
45 -> 40 [label="AST"];
47 -> 39 [label="AST"];
47 -> 45 [label="AST"];
47 -> 38 [label="AST"];
48 -> 36 [label="AST"];
48 -> 47 [label="AST"];
49 -> 28 [label="AST"];
49 -> 35 [label="AST"];
49 -> 48 [label="AST"];
50 -> 51 [label="AST"];
52 -> 50 [label="AST"];
53 -> 49 [label="AST"];
53 -> 52 [label="AST"];
54 -> 55 [label="AST"];
57 -> 58 [label="AST"];
59 -> 57 [label="AST"];
60 -> 56 [label="AST"];
60 -> 59 [label="AST"];
60 -> 54 [label="AST"];
61 -> 60 [label="AST"];
62 -> 53 [label="AST"];
62 -> 61 [label="AST"];
63 -> 6 [label="AST"];
63 -> 13 [label="AST"];
63 -> 62 [label="AST"];
64 -> 1 [label="AST"];
64 -> 0 [label="AST"];
64 -> 63 [label="AST"];
65 -> 67 [label="Action"];
67 -> 66 [label="AST"];
}