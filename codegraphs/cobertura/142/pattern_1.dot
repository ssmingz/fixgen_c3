digraph "Pattern" {
0 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:DELETE
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:DELETE" shape=ellipse]
1 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:pw = IOUtil.getPrintWriter(file)
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:pw = IOUtil.getPrintWriter(file)" shape=ellipse]
2 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#7:\{
    this.complexity = complexity;
    this.finder = finder;
    File file = new File(destinationDir, \"coverage.xml\");
    pw = IOUtil.getPrintWriter(file);
    try \{
        println(\"<?xml version=\\"1.0\\"?>\");
        println((\"<!DOCTYPE coverage SYSTEM \\"http://cobertura.sourceforge.net/xml/\" + coverageDTD) + \"\\">\");
        println(\"\");
        double ccn = complexity.getCCNForProject(projectData);
        int numLinesCovered = projectData.getNumberOfCoveredLines();
        int numLinesValid = projectData.getNumberOfValidLines();
        int numBranchesCovered = projectData.getNumberOfCoveredBranches();
        int numBranchesValid = projectData.getNumberOfValidBranches();
        println((((((((((((((((((\"<coverage line-rate=\\"\" + projectData.getLineCoverageRate()) + \"\\" branch-rate=\\"\") + projectData.getBranchCoverageRate()) + \"\\" lines-covered=\\"\") + numLinesCovered) + \"\\" lines-valid=\\"\") + numLinesValid) + \"\\" branches-covered=\\"\") + numBranchesCovered) + \"\\" branches-valid=\\"\") + numBranchesValid) + \"\\" complexity=\\"\") + ccn) + \"\\" version=\\"\") + Header.version()) + \"\\" timestamp=\\"\") + new Date().getTime()) + \"\\">\");
        increaseIndentation();
        dumpSources();
        dumpPackages(projectData);
        decreaseIndentation();
        println(\"</coverage>\");
    \} finally \{
        pw.close();
    \}
\}
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#7:\{
    File file = new File(destinationDir, \"coverage-summary.xml\");
    pw = IOUtil.getPrintWriter(file);
    try \{
        println(\"<?xml version=\\"1.0\\"?>\");
        println((\"<!DOCTYPE coverage SYSTEM \\"http://cobertura.sourceforge.net/xml/\" + XMLReport.coverageDTD) + \"\\">\");
        println(\"\");
        double ccn = complexity.getCCNForProject(projectData);
        int numLinesCovered = projectData.getNumberOfCoveredLines();
        int numLinesValid = projectData.getNumberOfValidLines();
        int numBranchesCovered = projectData.getNumberOfCoveredBranches();
        int numBranchesValid = projectData.getNumberOfValidBranches();
        println((((((((((((((((((\"<coverage line-rate=\\"\" + projectData.getLineCoverageRate()) + \"\\" branch-rate=\\"\") + projectData.getBranchCoverageRate()) + \"\\" lines-covered=\\"\") + numLinesCovered) + \"\\" lines-valid=\\"\") + numLinesValid) + \"\\" branches-covered=\\"\") + numBranchesCovered) + \"\\" branches-valid=\\"\") + numBranchesValid) + \"\\" complexity=\\"\") + ccn) + \"\\" version=\\"\") + Header.version()) + \"\\" timestamp=\\"\") + new Date().getTime()) + \"\\">\");
        increaseIndentation();
        println(\"<packages />\");
        decreaseIndentation();
        println(\"</coverage>\");
    \} finally \{
        pw.close();
    \}
\}" shape=ellipse]
3 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#2:public  XMLReport(ProjectData projectData, File destinationDir, FileFinder finder, ComplexityCalculator complexity) throws IOException \{
    this.complexity = complexity;
    this.finder = finder;
    File file = new File(destinationDir, \"coverage.xml\");
    pw = IOUtil.getPrintWriter(file);
    try \{
        println(\"<?xml version=\\"1.0\\"?>\");
        println((\"<!DOCTYPE coverage SYSTEM \\"http://cobertura.sourceforge.net/xml/\" + coverageDTD) + \"\\">\");
        println(\"\");
        double ccn = complexity.getCCNForProject(projectData);
        int numLinesCovered = projectData.getNumberOfCoveredLines();
        int numLinesValid = projectData.getNumberOfValidLines();
        int numBranchesCovered = projectData.getNumberOfCoveredBranches();
        int numBranchesValid = projectData.getNumberOfValidBranches();
        println((((((((((((((((((\"<coverage line-rate=\\"\" + projectData.getLineCoverageRate()) + \"\\" branch-rate=\\"\") + projectData.getBranchCoverageRate()) + \"\\" lines-covered=\\"\") + numLinesCovered) + \"\\" lines-valid=\\"\") + numLinesValid) + \"\\" branches-covered=\\"\") + numBranchesCovered) + \"\\" branches-valid=\\"\") + numBranchesValid) + \"\\" complexity=\\"\") + ccn) + \"\\" version=\\"\") + Header.version()) + \"\\" timestamp=\\"\") + new Date().getTime()) + \"\\">\");
        increaseIndentation();
        dumpSources();
        dumpPackages(projectData);
        decreaseIndentation();
        println(\"</coverage>\");
    \} finally \{
        pw.close();
    \}
\}
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#2:public  SummaryXMLReport(ProjectData projectData, File destinationDir, FileFinder finder, ComplexityCalculator complexity) throws IOException \{
    File file = new File(destinationDir, \"coverage-summary.xml\");
    pw = IOUtil.getPrintWriter(file);
    try \{
        println(\"<?xml version=\\"1.0\\"?>\");
        println((\"<!DOCTYPE coverage SYSTEM \\"http://cobertura.sourceforge.net/xml/\" + XMLReport.coverageDTD) + \"\\">\");
        println(\"\");
        double ccn = complexity.getCCNForProject(projectData);
        int numLinesCovered = projectData.getNumberOfCoveredLines();
        int numLinesValid = projectData.getNumberOfValidLines();
        int numBranchesCovered = projectData.getNumberOfCoveredBranches();
        int numBranchesValid = projectData.getNumberOfValidBranches();
        println((((((((((((((((((\"<coverage line-rate=\\"\" + projectData.getLineCoverageRate()) + \"\\" branch-rate=\\"\") + projectData.getBranchCoverageRate()) + \"\\" lines-covered=\\"\") + numLinesCovered) + \"\\" lines-valid=\\"\") + numLinesValid) + \"\\" branches-covered=\\"\") + numBranchesCovered) + \"\\" branches-valid=\\"\") + numBranchesValid) + \"\\" complexity=\\"\") + ccn) + \"\\" version=\\"\") + Header.version()) + \"\\" timestamp=\\"\") + new Date().getTime()) + \"\\">\");
        increaseIndentation();
        println(\"<packages />\");
        decreaseIndentation();
        println(\"</coverage>\");
    \} finally \{
        pw.close();
    \}
\}" shape=ellipse]
4 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#8:this.complexity = complexity
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#8:File file = new File(destinationDir, \"coverage-summary.xml\")" shape=ellipse]
5 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:this.finder = finder
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#10:try \{
    println(\"<?xml version=\\"1.0\\"?>\");
    println((\"<!DOCTYPE coverage SYSTEM \\"http://cobertura.sourceforge.net/xml/\" + XMLReport.coverageDTD) + \"\\">\");
    println(\"\");
    double ccn = complexity.getCCNForProject(projectData);
    int numLinesCovered = projectData.getNumberOfCoveredLines();
    int numLinesValid = projectData.getNumberOfValidLines();
    int numBranchesCovered = projectData.getNumberOfCoveredBranches();
    int numBranchesValid = projectData.getNumberOfValidBranches();
    println((((((((((((((((((\"<coverage line-rate=\\"\" + projectData.getLineCoverageRate()) + \"\\" branch-rate=\\"\") + projectData.getBranchCoverageRate()) + \"\\" lines-covered=\\"\") + numLinesCovered) + \"\\" lines-valid=\\"\") + numLinesValid) + \"\\" branches-covered=\\"\") + numBranchesCovered) + \"\\" branches-valid=\\"\") + numBranchesValid) + \"\\" complexity=\\"\") + ccn) + \"\\" version=\\"\") + Header.version()) + \"\\" timestamp=\\"\") + new Date().getTime()) + \"\\">\");
    increaseIndentation();
    println(\"<packages />\");
    decreaseIndentation();
    println(\"</coverage>\");
\} finally \{
    pw.close();
\}" shape=ellipse]
6 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#10:File file = new File(destinationDir, \"coverage.xml\")" shape=ellipse]
7 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#12:try \{
    println(\"<?xml version=\\"1.0\\"?>\");
    println((\"<!DOCTYPE coverage SYSTEM \\"http://cobertura.sourceforge.net/xml/\" + coverageDTD) + \"\\">\");
    println(\"\");
    double ccn = complexity.getCCNForProject(projectData);
    int numLinesCovered = projectData.getNumberOfCoveredLines();
    int numLinesValid = projectData.getNumberOfValidLines();
    int numBranchesCovered = projectData.getNumberOfCoveredBranches();
    int numBranchesValid = projectData.getNumberOfValidBranches();
    println((((((((((((((((((\"<coverage line-rate=\\"\" + projectData.getLineCoverageRate()) + \"\\" branch-rate=\\"\") + projectData.getBranchCoverageRate()) + \"\\" lines-covered=\\"\") + numLinesCovered) + \"\\" lines-valid=\\"\") + numLinesValid) + \"\\" branches-covered=\\"\") + numBranchesCovered) + \"\\" branches-valid=\\"\") + numBranchesValid) + \"\\" complexity=\\"\") + ccn) + \"\\" version=\\"\") + Header.version()) + \"\\" timestamp=\\"\") + new Date().getTime()) + \"\\">\");
    increaseIndentation();
    dumpSources();
    dumpPackages(projectData);
    decreaseIndentation();
    println(\"</coverage>\");
\} finally \{
    pw.close();
\}" shape=ellipse]
8 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:INSERT
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:INSERT" shape=ellipse]
9 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:setPrintWriter()
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:setPrintWriter()" shape=ellipse]
10 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:setPrintWriter
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:setPrintWriter" shape=ellipse]
11 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
12 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:PlaceHold
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:PlaceHold" shape=ellipse]
13 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
14 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:PlaceHold
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:PlaceHold" shape=ellipse]
15 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:PlaceHold
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:PlaceHold" shape=ellipse]
16 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
17 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:setPrintWriter(<unknown>)
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:setPrintWriter(<unknown>)" shape=ellipse]
18 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:null
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:null" shape=ellipse]
19 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:IOUtil.getPrintWriter(file)
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:IOUtil.getPrintWriter(file)" shape=ellipse]
20 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:getPrintWriter
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:getPrintWriter" shape=ellipse]
21 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:IOUtil
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:IOUtil" shape=ellipse]
22 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:IOUtil
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:IOUtil" shape=ellipse]
23 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
24 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:getPrintWriter(File)
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:getPrintWriter(File)" shape=ellipse]
25 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:IOUtil
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:IOUtil" shape=ellipse]
26 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
27 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:File
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:File" shape=ellipse]
28 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
29 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:file
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#47:pw" shape=ellipse]
30 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:file
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:file" shape=ellipse]
31 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:File
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:File" shape=ellipse]
32 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:" shape=ellipse]
33 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:pw" shape=ellipse]
34 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:pw
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:pw" shape=ellipse]
35 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#49:pw
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:IOUtil" shape=ellipse]
36 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:IOUtil.getPrintWriter(file)" shape=ellipse]
37 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:getPrintWriter
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:getPrintWriter" shape=ellipse]
38 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:IOUtil" shape=ellipse]
39 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:getPrintWriter(File)
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:getPrintWriter(File)" shape=ellipse]
40 [label="XMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#11:MOVE
SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:MOVE" shape=ellipse]
41 [label="SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:file" shape=ellipse]
42 [label="SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:pw" shape=ellipse]
43 [label="SummaryXMLReport#?,ProjectData,File,FileFinder,ComplexityCalculator#9:IOUtil.getPrintWriter(file)" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 33 [label="AST:1"];
1 -> 36 [label="AST:1"];
1 -> 42 [label="AST:1"];
1 -> 43 [label="AST:1"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:1"];
2 -> 7 [label="AST:1"];
2 -> 8 [label="Action:2"];
3 -> 2 [label="AST:2"];
8 -> 9 [label="Action:2"];
9 -> 10 [label="AST:2"];
9 -> 11 [label="AST:2"];
9 -> 17 [label="AST:2"];
9 -> 19 [label="AST:2"];
11 -> 12 [label="AST:2"];
11 -> 14 [label="AST:2"];
12 -> 13 [label="AST:2"];
14 -> 15 [label="AST:2"];
15 -> 16 [label="AST:2"];
17 -> 18 [label="AST:2"];
19 -> 20 [label="AST:2"];
19 -> 21 [label="AST:2"];
19 -> 24 [label="AST:2"];
21 -> 22 [label="AST:2"];
22 -> 23 [label="AST:2"];
24 -> 25 [label="AST:2"];
24 -> 27 [label="AST:2"];
25 -> 26 [label="AST:2"];
27 -> 28 [label="AST:2"];
29 -> 33 [label="Data Dep:1"];
30 -> 31 [label="AST:2"];
31 -> 32 [label="AST:2"];
33 -> 34 [label="AST:1"];
33 -> 35 [label="Define Use:1"];
36 -> 29 [label="AST:1"];
36 -> 37 [label="AST:1"];
36 -> 38 [label="AST:1"];
36 -> 39 [label="AST:1"];
36 -> 40 [label="Action:1"];
40 -> 9 [label="Action:2"];
41 -> 42 [label="Data Dep:1"];
42 -> 34 [label="AST:1"];
42 -> 29 [label="Define Use:1"];
43 -> 41 [label="AST:1"];
43 -> 37 [label="AST:1"];
43 -> 35 [label="AST:1"];
43 -> 39 [label="AST:1"];
43 -> 40 [label="Action:1"];
}