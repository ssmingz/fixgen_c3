digraph "Pattern" {
0 [label="testGetMinBranchPercentage#?#4:INSERT
testGetMinLinePercentage#?#4:INSERT" shape=ellipse]
1 [label="testGetMinBranchPercentage#?#4:assertEquals(MIN_BRANCH_PERCENTAGE, coverageThreshold.getMinBranchPercentage())
testGetMinLinePercentage#?#4:assertEquals(MIN_LINE_PERCENTAGE, coverageThreshold.getMinLinePercentage())" shape=ellipse]
2 [label="testGetMinBranchPercentage#?#3:\{
    assertEquals(MIN_BRANCH_PERCENTAGE, coverageThreshold.getMinBranchPercentage());
\}
testGetMinLinePercentage#?#3:\{
    assertEquals(MIN_LINE_PERCENTAGE, coverageThreshold.getMinLinePercentage());
\}" shape=ellipse]
3 [label="testGetMinBranchPercentage#?#3:@Test
public void testGetMinBranchPercentage() throws Exception \{
    assertEquals(MIN_BRANCH_PERCENTAGE, coverageThreshold.getMinBranchPercentage());
\}
testGetMinLinePercentage#?#3:@Test
public void testGetMinLinePercentage() throws Exception \{
    assertEquals(MIN_LINE_PERCENTAGE, coverageThreshold.getMinLinePercentage());
\}" shape=ellipse]
4 [label="testGetMinBranchPercentage#?#4:assertEquals
testGetMinLinePercentage#?#4:assertEquals" shape=ellipse]
5 [label="testGetMinBranchPercentage#?#4:
testGetMinLinePercentage#?#4:" shape=ellipse]
6 [label="testGetMinBranchPercentage#?#4:PlaceHold
testGetMinLinePercentage#?#4:PlaceHold" shape=ellipse]
7 [label="testGetMinBranchPercentage#?#4:PlaceHold
testGetMinLinePercentage#?#4:PlaceHold" shape=ellipse]
8 [label="testGetMinBranchPercentage#?#4:assertEquals(<unknown>,<unknown>)
testGetMinLinePercentage#?#4:assertEquals(<unknown>,<unknown>)" shape=ellipse]
9 [label="testGetMinBranchPercentage#?#4:null
testGetMinLinePercentage#?#4:null" shape=ellipse]
10 [label="testGetMinBranchPercentage#?#4:null
testGetMinLinePercentage#?#4:null" shape=ellipse]
11 [label="testGetMinBranchPercentage#?#4:MIN_BRANCH_PERCENTAGE
testGetMinLinePercentage#?#4:MIN_LINE_PERCENTAGE" shape=ellipse]
12 [label="testGetMinBranchPercentage#?#4:MIN_BRANCH_PERCENTAGE
testGetMinLinePercentage#?#4:MIN_LINE_PERCENTAGE" shape=ellipse]
13 [label="testGetMinBranchPercentage#?#4:coverageThreshold.getMinBranchPercentage()
testGetMinLinePercentage#?#4:coverageThreshold.getMinLinePercentage()" shape=ellipse]
14 [label="testGetMinBranchPercentage#?#4:getMinBranchPercentage
testGetMinLinePercentage#?#4:getMinLinePercentage" shape=ellipse]
15 [label="testGetMinBranchPercentage#?#4:coverageThreshold
testGetMinLinePercentage#?#4:coverageThreshold" shape=ellipse]
16 [label="testGetMinBranchPercentage#?#4:getMinBranchPercentage()
testGetMinLinePercentage#?#4:getMinLinePercentage()" shape=ellipse]
17 [label="testGetMinBranchPercentage#?#4:DELTA
testGetMinLinePercentage#?#4:DELTA" shape=ellipse]
18 [label="testGetMinBranchPercentage#?#4:DELTA
testGetMinLinePercentage#?#4:DELTA" shape=ellipse]
19 [label="testGetMinBranchPercentage#?#4:
testGetMinLinePercentage#?#4:" shape=ellipse]
0 -> 17 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 4 [label="AST:2"];
1 -> 5 [label="AST:2"];
1 -> 8 [label="AST:2"];
1 -> 11 [label="AST:2"];
1 -> 13 [label="AST:2"];
2 -> 1 [label="AST:2"];
3 -> 2 [label="AST:2"];
5 -> 6 [label="AST:2"];
5 -> 7 [label="AST:2"];
8 -> 9 [label="AST:2"];
8 -> 10 [label="AST:2"];
11 -> 12 [label="AST:2"];
13 -> 14 [label="AST:2"];
13 -> 15 [label="AST:2"];
13 -> 16 [label="AST:2"];
17 -> 18 [label="AST:2"];
18 -> 19 [label="AST:2"];
}