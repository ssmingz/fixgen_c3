digraph "touchIteratively#?,SwitchData,int" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@touchIteratively" shape=ellipse]
2 [label="2:CtParameterImpl@SwitchData data" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@SwitchData" shape=ellipse]
4 [label="2:CtParameterImpl@int num" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
7 [label="3:CtLiteralImpl@0" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
9 [label="3:CtVirtualElement@i" shape=ellipse]
10 [label="3:CtLocalVariableImpl@int i = 0" shape=ellipse]
11 [label="3:CtVariableReadImpl@i" shape=ellipse]
12 [label="3:CtLocalVariableReferenceImpl@i" shape=ellipse]
13 [label="3:CtLiteralImpl@2000" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
15 [label="3:CtBinaryOperatorImpl@i < 2000" shape=ellipse]
16 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
17 [label="3:CtVariableWriteImpl@i" shape=ellipse]
18 [label="3:CtLocalVariableReferenceImpl@i" shape=ellipse]
19 [label="3:CtUnaryOperatorImpl@i++" shape=ellipse]
20 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
21 [label="4:CtExecutableReferenceImpl@yield()" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@Thread" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@void" shape=ellipse]
24 [label="4:CtVirtualElement@yield" shape=ellipse]
25 [label="4:CtTypeAccessImpl@Thread" shape=ellipse]
26 [label="4:CtTypeReferenceImpl@Thread" shape=ellipse]
27 [label="4:CtInvocationImpl@Thread.yield()" shape=ellipse]
28 [label="5:CtExecutableReferenceImpl@touchBranch(int)" shape=ellipse]
29 [label="5:CtTypeReferenceImpl@SwitchData" shape=ellipse]
30 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
31 [label="5:CtVirtualElement@touchBranch" shape=ellipse]
32 [label="5:CtVariableReadImpl@data" shape=ellipse]
33 [label="5:CtParameterReferenceImpl@data" shape=ellipse]
34 [label="5:CtVariableReadImpl@i" shape=ellipse]
35 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
36 [label="5:CtInvocationImpl@data.touchBranch(i)" shape=ellipse]
37 [label="3:CtBlockImpl@\{
    Thread.yield();
    data.touchBranch(i);
\}" shape=ellipse]
38 [label="3:CtForImpl@for (int i = 0; i < 2000; i++) \{
    Thread.yield();
    data.touchBranch(i);
\}" shape=ellipse]
39 [label="2:CtBlockImpl@\{
    for (int i = 0; i < 2000; i++) \{
        Thread.yield();
        data.touchBranch(i);
    \}
\}" shape=ellipse]
40 [label="2:CtMethodImpl@private static void touchIteratively(SwitchData data, int num) \{
    for (int i = 0; i < 2000; i++) \{
        Thread.yield();
        data.touchBranch(i);
    \}
\}" shape=ellipse]
41 [label="5:Insert@INSERT" shape=ellipse]
42 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
43 [label="5:CtLiteralImpl@1" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
7 -> 8 [label="AST"];
9 -> 11 [label="Define-Use"];
10 -> 9 [label="AST"];
10 -> 6 [label="AST"];
10 -> 7 [label="AST"];
11 -> 12 [label="AST"];
13 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 11 [label="AST"];
15 -> 13 [label="AST"];
15 -> 37 [label="Control Dep"];
15 -> 27 [label="Control Dep"];
15 -> 21 [label="Control Dep"];
15 -> 25 [label="Control Dep"];
15 -> 36 [label="Control Dep"];
15 -> 28 [label="Control Dep"];
15 -> 32 [label="Control Dep"];
15 -> 34 [label="Control Dep"];
15 -> 43 [label="Control Dep"];
17 -> 18 [label="AST"];
17 -> 34 [label="Define-Use"];
19 -> 20 [label="AST"];
19 -> 17 [label="AST"];
21 -> 22 [label="AST"];
21 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 24 [label="AST"];
27 -> 25 [label="AST"];
27 -> 21 [label="AST"];
28 -> 29 [label="AST"];
28 -> 30 [label="AST"];
32 -> 33 [label="AST"];
34 -> 35 [label="AST"];
36 -> 31 [label="AST"];
36 -> 32 [label="AST"];
36 -> 28 [label="AST"];
36 -> 34 [label="AST"];
36 -> 41 [label="Action"];
37 -> 27 [label="AST"];
37 -> 36 [label="AST"];
38 -> 10 [label="AST"];
38 -> 15 [label="AST"];
38 -> 19 [label="AST"];
38 -> 37 [label="AST"];
39 -> 38 [label="AST"];
40 -> 1 [label="AST"];
40 -> 0 [label="AST"];
40 -> 2 [label="AST"];
40 -> 4 [label="AST"];
40 -> 39 [label="AST"];
41 -> 43 [label="Action"];
43 -> 42 [label="AST"];
}