digraph "equals#?,Object" {
0 [label="2:CtTypeReferenceImpl@boolean" shape=ellipse]
1 [label="2:CtVirtualElement@equals" shape=ellipse]
2 [label="2:CtParameterImpl@Object obj" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@Object" shape=ellipse]
4 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
6 [label="3:CtThisAccessImpl@this" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
8 [label="3:CtVariableReadImpl@obj" shape=ellipse]
9 [label="3:CtParameterReferenceImpl@obj" shape=ellipse]
10 [label="3:CtBinaryOperatorImpl@this == obj" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
12 [label="4:CtLiteralImpl@true" shape=ellipse]
13 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
14 [label="4:CtReturnImpl@return true" shape=ellipse]
15 [label="3:CtBlockImpl@\{
    return true;
\}" shape=ellipse]
16 [label="3:CtIfImpl@if (this == obj) \{
    return true;
\}" shape=ellipse]
17 [label="6:CtVariableReadImpl@obj" shape=ellipse]
18 [label="6:CtParameterReferenceImpl@obj" shape=ellipse]
19 [label="6:CtLiteralImpl@null" shape=ellipse]
20 [label="6:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
21 [label="6:CtBinaryOperatorImpl@(obj == null)" shape=ellipse]
22 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
23 [label="6:CtExecutableReferenceImpl@equals(java.lang.Object)" shape=ellipse]
24 [label="6:CtTypeReferenceImpl@Object" shape=ellipse]
25 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
26 [label="6:CtTypeReferenceImpl@Object" shape=ellipse]
27 [label="6:CtVirtualElement@equals" shape=ellipse]
28 [label="6:CtExecutableReferenceImpl@getClass()" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@Object" shape=ellipse]
30 [label="6:CtTypeReferenceImpl@Class<? extends Object>" shape=ellipse]
31 [label="6:CtVirtualElement@getClass" shape=ellipse]
32 [label="6:CtVariableReadImpl@obj" shape=ellipse]
33 [label="6:CtParameterReferenceImpl@obj" shape=ellipse]
34 [label="6:CtInvocationImpl@obj.getClass()" shape=ellipse]
35 [label="6:CtExecutableReferenceImpl@getClass()" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@Object" shape=ellipse]
37 [label="6:CtTypeReferenceImpl@Class<? extends PlaceHold>" shape=ellipse]
38 [label="6:CtVirtualElement@getClass" shape=ellipse]
39 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
40 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
41 [label="6:CtThisAccessImpl@this" shape=ellipse]
42 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
43 [label="6:CtInvocationImpl@this.getClass()" shape=ellipse]
44 [label="6:CtInvocationImpl@obj.getClass().equals(this.getClass())" shape=ellipse]
45 [label="6:CtUnaryOperatorImpl@(!obj.getClass().equals(this.getClass()))" shape=ellipse]
46 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
47 [label="6:CtBinaryOperatorImpl@(obj == null) || (!obj.getClass().equals(this.getClass()))" shape=ellipse]
48 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
49 [label="7:CtLiteralImpl@false" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
51 [label="7:CtReturnImpl@return false" shape=ellipse]
52 [label="6:CtBlockImpl@\{
    return false;
\}" shape=ellipse]
53 [label="6:CtIfImpl@if ((obj == null) || (!obj.getClass().equals(this.getClass()))) \{
    return false;
\}" shape=ellipse]
54 [label="9:CtTypeReferenceImpl@PackageData" shape=ellipse]
55 [label="9:CtPackageReferenceImpl@" shape=ellipse]
56 [label="9:CtVariableReadImpl@((PackageData) (obj))" shape=ellipse]
57 [label="9:CtTypeReferenceImpl@PackageData" shape=ellipse]
58 [label="9:CtParameterReferenceImpl@obj" shape=ellipse]
59 [label="9:CtVirtualElement@packageData" shape=ellipse]
60 [label="9:CtLocalVariableImpl@PackageData packageData = ((PackageData) (obj))" shape=ellipse]
61 [label="10:CtExecutableReferenceImpl@equals(java.lang.Object)" shape=ellipse]
62 [label="10:CtTypeReferenceImpl@Object" shape=ellipse]
63 [label="10:CtTypeReferenceImpl@boolean" shape=ellipse]
64 [label="10:CtTypeReferenceImpl@Object" shape=ellipse]
65 [label="10:CtVirtualElement@equals" shape=ellipse]
66 [label="10:CtSuperAccessImpl@super" shape=ellipse]
67 [label="10:CtLocalVariableReferenceImpl@" shape=ellipse]
68 [label="10:CtVariableReadImpl@obj" shape=ellipse]
69 [label="10:CtParameterReferenceImpl@obj" shape=ellipse]
70 [label="10:CtInvocationImpl@super.equals(obj)" shape=ellipse]
71 [label="10:CtExecutableReferenceImpl@equals()" shape=ellipse]
72 [label="10:CtVirtualElement@equals" shape=ellipse]
73 [label="10:CtFieldReferenceImpl@name" shape=ellipse]
74 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
75 [label="10:CtFieldReadImpl@this.name" shape=ellipse]
76 [label="10:CtThisAccessImpl@this" shape=ellipse]
77 [label="10:CtFieldReferenceImpl@name" shape=ellipse]
78 [label="10:CtFieldReadImpl@packageData.name" shape=ellipse]
79 [label="10:CtVariableReadImpl@packageData" shape=ellipse]
80 [label="10:CtInvocationImpl@this.name.equals(packageData.name)" shape=ellipse]
81 [label="10:CtBinaryOperatorImpl@super.equals(obj) && this.name.equals(packageData.name)" shape=ellipse]
82 [label="10:CtReturnImpl@return super.equals(obj) && this.name.equals(packageData.name)" shape=ellipse]
83 [label="2:CtBlockImpl@\{
    if (this == obj) \{
        return true;
    \}
    if ((obj == null) || (!obj.getClass().equals(this.getClass()))) \{
        return false;
    \}
    PackageData packageData = ((PackageData) (obj));
    return super.equals(obj) && this.name.equals(packageData.name);
\}" shape=ellipse]
84 [label="2:CtMethodImpl@public boolean equals(Object obj) \{
    if (this == obj) \{
        return true;
    \}
    if ((obj == null) || (!obj.getClass().equals(this.getClass()))) \{
        return false;
    \}
    PackageData packageData = ((PackageData) (obj));
    return super.equals(obj) && this.name.equals(packageData.name);
\}" shape=ellipse]
85 [label="10:Insert@INSERT" shape=ellipse]
86 [label="10:CtPackageReferenceImpl@" shape=ellipse]
87 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
88 [label="10:CtPackageReferenceImpl@" shape=ellipse]
89 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
90 [label="10:CtTypeAccessImpl@PlaceHold" shape=ellipse]
91 [label="10:CtThisAccessImpl@" shape=ellipse]
92 [label="10:CtTypeReferenceImpl@null" shape=ellipse]
93 [label="10:CtExecutableReferenceImpl@getBothLocks(<unknown>)" shape=ellipse]
94 [label="10:CtPackageReferenceImpl@" shape=ellipse]
95 [label="10:CtTypeReferenceImpl@PackageData" shape=ellipse]
96 [label="10:CtLocalVariableReferenceImpl@packageData" shape=ellipse]
97 [label="10:CtVariableReadImpl@packageData" shape=ellipse]
98 [label="10:CtInvocationImpl@getBothLocks(packageData)" shape=ellipse]
99 [label="10:CtVirtualElement@getBothLocks" shape=ellipse]
100 [label="11:Insert@INSERT" shape=ellipse]
101 [label="12:CtPackageReferenceImpl@java.lang" shape=ellipse]
102 [label="12:CtTypeReferenceImpl@Object" shape=ellipse]
103 [label="12:CtLocalVariableReferenceImpl@" shape=ellipse]
104 [label="12:CtSuperAccessImpl@super" shape=ellipse]
105 [label="12:CtPackageReferenceImpl@java.lang" shape=ellipse]
106 [label="12:CtTypeReferenceImpl@Object" shape=ellipse]
107 [label="12:CtTypeReferenceImpl@boolean" shape=ellipse]
108 [label="12:CtPackageReferenceImpl@java.lang" shape=ellipse]
109 [label="12:CtTypeReferenceImpl@Object" shape=ellipse]
110 [label="12:CtExecutableReferenceImpl@equals(java.lang.Object)" shape=ellipse]
111 [label="12:CtPackageReferenceImpl@java.lang" shape=ellipse]
112 [label="12:CtTypeReferenceImpl@Object" shape=ellipse]
113 [label="12:CtParameterReferenceImpl@obj" shape=ellipse]
114 [label="12:CtVariableReadImpl@obj" shape=ellipse]
115 [label="12:CtInvocationImpl@super.equals(obj)" shape=ellipse]
116 [label="12:CtVirtualElement@equals" shape=ellipse]
117 [label="12:CtPackageReferenceImpl@" shape=ellipse]
118 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
119 [label="12:CtPackageReferenceImpl@" shape=ellipse]
120 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
121 [label="12:CtTypeAccessImpl@PlaceHold" shape=ellipse]
122 [label="12:CtThisAccessImpl@this" shape=ellipse]
123 [label="12:CtPackageReferenceImpl@" shape=ellipse]
124 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
125 [label="12:CtFieldReferenceImpl@name" shape=ellipse]
126 [label="12:CtFieldReadImpl@this.name" shape=ellipse]
127 [label="12:CtExecutableReferenceImpl@equals()" shape=ellipse]
128 [label="12:CtPackageReferenceImpl@" shape=ellipse]
129 [label="12:CtTypeReferenceImpl@PackageData" shape=ellipse]
130 [label="12:CtLocalVariableReferenceImpl@packageData" shape=ellipse]
131 [label="12:CtVariableReadImpl@packageData" shape=ellipse]
132 [label="12:CtFieldReferenceImpl@name" shape=ellipse]
133 [label="12:CtFieldReadImpl@packageData.name" shape=ellipse]
134 [label="12:CtInvocationImpl@this.name.equals(packageData.name)" shape=ellipse]
135 [label="12:CtVirtualElement@equals" shape=ellipse]
136 [label="12:CtBinaryOperatorImpl@super.equals(obj) && this.name.equals(packageData.name)" shape=ellipse]
137 [label="12:CtReturnImpl@return super.equals(obj) && this.name.equals(packageData.name)" shape=ellipse]
138 [label="11:CtBlockImpl@\{
    return super.equals(obj) && this.name.equals(packageData.name);
\}" shape=ellipse]
139 [label="14:CtPackageReferenceImpl@" shape=ellipse]
140 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
141 [label="14:CtFieldReferenceImpl@lock" shape=ellipse]
142 [label="14:CtFieldReadImpl@lock" shape=ellipse]
143 [label="14:CtPackageReferenceImpl@" shape=ellipse]
144 [label="14:CtTypeReferenceImpl@lock" shape=ellipse]
145 [label="14:CtExecutableReferenceImpl@unlock()" shape=ellipse]
146 [label="14:CtInvocationImpl@lock.unlock()" shape=ellipse]
147 [label="14:CtVirtualElement@unlock" shape=ellipse]
148 [label="15:CtPackageReferenceImpl@" shape=ellipse]
149 [label="15:CtTypeReferenceImpl@PackageData" shape=ellipse]
150 [label="15:CtLocalVariableReferenceImpl@packageData" shape=ellipse]
151 [label="15:CtVariableReadImpl@packageData" shape=ellipse]
152 [label="15:CtFieldReferenceImpl@lock" shape=ellipse]
153 [label="15:CtFieldReadImpl@packageData.lock" shape=ellipse]
154 [label="15:CtPackageReferenceImpl@packageData" shape=ellipse]
155 [label="15:CtTypeReferenceImpl@lock" shape=ellipse]
156 [label="15:CtExecutableReferenceImpl@unlock()" shape=ellipse]
157 [label="15:CtInvocationImpl@packageData.lock.unlock()" shape=ellipse]
158 [label="15:CtVirtualElement@unlock" shape=ellipse]
159 [label="13:CtBlockImpl@\{
    lock.unlock();
    packageData.lock.unlock();
\}" shape=ellipse]
160 [label="11:CtTryImpl@try \{

\} finally \{
    lock.unlock();
    packageData.lock.unlock();
\}" shape=ellipse]
161 [label="10:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 4 [label="AST"];
8 -> 9 [label="AST"];
10 -> 11 [label="AST"];
10 -> 6 [label="AST"];
10 -> 8 [label="AST"];
10 -> 15 [label="Control Dep"];
10 -> 14 [label="Control Dep"];
10 -> 12 [label="Control Dep"];
12 -> 13 [label="AST"];
14 -> 12 [label="AST"];
15 -> 14 [label="AST"];
16 -> 10 [label="AST"];
16 -> 15 [label="AST"];
17 -> 18 [label="AST"];
19 -> 20 [label="AST"];
21 -> 22 [label="AST"];
21 -> 17 [label="AST"];
21 -> 19 [label="AST"];
23 -> 24 [label="AST"];
23 -> 25 [label="AST"];
23 -> 26 [label="AST"];
28 -> 29 [label="AST"];
28 -> 30 [label="AST"];
32 -> 33 [label="AST"];
34 -> 31 [label="AST"];
34 -> 32 [label="AST"];
34 -> 28 [label="AST"];
35 -> 36 [label="AST"];
35 -> 37 [label="AST"];
39 -> 40 [label="AST"];
41 -> 42 [label="AST"];
41 -> 39 [label="AST"];
43 -> 38 [label="AST"];
43 -> 41 [label="AST"];
43 -> 35 [label="AST"];
44 -> 27 [label="AST"];
44 -> 34 [label="AST"];
44 -> 23 [label="AST"];
44 -> 43 [label="AST"];
45 -> 46 [label="AST"];
45 -> 44 [label="AST"];
47 -> 48 [label="AST"];
47 -> 21 [label="AST"];
47 -> 45 [label="AST"];
47 -> 52 [label="Control Dep"];
47 -> 51 [label="Control Dep"];
47 -> 49 [label="Control Dep"];
49 -> 50 [label="AST"];
51 -> 49 [label="AST"];
52 -> 51 [label="AST"];
53 -> 47 [label="AST"];
53 -> 52 [label="AST"];
54 -> 55 [label="AST"];
56 -> 57 [label="AST"];
56 -> 58 [label="AST"];
56 -> 59 [label="Data Dep"];
60 -> 59 [label="AST"];
60 -> 54 [label="AST"];
60 -> 56 [label="AST"];
61 -> 62 [label="AST"];
61 -> 63 [label="AST"];
61 -> 64 [label="AST"];
66 -> 67 [label="AST"];
68 -> 69 [label="AST"];
70 -> 65 [label="AST"];
70 -> 66 [label="AST"];
70 -> 61 [label="AST"];
70 -> 68 [label="AST"];
73 -> 74 [label="AST"];
75 -> 76 [label="AST"];
75 -> 73 [label="AST"];
78 -> 79 [label="AST"];
78 -> 77 [label="AST"];
80 -> 72 [label="AST"];
80 -> 75 [label="AST"];
80 -> 71 [label="AST"];
80 -> 78 [label="AST"];
81 -> 70 [label="AST"];
81 -> 80 [label="AST"];
82 -> 81 [label="AST"];
82 -> 161 [label="Action"];
83 -> 16 [label="AST"];
83 -> 53 [label="AST"];
83 -> 60 [label="AST"];
83 -> 82 [label="AST"];
83 -> 85 [label="Action"];
83 -> 100 [label="Action"];
84 -> 1 [label="AST"];
84 -> 0 [label="AST"];
84 -> 2 [label="AST"];
84 -> 83 [label="AST"];
85 -> 98 [label="Action"];
87 -> 86 [label="AST"];
89 -> 88 [label="AST"];
90 -> 89 [label="AST"];
91 -> 87 [label="AST"];
91 -> 90 [label="AST"];
93 -> 92 [label="AST"];
95 -> 94 [label="AST"];
96 -> 95 [label="AST"];
97 -> 96 [label="AST"];
98 -> 99 [label="AST"];
98 -> 91 [label="AST"];
98 -> 93 [label="AST"];
98 -> 97 [label="AST"];
100 -> 160 [label="Action"];
102 -> 101 [label="AST"];
103 -> 102 [label="AST"];
104 -> 103 [label="AST"];
106 -> 105 [label="AST"];
109 -> 108 [label="AST"];
110 -> 106 [label="AST"];
110 -> 107 [label="AST"];
110 -> 109 [label="AST"];
112 -> 111 [label="AST"];
113 -> 112 [label="AST"];
114 -> 113 [label="AST"];
115 -> 116 [label="AST"];
115 -> 104 [label="AST"];
115 -> 110 [label="AST"];
115 -> 114 [label="AST"];
118 -> 117 [label="AST"];
120 -> 119 [label="AST"];
121 -> 120 [label="AST"];
122 -> 118 [label="AST"];
122 -> 121 [label="AST"];
124 -> 123 [label="AST"];
125 -> 124 [label="AST"];
126 -> 122 [label="AST"];
126 -> 125 [label="AST"];
129 -> 128 [label="AST"];
130 -> 129 [label="AST"];
131 -> 130 [label="AST"];
133 -> 131 [label="AST"];
133 -> 132 [label="AST"];
134 -> 135 [label="AST"];
134 -> 126 [label="AST"];
134 -> 127 [label="AST"];
134 -> 133 [label="AST"];
136 -> 115 [label="AST"];
136 -> 134 [label="AST"];
137 -> 136 [label="AST"];
138 -> 137 [label="AST"];
140 -> 139 [label="AST"];
141 -> 140 [label="AST"];
142 -> 141 [label="AST"];
144 -> 143 [label="AST"];
145 -> 144 [label="AST"];
146 -> 147 [label="AST"];
146 -> 142 [label="AST"];
146 -> 145 [label="AST"];
149 -> 148 [label="AST"];
150 -> 149 [label="AST"];
151 -> 150 [label="AST"];
153 -> 151 [label="AST"];
153 -> 152 [label="AST"];
155 -> 154 [label="AST"];
156 -> 155 [label="AST"];
157 -> 158 [label="AST"];
157 -> 153 [label="AST"];
157 -> 156 [label="AST"];
159 -> 146 [label="AST"];
159 -> 157 [label="AST"];
160 -> 138 [label="AST"];
160 -> 159 [label="AST"];
161 -> 160 [label="Action"];
}