digraph "Pattern" {
0 [label="getNumberOfValidBranches#?#18:DELETE
getNumberOfCoveredBranches#?#18:DELETE" shape=ellipse]
1 [label="getNumberOfValidBranches#?#18:lock.unlock()
getNumberOfCoveredBranches#?#18:lock.unlock()" shape=ellipse]
2 [label="getNumberOfValidBranches#?#17:\{
    lock.unlock();
\}
getNumberOfCoveredBranches#?#17:\{
    lock.unlock();
\}" shape=ellipse]
3 [label="getNumberOfValidBranches#?#5:try \{
    if (jumps != null) \{
        for (int i = jumps.size() - 1; i >= 0; i--) \{
            ret += ((JumpData) (jumps.get(i))).getNumberOfValidBranches();
        \}
    \}
    if (switches != null) \{
        for (int i = switches.size() - 1; i >= 0; i--) \{
            ret += ((SwitchData) (switches.get(i))).getNumberOfValidBranches();
        \}
    \}
    return ret;
\} finally \{
    lock.unlock();
\}
getNumberOfCoveredBranches#?#5:try \{
    if (jumps != null) \{
        for (int i = jumps.size() - 1; i >= 0; i--) \{
            ret += ((JumpData) (jumps.get(i))).getNumberOfCoveredBranches();
        \}
    \}
    if (switches != null) \{
        for (int i = switches.size() - 1; i >= 0; i--) \{
            ret += ((SwitchData) (switches.get(i))).getNumberOfCoveredBranches();
        \}
    \}
    return ret;
\} finally \{
    lock.unlock();
\}" shape=ellipse]
4 [label="getNumberOfValidBranches#?#18:unlock
getNumberOfCoveredBranches#?#18:unlock" shape=ellipse]
5 [label="getNumberOfValidBranches#?#18:lock
getNumberOfCoveredBranches#?#18:lock" shape=ellipse]
6 [label="getNumberOfValidBranches#?#18:lock
getNumberOfCoveredBranches#?#18:lock" shape=ellipse]
7 [label="getNumberOfValidBranches#?#18:unlock()
getNumberOfCoveredBranches#?#18:unlock()" shape=ellipse]
8 [label="getNumberOfValidBranches#?#18:lock
getNumberOfCoveredBranches#?#18:lock" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 4 [label="AST:2"];
1 -> 5 [label="AST:2"];
1 -> 7 [label="AST:2"];
2 -> 1 [label="AST:2"];
3 -> 2 [label="AST:2"];
5 -> 6 [label="AST:2"];
7 -> 8 [label="AST:2"];
}