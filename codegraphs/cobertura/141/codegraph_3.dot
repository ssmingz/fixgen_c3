digraph "getNumberOfValidLines#?" {
0 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
1 [label="2:CtVirtualElement@getNumberOfValidLines" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
3 [label="3:CtLiteralImpl@0" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="3:CtVirtualElement@number" shape=ellipse]
6 [label="3:CtLocalVariableImpl@int number = 0" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@Iterator" shape=ellipse]
8 [label="4:CtPackageReferenceImpl@" shape=ellipse]
9 [label="4:CtExecutableReferenceImpl@iterator()" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@Iterator" shape=ellipse]
11 [label="4:CtVirtualElement@iterator" shape=ellipse]
12 [label="4:CtExecutableReferenceImpl@values()" shape=ellipse]
13 [label="4:CtVirtualElement@values" shape=ellipse]
14 [label="4:CtFieldReferenceImpl@children" shape=ellipse]
15 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
16 [label="4:CtFieldReadImpl@this.children" shape=ellipse]
17 [label="4:CtThisAccessImpl@this" shape=ellipse]
18 [label="4:CtInvocationImpl@this.children.values()" shape=ellipse]
19 [label="4:CtInvocationImpl@this.children.values().iterator()" shape=ellipse]
20 [label="4:CtVirtualElement@iter" shape=ellipse]
21 [label="4:CtLocalVariableImpl@Iterator iter = this.children.values().iterator()" shape=ellipse]
22 [label="5:CtExecutableReferenceImpl@hasNext()" shape=ellipse]
23 [label="5:CtTypeReferenceImpl@Iterator" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@boolean" shape=ellipse]
25 [label="5:CtVirtualElement@hasNext" shape=ellipse]
26 [label="5:CtVariableReadImpl@iter" shape=ellipse]
27 [label="5:CtLocalVariableReferenceImpl@iter" shape=ellipse]
28 [label="5:CtInvocationImpl@iter.hasNext()" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@CoverageData" shape=ellipse]
30 [label="6:CtPackageReferenceImpl@" shape=ellipse]
31 [label="6:CtExecutableReferenceImpl@next()" shape=ellipse]
32 [label="6:CtTypeReferenceImpl@Iterator" shape=ellipse]
33 [label="6:CtVirtualElement@next" shape=ellipse]
34 [label="6:CtVariableReadImpl@iter" shape=ellipse]
35 [label="6:CtLocalVariableReferenceImpl@iter" shape=ellipse]
36 [label="6:CtInvocationImpl@((CoverageData) (iter.next()))" shape=ellipse]
37 [label="6:CtTypeReferenceImpl@CoverageData" shape=ellipse]
38 [label="6:CtVirtualElement@coverageContainer" shape=ellipse]
39 [label="6:CtLocalVariableImpl@CoverageData coverageContainer = ((CoverageData) (iter.next()))" shape=ellipse]
40 [label="7:CtVariableWriteImpl@number" shape=ellipse]
41 [label="7:CtLocalVariableReferenceImpl@number" shape=ellipse]
42 [label="7:CtExecutableReferenceImpl@getNumberOfValidLines()" shape=ellipse]
43 [label="7:CtTypeReferenceImpl@CoverageData" shape=ellipse]
44 [label="7:CtVirtualElement@getNumberOfValidLines" shape=ellipse]
45 [label="7:CtVariableReadImpl@coverageContainer" shape=ellipse]
46 [label="7:CtLocalVariableReferenceImpl@coverageContainer" shape=ellipse]
47 [label="7:CtInvocationImpl@coverageContainer.getNumberOfValidLines()" shape=ellipse]
48 [label="7:CtOperatorAssignmentImpl@number += coverageContainer.getNumberOfValidLines()" shape=ellipse]
49 [label="5:CtBlockImpl@\{
    CoverageData coverageContainer = ((CoverageData) (iter.next()));
    number += coverageContainer.getNumberOfValidLines();
\}" shape=ellipse]
50 [label="5:CtWhileImpl@while (iter.hasNext()) \{
    CoverageData coverageContainer = ((CoverageData) (iter.next()));
    number += coverageContainer.getNumberOfValidLines();
\} " shape=ellipse]
51 [label="9:CtVariableReadImpl@number" shape=ellipse]
52 [label="9:CtLocalVariableReferenceImpl@number" shape=ellipse]
53 [label="9:CtReturnImpl@return number" shape=ellipse]
54 [label="2:CtBlockImpl@\{
    int number = 0;
    Iterator iter = this.children.values().iterator();
    while (iter.hasNext()) \{
        CoverageData coverageContainer = ((CoverageData) (iter.next()));
        number += coverageContainer.getNumberOfValidLines();
    \} 
    return number;
\}" shape=ellipse]
55 [label="2:CtMethodImpl@public int getNumberOfValidLines() \{
    int number = 0;
    Iterator iter = this.children.values().iterator();
    while (iter.hasNext()) \{
        CoverageData coverageContainer = ((CoverageData) (iter.next()));
        number += coverageContainer.getNumberOfValidLines();
    \} 
    return number;
\}" shape=ellipse]
56 [label="4:Insert@INSERT" shape=ellipse]
57 [label="4:CtPackageReferenceImpl@" shape=ellipse]
58 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
59 [label="4:CtFieldReferenceImpl@lock" shape=ellipse]
60 [label="4:CtFieldReadImpl@lock" shape=ellipse]
61 [label="4:CtPackageReferenceImpl@" shape=ellipse]
62 [label="4:CtTypeReferenceImpl@lock" shape=ellipse]
63 [label="4:CtExecutableReferenceImpl@lock()" shape=ellipse]
64 [label="4:CtInvocationImpl@lock.lock()" shape=ellipse]
65 [label="4:CtVirtualElement@lock" shape=ellipse]
66 [label="5:Insert@INSERT" shape=ellipse]
67 [label="6:CtPackageReferenceImpl@" shape=ellipse]
68 [label="6:CtTypeReferenceImpl@Iterator" shape=ellipse]
69 [label="6:CtPackageReferenceImpl@" shape=ellipse]
70 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
71 [label="6:CtPackageReferenceImpl@" shape=ellipse]
72 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
73 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
74 [label="6:CtThisAccessImpl@this" shape=ellipse]
75 [label="6:CtPackageReferenceImpl@" shape=ellipse]
76 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
77 [label="6:CtFieldReferenceImpl@children" shape=ellipse]
78 [label="6:CtFieldReadImpl@this.children" shape=ellipse]
79 [label="6:CtExecutableReferenceImpl@values()" shape=ellipse]
80 [label="6:CtInvocationImpl@this.children.values()" shape=ellipse]
81 [label="6:CtVirtualElement@values" shape=ellipse]
82 [label="6:CtPackageReferenceImpl@" shape=ellipse]
83 [label="6:CtTypeReferenceImpl@Iterator" shape=ellipse]
84 [label="6:CtExecutableReferenceImpl@iterator()" shape=ellipse]
85 [label="6:CtInvocationImpl@this.children.values().iterator()" shape=ellipse]
86 [label="6:CtVirtualElement@iterator" shape=ellipse]
87 [label="6:CtLocalVariableImpl@Iterator iter = this.children.values().iterator()" shape=ellipse]
88 [label="6:CtVirtualElement@iter" shape=ellipse]
89 [label="7:CtPackageReferenceImpl@" shape=ellipse]
90 [label="7:CtTypeReferenceImpl@Iterator" shape=ellipse]
91 [label="7:CtLocalVariableReferenceImpl@iter" shape=ellipse]
92 [label="7:CtVariableReadImpl@iter" shape=ellipse]
93 [label="7:CtPackageReferenceImpl@" shape=ellipse]
94 [label="7:CtTypeReferenceImpl@Iterator" shape=ellipse]
95 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
96 [label="7:CtExecutableReferenceImpl@hasNext()" shape=ellipse]
97 [label="7:CtInvocationImpl@iter.hasNext()" shape=ellipse]
98 [label="7:CtVirtualElement@hasNext" shape=ellipse]
99 [label="8:CtPackageReferenceImpl@" shape=ellipse]
100 [label="8:CtTypeReferenceImpl@CoverageData" shape=ellipse]
101 [label="8:CtPackageReferenceImpl@" shape=ellipse]
102 [label="8:CtTypeReferenceImpl@CoverageData" shape=ellipse]
103 [label="8:CtPackageReferenceImpl@" shape=ellipse]
104 [label="8:CtTypeReferenceImpl@Iterator" shape=ellipse]
105 [label="8:CtLocalVariableReferenceImpl@iter" shape=ellipse]
106 [label="8:CtVariableReadImpl@iter" shape=ellipse]
107 [label="8:CtPackageReferenceImpl@" shape=ellipse]
108 [label="8:CtTypeReferenceImpl@Iterator" shape=ellipse]
109 [label="8:CtExecutableReferenceImpl@next()" shape=ellipse]
110 [label="8:CtInvocationImpl@((CoverageData) (iter.next()))" shape=ellipse]
111 [label="8:CtVirtualElement@next" shape=ellipse]
112 [label="8:CtLocalVariableImpl@CoverageData coverageContainer = ((CoverageData) (iter.next()))" shape=ellipse]
113 [label="8:CtVirtualElement@coverageContainer" shape=ellipse]
114 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
115 [label="9:CtLocalVariableReferenceImpl@number" shape=ellipse]
116 [label="9:CtVariableWriteImpl@number" shape=ellipse]
117 [label="9:CtPackageReferenceImpl@" shape=ellipse]
118 [label="9:CtTypeReferenceImpl@CoverageData" shape=ellipse]
119 [label="9:CtLocalVariableReferenceImpl@coverageContainer" shape=ellipse]
120 [label="9:CtVariableReadImpl@coverageContainer" shape=ellipse]
121 [label="9:CtPackageReferenceImpl@" shape=ellipse]
122 [label="9:CtTypeReferenceImpl@CoverageData" shape=ellipse]
123 [label="9:CtExecutableReferenceImpl@getNumberOfValidLines()" shape=ellipse]
124 [label="9:CtInvocationImpl@coverageContainer.getNumberOfValidLines()" shape=ellipse]
125 [label="9:CtVirtualElement@getNumberOfValidLines" shape=ellipse]
126 [label="9:CtOperatorAssignmentImpl@number += coverageContainer.getNumberOfValidLines()" shape=ellipse]
127 [label="7:CtBlockImpl@\{
    CoverageData coverageContainer = ((CoverageData) (iter.next()));
    number += coverageContainer.getNumberOfValidLines();
\}" shape=ellipse]
128 [label="7:CtWhileImpl@while (iter.hasNext()) \{
    CoverageData coverageContainer = ((CoverageData) (iter.next()));
    number += coverageContainer.getNumberOfValidLines();
\} " shape=ellipse]
129 [label="5:CtBlockImpl@\{
    Iterator iter = this.children.values().iterator();
    while (iter.hasNext()) \{
        CoverageData coverageContainer = ((CoverageData) (iter.next()));
        number += coverageContainer.getNumberOfValidLines();
    \} 
\}" shape=ellipse]
130 [label="12:CtPackageReferenceImpl@" shape=ellipse]
131 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
132 [label="12:CtFieldReferenceImpl@lock" shape=ellipse]
133 [label="12:CtFieldReadImpl@lock" shape=ellipse]
134 [label="12:CtPackageReferenceImpl@" shape=ellipse]
135 [label="12:CtTypeReferenceImpl@lock" shape=ellipse]
136 [label="12:CtExecutableReferenceImpl@unlock()" shape=ellipse]
137 [label="12:CtInvocationImpl@lock.unlock()" shape=ellipse]
138 [label="12:CtVirtualElement@unlock" shape=ellipse]
139 [label="11:CtBlockImpl@\{
    lock.unlock();
\}" shape=ellipse]
140 [label="5:CtTryImpl@try \{


\} finally \{
    lock.unlock();
\}" shape=ellipse]
141 [label="4:Move@MOVE" shape=ellipse]
142 [label="5:Move@MOVE" shape=ellipse]
3 -> 4 [label="AST"];
6 -> 5 [label="AST"];
6 -> 2 [label="AST"];
6 -> 3 [label="AST"];
7 -> 8 [label="AST"];
9 -> 10 [label="AST"];
14 -> 15 [label="AST"];
16 -> 17 [label="AST"];
16 -> 14 [label="AST"];
16 -> 20 [label="Data Dep"];
18 -> 13 [label="AST"];
18 -> 16 [label="AST"];
18 -> 12 [label="AST"];
19 -> 11 [label="AST"];
19 -> 18 [label="AST"];
19 -> 9 [label="AST"];
20 -> 26 [label="Define-Use"];
20 -> 34 [label="Define-Use"];
21 -> 20 [label="AST"];
21 -> 7 [label="AST"];
21 -> 19 [label="AST"];
21 -> 141 [label="Action"];
22 -> 23 [label="AST"];
22 -> 24 [label="AST"];
26 -> 27 [label="AST"];
28 -> 25 [label="AST"];
28 -> 26 [label="AST"];
28 -> 22 [label="AST"];
28 -> 49 [label="Control Dep"];
28 -> 39 [label="Control Dep"];
28 -> 36 [label="Control Dep"];
28 -> 31 [label="Control Dep"];
28 -> 34 [label="Control Dep"];
28 -> 48 [label="Control Dep"];
28 -> 40 [label="Control Dep"];
28 -> 47 [label="Control Dep"];
28 -> 42 [label="Control Dep"];
28 -> 45 [label="Control Dep"];
28 -> 106 [label="Control Dep"];
28 -> 109 [label="Control Dep"];
28 -> 110 [label="Control Dep"];
28 -> 112 [label="Control Dep"];
28 -> 116 [label="Control Dep"];
28 -> 120 [label="Control Dep"];
28 -> 123 [label="Control Dep"];
28 -> 124 [label="Control Dep"];
28 -> 126 [label="Control Dep"];
28 -> 127 [label="Control Dep"];
29 -> 30 [label="AST"];
31 -> 32 [label="AST"];
34 -> 35 [label="AST"];
34 -> 38 [label="Data Dep"];
36 -> 33 [label="AST"];
36 -> 37 [label="AST"];
36 -> 34 [label="AST"];
36 -> 31 [label="AST"];
38 -> 45 [label="Define-Use"];
39 -> 38 [label="AST"];
39 -> 29 [label="AST"];
39 -> 36 [label="AST"];
40 -> 41 [label="AST"];
40 -> 51 [label="Define-Use"];
42 -> 43 [label="AST"];
45 -> 46 [label="AST"];
45 -> 40 [label="Data Dep"];
47 -> 44 [label="AST"];
47 -> 45 [label="AST"];
47 -> 42 [label="AST"];
48 -> 40 [label="AST"];
48 -> 47 [label="AST"];
49 -> 39 [label="AST"];
49 -> 48 [label="AST"];
50 -> 28 [label="AST"];
50 -> 49 [label="AST"];
50 -> 142 [label="Action"];
51 -> 52 [label="AST"];
53 -> 51 [label="AST"];
54 -> 6 [label="AST"];
54 -> 21 [label="AST"];
54 -> 50 [label="AST"];
54 -> 53 [label="AST"];
54 -> 56 [label="Action"];
54 -> 66 [label="Action"];
55 -> 1 [label="AST"];
55 -> 0 [label="AST"];
55 -> 54 [label="AST"];
56 -> 64 [label="Action"];
58 -> 57 [label="AST"];
59 -> 58 [label="AST"];
60 -> 59 [label="AST"];
62 -> 61 [label="AST"];
63 -> 62 [label="AST"];
64 -> 65 [label="AST"];
64 -> 60 [label="AST"];
64 -> 63 [label="AST"];
66 -> 140 [label="Action"];
68 -> 67 [label="AST"];
70 -> 69 [label="AST"];
72 -> 71 [label="AST"];
73 -> 72 [label="AST"];
74 -> 70 [label="AST"];
74 -> 73 [label="AST"];
76 -> 75 [label="AST"];
77 -> 76 [label="AST"];
78 -> 74 [label="AST"];
78 -> 77 [label="AST"];
78 -> 88 [label="Data Dep"];
80 -> 81 [label="AST"];
80 -> 78 [label="AST"];
80 -> 79 [label="AST"];
83 -> 82 [label="AST"];
84 -> 83 [label="AST"];
85 -> 86 [label="AST"];
85 -> 80 [label="AST"];
85 -> 84 [label="AST"];
87 -> 88 [label="AST"];
87 -> 68 [label="AST"];
87 -> 85 [label="AST"];
88 -> 92 [label="Define-Use"];
88 -> 106 [label="Define-Use"];
88 -> 26 [label="Define-Use"];
88 -> 26 [label="Data Dep"];
88 -> 26 [label="Control Dep"];
88 -> 34 [label="Define-Use"];
88 -> 34 [label="Data Dep"];
88 -> 34 [label="Control Dep"];
90 -> 89 [label="AST"];
91 -> 90 [label="AST"];
92 -> 91 [label="AST"];
94 -> 93 [label="AST"];
96 -> 94 [label="AST"];
96 -> 95 [label="AST"];
97 -> 98 [label="AST"];
97 -> 92 [label="AST"];
97 -> 96 [label="AST"];
97 -> 127 [label="Control Dep"];
97 -> 112 [label="Control Dep"];
97 -> 110 [label="Control Dep"];
97 -> 109 [label="Control Dep"];
97 -> 106 [label="Control Dep"];
97 -> 126 [label="Control Dep"];
97 -> 116 [label="Control Dep"];
97 -> 124 [label="Control Dep"];
97 -> 123 [label="Control Dep"];
97 -> 120 [label="Control Dep"];
97 -> 49 [label="Control Dep"];
97 -> 39 [label="Control Dep"];
97 -> 36 [label="Control Dep"];
97 -> 31 [label="Control Dep"];
97 -> 34 [label="Control Dep"];
97 -> 48 [label="Control Dep"];
97 -> 40 [label="Control Dep"];
97 -> 47 [label="Control Dep"];
97 -> 42 [label="Control Dep"];
97 -> 45 [label="Control Dep"];
100 -> 99 [label="AST"];
102 -> 101 [label="AST"];
104 -> 103 [label="AST"];
105 -> 104 [label="AST"];
106 -> 105 [label="AST"];
106 -> 113 [label="Data Dep"];
108 -> 107 [label="AST"];
109 -> 108 [label="AST"];
110 -> 111 [label="AST"];
110 -> 102 [label="AST"];
110 -> 106 [label="AST"];
110 -> 109 [label="AST"];
112 -> 113 [label="AST"];
112 -> 100 [label="AST"];
112 -> 110 [label="AST"];
113 -> 120 [label="Define-Use"];
113 -> 45 [label="Define-Use"];
113 -> 45 [label="Data Dep"];
113 -> 45 [label="Control Dep"];
115 -> 114 [label="AST"];
116 -> 115 [label="AST"];
116 -> 51 [label="Define-Use"];
116 -> 51 [label="Data Dep"];
116 -> 51 [label="Control Dep"];
118 -> 117 [label="AST"];
119 -> 118 [label="AST"];
120 -> 119 [label="AST"];
120 -> 116 [label="Data Dep"];
120 -> 40 [label="Data Dep"];
120 -> 40 [label="Control Dep"];
122 -> 121 [label="AST"];
123 -> 122 [label="AST"];
124 -> 125 [label="AST"];
124 -> 120 [label="AST"];
124 -> 123 [label="AST"];
126 -> 116 [label="AST"];
126 -> 124 [label="AST"];
127 -> 112 [label="AST"];
127 -> 126 [label="AST"];
128 -> 97 [label="AST"];
128 -> 127 [label="AST"];
129 -> 87 [label="AST"];
129 -> 128 [label="AST"];
131 -> 130 [label="AST"];
132 -> 131 [label="AST"];
133 -> 132 [label="AST"];
135 -> 134 [label="AST"];
136 -> 135 [label="AST"];
137 -> 138 [label="AST"];
137 -> 133 [label="AST"];
137 -> 136 [label="AST"];
139 -> 137 [label="AST"];
140 -> 129 [label="AST"];
140 -> 139 [label="AST"];
141 -> 140 [label="Action"];
142 -> 140 [label="Action"];
}