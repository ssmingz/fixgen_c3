digraph "getSwitchDataIteratively#?,LineData" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@getSwitchDataIteratively" shape=ellipse]
2 [label="2:CtParameterImpl@LineData data" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@LineData" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="3:CtLiteralImpl@0" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
7 [label="3:CtVirtualElement@i" shape=ellipse]
8 [label="3:CtLocalVariableImpl@int i = 0" shape=ellipse]
9 [label="3:CtVariableReadImpl@i" shape=ellipse]
10 [label="3:CtLocalVariableReferenceImpl@i" shape=ellipse]
11 [label="3:CtLiteralImpl@2000" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
13 [label="3:CtBinaryOperatorImpl@i < 2000" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
15 [label="3:CtVariableWriteImpl@i" shape=ellipse]
16 [label="3:CtLocalVariableReferenceImpl@i" shape=ellipse]
17 [label="3:CtUnaryOperatorImpl@i++" shape=ellipse]
18 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
19 [label="4:CtExecutableReferenceImpl@yield()" shape=ellipse]
20 [label="4:CtTypeReferenceImpl@Thread" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@void" shape=ellipse]
22 [label="4:CtVirtualElement@yield" shape=ellipse]
23 [label="4:CtTypeAccessImpl@Thread" shape=ellipse]
24 [label="4:CtTypeReferenceImpl@Thread" shape=ellipse]
25 [label="4:CtInvocationImpl@Thread.yield()" shape=ellipse]
26 [label="5:CtExecutableReferenceImpl@getSwitchData(int,SwitchData)" shape=ellipse]
27 [label="5:CtTypeReferenceImpl@LineData" shape=ellipse]
28 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
29 [label="5:CtTypeReferenceImpl@SwitchData" shape=ellipse]
30 [label="5:CtVirtualElement@getSwitchData" shape=ellipse]
31 [label="5:CtVariableReadImpl@data" shape=ellipse]
32 [label="5:CtParameterReferenceImpl@data" shape=ellipse]
33 [label="5:CtVariableReadImpl@i" shape=ellipse]
34 [label="5:CtLocalVariableReferenceImpl@i" shape=ellipse]
35 [label="5:CtExecutableReferenceImpl@SwitchData(int)" shape=ellipse]
36 [label="5:CtTypeReferenceImpl@SwitchData" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@SwitchData" shape=ellipse]
38 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
39 [label="5:CtLiteralImpl@1" shape=ellipse]
40 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
41 [label="5:CtConstructorCallImpl@new SwitchData(1)" shape=ellipse]
42 [label="5:CtInvocationImpl@data.getSwitchData(i, new SwitchData(1))" shape=ellipse]
43 [label="3:CtBlockImpl@\{
    Thread.yield();
    data.getSwitchData(i, new SwitchData(1));
\}" shape=ellipse]
44 [label="3:CtForImpl@for (int i = 0; i < 2000; i++) \{
    Thread.yield();
    data.getSwitchData(i, new SwitchData(1));
\}" shape=ellipse]
45 [label="2:CtBlockImpl@\{
    for (int i = 0; i < 2000; i++) \{
        Thread.yield();
        data.getSwitchData(i, new SwitchData(1));
    \}
\}" shape=ellipse]
46 [label="2:CtMethodImpl@private static void getSwitchDataIteratively(LineData data) \{
    for (int i = 0; i < 2000; i++) \{
        Thread.yield();
        data.getSwitchData(i, new SwitchData(1));
    \}
\}" shape=ellipse]
47 [label="5:Update@UPDATE" shape=ellipse]
48 [label="5:CtPackageReferenceImpl@" shape=ellipse]
49 [label="5:CtTypeReferenceImpl@SwitchData" shape=ellipse]
50 [label="5:CtPackageReferenceImpl@" shape=ellipse]
51 [label="5:CtTypeReferenceImpl@SwitchData" shape=ellipse]
52 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
53 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
54 [label="5:CtExecutableReferenceImpl@SwitchData(int,int)" shape=ellipse]
55 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
56 [label="5:CtLiteralImpl@1" shape=ellipse]
57 [label="5:CtPackageReferenceImpl@java.lang" shape=ellipse]
58 [label="5:CtTypeReferenceImpl@Integer" shape=ellipse]
59 [label="5:CtTypeAccessImpl@Integer" shape=ellipse]
60 [label="5:CtPackageReferenceImpl@java.lang" shape=ellipse]
61 [label="5:CtTypeReferenceImpl@Integer" shape=ellipse]
62 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
63 [label="5:CtFieldReferenceImpl@Integer.MAX_VALUE" shape=ellipse]
64 [label="5:CtFieldReadImpl@Integer.MAX_VALUE" shape=ellipse]
65 [label="5:CtConstructorCallImpl@new SwitchData(1, Integer.MAX_VALUE)" shape=ellipse]
2 -> 3 [label="AST"];
5 -> 6 [label="AST"];
7 -> 9 [label="Define-Use"];
8 -> 7 [label="AST"];
8 -> 4 [label="AST"];
8 -> 5 [label="AST"];
9 -> 10 [label="AST"];
11 -> 12 [label="AST"];
13 -> 14 [label="AST"];
13 -> 9 [label="AST"];
13 -> 11 [label="AST"];
13 -> 43 [label="Control Dep"];
13 -> 25 [label="Control Dep"];
13 -> 19 [label="Control Dep"];
13 -> 23 [label="Control Dep"];
13 -> 42 [label="Control Dep"];
13 -> 26 [label="Control Dep"];
13 -> 31 [label="Control Dep"];
13 -> 33 [label="Control Dep"];
13 -> 41 [label="Control Dep"];
13 -> 35 [label="Control Dep"];
13 -> 39 [label="Control Dep"];
13 -> 54 [label="Control Dep"];
13 -> 56 [label="Control Dep"];
13 -> 64 [label="Control Dep"];
13 -> 65 [label="Control Dep"];
15 -> 16 [label="AST"];
15 -> 33 [label="Define-Use"];
17 -> 18 [label="AST"];
17 -> 15 [label="AST"];
19 -> 20 [label="AST"];
19 -> 21 [label="AST"];
23 -> 24 [label="AST"];
25 -> 22 [label="AST"];
25 -> 23 [label="AST"];
25 -> 19 [label="AST"];
26 -> 27 [label="AST"];
26 -> 28 [label="AST"];
26 -> 29 [label="AST"];
31 -> 32 [label="AST"];
33 -> 34 [label="AST"];
35 -> 36 [label="AST"];
35 -> 37 [label="AST"];
35 -> 38 [label="AST"];
39 -> 40 [label="AST"];
41 -> 35 [label="AST"];
41 -> 39 [label="AST"];
41 -> 47 [label="Action"];
42 -> 30 [label="AST"];
42 -> 31 [label="AST"];
42 -> 26 [label="AST"];
42 -> 33 [label="AST"];
42 -> 41 [label="AST"];
43 -> 25 [label="AST"];
43 -> 42 [label="AST"];
44 -> 8 [label="AST"];
44 -> 13 [label="AST"];
44 -> 17 [label="AST"];
44 -> 43 [label="AST"];
45 -> 44 [label="AST"];
46 -> 1 [label="AST"];
46 -> 0 [label="AST"];
46 -> 2 [label="AST"];
46 -> 45 [label="AST"];
47 -> 65 [label="Action"];
49 -> 48 [label="AST"];
51 -> 50 [label="AST"];
54 -> 49 [label="AST"];
54 -> 51 [label="AST"];
54 -> 52 [label="AST"];
54 -> 53 [label="AST"];
56 -> 55 [label="AST"];
58 -> 57 [label="AST"];
59 -> 58 [label="AST"];
61 -> 60 [label="AST"];
63 -> 61 [label="AST"];
63 -> 62 [label="AST"];
64 -> 59 [label="AST"];
64 -> 63 [label="AST"];
65 -> 54 [label="AST"];
65 -> 56 [label="AST"];
65 -> 64 [label="AST"];
}