digraph "unregisterLine#?,int,int" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@unregisterLine" shape=ellipse]
2 [label="2:CtParameterImpl@int eventId" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
4 [label="2:CtParameterImpl@int currentLine" shape=ellipse]
5 [label="2:CtTypeReferenceImpl@int" shape=ellipse]
6 [label="3:CtExecutableReferenceImpl@add(int)" shape=ellipse]
7 [label="3:CtTypeReferenceImpl@alreadyRegisteredEvents" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@boolean" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
10 [label="3:CtVirtualElement@add" shape=ellipse]
11 [label="3:CtFieldReferenceImpl@alreadyRegisteredEvents" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
13 [label="3:CtFieldReadImpl@alreadyRegisteredEvents" shape=ellipse]
14 [label="3:CtVariableReadImpl@eventId" shape=ellipse]
15 [label="3:CtParameterReferenceImpl@eventId" shape=ellipse]
16 [label="3:CtInvocationImpl@alreadyRegisteredEvents.add(eventId)" shape=ellipse]
17 [label="4:CtExecutableReferenceImpl@add(int)" shape=ellipse]
18 [label="4:CtTypeReferenceImpl@blockedLines" shape=ellipse]
19 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
20 [label="4:CtVirtualElement@add" shape=ellipse]
21 [label="4:CtFieldReferenceImpl@blockedLines" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
23 [label="4:CtFieldReadImpl@blockedLines" shape=ellipse]
24 [label="4:CtVariableReadImpl@currentLine" shape=ellipse]
25 [label="4:CtParameterReferenceImpl@currentLine" shape=ellipse]
26 [label="4:CtInvocationImpl@blockedLines.add(currentLine)" shape=ellipse]
27 [label="5:CtTypeReferenceImpl@List<TouchPointDescriptor>" shape=ellipse]
28 [label="5:CtPackageReferenceImpl@" shape=ellipse]
29 [label="5:CtTypeReferenceImpl@TouchPointDescriptor" shape=ellipse]
30 [label="5:CtExecutableReferenceImpl@get(int)" shape=ellipse]
31 [label="5:CtTypeReferenceImpl@currentLine2touchPoints" shape=ellipse]
32 [label="5:CtTypeReferenceImpl@List<TouchPointDescriptor>" shape=ellipse]
33 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
34 [label="5:CtVirtualElement@get" shape=ellipse]
35 [label="5:CtFieldReferenceImpl@currentLine2touchPoints" shape=ellipse]
36 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
37 [label="5:CtFieldReadImpl@currentLine2touchPoints" shape=ellipse]
38 [label="5:CtVariableReadImpl@currentLine" shape=ellipse]
39 [label="5:CtParameterReferenceImpl@currentLine" shape=ellipse]
40 [label="5:CtInvocationImpl@currentLine2touchPoints.get(currentLine)" shape=ellipse]
41 [label="5:CtVirtualElement@res" shape=ellipse]
42 [label="5:CtLocalVariableImpl@List<TouchPointDescriptor> res = currentLine2touchPoints.get(currentLine)" shape=ellipse]
43 [label="6:CtVariableReadImpl@res" shape=ellipse]
44 [label="6:CtLocalVariableReferenceImpl@res" shape=ellipse]
45 [label="6:CtLiteralImpl@null" shape=ellipse]
46 [label="6:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
47 [label="6:CtBinaryOperatorImpl@res != null" shape=ellipse]
48 [label="7:CtTypeReferenceImpl@Iterator<TouchPointDescriptor>" shape=ellipse]
49 [label="7:CtPackageReferenceImpl@" shape=ellipse]
50 [label="7:CtTypeReferenceImpl@TouchPointDescriptor" shape=ellipse]
51 [label="7:CtExecutableReferenceImpl@iterator()" shape=ellipse]
52 [label="7:CtTypeReferenceImpl@List<TouchPointDescriptor>" shape=ellipse]
53 [label="7:CtTypeReferenceImpl@Iterator<TouchPointDescriptor>" shape=ellipse]
54 [label="7:CtVirtualElement@iterator" shape=ellipse]
55 [label="7:CtVariableReadImpl@res" shape=ellipse]
56 [label="7:CtLocalVariableReferenceImpl@res" shape=ellipse]
57 [label="7:CtInvocationImpl@res.iterator()" shape=ellipse]
58 [label="7:CtVirtualElement@iter" shape=ellipse]
59 [label="7:CtLocalVariableImpl@Iterator<TouchPointDescriptor> iter = res.iterator()" shape=ellipse]
60 [label="8:CtExecutableReferenceImpl@hasNext()" shape=ellipse]
61 [label="8:CtTypeReferenceImpl@Iterator<TouchPointDescriptor>" shape=ellipse]
62 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
63 [label="8:CtVirtualElement@hasNext" shape=ellipse]
64 [label="8:CtVariableReadImpl@iter" shape=ellipse]
65 [label="8:CtLocalVariableReferenceImpl@iter" shape=ellipse]
66 [label="8:CtInvocationImpl@iter.hasNext()" shape=ellipse]
67 [label="9:CtTypeReferenceImpl@TouchPointDescriptor" shape=ellipse]
68 [label="9:CtPackageReferenceImpl@" shape=ellipse]
69 [label="9:CtExecutableReferenceImpl@next()" shape=ellipse]
70 [label="9:CtTypeReferenceImpl@Iterator<TouchPointDescriptor>" shape=ellipse]
71 [label="9:CtTypeReferenceImpl@TouchPointDescriptor" shape=ellipse]
72 [label="9:CtVirtualElement@next" shape=ellipse]
73 [label="9:CtVariableReadImpl@iter" shape=ellipse]
74 [label="9:CtLocalVariableReferenceImpl@iter" shape=ellipse]
75 [label="9:CtInvocationImpl@iter.next()" shape=ellipse]
76 [label="9:CtVirtualElement@desc" shape=ellipse]
77 [label="9:CtLocalVariableImpl@TouchPointDescriptor desc = iter.next()" shape=ellipse]
78 [label="10:CtVariableReadImpl@desc" shape=ellipse]
79 [label="10:CtLocalVariableReferenceImpl@desc" shape=ellipse]
80 [label="10:CtTypeAccessImpl@LineTouchPointDescriptor" shape=ellipse]
81 [label="10:CtTypeReferenceImpl@LineTouchPointDescriptor" shape=ellipse]
82 [label="10:CtBinaryOperatorImpl@desc instanceof LineTouchPointDescriptor" shape=ellipse]
83 [label="11:CtExecutableReferenceImpl@remove()" shape=ellipse]
84 [label="11:CtTypeReferenceImpl@Iterator<TouchPointDescriptor>" shape=ellipse]
85 [label="11:CtVirtualElement@remove" shape=ellipse]
86 [label="11:CtVariableReadImpl@iter" shape=ellipse]
87 [label="11:CtLocalVariableReferenceImpl@iter" shape=ellipse]
88 [label="11:CtInvocationImpl@iter.remove()" shape=ellipse]
89 [label="12:CtExecutableReferenceImpl@remove()" shape=ellipse]
90 [label="12:CtTypeReferenceImpl@eventId2touchPointDescriptor" shape=ellipse]
91 [label="12:CtVirtualElement@remove" shape=ellipse]
92 [label="12:CtFieldReferenceImpl@eventId2touchPointDescriptor" shape=ellipse]
93 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
94 [label="12:CtFieldReadImpl@eventId2touchPointDescriptor" shape=ellipse]
95 [label="12:CtExecutableReferenceImpl@getEventId()" shape=ellipse]
96 [label="12:CtTypeReferenceImpl@TouchPointDescriptor" shape=ellipse]
97 [label="12:CtVirtualElement@getEventId" shape=ellipse]
98 [label="12:CtVariableReadImpl@desc" shape=ellipse]
99 [label="12:CtLocalVariableReferenceImpl@desc" shape=ellipse]
100 [label="12:CtInvocationImpl@desc.getEventId()" shape=ellipse]
101 [label="12:CtInvocationImpl@eventId2touchPointDescriptor.remove(desc.getEventId())" shape=ellipse]
102 [label="13:CtExecutableReferenceImpl@remove()" shape=ellipse]
103 [label="13:CtTypeReferenceImpl@eventId2label" shape=ellipse]
104 [label="13:CtVirtualElement@remove" shape=ellipse]
105 [label="13:CtFieldReferenceImpl@eventId2label" shape=ellipse]
106 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
107 [label="13:CtFieldReadImpl@eventId2label" shape=ellipse]
108 [label="13:CtExecutableReferenceImpl@getEventId()" shape=ellipse]
109 [label="13:CtTypeReferenceImpl@TouchPointDescriptor" shape=ellipse]
110 [label="13:CtVirtualElement@getEventId" shape=ellipse]
111 [label="13:CtVariableReadImpl@desc" shape=ellipse]
112 [label="13:CtLocalVariableReferenceImpl@desc" shape=ellipse]
113 [label="13:CtInvocationImpl@desc.getEventId()" shape=ellipse]
114 [label="13:CtInvocationImpl@eventId2label.remove(desc.getEventId())" shape=ellipse]
115 [label="10:CtBlockImpl@\{
    iter.remove();
    eventId2touchPointDescriptor.remove(desc.getEventId());
    eventId2label.remove(desc.getEventId());
\}" shape=ellipse]
116 [label="10:CtIfImpl@if (desc instanceof LineTouchPointDescriptor) \{
    iter.remove();
    eventId2touchPointDescriptor.remove(desc.getEventId());
    eventId2label.remove(desc.getEventId());
\}" shape=ellipse]
117 [label="8:CtBlockImpl@\{
    TouchPointDescriptor desc = iter.next();
    if (desc instanceof LineTouchPointDescriptor) \{
        iter.remove();
        eventId2touchPointDescriptor.remove(desc.getEventId());
        eventId2label.remove(desc.getEventId());
    \}
\}" shape=ellipse]
118 [label="8:CtWhileImpl@while (iter.hasNext()) \{
    TouchPointDescriptor desc = iter.next();
    if (desc instanceof LineTouchPointDescriptor) \{
        iter.remove();
        eventId2touchPointDescriptor.remove(desc.getEventId());
        eventId2label.remove(desc.getEventId());
    \}
\} " shape=ellipse]
119 [label="6:CtBlockImpl@\{
    Iterator<TouchPointDescriptor> iter = res.iterator();
    while (iter.hasNext()) \{
        TouchPointDescriptor desc = iter.next();
        if (desc instanceof LineTouchPointDescriptor) \{
            iter.remove();
            eventId2touchPointDescriptor.remove(desc.getEventId());
            eventId2label.remove(desc.getEventId());
        \}
    \} 
\}" shape=ellipse]
120 [label="6:CtIfImpl@if (res != null) \{
    Iterator<TouchPointDescriptor> iter = res.iterator();
    while (iter.hasNext()) \{
        TouchPointDescriptor desc = iter.next();
        if (desc instanceof LineTouchPointDescriptor) \{
            iter.remove();
            eventId2touchPointDescriptor.remove(desc.getEventId());
            eventId2label.remove(desc.getEventId());
        \}
    \} 
\}" shape=ellipse]
121 [label="3:CtBlockImpl@\{
    blockedLines.add(currentLine);
    List<TouchPointDescriptor> res = currentLine2touchPoints.get(currentLine);
    if (res != null) \{
        Iterator<TouchPointDescriptor> iter = res.iterator();
        while (iter.hasNext()) \{
            TouchPointDescriptor desc = iter.next();
            if (desc instanceof LineTouchPointDescriptor) \{
                iter.remove();
                eventId2touchPointDescriptor.remove(desc.getEventId());
                eventId2label.remove(desc.getEventId());
            \}
        \} 
    \}
\}" shape=ellipse]
122 [label="3:CtIfImpl@if (alreadyRegisteredEvents.add(eventId)) \{
    blockedLines.add(currentLine);
    List<TouchPointDescriptor> res = currentLine2touchPoints.get(currentLine);
    if (res != null) \{
        Iterator<TouchPointDescriptor> iter = res.iterator();
        while (iter.hasNext()) \{
            TouchPointDescriptor desc = iter.next();
            if (desc instanceof LineTouchPointDescriptor) \{
                iter.remove();
                eventId2touchPointDescriptor.remove(desc.getEventId());
                eventId2label.remove(desc.getEventId());
            \}
        \} 
    \}
\}" shape=ellipse]
123 [label="2:CtBlockImpl@\{
    if (alreadyRegisteredEvents.add(eventId)) \{
        blockedLines.add(currentLine);
        List<TouchPointDescriptor> res = currentLine2touchPoints.get(currentLine);
        if (res != null) \{
            Iterator<TouchPointDescriptor> iter = res.iterator();
            while (iter.hasNext()) \{
                TouchPointDescriptor desc = iter.next();
                if (desc instanceof LineTouchPointDescriptor) \{
                    iter.remove();
                    eventId2touchPointDescriptor.remove(desc.getEventId());
                    eventId2label.remove(desc.getEventId());
                \}
            \} 
        \}
    \}
\}" shape=ellipse]
124 [label="2:CtMethodImpl@public void unregisterLine(int eventId, int currentLine) \{
    if (alreadyRegisteredEvents.add(eventId)) \{
        blockedLines.add(currentLine);
        List<TouchPointDescriptor> res = currentLine2touchPoints.get(currentLine);
        if (res != null) \{
            Iterator<TouchPointDescriptor> iter = res.iterator();
            while (iter.hasNext()) \{
                TouchPointDescriptor desc = iter.next();
                if (desc instanceof LineTouchPointDescriptor) \{
                    iter.remove();
                    eventId2touchPointDescriptor.remove(desc.getEventId());
                    eventId2label.remove(desc.getEventId());
                \}
            \} 
        \}
    \}
\}" shape=ellipse]
125 [label="5:Update@UPDATE" shape=ellipse]
126 [label="5:CtPackageReferenceImpl@" shape=ellipse]
127 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
128 [label="5:CtFieldReferenceImpl@line2touchPoints" shape=ellipse]
129 [label="5:CtFieldReadImpl@line2touchPoints" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
6 -> 8 [label="AST"];
6 -> 9 [label="AST"];
11 -> 12 [label="AST"];
13 -> 11 [label="AST"];
14 -> 15 [label="AST"];
16 -> 10 [label="AST"];
16 -> 13 [label="AST"];
16 -> 6 [label="AST"];
16 -> 14 [label="AST"];
16 -> 121 [label="Control Dep"];
16 -> 26 [label="Control Dep"];
16 -> 17 [label="Control Dep"];
16 -> 23 [label="Control Dep"];
16 -> 24 [label="Control Dep"];
16 -> 42 [label="Control Dep"];
16 -> 40 [label="Control Dep"];
16 -> 30 [label="Control Dep"];
16 -> 37 [label="Control Dep"];
16 -> 38 [label="Control Dep"];
16 -> 120 [label="Control Dep"];
16 -> 47 [label="Control Dep"];
16 -> 43 [label="Control Dep"];
16 -> 45 [label="Control Dep"];
16 -> 129 [label="Control Dep"];
17 -> 18 [label="AST"];
17 -> 19 [label="AST"];
21 -> 22 [label="AST"];
23 -> 21 [label="AST"];
24 -> 25 [label="AST"];
26 -> 20 [label="AST"];
26 -> 23 [label="AST"];
26 -> 17 [label="AST"];
26 -> 24 [label="AST"];
27 -> 28 [label="AST"];
27 -> 29 [label="AST"];
30 -> 31 [label="AST"];
30 -> 32 [label="AST"];
30 -> 33 [label="AST"];
35 -> 36 [label="AST"];
37 -> 35 [label="AST"];
37 -> 41 [label="Data Dep"];
37 -> 125 [label="Action"];
38 -> 39 [label="AST"];
38 -> 41 [label="Data Dep"];
40 -> 34 [label="AST"];
40 -> 37 [label="AST"];
40 -> 30 [label="AST"];
40 -> 38 [label="AST"];
41 -> 43 [label="Define-Use"];
41 -> 55 [label="Define-Use"];
42 -> 41 [label="AST"];
42 -> 27 [label="AST"];
42 -> 40 [label="AST"];
43 -> 44 [label="AST"];
45 -> 46 [label="AST"];
47 -> 43 [label="AST"];
47 -> 45 [label="AST"];
47 -> 119 [label="Control Dep"];
47 -> 59 [label="Control Dep"];
47 -> 57 [label="Control Dep"];
47 -> 51 [label="Control Dep"];
47 -> 55 [label="Control Dep"];
47 -> 118 [label="Control Dep"];
47 -> 66 [label="Control Dep"];
47 -> 60 [label="Control Dep"];
47 -> 64 [label="Control Dep"];
48 -> 49 [label="AST"];
48 -> 50 [label="AST"];
51 -> 52 [label="AST"];
51 -> 53 [label="AST"];
55 -> 56 [label="AST"];
55 -> 58 [label="Data Dep"];
57 -> 54 [label="AST"];
57 -> 55 [label="AST"];
57 -> 51 [label="AST"];
58 -> 64 [label="Define-Use"];
58 -> 73 [label="Define-Use"];
58 -> 86 [label="Define-Use"];
59 -> 58 [label="AST"];
59 -> 48 [label="AST"];
59 -> 57 [label="AST"];
60 -> 61 [label="AST"];
60 -> 62 [label="AST"];
64 -> 65 [label="AST"];
66 -> 63 [label="AST"];
66 -> 64 [label="AST"];
66 -> 60 [label="AST"];
66 -> 117 [label="Control Dep"];
66 -> 77 [label="Control Dep"];
66 -> 75 [label="Control Dep"];
66 -> 69 [label="Control Dep"];
66 -> 73 [label="Control Dep"];
66 -> 116 [label="Control Dep"];
66 -> 82 [label="Control Dep"];
66 -> 78 [label="Control Dep"];
66 -> 80 [label="Control Dep"];
67 -> 68 [label="AST"];
69 -> 70 [label="AST"];
69 -> 71 [label="AST"];
73 -> 74 [label="AST"];
73 -> 76 [label="Data Dep"];
75 -> 72 [label="AST"];
75 -> 73 [label="AST"];
75 -> 69 [label="AST"];
76 -> 78 [label="Define-Use"];
76 -> 98 [label="Define-Use"];
76 -> 111 [label="Define-Use"];
77 -> 76 [label="AST"];
77 -> 67 [label="AST"];
77 -> 75 [label="AST"];
78 -> 79 [label="AST"];
80 -> 81 [label="AST"];
82 -> 78 [label="AST"];
82 -> 80 [label="AST"];
82 -> 115 [label="Control Dep"];
82 -> 88 [label="Control Dep"];
82 -> 83 [label="Control Dep"];
82 -> 86 [label="Control Dep"];
82 -> 101 [label="Control Dep"];
82 -> 89 [label="Control Dep"];
82 -> 94 [label="Control Dep"];
82 -> 100 [label="Control Dep"];
82 -> 95 [label="Control Dep"];
82 -> 98 [label="Control Dep"];
82 -> 114 [label="Control Dep"];
82 -> 102 [label="Control Dep"];
82 -> 107 [label="Control Dep"];
82 -> 113 [label="Control Dep"];
82 -> 108 [label="Control Dep"];
82 -> 111 [label="Control Dep"];
83 -> 84 [label="AST"];
86 -> 87 [label="AST"];
88 -> 85 [label="AST"];
88 -> 86 [label="AST"];
88 -> 83 [label="AST"];
89 -> 90 [label="AST"];
92 -> 93 [label="AST"];
94 -> 92 [label="AST"];
95 -> 96 [label="AST"];
98 -> 99 [label="AST"];
100 -> 97 [label="AST"];
100 -> 98 [label="AST"];
100 -> 95 [label="AST"];
101 -> 91 [label="AST"];
101 -> 94 [label="AST"];
101 -> 89 [label="AST"];
101 -> 100 [label="AST"];
102 -> 103 [label="AST"];
105 -> 106 [label="AST"];
107 -> 105 [label="AST"];
108 -> 109 [label="AST"];
111 -> 112 [label="AST"];
113 -> 110 [label="AST"];
113 -> 111 [label="AST"];
113 -> 108 [label="AST"];
114 -> 104 [label="AST"];
114 -> 107 [label="AST"];
114 -> 102 [label="AST"];
114 -> 113 [label="AST"];
115 -> 88 [label="AST"];
115 -> 101 [label="AST"];
115 -> 114 [label="AST"];
116 -> 82 [label="AST"];
116 -> 115 [label="AST"];
117 -> 77 [label="AST"];
117 -> 116 [label="AST"];
118 -> 66 [label="AST"];
118 -> 117 [label="AST"];
119 -> 59 [label="AST"];
119 -> 118 [label="AST"];
120 -> 47 [label="AST"];
120 -> 119 [label="AST"];
121 -> 26 [label="AST"];
121 -> 42 [label="AST"];
121 -> 120 [label="AST"];
122 -> 16 [label="AST"];
122 -> 121 [label="AST"];
123 -> 122 [label="AST"];
124 -> 1 [label="AST"];
124 -> 0 [label="AST"];
124 -> 2 [label="AST"];
124 -> 4 [label="AST"];
124 -> 123 [label="AST"];
125 -> 129 [label="Action"];
127 -> 126 [label="AST"];
128 -> 127 [label="AST"];
129 -> 128 [label="AST"];
}