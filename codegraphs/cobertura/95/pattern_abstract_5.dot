digraph "Pattern" {
0 [label="##ActionPoint##
locationInParent:ACTION
nodeType:Delete
nodeType2:ActionNode
nodeType3:CtElementImpl
value:DELETE
value2:" shape=ellipse]
1 [label="locationInParent:STATEMENT
nodeType:CtForImpl
nodeType2:CtLoopImpl
nodeType3:CtStatementImpl
value:for (int i = 0; i < args.length; i++) \{
    if (args[i].equals(\"--commandsfile\")) \{
        hasCommandsFile = true;
        commandsFileName = args[++i];
    \}
\}
value2:exceed MAX_TOKEN_LENGTH:15 tokens" shape=ellipse]
2 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
3 [label="locationInParent:TYPE_MEMBER
nodeType:CtMethodImpl
nodeType2:CtExecutableImpl
nodeType3:CtExecutableImpl" shape=ellipse]
4 [label="locationInParent:METHOD_DEC_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object" shape=ellipse]
5 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:void
value2:void" shape=ellipse]
6 [label="locationInParent:PARAMETER
nodeType:CtParameterImpl
nodeType2:CtParameterImpl
nodeType3:CtParameterImpl
value:String[] args
value2:java.lang.String[] args" shape=ellipse]
7 [label="locationInParent:TYPE
nodeType:CtArrayTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:String[]
value2:java.lang.String[]" shape=ellipse]
8 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:Header.print(System.out)
value2:Header.print(java.lang.System.PrintStream)" shape=ellipse]
9 [label="locationInParent:STATEMENT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
10 [label="locationInParent:STATEMENT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
11 [label="locationInParent:STATEMENT
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
12 [label="locationInParent:FOR_INIT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:int i = 0
value2:int i = Integer" shape=ellipse]
13 [label="locationInParent:LOCAL_VAR_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object
value:i
value2:int i = Integer" shape=ellipse]
14 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:int
value2:int" shape=ellipse]
15 [label="locationInParent:DEFAULT_EXPRESSION
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:0
value2:Integer" shape=ellipse]
16 [label="locationInParent:EXPRESSION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i < args.length
value2:int < String[].int" shape=ellipse]
17 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:boolean
value2:boolean" shape=ellipse]
18 [label="locationInParent:LEFT_OPERAND
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:i
value2:int" shape=ellipse]
19 [label="locationInParent:RIGHT_OPERAND
nodeType:CtFieldReadImpl
nodeType2:CtFieldAccessImpl
nodeType3:CtVariableAccessImpl
value:args.length
value2:String[].int" shape=ellipse]
20 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:\{
    if (args[i].equals(\"--commandsfile\")) \{
        hasCommandsFile = true;
        commandsFileName = args[++i];
    \}
\}
value2:\{
    if (String[][int].equals(String)) \{
        boolean = Boolean;
        String = String[][++int];
    \}
\}" shape=ellipse]
21 [label="locationInParent:STATEMENT
nodeType:CtIfImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:if (args[i].equals(\"--commandsfile\")) \{
    hasCommandsFile = true;
    commandsFileName = args[++i];
\}
value2:if (String[][int].equals(String)) \{
    boolean = Boolean;
    String = String[][++int];
\}" shape=ellipse]
22 [label="locationInParent:CONDITION
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:args[i].equals(\"--commandsfile\")
value2:String[][int].equals(String)" shape=ellipse]
23 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl
value:equals(java.lang.Object)
value2:equals(java.lang.Object)" shape=ellipse]
24 [label="locationInParent:TARGET
nodeType:CtArrayReadImpl
nodeType2:CtArrayAccessImpl
nodeType3:CtTargetedExpressionImpl
value:args[i]
value2:String[][int]" shape=ellipse]
25 [label="locationInParent:TARGET
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:args
value2:String[]" shape=ellipse]
26 [label="locationInParent:EXPRESSION
nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:i
value2:int" shape=ellipse]
27 [label="locationInParent:ARGUMENT
nodeType:CtLiteralImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:\"--commandsfile\"
value2:String" shape=ellipse]
28 [label="locationInParent:FOR_UPDATE
nodeType:CtUnaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i++
value2:int++" shape=ellipse]
29 [label="locationInParent:TYPE
nodeType:CtTypeReferenceImpl
nodeType2:CtTypeReferenceImpl
nodeType3:CtTypeReferenceImpl
value:int
value2:int" shape=ellipse]
30 [label="locationInParent:EXPRESSION
nodeType:CtVariableWriteImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:i
value2:int" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 12 [label="AST:2"];
1 -> 16 [label="AST:2"];
1 -> 28 [label="AST:2"];
1 -> 20 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 8 [label="AST:2"];
2 -> 9 [label="AST:2"];
2 -> 10 [label="AST:2"];
2 -> 11 [label="AST:2"];
3 -> 2 [label="AST:2"];
3 -> 4 [label="AST:2"];
3 -> 5 [label="AST:2"];
3 -> 6 [label="AST:2"];
6 -> 7 [label="AST:2"];
12 -> 13 [label="AST:2"];
12 -> 14 [label="AST:2"];
12 -> 15 [label="AST:2"];
13 -> 18 [label="Define Use:2"];
16 -> 17 [label="AST:2"];
16 -> 18 [label="AST:2"];
16 -> 19 [label="AST:2"];
16 -> 20 [label="Control Dep:2"];
16 -> 21 [label="Control Dep:2"];
16 -> 22 [label="Control Dep:2"];
16 -> 23 [label="Control Dep:2"];
16 -> 24 [label="Control Dep:2"];
16 -> 25 [label="Control Dep:2"];
16 -> 26 [label="Control Dep:2"];
16 -> 27 [label="Control Dep:2"];
20 -> 21 [label="AST:2"];
21 -> 22 [label="AST:2"];
22 -> 24 [label="AST:2"];
22 -> 23 [label="AST:2"];
22 -> 27 [label="AST:2"];
24 -> 25 [label="AST:2"];
24 -> 26 [label="AST:2"];
28 -> 29 [label="AST:2"];
28 -> 30 [label="AST:2"];
30 -> 26 [label="Define Use:2"];
}