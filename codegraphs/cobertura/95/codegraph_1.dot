digraph "main#?,String[]" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@main" shape=ellipse]
2 [label="2:CtParameterImpl@String[] args" shape=ellipse]
3 [label="2:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
4 [label="3:CtExecutableReferenceImpl@print(java.io.PrintStream)" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@Header" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@PrintStream" shape=ellipse]
7 [label="3:CtVirtualElement@print" shape=ellipse]
8 [label="3:CtTypeAccessImpl@Header" shape=ellipse]
9 [label="3:CtTypeReferenceImpl@Header" shape=ellipse]
10 [label="3:CtFieldReferenceImpl@java.lang.System.out" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@System" shape=ellipse]
12 [label="3:CtTypeReferenceImpl@PrintStream" shape=ellipse]
13 [label="3:CtFieldReadImpl@System.out" shape=ellipse]
14 [label="3:CtTypeAccessImpl@System" shape=ellipse]
15 [label="3:CtInvocationImpl@Header.print(System.out)" shape=ellipse]
16 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
17 [label="4:CtLiteralImpl@false" shape=ellipse]
18 [label="4:CtTypeReferenceImpl@boolean" shape=ellipse]
19 [label="4:CtVirtualElement@hasCommandsFile" shape=ellipse]
20 [label="4:CtLocalVariableImpl@boolean hasCommandsFile = false" shape=ellipse]
21 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
22 [label="5:CtPackageReferenceImpl@java.lang" shape=ellipse]
23 [label="5:CtLiteralImpl@null" shape=ellipse]
24 [label="5:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
25 [label="5:CtVirtualElement@commandsFileName" shape=ellipse]
26 [label="5:CtLocalVariableImpl@String commandsFileName = null" shape=ellipse]
27 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
28 [label="6:CtLiteralImpl@0" shape=ellipse]
29 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
30 [label="6:CtVirtualElement@i" shape=ellipse]
31 [label="6:CtLocalVariableImpl@int i = 0" shape=ellipse]
32 [label="6:CtVariableReadImpl@i" shape=ellipse]
33 [label="6:CtLocalVariableReferenceImpl@i" shape=ellipse]
34 [label="6:CtFieldReferenceImpl@length" shape=ellipse]
35 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
36 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
37 [label="6:CtFieldReadImpl@args.length" shape=ellipse]
38 [label="6:CtVariableReadImpl@args" shape=ellipse]
39 [label="6:CtBinaryOperatorImpl@i < args.length" shape=ellipse]
40 [label="6:CtTypeReferenceImpl@boolean" shape=ellipse]
41 [label="6:CtVariableWriteImpl@i" shape=ellipse]
42 [label="6:CtLocalVariableReferenceImpl@i" shape=ellipse]
43 [label="6:CtUnaryOperatorImpl@i++" shape=ellipse]
44 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
45 [label="7:CtExecutableReferenceImpl@equals(java.lang.Object)" shape=ellipse]
46 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
47 [label="7:CtTypeReferenceImpl@boolean" shape=ellipse]
48 [label="7:CtTypeReferenceImpl@Object" shape=ellipse]
49 [label="7:CtVirtualElement@equals" shape=ellipse]
50 [label="7:CtVariableReadImpl@args" shape=ellipse]
51 [label="7:CtParameterReferenceImpl@args" shape=ellipse]
52 [label="7:CtVariableReadImpl@i" shape=ellipse]
53 [label="7:CtLocalVariableReferenceImpl@i" shape=ellipse]
54 [label="7:CtArrayReadImpl@args[i]" shape=ellipse]
55 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
56 [label="7:CtLiteralImpl@\"--commandsfile\"" shape=ellipse]
57 [label="7:CtTypeReferenceImpl@String" shape=ellipse]
58 [label="7:CtInvocationImpl@args[i].equals(\"--commandsfile\")" shape=ellipse]
59 [label="8:CtVariableWriteImpl@hasCommandsFile" shape=ellipse]
60 [label="8:CtLocalVariableReferenceImpl@hasCommandsFile" shape=ellipse]
61 [label="8:CtLiteralImpl@true" shape=ellipse]
62 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
63 [label="8:CtTypeReferenceImpl@boolean" shape=ellipse]
64 [label="8:CtAssignmentImpl@hasCommandsFile = true" shape=ellipse]
65 [label="9:CtVariableWriteImpl@commandsFileName" shape=ellipse]
66 [label="9:CtLocalVariableReferenceImpl@commandsFileName" shape=ellipse]
67 [label="9:CtVariableReadImpl@args" shape=ellipse]
68 [label="9:CtParameterReferenceImpl@args" shape=ellipse]
69 [label="9:CtVariableWriteImpl@i" shape=ellipse]
70 [label="9:CtLocalVariableReferenceImpl@i" shape=ellipse]
71 [label="9:CtUnaryOperatorImpl@++i" shape=ellipse]
72 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
73 [label="9:CtArrayReadImpl@args[++i]" shape=ellipse]
74 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
75 [label="9:CtTypeReferenceImpl@String" shape=ellipse]
76 [label="9:CtPackageReferenceImpl@java.lang" shape=ellipse]
77 [label="9:CtAssignmentImpl@commandsFileName = args[++i]" shape=ellipse]
78 [label="7:CtBlockImpl@\{
    hasCommandsFile = true;
    commandsFileName = args[++i];
\}" shape=ellipse]
79 [label="7:CtIfImpl@if (args[i].equals(\"--commandsfile\")) \{
    hasCommandsFile = true;
    commandsFileName = args[++i];
\}" shape=ellipse]
80 [label="6:CtBlockImpl@\{
    if (args[i].equals(\"--commandsfile\")) \{
        hasCommandsFile = true;
        commandsFileName = args[++i];
    \}
\}" shape=ellipse]
81 [label="6:CtForImpl@for (int i = 0; i < args.length; i++) \{
    if (args[i].equals(\"--commandsfile\")) \{
        hasCommandsFile = true;
        commandsFileName = args[++i];
    \}
\}" shape=ellipse]
82 [label="12:CtVariableReadImpl@hasCommandsFile" shape=ellipse]
83 [label="12:CtLocalVariableReferenceImpl@hasCommandsFile" shape=ellipse]
84 [label="13:CtTypeReferenceImpl@List" shape=ellipse]
85 [label="13:CtPackageReferenceImpl@" shape=ellipse]
86 [label="13:CtExecutableReferenceImpl@ArrayList()" shape=ellipse]
87 [label="13:CtTypeReferenceImpl@ArrayList" shape=ellipse]
88 [label="13:CtTypeReferenceImpl@ArrayList" shape=ellipse]
89 [label="13:CtConstructorCallImpl@new ArrayList()" shape=ellipse]
90 [label="13:CtVirtualElement@arglist" shape=ellipse]
91 [label="13:CtLocalVariableImpl@List arglist = new ArrayList()" shape=ellipse]
92 [label="14:CtTypeReferenceImpl@BufferedReader" shape=ellipse]
93 [label="14:CtPackageReferenceImpl@" shape=ellipse]
94 [label="14:CtLiteralImpl@null" shape=ellipse]
95 [label="14:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
96 [label="14:CtVirtualElement@bufreader" shape=ellipse]
97 [label="14:CtLocalVariableImpl@BufferedReader bufreader = null" shape=ellipse]
98 [label="16:CtVariableWriteImpl@bufreader" shape=ellipse]
99 [label="16:CtLocalVariableReferenceImpl@bufreader" shape=ellipse]
100 [label="16:CtExecutableReferenceImpl@BufferedReader()" shape=ellipse]
101 [label="16:CtTypeReferenceImpl@BufferedReader" shape=ellipse]
102 [label="16:CtTypeReferenceImpl@BufferedReader" shape=ellipse]
103 [label="16:CtExecutableReferenceImpl@FileReader(java.lang.String)" shape=ellipse]
104 [label="16:CtTypeReferenceImpl@FileReader" shape=ellipse]
105 [label="16:CtTypeReferenceImpl@FileReader" shape=ellipse]
106 [label="16:CtTypeReferenceImpl@String" shape=ellipse]
107 [label="16:CtVariableReadImpl@commandsFileName" shape=ellipse]
108 [label="16:CtLocalVariableReferenceImpl@commandsFileName" shape=ellipse]
109 [label="16:CtConstructorCallImpl@new FileReader(commandsFileName)" shape=ellipse]
110 [label="16:CtConstructorCallImpl@new BufferedReader(new FileReader(commandsFileName))" shape=ellipse]
111 [label="16:CtAssignmentImpl@bufreader = new BufferedReader(new FileReader(commandsFileName))" shape=ellipse]
112 [label="17:CtTypeReferenceImpl@String" shape=ellipse]
113 [label="17:CtPackageReferenceImpl@java.lang" shape=ellipse]
114 [label="17:CtVirtualElement@line" shape=ellipse]
115 [label="17:CtLocalVariableImpl@String line" shape=ellipse]
116 [label="18:CtVariableWriteImpl@line" shape=ellipse]
117 [label="18:CtLocalVariableReferenceImpl@line" shape=ellipse]
118 [label="18:CtExecutableReferenceImpl@readLine()" shape=ellipse]
119 [label="18:CtTypeReferenceImpl@BufferedReader" shape=ellipse]
120 [label="18:CtTypeReferenceImpl@String" shape=ellipse]
121 [label="18:CtVirtualElement@readLine" shape=ellipse]
122 [label="18:CtVariableReadImpl@bufreader" shape=ellipse]
123 [label="18:CtLocalVariableReferenceImpl@bufreader" shape=ellipse]
124 [label="18:CtInvocationImpl@bufreader.readLine()" shape=ellipse]
125 [label="18:CtTypeReferenceImpl@String" shape=ellipse]
126 [label="18:CtPackageReferenceImpl@java.lang" shape=ellipse]
127 [label="18:CtAssignmentImpl@(line = bufreader.readLine())" shape=ellipse]
128 [label="18:CtLiteralImpl@null" shape=ellipse]
129 [label="18:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
130 [label="18:CtBinaryOperatorImpl@(line = bufreader.readLine()) != null" shape=ellipse]
131 [label="19:CtExecutableReferenceImpl@add(java.lang.String)" shape=ellipse]
132 [label="19:CtTypeReferenceImpl@List" shape=ellipse]
133 [label="19:CtTypeReferenceImpl@String" shape=ellipse]
134 [label="19:CtVirtualElement@add" shape=ellipse]
135 [label="19:CtVariableReadImpl@arglist" shape=ellipse]
136 [label="19:CtLocalVariableReferenceImpl@arglist" shape=ellipse]
137 [label="19:CtVariableReadImpl@line" shape=ellipse]
138 [label="19:CtLocalVariableReferenceImpl@line" shape=ellipse]
139 [label="19:CtInvocationImpl@arglist.add(line)" shape=ellipse]
140 [label="18:CtBlockImpl@\{
    arglist.add(line);
\}" shape=ellipse]
141 [label="18:CtWhileImpl@while ((line = bufreader.readLine()) != null) \{
    arglist.add(line);
\} " shape=ellipse]
142 [label="15:CtBlockImpl@\{
    bufreader = new BufferedReader(new FileReader(commandsFileName));
    String line;
    while ((line = bufreader.readLine()) != null) \{
        arglist.add(line);
    \} 
\}" shape=ellipse]
143 [label="21:CtVirtualElement@e" shape=ellipse]
144 [label="21:CtTypeReferenceImpl@IOException" shape=ellipse]
145 [label="21:CtPackageReferenceImpl@" shape=ellipse]
146 [label="21:CtCatchVariableImpl@IOException e" shape=ellipse]
147 [label="22:CtExecutableReferenceImpl@fatal(java.lang.String)" shape=ellipse]
148 [label="22:CtTypeReferenceImpl@logger" shape=ellipse]
149 [label="22:CtTypeReferenceImpl@String" shape=ellipse]
150 [label="22:CtVirtualElement@fatal" shape=ellipse]
151 [label="22:CtFieldReferenceImpl@logger" shape=ellipse]
152 [label="22:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
153 [label="22:CtFieldReadImpl@logger" shape=ellipse]
154 [label="22:CtLiteralImpl@\"Unable to read temporary commands file \"" shape=ellipse]
155 [label="22:CtTypeReferenceImpl@String" shape=ellipse]
156 [label="22:CtVariableReadImpl@commandsFileName" shape=ellipse]
157 [label="22:CtLocalVariableReferenceImpl@commandsFileName" shape=ellipse]
158 [label="22:CtBinaryOperatorImpl@(\"Unable to read temporary commands file \" + commandsFileName)" shape=ellipse]
159 [label="22:CtTypeReferenceImpl@String" shape=ellipse]
160 [label="22:CtLiteralImpl@\".\"" shape=ellipse]
161 [label="22:CtTypeReferenceImpl@String" shape=ellipse]
162 [label="22:CtBinaryOperatorImpl@(\"Unable to read temporary commands file \" + commandsFileName) + \".\"" shape=ellipse]
163 [label="22:CtTypeReferenceImpl@String" shape=ellipse]
164 [label="22:CtInvocationImpl@logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\")" shape=ellipse]
165 [label="23:CtExecutableReferenceImpl@info(IOException)" shape=ellipse]
166 [label="23:CtTypeReferenceImpl@logger" shape=ellipse]
167 [label="23:CtTypeReferenceImpl@IOException" shape=ellipse]
168 [label="23:CtVirtualElement@info" shape=ellipse]
169 [label="23:CtFieldReferenceImpl@logger" shape=ellipse]
170 [label="23:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
171 [label="23:CtFieldReadImpl@logger" shape=ellipse]
172 [label="23:CtVariableReadImpl@e" shape=ellipse]
173 [label="23:CtCatchVariableReferenceImpl@e" shape=ellipse]
174 [label="23:CtInvocationImpl@logger.info(e)" shape=ellipse]
175 [label="21:CtBlockImpl@\{
    logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
    logger.info(e);
\}" shape=ellipse]
176 [label="21:CtCatchImpl@ catch (IOException e) \{
    logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
    logger.info(e);
\}" shape=ellipse]
177 [label="25:CtVariableReadImpl@bufreader" shape=ellipse]
178 [label="25:CtLocalVariableReferenceImpl@bufreader" shape=ellipse]
179 [label="25:CtLiteralImpl@null" shape=ellipse]
180 [label="25:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
181 [label="25:CtBinaryOperatorImpl@bufreader != null" shape=ellipse]
182 [label="27:CtExecutableReferenceImpl@close()" shape=ellipse]
183 [label="27:CtTypeReferenceImpl@BufferedReader" shape=ellipse]
184 [label="27:CtVirtualElement@close" shape=ellipse]
185 [label="27:CtVariableReadImpl@bufreader" shape=ellipse]
186 [label="27:CtLocalVariableReferenceImpl@bufreader" shape=ellipse]
187 [label="27:CtInvocationImpl@bufreader.close()" shape=ellipse]
188 [label="26:CtBlockImpl@\{
    bufreader.close();
\}" shape=ellipse]
189 [label="28:CtVirtualElement@e" shape=ellipse]
190 [label="28:CtTypeReferenceImpl@IOException" shape=ellipse]
191 [label="28:CtPackageReferenceImpl@" shape=ellipse]
192 [label="28:CtCatchVariableImpl@IOException e" shape=ellipse]
193 [label="28:CtBlockImpl@\{
\}" shape=ellipse]
194 [label="28:CtCatchImpl@ catch (IOException e) \{
\}" shape=ellipse]
195 [label="26:CtTryImpl@try \{
    bufreader.close();
\} catch (IOException e) \{
\}" shape=ellipse]
196 [label="25:CtBlockImpl@\{
    try \{
        bufreader.close();
    \} catch (IOException e) \{
    \}
\}" shape=ellipse]
197 [label="25:CtIfImpl@if (bufreader != null) \{
    try \{
        bufreader.close();
    \} catch (IOException e) \{
    \}
\}" shape=ellipse]
198 [label="24:CtBlockImpl@\{
    if (bufreader != null) \{
        try \{
            bufreader.close();
        \} catch (IOException e) \{
        \}
    \}
\}" shape=ellipse]
199 [label="15:CtTryImpl@try \{
    bufreader = new BufferedReader(new FileReader(commandsFileName));
    String line;
    while ((line = bufreader.readLine()) != null) \{
        arglist.add(line);
    \} 
\} catch (IOException e) \{
    logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
    logger.info(e);
\} finally \{
    if (bufreader != null) \{
        try \{
            bufreader.close();
        \} catch (IOException e) \{
        \}
    \}
\}" shape=ellipse]
200 [label="32:CtVariableWriteImpl@args" shape=ellipse]
201 [label="32:CtParameterReferenceImpl@args" shape=ellipse]
202 [label="32:CtExecutableReferenceImpl@toArray(java.lang.String[])" shape=ellipse]
203 [label="32:CtTypeReferenceImpl@List" shape=ellipse]
204 [label="32:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
205 [label="32:CtVirtualElement@toArray" shape=ellipse]
206 [label="32:CtVariableReadImpl@arglist" shape=ellipse]
207 [label="32:CtLocalVariableReferenceImpl@arglist" shape=ellipse]
208 [label="32:CtNewArrayImpl@new String[arglist.size()]" shape=ellipse]
209 [label="32:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
210 [label="32:CtInvocationImpl@arglist.size()" shape=ellipse]
211 [label="32:CtInvocationImpl@((String[]) (arglist.toArray(new String[arglist.size()])))" shape=ellipse]
212 [label="32:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
213 [label="32:CtVirtualElement@String[]" shape=ellipse]
214 [label="32:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
215 [label="32:CtTypeReferenceImpl@String" shape=ellipse]
216 [label="32:CtAssignmentImpl@args = ((String[]) (arglist.toArray(new String[arglist.size()])))" shape=ellipse]
217 [label="12:CtBlockImpl@\{
    List arglist = new ArrayList();
    BufferedReader bufreader = null;
    try \{
        bufreader = new BufferedReader(new FileReader(commandsFileName));
        String line;
        while ((line = bufreader.readLine()) != null) \{
            arglist.add(line);
        \} 
    \} catch (IOException e) \{
        logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
        logger.info(e);
    \} finally \{
        if (bufreader != null) \{
            try \{
                bufreader.close();
            \} catch (IOException e) \{
            \}
        \}
    \}
    args = ((String[]) (arglist.toArray(new String[arglist.size()])));
\}" shape=ellipse]
218 [label="12:CtIfImpl@if (hasCommandsFile) \{
    List arglist = new ArrayList();
    BufferedReader bufreader = null;
    try \{
        bufreader = new BufferedReader(new FileReader(commandsFileName));
        String line;
        while ((line = bufreader.readLine()) != null) \{
            arglist.add(line);
        \} 
    \} catch (IOException e) \{
        logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
        logger.info(e);
    \} finally \{
        if (bufreader != null) \{
            try \{
                bufreader.close();
            \} catch (IOException e) \{
            \}
        \}
    \}
    args = ((String[]) (arglist.toArray(new String[arglist.size()])));
\}" shape=ellipse]
219 [label="34:CtExecutableReferenceImpl@Main(java.lang.String[])" shape=ellipse]
220 [label="34:CtTypeReferenceImpl@Main" shape=ellipse]
221 [label="34:CtTypeReferenceImpl@Main" shape=ellipse]
222 [label="34:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
223 [label="34:CtVariableReadImpl@args" shape=ellipse]
224 [label="34:CtParameterReferenceImpl@args" shape=ellipse]
225 [label="34:CtConstructorCallImpl@new Main(args)" shape=ellipse]
226 [label="2:CtBlockImpl@\{
    Header.print(System.out);
    boolean hasCommandsFile = false;
    String commandsFileName = null;
    for (int i = 0; i < args.length; i++) \{
        if (args[i].equals(\"--commandsfile\")) \{
            hasCommandsFile = true;
            commandsFileName = args[++i];
        \}
    \}
    if (hasCommandsFile) \{
        List arglist = new ArrayList();
        BufferedReader bufreader = null;
        try \{
            bufreader = new BufferedReader(new FileReader(commandsFileName));
            String line;
            while ((line = bufreader.readLine()) != null) \{
                arglist.add(line);
            \} 
        \} catch (IOException e) \{
            logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
            logger.info(e);
        \} finally \{
            if (bufreader != null) \{
                try \{
                    bufreader.close();
                \} catch (IOException e) \{
                \}
            \}
        \}
        args = ((String[]) (arglist.toArray(new String[arglist.size()])));
    \}
    new Main(args);
\}" shape=ellipse]
227 [label="2:CtMethodImpl@public static void main(String[] args) \{
    Header.print(System.out);
    boolean hasCommandsFile = false;
    String commandsFileName = null;
    for (int i = 0; i < args.length; i++) \{
        if (args[i].equals(\"--commandsfile\")) \{
            hasCommandsFile = true;
            commandsFileName = args[++i];
        \}
    \}
    if (hasCommandsFile) \{
        List arglist = new ArrayList();
        BufferedReader bufreader = null;
        try \{
            bufreader = new BufferedReader(new FileReader(commandsFileName));
            String line;
            while ((line = bufreader.readLine()) != null) \{
                arglist.add(line);
            \} 
        \} catch (IOException e) \{
            logger.fatal((\"Unable to read temporary commands file \" + commandsFileName) + \".\");
            logger.info(e);
        \} finally \{
            if (bufreader != null) \{
                try \{
                    bufreader.close();
                \} catch (IOException e) \{
                \}
            \}
        \}
        args = ((String[]) (arglist.toArray(new String[arglist.size()])));
    \}
    new Main(args);
\}" shape=ellipse]
228 [label="32:Update@UPDATE" shape=ellipse]
229 [label="4:CtPackageReferenceImpl@" shape=ellipse]
230 [label="4:CtTypeReferenceImpl@CommandLineBuilder" shape=ellipse]
231 [label="4:CtTypeAccessImpl@CommandLineBuilder" shape=ellipse]
232 [label="4:CtPackageReferenceImpl@" shape=ellipse]
233 [label="4:CtTypeReferenceImpl@CommandLineBuilder" shape=ellipse]
234 [label="4:CtPackageReferenceImpl@java.lang" shape=ellipse]
235 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
236 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
237 [label="4:CtPackageReferenceImpl@java.lang" shape=ellipse]
238 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
239 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
240 [label="4:CtExecutableReferenceImpl@preprocessCommandLineArguments(java.lang.String[])" shape=ellipse]
241 [label="4:CtPackageReferenceImpl@java.lang" shape=ellipse]
242 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
243 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
244 [label="4:CtParameterReferenceImpl@args" shape=ellipse]
245 [label="4:CtVariableReadImpl@args" shape=ellipse]
246 [label="4:CtInvocationImpl@CommandLineBuilder.preprocessCommandLineArguments(args)" shape=ellipse]
247 [label="4:CtVirtualElement@preprocessCommandLineArguments" shape=ellipse]
248 [label="32:Update@UPDATE" shape=ellipse]
249 [label="4:CtPackageReferenceImpl@java.lang" shape=ellipse]
250 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
251 [label="4:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
252 [label="4:CtParameterReferenceImpl@args" shape=ellipse]
253 [label="4:CtVariableReadImpl@args" shape=ellipse]
254 [label="32:Delete@DELETE" shape=ellipse]
255 [label="4:Delete@DELETE" shape=ellipse]
256 [label="5:Delete@DELETE" shape=ellipse]
257 [label="6:Delete@DELETE" shape=ellipse]
258 [label="12:Delete@DELETE" shape=ellipse]
259 [label="32:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
4 -> 6 [label="AST"];
8 -> 9 [label="AST"];
10 -> 11 [label="AST"];
10 -> 12 [label="AST"];
13 -> 14 [label="AST"];
13 -> 10 [label="AST"];
15 -> 7 [label="AST"];
15 -> 8 [label="AST"];
15 -> 4 [label="AST"];
15 -> 13 [label="AST"];
17 -> 18 [label="AST"];
19 -> 82 [label="Define-Use"];
20 -> 19 [label="AST"];
20 -> 16 [label="AST"];
20 -> 17 [label="AST"];
20 -> 255 [label="Action"];
21 -> 22 [label="AST"];
23 -> 24 [label="AST"];
25 -> 107 [label="Define-Use"];
25 -> 156 [label="Define-Use"];
26 -> 25 [label="AST"];
26 -> 21 [label="AST"];
26 -> 23 [label="AST"];
26 -> 256 [label="Action"];
28 -> 29 [label="AST"];
30 -> 32 [label="Define-Use"];
31 -> 30 [label="AST"];
31 -> 27 [label="AST"];
31 -> 28 [label="AST"];
32 -> 33 [label="AST"];
34 -> 35 [label="AST"];
34 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 34 [label="AST"];
39 -> 40 [label="AST"];
39 -> 32 [label="AST"];
39 -> 37 [label="AST"];
39 -> 80 [label="Control Dep"];
39 -> 79 [label="Control Dep"];
39 -> 58 [label="Control Dep"];
39 -> 45 [label="Control Dep"];
39 -> 54 [label="Control Dep"];
39 -> 50 [label="Control Dep"];
39 -> 52 [label="Control Dep"];
39 -> 56 [label="Control Dep"];
41 -> 42 [label="AST"];
41 -> 52 [label="Define-Use"];
43 -> 44 [label="AST"];
43 -> 41 [label="AST"];
45 -> 46 [label="AST"];
45 -> 47 [label="AST"];
45 -> 48 [label="AST"];
50 -> 51 [label="AST"];
52 -> 53 [label="AST"];
54 -> 55 [label="AST"];
54 -> 50 [label="AST"];
54 -> 52 [label="AST"];
56 -> 57 [label="AST"];
58 -> 49 [label="AST"];
58 -> 54 [label="AST"];
58 -> 45 [label="AST"];
58 -> 56 [label="AST"];
58 -> 78 [label="Control Dep"];
58 -> 64 [label="Control Dep"];
58 -> 59 [label="Control Dep"];
58 -> 61 [label="Control Dep"];
58 -> 77 [label="Control Dep"];
58 -> 65 [label="Control Dep"];
58 -> 73 [label="Control Dep"];
58 -> 67 [label="Control Dep"];
58 -> 71 [label="Control Dep"];
58 -> 69 [label="Control Dep"];
59 -> 60 [label="AST"];
59 -> 82 [label="Define-Use"];
60 -> 82 [label="Define-Use"];
61 -> 62 [label="AST"];
64 -> 63 [label="AST"];
64 -> 59 [label="AST"];
64 -> 61 [label="AST"];
65 -> 66 [label="AST"];
65 -> 107 [label="Define-Use"];
65 -> 156 [label="Define-Use"];
66 -> 107 [label="Define-Use"];
66 -> 156 [label="Define-Use"];
67 -> 68 [label="AST"];
67 -> 65 [label="Data Dep"];
69 -> 70 [label="AST"];
71 -> 72 [label="AST"];
71 -> 69 [label="AST"];
73 -> 74 [label="AST"];
73 -> 67 [label="AST"];
73 -> 71 [label="AST"];
73 -> 65 [label="Data Dep"];
75 -> 76 [label="AST"];
77 -> 75 [label="AST"];
77 -> 65 [label="AST"];
77 -> 73 [label="AST"];
78 -> 64 [label="AST"];
78 -> 77 [label="AST"];
79 -> 58 [label="AST"];
79 -> 78 [label="AST"];
80 -> 79 [label="AST"];
81 -> 31 [label="AST"];
81 -> 39 [label="AST"];
81 -> 43 [label="AST"];
81 -> 80 [label="AST"];
81 -> 257 [label="Action"];
82 -> 83 [label="AST"];
82 -> 217 [label="Control Dep"];
82 -> 91 [label="Control Dep"];
82 -> 89 [label="Control Dep"];
82 -> 86 [label="Control Dep"];
82 -> 97 [label="Control Dep"];
82 -> 94 [label="Control Dep"];
82 -> 199 [label="Control Dep"];
82 -> 142 [label="Control Dep"];
82 -> 111 [label="Control Dep"];
82 -> 98 [label="Control Dep"];
82 -> 110 [label="Control Dep"];
82 -> 100 [label="Control Dep"];
82 -> 109 [label="Control Dep"];
82 -> 103 [label="Control Dep"];
82 -> 107 [label="Control Dep"];
82 -> 115 [label="Control Dep"];
82 -> 141 [label="Control Dep"];
82 -> 130 [label="Control Dep"];
82 -> 127 [label="Control Dep"];
82 -> 116 [label="Control Dep"];
82 -> 124 [label="Control Dep"];
82 -> 118 [label="Control Dep"];
82 -> 122 [label="Control Dep"];
82 -> 128 [label="Control Dep"];
82 -> 176 [label="Control Dep"];
82 -> 146 [label="Control Dep"];
82 -> 198 [label="Control Dep"];
82 -> 197 [label="Control Dep"];
82 -> 181 [label="Control Dep"];
82 -> 177 [label="Control Dep"];
82 -> 179 [label="Control Dep"];
82 -> 216 [label="Control Dep"];
82 -> 200 [label="Control Dep"];
82 -> 211 [label="Control Dep"];
82 -> 202 [label="Control Dep"];
82 -> 206 [label="Control Dep"];
82 -> 208 [label="Control Dep"];
82 -> 214 [label="Control Dep"];
84 -> 85 [label="AST"];
86 -> 87 [label="AST"];
86 -> 88 [label="AST"];
89 -> 86 [label="AST"];
90 -> 135 [label="Define-Use"];
90 -> 206 [label="Define-Use"];
91 -> 90 [label="AST"];
91 -> 84 [label="AST"];
91 -> 89 [label="AST"];
92 -> 93 [label="AST"];
94 -> 95 [label="AST"];
97 -> 96 [label="AST"];
97 -> 92 [label="AST"];
97 -> 94 [label="AST"];
98 -> 99 [label="AST"];
98 -> 122 [label="Define-Use"];
98 -> 177 [label="Define-Use"];
98 -> 185 [label="Define-Use"];
100 -> 101 [label="AST"];
100 -> 102 [label="AST"];
103 -> 104 [label="AST"];
103 -> 105 [label="AST"];
103 -> 106 [label="AST"];
107 -> 108 [label="AST"];
107 -> 98 [label="Data Dep"];
109 -> 103 [label="AST"];
109 -> 107 [label="AST"];
110 -> 100 [label="AST"];
110 -> 109 [label="AST"];
111 -> 98 [label="AST"];
111 -> 110 [label="AST"];
112 -> 113 [label="AST"];
115 -> 114 [label="AST"];
115 -> 112 [label="AST"];
116 -> 117 [label="AST"];
116 -> 137 [label="Define-Use"];
118 -> 119 [label="AST"];
118 -> 120 [label="AST"];
122 -> 123 [label="AST"];
122 -> 116 [label="Data Dep"];
124 -> 121 [label="AST"];
124 -> 122 [label="AST"];
124 -> 118 [label="AST"];
125 -> 126 [label="AST"];
127 -> 125 [label="AST"];
127 -> 116 [label="AST"];
127 -> 124 [label="AST"];
128 -> 129 [label="AST"];
130 -> 127 [label="AST"];
130 -> 128 [label="AST"];
130 -> 140 [label="Control Dep"];
130 -> 139 [label="Control Dep"];
130 -> 131 [label="Control Dep"];
130 -> 135 [label="Control Dep"];
130 -> 137 [label="Control Dep"];
131 -> 132 [label="AST"];
131 -> 133 [label="AST"];
135 -> 136 [label="AST"];
137 -> 138 [label="AST"];
139 -> 134 [label="AST"];
139 -> 135 [label="AST"];
139 -> 131 [label="AST"];
139 -> 137 [label="AST"];
140 -> 139 [label="AST"];
141 -> 130 [label="AST"];
141 -> 140 [label="AST"];
142 -> 111 [label="AST"];
142 -> 115 [label="AST"];
142 -> 141 [label="AST"];
143 -> 172 [label="Define-Use"];
144 -> 145 [label="AST"];
146 -> 143 [label="AST"];
146 -> 144 [label="AST"];
146 -> 175 [label="Control Dep"];
146 -> 164 [label="Control Dep"];
146 -> 147 [label="Control Dep"];
146 -> 153 [label="Control Dep"];
146 -> 162 [label="Control Dep"];
146 -> 158 [label="Control Dep"];
146 -> 154 [label="Control Dep"];
146 -> 156 [label="Control Dep"];
146 -> 160 [label="Control Dep"];
146 -> 174 [label="Control Dep"];
146 -> 165 [label="Control Dep"];
146 -> 171 [label="Control Dep"];
146 -> 172 [label="Control Dep"];
147 -> 148 [label="AST"];
147 -> 149 [label="AST"];
151 -> 152 [label="AST"];
153 -> 151 [label="AST"];
154 -> 155 [label="AST"];
156 -> 157 [label="AST"];
158 -> 159 [label="AST"];
158 -> 154 [label="AST"];
158 -> 156 [label="AST"];
160 -> 161 [label="AST"];
162 -> 163 [label="AST"];
162 -> 158 [label="AST"];
162 -> 160 [label="AST"];
164 -> 150 [label="AST"];
164 -> 153 [label="AST"];
164 -> 147 [label="AST"];
164 -> 162 [label="AST"];
165 -> 166 [label="AST"];
165 -> 167 [label="AST"];
169 -> 170 [label="AST"];
171 -> 169 [label="AST"];
172 -> 173 [label="AST"];
174 -> 168 [label="AST"];
174 -> 171 [label="AST"];
174 -> 165 [label="AST"];
174 -> 172 [label="AST"];
175 -> 164 [label="AST"];
175 -> 174 [label="AST"];
176 -> 146 [label="AST"];
176 -> 175 [label="AST"];
177 -> 178 [label="AST"];
179 -> 180 [label="AST"];
181 -> 177 [label="AST"];
181 -> 179 [label="AST"];
181 -> 196 [label="Control Dep"];
181 -> 195 [label="Control Dep"];
181 -> 188 [label="Control Dep"];
181 -> 187 [label="Control Dep"];
181 -> 182 [label="Control Dep"];
181 -> 185 [label="Control Dep"];
181 -> 194 [label="Control Dep"];
181 -> 192 [label="Control Dep"];
182 -> 183 [label="AST"];
185 -> 186 [label="AST"];
187 -> 184 [label="AST"];
187 -> 185 [label="AST"];
187 -> 182 [label="AST"];
188 -> 187 [label="AST"];
190 -> 191 [label="AST"];
192 -> 189 [label="AST"];
192 -> 190 [label="AST"];
192 -> 193 [label="Control Dep"];
194 -> 192 [label="AST"];
194 -> 193 [label="AST"];
195 -> 188 [label="AST"];
195 -> 194 [label="AST"];
196 -> 195 [label="AST"];
197 -> 181 [label="AST"];
197 -> 196 [label="AST"];
198 -> 197 [label="AST"];
199 -> 142 [label="AST"];
199 -> 176 [label="AST"];
199 -> 198 [label="AST"];
200 -> 201 [label="AST"];
200 -> 223 [label="Define-Use"];
201 -> 223 [label="Define-Use"];
201 -> 253 [label="Define-Use"];
201 -> 253 [label="Define-Use"];
201 -> 253 [label="Data Dep"];
201 -> 253 [label="Data Dep"];
201 -> 253 [label="Control Dep"];
201 -> 253 [label="Control Dep"];
202 -> 203 [label="AST"];
202 -> 204 [label="AST"];
206 -> 207 [label="AST"];
206 -> 200 [label="Data Dep"];
208 -> 209 [label="AST"];
208 -> 210 [label="AST"];
210 -> 228 [label="Action"];
211 -> 205 [label="AST"];
211 -> 212 [label="AST"];
211 -> 206 [label="AST"];
211 -> 202 [label="AST"];
211 -> 208 [label="AST"];
211 -> 254 [label="Action"];
214 -> 213 [label="AST"];
214 -> 215 [label="AST"];
216 -> 214 [label="AST"];
216 -> 200 [label="AST"];
216 -> 211 [label="AST"];
216 -> 259 [label="Action"];
217 -> 91 [label="AST"];
217 -> 97 [label="AST"];
217 -> 199 [label="AST"];
217 -> 216 [label="AST"];
218 -> 82 [label="AST"];
218 -> 217 [label="AST"];
218 -> 258 [label="Action"];
219 -> 220 [label="AST"];
219 -> 221 [label="AST"];
219 -> 222 [label="AST"];
223 -> 224 [label="AST"];
225 -> 219 [label="AST"];
225 -> 223 [label="AST"];
226 -> 15 [label="AST"];
226 -> 20 [label="AST"];
226 -> 26 [label="AST"];
226 -> 81 [label="AST"];
226 -> 218 [label="AST"];
226 -> 225 [label="AST"];
227 -> 1 [label="AST"];
227 -> 0 [label="AST"];
227 -> 2 [label="AST"];
227 -> 226 [label="AST"];
228 -> 246 [label="Action"];
230 -> 229 [label="AST"];
231 -> 230 [label="AST"];
233 -> 232 [label="AST"];
235 -> 234 [label="AST"];
236 -> 235 [label="AST"];
238 -> 237 [label="AST"];
239 -> 238 [label="AST"];
240 -> 233 [label="AST"];
240 -> 236 [label="AST"];
240 -> 239 [label="AST"];
250 -> 249 [label="AST"];
250 -> 249 [label="AST"];
251 -> 250 [label="AST"];
251 -> 250 [label="AST"];
252 -> 251 [label="AST"];
252 -> 251 [label="AST"];
253 -> 252 [label="AST"];
253 -> 252 [label="AST"];
253 -> 200 [label="Data Dep"];
253 -> 200 [label="Control Dep"];
246 -> 247 [label="AST"];
246 -> 231 [label="AST"];
246 -> 240 [label="AST"];
246 -> 253 [label="AST"];
246 -> 253 [label="AST"];
248 -> 253 [label="Action"];
248 -> 253 [label="Action"];
250 -> 249 [label="AST"];
250 -> 249 [label="AST"];
251 -> 250 [label="AST"];
251 -> 250 [label="AST"];
252 -> 251 [label="AST"];
252 -> 251 [label="AST"];
253 -> 252 [label="AST"];
253 -> 252 [label="AST"];
253 -> 200 [label="Data Dep"];
253 -> 200 [label="Control Dep"];
259 -> 227 [label="Action"];
}