digraph "visitMethod#?,int,String,String,String,String[]" {
0 [label="2:CtTypeReferenceImpl@MethodVisitor" shape=ellipse]
1 [label="2:CtPackageReferenceImpl@" shape=ellipse]
2 [label="2:CtVirtualElement@visitMethod" shape=ellipse]
3 [label="3:CtParameterImpl@final int access" shape=ellipse]
4 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
5 [label="4:CtParameterImpl@final String name" shape=ellipse]
6 [label="4:CtTypeReferenceImpl@String" shape=ellipse]
7 [label="5:CtParameterImpl@final String desc" shape=ellipse]
8 [label="5:CtTypeReferenceImpl@String" shape=ellipse]
9 [label="6:CtParameterImpl@final String signature" shape=ellipse]
10 [label="6:CtTypeReferenceImpl@String" shape=ellipse]
11 [label="7:CtParameterImpl@final String[] exceptions" shape=ellipse]
12 [label="7:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
13 [label="8:CtTypeReferenceImpl@MethodVisitor" shape=ellipse]
14 [label="8:CtPackageReferenceImpl@" shape=ellipse]
15 [label="8:CtExecutableReferenceImpl@visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])" shape=ellipse]
16 [label="8:CtTypeReferenceImpl@cv" shape=ellipse]
17 [label="8:CtTypeReferenceImpl@MethodVisitor" shape=ellipse]
18 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
19 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
20 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
21 [label="8:CtTypeReferenceImpl@String" shape=ellipse]
22 [label="8:CtArrayTypeReferenceImpl@String[]" shape=ellipse]
23 [label="8:CtVirtualElement@visitMethod" shape=ellipse]
24 [label="8:CtFieldReferenceImpl@cv" shape=ellipse]
25 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
26 [label="8:CtFieldReadImpl@cv" shape=ellipse]
27 [label="8:CtVariableReadImpl@access" shape=ellipse]
28 [label="8:CtParameterReferenceImpl@access" shape=ellipse]
29 [label="8:CtVariableReadImpl@name" shape=ellipse]
30 [label="8:CtParameterReferenceImpl@name" shape=ellipse]
31 [label="8:CtVariableReadImpl@desc" shape=ellipse]
32 [label="8:CtParameterReferenceImpl@desc" shape=ellipse]
33 [label="8:CtVariableReadImpl@signature" shape=ellipse]
34 [label="8:CtParameterReferenceImpl@signature" shape=ellipse]
35 [label="8:CtVariableReadImpl@exceptions" shape=ellipse]
36 [label="8:CtParameterReferenceImpl@exceptions" shape=ellipse]
37 [label="8:CtInvocationImpl@cv.visitMethod(access, name, desc, signature, exceptions)" shape=ellipse]
38 [label="8:CtVirtualElement@mv" shape=ellipse]
39 [label="8:CtLocalVariableImpl@MethodVisitor mv = cv.visitMethod(access, name, desc, signature, exceptions)" shape=ellipse]
40 [label="9:CtFieldReferenceImpl@instrument" shape=ellipse]
41 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
42 [label="9:CtFieldReadImpl@instrument" shape=ellipse]
43 [label="9:CtUnaryOperatorImpl@!instrument" shape=ellipse]
44 [label="10:CtVariableReadImpl@mv" shape=ellipse]
45 [label="10:CtLocalVariableReferenceImpl@mv" shape=ellipse]
46 [label="10:CtReturnImpl@return mv" shape=ellipse]
47 [label="9:CtBlockImpl@\{
    return mv;
\}" shape=ellipse]
48 [label="9:CtIfImpl@if (!instrument) \{
    return mv;
\}" shape=ellipse]
49 [label="12:CtVariableReadImpl@mv" shape=ellipse]
50 [label="12:CtLocalVariableReferenceImpl@mv" shape=ellipse]
51 [label="12:CtLiteralImpl@null" shape=ellipse]
52 [label="12:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
53 [label="12:CtBinaryOperatorImpl@mv == null" shape=ellipse]
54 [label="12:CtLiteralImpl@null" shape=ellipse]
55 [label="12:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
56 [label="12:CtExecutableReferenceImpl@MethodInstrumenter()" shape=ellipse]
57 [label="12:CtTypeReferenceImpl@MethodInstrumenter" shape=ellipse]
58 [label="12:CtTypeReferenceImpl@MethodInstrumenter" shape=ellipse]
59 [label="12:CtVariableReadImpl@mv" shape=ellipse]
60 [label="12:CtLocalVariableReferenceImpl@mv" shape=ellipse]
61 [label="12:CtFieldReferenceImpl@coverageData" shape=ellipse]
62 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
63 [label="12:CtFieldReadImpl@coverageData" shape=ellipse]
64 [label="12:CtFieldReferenceImpl@myName" shape=ellipse]
65 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
66 [label="12:CtFieldReadImpl@this.myName" shape=ellipse]
67 [label="12:CtThisAccessImpl@this" shape=ellipse]
68 [label="12:CtVariableReadImpl@name" shape=ellipse]
69 [label="12:CtParameterReferenceImpl@name" shape=ellipse]
70 [label="12:CtVariableReadImpl@desc" shape=ellipse]
71 [label="12:CtParameterReferenceImpl@desc" shape=ellipse]
72 [label="12:CtConstructorCallImpl@new MethodInstrumenter(mv, coverageData, this.myName, name, desc)" shape=ellipse]
73 [label="12:CtConditionalImpl@mv == null ? null : new MethodInstrumenter(mv, coverageData, this.myName, name, desc)" shape=ellipse]
74 [label="12:CtReturnImpl@return mv == null ? null : new MethodInstrumenter(mv, coverageData, this.myName, name, desc)" shape=ellipse]
75 [label="7:CtBlockImpl@\{
    MethodVisitor mv = cv.visitMethod(access, name, desc, signature, exceptions);
    if (!instrument) \{
        return mv;
    \}
    return mv == null ? null : new MethodInstrumenter(mv, coverageData, this.myName, name, desc);
\}" shape=ellipse]
76 [label="2:CtMethodImpl@public MethodVisitor visitMethod(final int access, final String name, final String desc, final String signature, final String[] exceptions) \{
    MethodVisitor mv = cv.visitMethod(access, name, desc, signature, exceptions);
    if (!instrument) \{
        return mv;
    \}
    return mv == null ? null : new MethodInstrumenter(mv, coverageData, this.myName, name, desc);
\}" shape=ellipse]
77 [label="14:Insert@INSERT" shape=ellipse]
78 [label="14:CtPackageReferenceImpl@" shape=ellipse]
79 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
80 [label="14:CtFieldReferenceImpl@ignoreRegexp" shape=ellipse]
81 [label="14:CtFieldReadImpl@ignoreRegexp" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
9 -> 10 [label="AST"];
11 -> 12 [label="AST"];
13 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 17 [label="AST"];
15 -> 18 [label="AST"];
15 -> 19 [label="AST"];
15 -> 20 [label="AST"];
15 -> 21 [label="AST"];
15 -> 22 [label="AST"];
24 -> 25 [label="AST"];
26 -> 24 [label="AST"];
26 -> 38 [label="Data Dep"];
27 -> 28 [label="AST"];
27 -> 38 [label="Data Dep"];
29 -> 30 [label="AST"];
29 -> 38 [label="Data Dep"];
31 -> 32 [label="AST"];
31 -> 38 [label="Data Dep"];
33 -> 34 [label="AST"];
33 -> 38 [label="Data Dep"];
35 -> 36 [label="AST"];
35 -> 38 [label="Data Dep"];
37 -> 23 [label="AST"];
37 -> 26 [label="AST"];
37 -> 15 [label="AST"];
37 -> 27 [label="AST"];
37 -> 29 [label="AST"];
37 -> 31 [label="AST"];
37 -> 33 [label="AST"];
37 -> 35 [label="AST"];
38 -> 44 [label="Define-Use"];
38 -> 49 [label="Define-Use"];
38 -> 59 [label="Define-Use"];
39 -> 38 [label="AST"];
39 -> 13 [label="AST"];
39 -> 37 [label="AST"];
40 -> 41 [label="AST"];
42 -> 40 [label="AST"];
43 -> 42 [label="AST"];
43 -> 47 [label="Control Dep"];
43 -> 46 [label="Control Dep"];
43 -> 44 [label="Control Dep"];
44 -> 45 [label="AST"];
46 -> 44 [label="AST"];
47 -> 46 [label="AST"];
48 -> 43 [label="AST"];
48 -> 47 [label="AST"];
49 -> 50 [label="AST"];
51 -> 52 [label="AST"];
53 -> 49 [label="AST"];
53 -> 51 [label="AST"];
53 -> 54 [label="Control Dep"];
53 -> 72 [label="Control Dep"];
53 -> 56 [label="Control Dep"];
53 -> 59 [label="Control Dep"];
53 -> 63 [label="Control Dep"];
53 -> 66 [label="Control Dep"];
53 -> 68 [label="Control Dep"];
53 -> 70 [label="Control Dep"];
53 -> 81 [label="Control Dep"];
54 -> 55 [label="AST"];
56 -> 57 [label="AST"];
56 -> 58 [label="AST"];
59 -> 60 [label="AST"];
61 -> 62 [label="AST"];
63 -> 61 [label="AST"];
64 -> 65 [label="AST"];
66 -> 67 [label="AST"];
66 -> 64 [label="AST"];
68 -> 69 [label="AST"];
70 -> 71 [label="AST"];
72 -> 56 [label="AST"];
72 -> 59 [label="AST"];
72 -> 63 [label="AST"];
72 -> 66 [label="AST"];
72 -> 68 [label="AST"];
72 -> 70 [label="AST"];
72 -> 77 [label="Action"];
73 -> 53 [label="AST"];
73 -> 54 [label="AST"];
73 -> 72 [label="AST"];
74 -> 73 [label="AST"];
75 -> 39 [label="AST"];
75 -> 48 [label="AST"];
75 -> 74 [label="AST"];
76 -> 2 [label="AST"];
76 -> 0 [label="AST"];
76 -> 3 [label="AST"];
76 -> 5 [label="AST"];
76 -> 7 [label="AST"];
76 -> 9 [label="AST"];
76 -> 11 [label="AST"];
76 -> 75 [label="AST"];
77 -> 81 [label="Action"];
79 -> 78 [label="AST"];
80 -> 79 [label="AST"];
81 -> 80 [label="AST"];
}