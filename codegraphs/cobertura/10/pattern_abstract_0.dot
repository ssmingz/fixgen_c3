digraph "Pattern" {
0 [label="##ActionPoint##
locationInParent:ACTION
nodeType:Insert
nodeType2:ActionNode
nodeType3:CtElementImpl
value:INSERT
value2:" shape=ellipse]
1 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
2 [label="locationInParent:STATEMENT
nodeType:CtTryImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
3 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
4 [label="locationInParent:CATCH
nodeType:CtCatchImpl
nodeType2:CtCatchImpl
nodeType3:CtCatchImpl
value: catch (IOException ioe) \{
    getProject().log(\"Error creating commands file.\", MSG_ERR);
    throw new BuildException(\"Unable to create the commands file.\", ioe);
\}
value2: catch (IOException ioe) \{
    getProject().log(String, MSG_ERR);
    throw new BuildException(String, IOException);
\}" shape=ellipse]
5 [label="locationInParent:STATEMENT
nodeType:CtAssignmentImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:builder = new CommandLineBuilder()
value2:CommandLineBuilder = new CommandLineBuilder()" shape=ellipse]
6 [label="locationInParent:ASSIGNED
nodeType:CtVariableWriteImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:builder
value2:CommandLineBuilder" shape=ellipse]
7 [label="locationInParent:ASSIGNMENT
nodeType:CtConstructorCallImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl
value:new CommandLineBuilder()
value2:new CommandLineBuilder()" shape=ellipse]
8 [label="locationInParent:STATEMENT
nodeType:CtIfImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:if (dataFile != null) \{
    builder.addArg(\"--datafile\", dataFile);
\}
value2:if (PlaceHold != null) \{
    CommandLineBuilder.addArg(String, PlaceHold);
\}" shape=ellipse]
9 [label="locationInParent:CONDITION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:dataFile != null
value2:PlaceHold != null" shape=ellipse]
10 [label="locationInParent:THEN
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:\{
    builder.addArg(\"--datafile\", dataFile);
\}
value2:\{
    CommandLineBuilder.addArg(String, PlaceHold);
\}" shape=ellipse]
11 [label="locationInParent:STATEMENT
nodeType:CtIfImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:if (toDir != null) \{
    builder.addArg(\"--destination\", toDir.getAbsolutePath());
\}
value2:if (PlaceHold != null) \{
    CommandLineBuilder.addArg(String, PlaceHold.getAbsolutePath());
\}" shape=ellipse]
12 [label="locationInParent:CONDITION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:toDir != null
value2:PlaceHold != null" shape=ellipse]
13 [label="locationInParent:THEN
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:\{
    builder.addArg(\"--destination\", toDir.getAbsolutePath());
\}
value2:\{
    CommandLineBuilder.addArg(String, PlaceHold.getAbsolutePath());
\}" shape=ellipse]
14 [label="locationInParent:STATEMENT
nodeType:CtForImpl
nodeType2:CtLoopImpl
nodeType3:CtStatementImpl
value:exceed MAX_TOKEN_LENGTH:18 tokens
value2:exceed MAX_TOKEN_LENGTH:18 tokens" shape=ellipse]
15 [label="locationInParent:FOR_INIT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:int i = 0
value2:int i = Integer" shape=ellipse]
16 [label="locationInParent:EXPRESSION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i < ignoreRegexs.size()
value2:int < PlaceHold.size()" shape=ellipse]
17 [label="locationInParent:FOR_UPDATE
nodeType:CtUnaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i++
value2:int++" shape=ellipse]
18 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:\{
    Ignore ignoreRegex = ((Ignore) (ignoreRegexs.get(i)));
    builder.addArg(\"--ignore\", ignoreRegex.getRegex());
\}
value2:\{
    Ignore ignoreRegex = ((Ignore) (PlaceHold.get(int)));
    CommandLineBuilder.addArg(String, Ignore.getRegex());
\}" shape=ellipse]
19 [label="locationInParent:STATEMENT
nodeType:CtForImpl
nodeType2:CtLoopImpl
nodeType3:CtStatementImpl
value:exceed MAX_TOKEN_LENGTH:18 tokens
value2:exceed MAX_TOKEN_LENGTH:18 tokens" shape=ellipse]
20 [label="locationInParent:FOR_INIT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:int i = 0
value2:int i = Integer" shape=ellipse]
21 [label="locationInParent:EXPRESSION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i < ignoreBranchesRegexs.size()
value2:int < PlaceHold.size()" shape=ellipse]
22 [label="locationInParent:FOR_UPDATE
nodeType:CtUnaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i++
value2:int++" shape=ellipse]
23 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:\{
    IgnoreBranches ignoreBranchesRegex = ((IgnoreBranches) (ignoreBranchesRegexs.get(i)));
    builder.addArg(\"--ignoreBranches\", ignoreBranchesRegex.getRegex());
\}
value2:\{
    IgnoreBranches ignoreBranchesRegex = ((IgnoreBranches) (PlaceHold.get(int)));
    CommandLineBuilder.addArg(String, IgnoreBranches.getRegex());
\}" shape=ellipse]
24 [label="locationInParent:STATEMENT
nodeType:CtForImpl
nodeType2:CtLoopImpl
nodeType3:CtStatementImpl
value:exceed MAX_TOKEN_LENGTH:18 tokens
value2:exceed MAX_TOKEN_LENGTH:18 tokens" shape=ellipse]
25 [label="locationInParent:FOR_INIT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:int i = 0
value2:int i = Integer" shape=ellipse]
26 [label="locationInParent:EXPRESSION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value2:int < PlaceHold.size()" shape=ellipse]
27 [label="locationInParent:FOR_UPDATE
nodeType:CtUnaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i++
value2:int++" shape=ellipse]
28 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
29 [label="locationInParent:STATEMENT
nodeType:CtForImpl
nodeType2:CtLoopImpl
nodeType3:CtStatementImpl
value:exceed MAX_TOKEN_LENGTH:18 tokens
value2:exceed MAX_TOKEN_LENGTH:18 tokens" shape=ellipse]
30 [label="locationInParent:FOR_INIT
nodeType:CtLocalVariableImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl
value:int i = 0
value2:int i = Integer" shape=ellipse]
31 [label="locationInParent:EXPRESSION
nodeType:CtBinaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value2:int < PlaceHold.size()" shape=ellipse]
32 [label="locationInParent:FOR_UPDATE
nodeType:CtUnaryOperatorImpl
nodeType2:CtExpressionImpl
nodeType3:CtExpressionImpl
value:i++
value2:int++" shape=ellipse]
33 [label="locationInParent:BODY
nodeType:CtBlockImpl
nodeType2:CtStatementImpl
nodeType3:CtStatementImpl" shape=ellipse]
34 [label="locationInParent:STATEMENT
nodeType:CtInvocationImpl
nodeType2:CtTargetedExpressionImpl
nodeType3:CtExpressionImpl" shape=ellipse]
35 [label="locationInParent:METHOD_NAME
nodeType:CtVirtualElement
nodeType2:CtElementImpl
nodeType3:Object" shape=ellipse]
36 [label="locationInParent:EXECUTABLE_REF
nodeType:CtExecutableReferenceImpl
nodeType2:CtExecutableReferenceImpl
nodeType3:CtExecutableReferenceImpl" shape=ellipse]
37 [label="nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:builder
value2:CommandLineBuilder" shape=ellipse]
38 [label="nodeType:CtVariableReadImpl
nodeType2:CtVariableAccessImpl
nodeType3:CtExpressionImpl
value:builder
value2:CommandLineBuilder" shape=ellipse]
1 -> 0 [label="Action:3"];
1 -> 5 [label="AST:3"];
1 -> 8 [label="AST:3"];
1 -> 11 [label="AST:3"];
1 -> 14 [label="AST:3"];
1 -> 19 [label="AST:3"];
1 -> 24 [label="AST:3"];
1 -> 29 [label="AST:3"];
1 -> 34 [label="AST:3"];
2 -> 1 [label="AST:3"];
2 -> 4 [label="AST:3"];
3 -> 2 [label="AST:3"];
5 -> 6 [label="AST:3"];
5 -> 7 [label="AST:3"];
6 -> 37 [label="Define Use:3"];
6 -> 38 [label="Define Use:3"];
8 -> 9 [label="AST:3"];
8 -> 10 [label="AST:3"];
9 -> 10 [label="Control Dep:3"];
11 -> 12 [label="AST:3"];
11 -> 13 [label="AST:3"];
12 -> 13 [label="Control Dep:3"];
14 -> 15 [label="AST:3"];
14 -> 16 [label="AST:3"];
14 -> 17 [label="AST:3"];
14 -> 18 [label="AST:3"];
16 -> 18 [label="Control Dep:3"];
19 -> 20 [label="AST:3"];
19 -> 21 [label="AST:3"];
19 -> 22 [label="AST:3"];
19 -> 23 [label="AST:3"];
21 -> 23 [label="Control Dep:3"];
24 -> 25 [label="AST:3"];
24 -> 26 [label="AST:3"];
24 -> 27 [label="AST:3"];
24 -> 28 [label="AST:3"];
26 -> 28 [label="Control Dep:3"];
29 -> 30 [label="AST:3"];
29 -> 31 [label="AST:3"];
29 -> 32 [label="AST:3"];
29 -> 33 [label="AST:3"];
31 -> 33 [label="Control Dep:3"];
34 -> 35 [label="AST:3"];
34 -> 36 [label="AST:3"];
34 -> 37 [label="AST:3"];
}