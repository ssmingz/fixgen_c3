digraph "closeSocket#?,ServerSocket" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@closeSocket" shape=ellipse]
2 [label="2:CtParameterImpl@ServerSocket socket" shape=ellipse]
3 [label="2:CtTypeReferenceImpl@ServerSocket" shape=ellipse]
4 [label="4:CtVariableReadImpl@socket" shape=ellipse]
5 [label="4:CtParameterReferenceImpl@socket" shape=ellipse]
6 [label="4:CtLiteralImpl@null" shape=ellipse]
7 [label="4:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
8 [label="4:CtBinaryOperatorImpl@(socket != null)" shape=ellipse]
9 [label="4:CtExecutableReferenceImpl@isClosed()" shape=ellipse]
10 [label="4:CtTypeReferenceImpl@ServerSocket" shape=ellipse]
11 [label="4:CtVirtualElement@isClosed" shape=ellipse]
12 [label="4:CtVariableReadImpl@socket" shape=ellipse]
13 [label="4:CtParameterReferenceImpl@socket" shape=ellipse]
14 [label="4:CtInvocationImpl@socket.isClosed()" shape=ellipse]
15 [label="4:CtBinaryOperatorImpl@(socket != null) || socket.isClosed()" shape=ellipse]
16 [label="5:CtExecutableReferenceImpl@close()" shape=ellipse]
17 [label="5:CtTypeReferenceImpl@ServerSocket" shape=ellipse]
18 [label="5:CtVirtualElement@close" shape=ellipse]
19 [label="5:CtVariableReadImpl@socket" shape=ellipse]
20 [label="5:CtParameterReferenceImpl@socket" shape=ellipse]
21 [label="5:CtInvocationImpl@socket.close()" shape=ellipse]
22 [label="4:CtBlockImpl@\{
    socket.close();
\}" shape=ellipse]
23 [label="4:CtIfImpl@if ((socket != null) || socket.isClosed()) \{
    socket.close();
\}" shape=ellipse]
24 [label="3:CtBlockImpl@\{
    if ((socket != null) || socket.isClosed()) \{
        socket.close();
    \}
\}" shape=ellipse]
25 [label="7:CtVirtualElement@t" shape=ellipse]
26 [label="7:CtTypeReferenceImpl@Throwable" shape=ellipse]
27 [label="7:CtPackageReferenceImpl@java.lang" shape=ellipse]
28 [label="7:CtCatchVariableImpl@Throwable t" shape=ellipse]
29 [label="8:CtExecutableReferenceImpl@printStackTrace(java.io.PrintStream)" shape=ellipse]
30 [label="8:CtTypeReferenceImpl@Throwable" shape=ellipse]
31 [label="8:CtTypeReferenceImpl@void" shape=ellipse]
32 [label="8:CtTypeReferenceImpl@PrintStream" shape=ellipse]
33 [label="8:CtVirtualElement@printStackTrace" shape=ellipse]
34 [label="8:CtVariableReadImpl@t" shape=ellipse]
35 [label="8:CtCatchVariableReferenceImpl@t" shape=ellipse]
36 [label="8:CtFieldReferenceImpl@java.lang.System.err" shape=ellipse]
37 [label="8:CtTypeReferenceImpl@System" shape=ellipse]
38 [label="8:CtTypeReferenceImpl@PrintStream" shape=ellipse]
39 [label="8:CtFieldReadImpl@System.err" shape=ellipse]
40 [label="8:CtTypeAccessImpl@System" shape=ellipse]
41 [label="8:CtInvocationImpl@t.printStackTrace(System.err)" shape=ellipse]
42 [label="7:CtBlockImpl@\{
    t.printStackTrace(System.err);
\}" shape=ellipse]
43 [label="7:CtCatchImpl@ catch (Throwable t) \{
    t.printStackTrace(System.err);
\}" shape=ellipse]
44 [label="3:CtTryImpl@try \{
    if ((socket != null) || socket.isClosed()) \{
        socket.close();
    \}
\} catch (Throwable t) \{
    t.printStackTrace(System.err);
\}" shape=ellipse]
45 [label="2:CtBlockImpl@\{
    try \{
        if ((socket != null) || socket.isClosed()) \{
            socket.close();
        \}
    \} catch (Throwable t) \{
        t.printStackTrace(System.err);
    \}
\}" shape=ellipse]
46 [label="2:CtMethodImpl@private void closeSocket(ServerSocket socket) \{
    try \{
        if ((socket != null) || socket.isClosed()) \{
            socket.close();
        \}
    \} catch (Throwable t) \{
        t.printStackTrace(System.err);
    \}
\}" shape=ellipse]
47 [label="4:Update@UPDATE" shape=ellipse]
48 [label="4:CtPackageReferenceImpl@" shape=ellipse]
49 [label="4:CtTypeReferenceImpl@ServerSocket" shape=ellipse]
50 [label="4:CtParameterReferenceImpl@socket" shape=ellipse]
51 [label="4:CtVariableReadImpl@socket" shape=ellipse]
52 [label="4:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
53 [label="4:CtLiteralImpl@null" shape=ellipse]
54 [label="4:CtBinaryOperatorImpl@(socket != null)" shape=ellipse]
55 [label="4:CtPackageReferenceImpl@" shape=ellipse]
56 [label="4:CtTypeReferenceImpl@ServerSocket" shape=ellipse]
57 [label="4:CtParameterReferenceImpl@socket" shape=ellipse]
58 [label="4:CtVariableReadImpl@socket" shape=ellipse]
59 [label="4:CtPackageReferenceImpl@" shape=ellipse]
60 [label="4:CtTypeReferenceImpl@ServerSocket" shape=ellipse]
61 [label="4:CtExecutableReferenceImpl@isClosed()" shape=ellipse]
62 [label="4:CtInvocationImpl@socket.isClosed()" shape=ellipse]
63 [label="4:CtVirtualElement@isClosed" shape=ellipse]
64 [label="4:CtBinaryOperatorImpl@(socket != null) && socket.isClosed()" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
6 -> 7 [label="AST"];
8 -> 4 [label="AST"];
8 -> 6 [label="AST"];
9 -> 10 [label="AST"];
12 -> 13 [label="AST"];
14 -> 11 [label="AST"];
14 -> 12 [label="AST"];
14 -> 9 [label="AST"];
15 -> 8 [label="AST"];
15 -> 14 [label="AST"];
15 -> 22 [label="Control Dep"];
15 -> 21 [label="Control Dep"];
15 -> 16 [label="Control Dep"];
15 -> 19 [label="Control Dep"];
15 -> 47 [label="Action"];
16 -> 17 [label="AST"];
19 -> 20 [label="AST"];
21 -> 18 [label="AST"];
21 -> 19 [label="AST"];
21 -> 16 [label="AST"];
22 -> 21 [label="AST"];
23 -> 15 [label="AST"];
23 -> 22 [label="AST"];
24 -> 23 [label="AST"];
25 -> 34 [label="Define-Use"];
26 -> 27 [label="AST"];
28 -> 25 [label="AST"];
28 -> 26 [label="AST"];
28 -> 42 [label="Control Dep"];
28 -> 41 [label="Control Dep"];
28 -> 29 [label="Control Dep"];
28 -> 34 [label="Control Dep"];
28 -> 39 [label="Control Dep"];
29 -> 30 [label="AST"];
29 -> 31 [label="AST"];
29 -> 32 [label="AST"];
34 -> 35 [label="AST"];
36 -> 37 [label="AST"];
36 -> 38 [label="AST"];
39 -> 40 [label="AST"];
39 -> 36 [label="AST"];
41 -> 33 [label="AST"];
41 -> 34 [label="AST"];
41 -> 29 [label="AST"];
41 -> 39 [label="AST"];
42 -> 41 [label="AST"];
43 -> 28 [label="AST"];
43 -> 42 [label="AST"];
44 -> 24 [label="AST"];
44 -> 43 [label="AST"];
45 -> 44 [label="AST"];
46 -> 1 [label="AST"];
46 -> 0 [label="AST"];
46 -> 2 [label="AST"];
46 -> 45 [label="AST"];
47 -> 64 [label="Action"];
49 -> 48 [label="AST"];
50 -> 49 [label="AST"];
51 -> 50 [label="AST"];
53 -> 52 [label="AST"];
54 -> 51 [label="AST"];
54 -> 53 [label="AST"];
56 -> 55 [label="AST"];
57 -> 56 [label="AST"];
58 -> 57 [label="AST"];
60 -> 59 [label="AST"];
61 -> 60 [label="AST"];
62 -> 63 [label="AST"];
62 -> 58 [label="AST"];
62 -> 61 [label="AST"];
64 -> 54 [label="AST"];
64 -> 62 [label="AST"];
64 -> 22 [label="Control Dep"];
64 -> 21 [label="Control Dep"];
64 -> 16 [label="Control Dep"];
64 -> 19 [label="Control Dep"];
}