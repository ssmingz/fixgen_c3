digraph "saveGlobalProjectData#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@saveGlobalProjectData" shape=ellipse]
2 [label="3:CtTypeReferenceImpl@ProjectData" shape=ellipse]
3 [label="3:CtPackageReferenceImpl@" shape=ellipse]
4 [label="3:CtLiteralImpl@null" shape=ellipse]
5 [label="3:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
6 [label="3:CtVirtualElement@projectDataToSave" shape=ellipse]
7 [label="3:CtLocalVariableImpl@ProjectData projectDataToSave = null" shape=ellipse]
8 [label="4:CtExecutableReferenceImpl@lock()" shape=ellipse]
9 [label="4:CtTypeReferenceImpl@globalProjectDataLock" shape=ellipse]
10 [label="4:CtVirtualElement@lock" shape=ellipse]
11 [label="4:CtFieldReferenceImpl@globalProjectDataLock" shape=ellipse]
12 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
13 [label="4:CtFieldReadImpl@globalProjectDataLock" shape=ellipse]
14 [label="4:CtInvocationImpl@globalProjectDataLock.lock()" shape=ellipse]
15 [label="6:CtVariableWriteImpl@projectDataToSave" shape=ellipse]
16 [label="6:CtLocalVariableReferenceImpl@projectDataToSave" shape=ellipse]
17 [label="6:CtFieldReferenceImpl@globalProjectData" shape=ellipse]
18 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
19 [label="6:CtFieldReadImpl@globalProjectData" shape=ellipse]
20 [label="6:CtAssignmentImpl@projectDataToSave = globalProjectData" shape=ellipse]
21 [label="7:CtFieldReferenceImpl@globalProjectData" shape=ellipse]
22 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
23 [label="7:CtFieldWriteImpl@globalProjectData" shape=ellipse]
24 [label="7:CtExecutableReferenceImpl@ProjectData()" shape=ellipse]
25 [label="7:CtTypeReferenceImpl@ProjectData" shape=ellipse]
26 [label="7:CtTypeReferenceImpl@ProjectData" shape=ellipse]
27 [label="7:CtConstructorCallImpl@new ProjectData()" shape=ellipse]
28 [label="7:CtAssignmentImpl@globalProjectData = new ProjectData()" shape=ellipse]
29 [label="5:CtBlockImpl@\{
    projectDataToSave = globalProjectData;
    globalProjectData = new ProjectData();
\}" shape=ellipse]
30 [label="9:CtExecutableReferenceImpl@unlock()" shape=ellipse]
31 [label="9:CtTypeReferenceImpl@globalProjectDataLock" shape=ellipse]
32 [label="9:CtVirtualElement@unlock" shape=ellipse]
33 [label="9:CtFieldReferenceImpl@globalProjectDataLock" shape=ellipse]
34 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
35 [label="9:CtFieldReadImpl@globalProjectDataLock" shape=ellipse]
36 [label="9:CtInvocationImpl@globalProjectDataLock.unlock()" shape=ellipse]
37 [label="8:CtBlockImpl@\{
    globalProjectDataLock.unlock();
\}" shape=ellipse]
38 [label="5:CtTryImpl@try \{
    projectDataToSave = globalProjectData;
    globalProjectData = new ProjectData();
\} finally \{
    globalProjectDataLock.unlock();
\}" shape=ellipse]
39 [label="12:CtExecutableReferenceImpl@sleep(long)" shape=ellipse]
40 [label="12:CtTypeReferenceImpl@Thread" shape=ellipse]
41 [label="12:CtTypeReferenceImpl@void" shape=ellipse]
42 [label="12:CtTypeReferenceImpl@long" shape=ellipse]
43 [label="12:CtVirtualElement@sleep" shape=ellipse]
44 [label="12:CtTypeAccessImpl@Thread" shape=ellipse]
45 [label="12:CtTypeReferenceImpl@Thread" shape=ellipse]
46 [label="12:CtLiteralImpl@1000" shape=ellipse]
47 [label="12:CtTypeReferenceImpl@int" shape=ellipse]
48 [label="12:CtInvocationImpl@Thread.sleep(1000)" shape=ellipse]
49 [label="11:CtBlockImpl@\{
    Thread.sleep(1000);
\}" shape=ellipse]
50 [label="13:CtVirtualElement@e" shape=ellipse]
51 [label="13:CtTypeReferenceImpl@InterruptedException" shape=ellipse]
52 [label="13:CtPackageReferenceImpl@java.lang" shape=ellipse]
53 [label="13:CtCatchVariableImpl@InterruptedException e" shape=ellipse]
54 [label="13:CtBlockImpl@\{
\}" shape=ellipse]
55 [label="13:CtCatchImpl@ catch (InterruptedException e) \{
\}" shape=ellipse]
56 [label="11:CtTryImpl@try \{
    Thread.sleep(1000);
\} catch (InterruptedException e) \{
\}" shape=ellipse]
57 [label="15:CtTypeReferenceImpl@File" shape=ellipse]
58 [label="15:CtPackageReferenceImpl@" shape=ellipse]
59 [label="15:CtExecutableReferenceImpl@getDefaultDataFile()" shape=ellipse]
60 [label="15:CtTypeReferenceImpl@CoverageDataFileHandler" shape=ellipse]
61 [label="15:CtTypeReferenceImpl@File" shape=ellipse]
62 [label="15:CtVirtualElement@getDefaultDataFile" shape=ellipse]
63 [label="15:CtTypeAccessImpl@CoverageDataFileHandler" shape=ellipse]
64 [label="15:CtTypeReferenceImpl@CoverageDataFileHandler" shape=ellipse]
65 [label="15:CtInvocationImpl@CoverageDataFileHandler.getDefaultDataFile()" shape=ellipse]
66 [label="15:CtVirtualElement@dataFile" shape=ellipse]
67 [label="15:CtLocalVariableImpl@File dataFile = CoverageDataFileHandler.getDefaultDataFile()" shape=ellipse]
68 [label="16:CtTypeReferenceImpl@FileLocker" shape=ellipse]
69 [label="16:CtPackageReferenceImpl@" shape=ellipse]
70 [label="16:CtExecutableReferenceImpl@FileLocker()" shape=ellipse]
71 [label="16:CtTypeReferenceImpl@FileLocker" shape=ellipse]
72 [label="16:CtTypeReferenceImpl@FileLocker" shape=ellipse]
73 [label="16:CtVariableReadImpl@dataFile" shape=ellipse]
74 [label="16:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
75 [label="16:CtConstructorCallImpl@new FileLocker(dataFile)" shape=ellipse]
76 [label="16:CtVirtualElement@fileLocker" shape=ellipse]
77 [label="16:CtLocalVariableImpl@FileLocker fileLocker = new FileLocker(dataFile)" shape=ellipse]
78 [label="18:CtExecutableReferenceImpl@lock()" shape=ellipse]
79 [label="18:CtTypeReferenceImpl@FileLocker" shape=ellipse]
80 [label="18:CtTypeReferenceImpl@boolean" shape=ellipse]
81 [label="18:CtVirtualElement@lock" shape=ellipse]
82 [label="18:CtVariableReadImpl@fileLocker" shape=ellipse]
83 [label="18:CtLocalVariableReferenceImpl@fileLocker" shape=ellipse]
84 [label="18:CtInvocationImpl@fileLocker.lock()" shape=ellipse]
85 [label="19:CtTypeReferenceImpl@ProjectData" shape=ellipse]
86 [label="19:CtPackageReferenceImpl@" shape=ellipse]
87 [label="19:CtExecutableReferenceImpl@loadCoverageDataFromDatafile(<unknown>)" shape=ellipse]
88 [label="19:CtTypeReferenceImpl@ProjectData" shape=ellipse]
89 [label="19:CtTypeReferenceImpl@null" shape=ellipse]
90 [label="19:CtVirtualElement@loadCoverageDataFromDatafile" shape=ellipse]
91 [label="19:CtTypeAccessImpl@PlaceHold" shape=ellipse]
92 [label="19:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
93 [label="19:CtThisAccessImpl@" shape=ellipse]
94 [label="19:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
95 [label="19:CtVariableReadImpl@dataFile" shape=ellipse]
96 [label="19:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
97 [label="19:CtInvocationImpl@loadCoverageDataFromDatafile(dataFile)" shape=ellipse]
98 [label="19:CtVirtualElement@datafileProjectData" shape=ellipse]
99 [label="19:CtLocalVariableImpl@ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile)" shape=ellipse]
100 [label="20:CtVariableReadImpl@datafileProjectData" shape=ellipse]
101 [label="20:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
102 [label="20:CtLiteralImpl@null" shape=ellipse]
103 [label="20:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
104 [label="20:CtBinaryOperatorImpl@datafileProjectData == null" shape=ellipse]
105 [label="21:CtVariableWriteImpl@datafileProjectData" shape=ellipse]
106 [label="21:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
107 [label="21:CtVariableReadImpl@projectDataToSave" shape=ellipse]
108 [label="21:CtLocalVariableReferenceImpl@projectDataToSave" shape=ellipse]
109 [label="21:CtAssignmentImpl@datafileProjectData = projectDataToSave" shape=ellipse]
110 [label="20:CtBlockImpl@\{
    datafileProjectData = projectDataToSave;
\}" shape=ellipse]
111 [label="23:CtExecutableReferenceImpl@merge(ProjectData)" shape=ellipse]
112 [label="23:CtTypeReferenceImpl@ProjectData" shape=ellipse]
113 [label="23:CtTypeReferenceImpl@ProjectData" shape=ellipse]
114 [label="23:CtVirtualElement@merge" shape=ellipse]
115 [label="23:CtVariableReadImpl@datafileProjectData" shape=ellipse]
116 [label="23:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
117 [label="23:CtVariableReadImpl@projectDataToSave" shape=ellipse]
118 [label="23:CtLocalVariableReferenceImpl@projectDataToSave" shape=ellipse]
119 [label="23:CtInvocationImpl@datafileProjectData.merge(projectDataToSave)" shape=ellipse]
120 [label="22:CtBlockImpl@\{
    datafileProjectData.merge(projectDataToSave);
\}" shape=ellipse]
121 [label="20:CtIfImpl@if (datafileProjectData == null) \{
    datafileProjectData = projectDataToSave;
\} else \{
    datafileProjectData.merge(projectDataToSave);
\}" shape=ellipse]
122 [label="25:CtExecutableReferenceImpl@saveCoverageData(ProjectData,File)" shape=ellipse]
123 [label="25:CtTypeReferenceImpl@CoverageDataFileHandler" shape=ellipse]
124 [label="25:CtTypeReferenceImpl@ProjectData" shape=ellipse]
125 [label="25:CtTypeReferenceImpl@File" shape=ellipse]
126 [label="25:CtVirtualElement@saveCoverageData" shape=ellipse]
127 [label="25:CtTypeAccessImpl@CoverageDataFileHandler" shape=ellipse]
128 [label="25:CtTypeReferenceImpl@CoverageDataFileHandler" shape=ellipse]
129 [label="25:CtVariableReadImpl@datafileProjectData" shape=ellipse]
130 [label="25:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
131 [label="25:CtVariableReadImpl@dataFile" shape=ellipse]
132 [label="25:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
133 [label="25:CtInvocationImpl@CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile)" shape=ellipse]
134 [label="18:CtBlockImpl@\{
    ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
    if (datafileProjectData == null) \{
        datafileProjectData = projectDataToSave;
    \} else \{
        datafileProjectData.merge(projectDataToSave);
    \}
    CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
\}" shape=ellipse]
135 [label="18:CtIfImpl@if (fileLocker.lock()) \{
    ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
    if (datafileProjectData == null) \{
        datafileProjectData = projectDataToSave;
    \} else \{
        datafileProjectData.merge(projectDataToSave);
    \}
    CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
\}" shape=ellipse]
136 [label="17:CtBlockImpl@\{
    if (fileLocker.lock()) \{
        ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
        if (datafileProjectData == null) \{
            datafileProjectData = projectDataToSave;
        \} else \{
            datafileProjectData.merge(projectDataToSave);
        \}
        CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
    \}
\}" shape=ellipse]
137 [label="28:CtExecutableReferenceImpl@release()" shape=ellipse]
138 [label="28:CtTypeReferenceImpl@FileLocker" shape=ellipse]
139 [label="28:CtVirtualElement@release" shape=ellipse]
140 [label="28:CtVariableReadImpl@fileLocker" shape=ellipse]
141 [label="28:CtLocalVariableReferenceImpl@fileLocker" shape=ellipse]
142 [label="28:CtInvocationImpl@fileLocker.release()" shape=ellipse]
143 [label="27:CtBlockImpl@\{
    fileLocker.release();
\}" shape=ellipse]
144 [label="17:CtTryImpl@try \{
    if (fileLocker.lock()) \{
        ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
        if (datafileProjectData == null) \{
            datafileProjectData = projectDataToSave;
        \} else \{
            datafileProjectData.merge(projectDataToSave);
        \}
        CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
    \}
\} finally \{
    fileLocker.release();
\}" shape=ellipse]
145 [label="2:CtBlockImpl@\{
    ProjectData projectDataToSave = null;
    globalProjectDataLock.lock();
    try \{
        projectDataToSave = globalProjectData;
        globalProjectData = new ProjectData();
    \} finally \{
        globalProjectDataLock.unlock();
    \}
    try \{
        Thread.sleep(1000);
    \} catch (InterruptedException e) \{
    \}
    File dataFile = CoverageDataFileHandler.getDefaultDataFile();
    FileLocker fileLocker = new FileLocker(dataFile);
    try \{
        if (fileLocker.lock()) \{
            ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
            if (datafileProjectData == null) \{
                datafileProjectData = projectDataToSave;
            \} else \{
                datafileProjectData.merge(projectDataToSave);
            \}
            CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
        \}
    \} finally \{
        fileLocker.release();
    \}
\}" shape=ellipse]
146 [label="2:CtMethodImpl@public static void saveGlobalProjectData() \{
    ProjectData projectDataToSave = null;
    globalProjectDataLock.lock();
    try \{
        projectDataToSave = globalProjectData;
        globalProjectData = new ProjectData();
    \} finally \{
        globalProjectDataLock.unlock();
    \}
    try \{
        Thread.sleep(1000);
    \} catch (InterruptedException e) \{
    \}
    File dataFile = CoverageDataFileHandler.getDefaultDataFile();
    FileLocker fileLocker = new FileLocker(dataFile);
    try \{
        if (fileLocker.lock()) \{
            ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
            if (datafileProjectData == null) \{
                datafileProjectData = projectDataToSave;
            \} else \{
                datafileProjectData.merge(projectDataToSave);
            \}
            CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
        \}
    \} finally \{
        fileLocker.release();
    \}
\}" shape=ellipse]
147 [label="16:Insert@INSERT" shape=ellipse]
148 [label="16:CtPackageReferenceImpl@" shape=ellipse]
149 [label="16:CtTypeReferenceImpl@File" shape=ellipse]
150 [label="16:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
151 [label="16:CtVariableReadImpl@dataFile" shape=ellipse]
152 [label="16:CtPackageReferenceImpl@" shape=ellipse]
153 [label="16:CtTypeReferenceImpl@File" shape=ellipse]
154 [label="16:CtExecutableReferenceImpl@getPath()" shape=ellipse]
155 [label="16:CtInvocationImpl@dataFile.getPath()" shape=ellipse]
156 [label="16:CtVirtualElement@getPath" shape=ellipse]
157 [label="16:CtExecutableReferenceImpl@intern()" shape=ellipse]
158 [label="16:CtInvocationImpl@dataFile.getPath().intern()" shape=ellipse]
159 [label="16:CtVirtualElement@intern" shape=ellipse]
160 [label="17:CtPackageReferenceImpl@" shape=ellipse]
161 [label="17:CtTypeReferenceImpl@FileLocker" shape=ellipse]
162 [label="17:CtPackageReferenceImpl@" shape=ellipse]
163 [label="17:CtTypeReferenceImpl@FileLocker" shape=ellipse]
164 [label="17:CtPackageReferenceImpl@" shape=ellipse]
165 [label="17:CtTypeReferenceImpl@FileLocker" shape=ellipse]
166 [label="17:CtExecutableReferenceImpl@FileLocker()" shape=ellipse]
167 [label="17:CtPackageReferenceImpl@" shape=ellipse]
168 [label="17:CtTypeReferenceImpl@File" shape=ellipse]
169 [label="17:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
170 [label="17:CtVariableReadImpl@dataFile" shape=ellipse]
171 [label="17:CtConstructorCallImpl@new FileLocker(dataFile)" shape=ellipse]
172 [label="17:CtLocalVariableImpl@FileLocker fileLocker = new FileLocker(dataFile)" shape=ellipse]
173 [label="17:CtVirtualElement@fileLocker" shape=ellipse]
174 [label="19:CtPackageReferenceImpl@" shape=ellipse]
175 [label="19:CtTypeReferenceImpl@FileLocker" shape=ellipse]
176 [label="19:CtLocalVariableReferenceImpl@fileLocker" shape=ellipse]
177 [label="19:CtVariableReadImpl@fileLocker" shape=ellipse]
178 [label="19:CtPackageReferenceImpl@" shape=ellipse]
179 [label="19:CtTypeReferenceImpl@FileLocker" shape=ellipse]
180 [label="19:CtTypeReferenceImpl@boolean" shape=ellipse]
181 [label="19:CtExecutableReferenceImpl@lock()" shape=ellipse]
182 [label="19:CtInvocationImpl@fileLocker.lock()" shape=ellipse]
183 [label="19:CtVirtualElement@lock" shape=ellipse]
184 [label="20:CtPackageReferenceImpl@" shape=ellipse]
185 [label="20:CtTypeReferenceImpl@ProjectData" shape=ellipse]
186 [label="20:CtPackageReferenceImpl@" shape=ellipse]
187 [label="20:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
188 [label="20:CtPackageReferenceImpl@" shape=ellipse]
189 [label="20:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
190 [label="20:CtTypeAccessImpl@PlaceHold" shape=ellipse]
191 [label="20:CtThisAccessImpl@" shape=ellipse]
192 [label="20:CtPackageReferenceImpl@" shape=ellipse]
193 [label="20:CtTypeReferenceImpl@ProjectData" shape=ellipse]
194 [label="20:CtTypeReferenceImpl@null" shape=ellipse]
195 [label="20:CtExecutableReferenceImpl@loadCoverageDataFromDatafile(<unknown>)" shape=ellipse]
196 [label="20:CtPackageReferenceImpl@" shape=ellipse]
197 [label="20:CtTypeReferenceImpl@File" shape=ellipse]
198 [label="20:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
199 [label="20:CtVariableReadImpl@dataFile" shape=ellipse]
200 [label="20:CtInvocationImpl@loadCoverageDataFromDatafile(dataFile)" shape=ellipse]
201 [label="20:CtVirtualElement@loadCoverageDataFromDatafile" shape=ellipse]
202 [label="20:CtLocalVariableImpl@ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile)" shape=ellipse]
203 [label="20:CtVirtualElement@datafileProjectData" shape=ellipse]
204 [label="21:CtPackageReferenceImpl@" shape=ellipse]
205 [label="21:CtTypeReferenceImpl@ProjectData" shape=ellipse]
206 [label="21:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
207 [label="21:CtVariableReadImpl@datafileProjectData" shape=ellipse]
208 [label="21:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
209 [label="21:CtLiteralImpl@null" shape=ellipse]
210 [label="21:CtBinaryOperatorImpl@datafileProjectData == null" shape=ellipse]
211 [label="22:CtPackageReferenceImpl@" shape=ellipse]
212 [label="22:CtTypeReferenceImpl@ProjectData" shape=ellipse]
213 [label="22:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
214 [label="22:CtVariableWriteImpl@datafileProjectData" shape=ellipse]
215 [label="22:CtPackageReferenceImpl@" shape=ellipse]
216 [label="22:CtTypeReferenceImpl@ProjectData" shape=ellipse]
217 [label="22:CtLocalVariableReferenceImpl@projectDataToSave" shape=ellipse]
218 [label="22:CtVariableReadImpl@projectDataToSave" shape=ellipse]
219 [label="22:CtAssignmentImpl@datafileProjectData = projectDataToSave" shape=ellipse]
220 [label="21:CtBlockImpl@\{
    datafileProjectData = projectDataToSave;
\}" shape=ellipse]
221 [label="24:CtPackageReferenceImpl@" shape=ellipse]
222 [label="24:CtTypeReferenceImpl@ProjectData" shape=ellipse]
223 [label="24:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
224 [label="24:CtVariableReadImpl@datafileProjectData" shape=ellipse]
225 [label="24:CtPackageReferenceImpl@" shape=ellipse]
226 [label="24:CtTypeReferenceImpl@ProjectData" shape=ellipse]
227 [label="24:CtPackageReferenceImpl@" shape=ellipse]
228 [label="24:CtTypeReferenceImpl@ProjectData" shape=ellipse]
229 [label="24:CtExecutableReferenceImpl@merge(ProjectData)" shape=ellipse]
230 [label="24:CtPackageReferenceImpl@" shape=ellipse]
231 [label="24:CtTypeReferenceImpl@ProjectData" shape=ellipse]
232 [label="24:CtLocalVariableReferenceImpl@projectDataToSave" shape=ellipse]
233 [label="24:CtVariableReadImpl@projectDataToSave" shape=ellipse]
234 [label="24:CtInvocationImpl@datafileProjectData.merge(projectDataToSave)" shape=ellipse]
235 [label="24:CtVirtualElement@merge" shape=ellipse]
236 [label="23:CtBlockImpl@\{
    datafileProjectData.merge(projectDataToSave);
\}" shape=ellipse]
237 [label="21:CtIfImpl@if (datafileProjectData == null) \{
    datafileProjectData = projectDataToSave;
\} else \{
    datafileProjectData.merge(projectDataToSave);
\}" shape=ellipse]
238 [label="26:CtPackageReferenceImpl@" shape=ellipse]
239 [label="26:CtTypeReferenceImpl@CoverageDataFileHandler" shape=ellipse]
240 [label="26:CtTypeAccessImpl@CoverageDataFileHandler" shape=ellipse]
241 [label="26:CtPackageReferenceImpl@" shape=ellipse]
242 [label="26:CtTypeReferenceImpl@CoverageDataFileHandler" shape=ellipse]
243 [label="26:CtPackageReferenceImpl@" shape=ellipse]
244 [label="26:CtTypeReferenceImpl@ProjectData" shape=ellipse]
245 [label="26:CtPackageReferenceImpl@" shape=ellipse]
246 [label="26:CtTypeReferenceImpl@File" shape=ellipse]
247 [label="26:CtExecutableReferenceImpl@saveCoverageData(ProjectData,File)" shape=ellipse]
248 [label="26:CtPackageReferenceImpl@" shape=ellipse]
249 [label="26:CtTypeReferenceImpl@ProjectData" shape=ellipse]
250 [label="26:CtLocalVariableReferenceImpl@datafileProjectData" shape=ellipse]
251 [label="26:CtVariableReadImpl@datafileProjectData" shape=ellipse]
252 [label="26:CtPackageReferenceImpl@" shape=ellipse]
253 [label="26:CtTypeReferenceImpl@File" shape=ellipse]
254 [label="26:CtLocalVariableReferenceImpl@dataFile" shape=ellipse]
255 [label="26:CtVariableReadImpl@dataFile" shape=ellipse]
256 [label="26:CtInvocationImpl@CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile)" shape=ellipse]
257 [label="26:CtVirtualElement@saveCoverageData" shape=ellipse]
258 [label="19:CtBlockImpl@\{
    ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
    if (datafileProjectData == null) \{
        datafileProjectData = projectDataToSave;
    \} else \{
        datafileProjectData.merge(projectDataToSave);
    \}
    CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
\}" shape=ellipse]
259 [label="19:CtIfImpl@if (fileLocker.lock()) \{
    ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
    if (datafileProjectData == null) \{
        datafileProjectData = projectDataToSave;
    \} else \{
        datafileProjectData.merge(projectDataToSave);
    \}
    CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
\}" shape=ellipse]
260 [label="18:CtBlockImpl@\{
    if (fileLocker.lock()) \{
        ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
        if (datafileProjectData == null) \{
            datafileProjectData = projectDataToSave;
        \} else \{
            datafileProjectData.merge(projectDataToSave);
        \}
        CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
    \}
\}" shape=ellipse]
261 [label="29:CtPackageReferenceImpl@" shape=ellipse]
262 [label="29:CtTypeReferenceImpl@FileLocker" shape=ellipse]
263 [label="29:CtLocalVariableReferenceImpl@fileLocker" shape=ellipse]
264 [label="29:CtVariableReadImpl@fileLocker" shape=ellipse]
265 [label="29:CtPackageReferenceImpl@" shape=ellipse]
266 [label="29:CtTypeReferenceImpl@FileLocker" shape=ellipse]
267 [label="29:CtExecutableReferenceImpl@release()" shape=ellipse]
268 [label="29:CtInvocationImpl@fileLocker.release()" shape=ellipse]
269 [label="29:CtVirtualElement@release" shape=ellipse]
270 [label="28:CtBlockImpl@\{
    fileLocker.release();
\}" shape=ellipse]
271 [label="18:CtTryImpl@try \{
    if (fileLocker.lock()) \{
        ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
        if (datafileProjectData == null) \{
            datafileProjectData = projectDataToSave;
        \} else \{
            datafileProjectData.merge(projectDataToSave);
        \}
        CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
    \}
\} finally \{
    fileLocker.release();
\}" shape=ellipse]
272 [label="16:CtBlockImpl@\{
    FileLocker fileLocker = new FileLocker(dataFile);
    try \{
        if (fileLocker.lock()) \{
            ProjectData datafileProjectData = loadCoverageDataFromDatafile(dataFile);
            if (datafileProjectData == null) \{
                datafileProjectData = projectDataToSave;
            \} else \{
                datafileProjectData.merge(projectDataToSave);
            \}
            CoverageDataFileHandler.saveCoverageData(datafileProjectData, dataFile);
        \}
    \} finally \{
        fileLocker.release();
    \}
\}" shape=ellipse]
273 [label="16:CtSynchronizedImpl@synchronized(dataFile.getPath().intern()) \{


\}" shape=ellipse]
274 [label="16:Move@MOVE" shape=ellipse]
275 [label="17:Move@MOVE" shape=ellipse]
2 -> 3 [label="AST"];
4 -> 5 [label="AST"];
7 -> 6 [label="AST"];
7 -> 2 [label="AST"];
7 -> 4 [label="AST"];
8 -> 9 [label="AST"];
11 -> 12 [label="AST"];
13 -> 11 [label="AST"];
14 -> 10 [label="AST"];
14 -> 13 [label="AST"];
14 -> 8 [label="AST"];
15 -> 16 [label="AST"];
15 -> 107 [label="Define-Use"];
15 -> 117 [label="Define-Use"];
15 -> 218 [label="Define-Use"];
15 -> 218 [label="Data Dep"];
15 -> 218 [label="Control Dep"];
15 -> 233 [label="Define-Use"];
15 -> 233 [label="Data Dep"];
15 -> 233 [label="Control Dep"];
17 -> 18 [label="AST"];
19 -> 17 [label="AST"];
19 -> 15 [label="Data Dep"];
20 -> 15 [label="AST"];
20 -> 19 [label="AST"];
21 -> 22 [label="AST"];
23 -> 21 [label="AST"];
24 -> 25 [label="AST"];
24 -> 26 [label="AST"];
27 -> 24 [label="AST"];
28 -> 23 [label="AST"];
28 -> 27 [label="AST"];
29 -> 20 [label="AST"];
29 -> 28 [label="AST"];
30 -> 31 [label="AST"];
33 -> 34 [label="AST"];
35 -> 33 [label="AST"];
36 -> 32 [label="AST"];
36 -> 35 [label="AST"];
36 -> 30 [label="AST"];
37 -> 36 [label="AST"];
38 -> 29 [label="AST"];
38 -> 37 [label="AST"];
39 -> 40 [label="AST"];
39 -> 41 [label="AST"];
39 -> 42 [label="AST"];
44 -> 45 [label="AST"];
46 -> 47 [label="AST"];
48 -> 43 [label="AST"];
48 -> 44 [label="AST"];
48 -> 39 [label="AST"];
48 -> 46 [label="AST"];
49 -> 48 [label="AST"];
51 -> 52 [label="AST"];
53 -> 50 [label="AST"];
53 -> 51 [label="AST"];
53 -> 54 [label="Control Dep"];
55 -> 53 [label="AST"];
55 -> 54 [label="AST"];
56 -> 49 [label="AST"];
56 -> 55 [label="AST"];
57 -> 58 [label="AST"];
59 -> 60 [label="AST"];
59 -> 61 [label="AST"];
63 -> 64 [label="AST"];
65 -> 62 [label="AST"];
65 -> 63 [label="AST"];
65 -> 59 [label="AST"];
66 -> 73 [label="Define-Use"];
66 -> 95 [label="Define-Use"];
66 -> 131 [label="Define-Use"];
67 -> 66 [label="AST"];
67 -> 57 [label="AST"];
67 -> 65 [label="AST"];
68 -> 69 [label="AST"];
70 -> 71 [label="AST"];
70 -> 72 [label="AST"];
73 -> 74 [label="AST"];
73 -> 76 [label="Data Dep"];
75 -> 70 [label="AST"];
75 -> 73 [label="AST"];
76 -> 82 [label="Define-Use"];
76 -> 140 [label="Define-Use"];
77 -> 76 [label="AST"];
77 -> 68 [label="AST"];
77 -> 75 [label="AST"];
77 -> 274 [label="Action"];
78 -> 79 [label="AST"];
78 -> 80 [label="AST"];
82 -> 83 [label="AST"];
84 -> 81 [label="AST"];
84 -> 82 [label="AST"];
84 -> 78 [label="AST"];
84 -> 134 [label="Control Dep"];
84 -> 99 [label="Control Dep"];
84 -> 97 [label="Control Dep"];
84 -> 87 [label="Control Dep"];
84 -> 93 [label="Control Dep"];
84 -> 91 [label="Control Dep"];
84 -> 95 [label="Control Dep"];
84 -> 121 [label="Control Dep"];
84 -> 104 [label="Control Dep"];
84 -> 100 [label="Control Dep"];
84 -> 102 [label="Control Dep"];
84 -> 133 [label="Control Dep"];
84 -> 122 [label="Control Dep"];
84 -> 127 [label="Control Dep"];
84 -> 129 [label="Control Dep"];
84 -> 131 [label="Control Dep"];
84 -> 190 [label="Control Dep"];
84 -> 191 [label="Control Dep"];
84 -> 195 [label="Control Dep"];
84 -> 199 [label="Control Dep"];
84 -> 200 [label="Control Dep"];
84 -> 202 [label="Control Dep"];
84 -> 207 [label="Control Dep"];
84 -> 209 [label="Control Dep"];
84 -> 210 [label="Control Dep"];
84 -> 237 [label="Control Dep"];
84 -> 240 [label="Control Dep"];
84 -> 247 [label="Control Dep"];
84 -> 251 [label="Control Dep"];
84 -> 255 [label="Control Dep"];
84 -> 256 [label="Control Dep"];
84 -> 258 [label="Control Dep"];
85 -> 86 [label="AST"];
87 -> 88 [label="AST"];
87 -> 89 [label="AST"];
91 -> 92 [label="AST"];
93 -> 94 [label="AST"];
93 -> 91 [label="AST"];
93 -> 98 [label="Data Dep"];
95 -> 96 [label="AST"];
95 -> 98 [label="Data Dep"];
97 -> 90 [label="AST"];
97 -> 93 [label="AST"];
97 -> 87 [label="AST"];
97 -> 95 [label="AST"];
98 -> 100 [label="Define-Use"];
98 -> 115 [label="Define-Use"];
98 -> 129 [label="Define-Use"];
99 -> 98 [label="AST"];
99 -> 85 [label="AST"];
99 -> 97 [label="AST"];
100 -> 101 [label="AST"];
102 -> 103 [label="AST"];
104 -> 100 [label="AST"];
104 -> 102 [label="AST"];
104 -> 110 [label="Control Dep"];
104 -> 109 [label="Control Dep"];
104 -> 105 [label="Control Dep"];
104 -> 107 [label="Control Dep"];
104 -> 120 [label="Control Dep"];
104 -> 119 [label="Control Dep"];
104 -> 111 [label="Control Dep"];
104 -> 115 [label="Control Dep"];
104 -> 117 [label="Control Dep"];
104 -> 214 [label="Control Dep"];
104 -> 218 [label="Control Dep"];
104 -> 219 [label="Control Dep"];
104 -> 220 [label="Control Dep"];
104 -> 224 [label="Control Dep"];
104 -> 229 [label="Control Dep"];
104 -> 233 [label="Control Dep"];
104 -> 234 [label="Control Dep"];
104 -> 236 [label="Control Dep"];
105 -> 106 [label="AST"];
105 -> 115 [label="Define-Use"];
105 -> 129 [label="Define-Use"];
105 -> 224 [label="Define-Use"];
105 -> 224 [label="Data Dep"];
105 -> 224 [label="Control Dep"];
105 -> 251 [label="Define-Use"];
105 -> 251 [label="Data Dep"];
105 -> 251 [label="Control Dep"];
106 -> 115 [label="Define-Use"];
106 -> 129 [label="Define-Use"];
106 -> 224 [label="Define-Use"];
106 -> 224 [label="Data Dep"];
106 -> 224 [label="Control Dep"];
106 -> 251 [label="Define-Use"];
106 -> 251 [label="Data Dep"];
106 -> 251 [label="Control Dep"];
107 -> 108 [label="AST"];
107 -> 105 [label="Data Dep"];
109 -> 105 [label="AST"];
109 -> 107 [label="AST"];
110 -> 109 [label="AST"];
111 -> 112 [label="AST"];
111 -> 113 [label="AST"];
115 -> 116 [label="AST"];
117 -> 118 [label="AST"];
119 -> 114 [label="AST"];
119 -> 115 [label="AST"];
119 -> 111 [label="AST"];
119 -> 117 [label="AST"];
120 -> 119 [label="AST"];
121 -> 104 [label="AST"];
121 -> 110 [label="AST"];
121 -> 120 [label="AST"];
122 -> 123 [label="AST"];
122 -> 124 [label="AST"];
122 -> 125 [label="AST"];
127 -> 128 [label="AST"];
129 -> 130 [label="AST"];
131 -> 132 [label="AST"];
133 -> 126 [label="AST"];
133 -> 127 [label="AST"];
133 -> 122 [label="AST"];
133 -> 129 [label="AST"];
133 -> 131 [label="AST"];
134 -> 99 [label="AST"];
134 -> 121 [label="AST"];
134 -> 133 [label="AST"];
135 -> 84 [label="AST"];
135 -> 134 [label="AST"];
136 -> 135 [label="AST"];
137 -> 138 [label="AST"];
140 -> 141 [label="AST"];
142 -> 139 [label="AST"];
142 -> 140 [label="AST"];
142 -> 137 [label="AST"];
143 -> 142 [label="AST"];
144 -> 136 [label="AST"];
144 -> 143 [label="AST"];
144 -> 275 [label="Action"];
145 -> 7 [label="AST"];
145 -> 14 [label="AST"];
145 -> 38 [label="AST"];
145 -> 56 [label="AST"];
145 -> 67 [label="AST"];
145 -> 77 [label="AST"];
145 -> 144 [label="AST"];
145 -> 147 [label="Action"];
146 -> 1 [label="AST"];
146 -> 0 [label="AST"];
146 -> 145 [label="AST"];
147 -> 273 [label="Action"];
149 -> 148 [label="AST"];
150 -> 149 [label="AST"];
151 -> 150 [label="AST"];
153 -> 152 [label="AST"];
154 -> 153 [label="AST"];
155 -> 156 [label="AST"];
155 -> 151 [label="AST"];
155 -> 154 [label="AST"];
158 -> 159 [label="AST"];
158 -> 155 [label="AST"];
158 -> 157 [label="AST"];
158 -> 272 [label="Control Dep"];
158 -> 172 [label="Control Dep"];
158 -> 171 [label="Control Dep"];
158 -> 166 [label="Control Dep"];
158 -> 170 [label="Control Dep"];
158 -> 271 [label="Control Dep"];
158 -> 260 [label="Control Dep"];
158 -> 259 [label="Control Dep"];
158 -> 182 [label="Control Dep"];
158 -> 181 [label="Control Dep"];
158 -> 177 [label="Control Dep"];
158 -> 270 [label="Control Dep"];
158 -> 268 [label="Control Dep"];
158 -> 267 [label="Control Dep"];
158 -> 264 [label="Control Dep"];
158 -> 77 [label="Control Dep"];
158 -> 75 [label="Control Dep"];
158 -> 70 [label="Control Dep"];
158 -> 73 [label="Control Dep"];
158 -> 144 [label="Control Dep"];
158 -> 136 [label="Control Dep"];
158 -> 135 [label="Control Dep"];
158 -> 84 [label="Control Dep"];
158 -> 78 [label="Control Dep"];
158 -> 82 [label="Control Dep"];
158 -> 143 [label="Control Dep"];
158 -> 142 [label="Control Dep"];
158 -> 137 [label="Control Dep"];
158 -> 140 [label="Control Dep"];
161 -> 160 [label="AST"];
163 -> 162 [label="AST"];
165 -> 164 [label="AST"];
166 -> 163 [label="AST"];
166 -> 165 [label="AST"];
168 -> 167 [label="AST"];
169 -> 168 [label="AST"];
170 -> 169 [label="AST"];
170 -> 173 [label="Data Dep"];
171 -> 166 [label="AST"];
171 -> 170 [label="AST"];
172 -> 173 [label="AST"];
172 -> 161 [label="AST"];
172 -> 171 [label="AST"];
173 -> 177 [label="Define-Use"];
173 -> 264 [label="Define-Use"];
173 -> 82 [label="Define-Use"];
173 -> 82 [label="Data Dep"];
173 -> 82 [label="Control Dep"];
173 -> 140 [label="Define-Use"];
173 -> 140 [label="Data Dep"];
173 -> 140 [label="Control Dep"];
175 -> 174 [label="AST"];
176 -> 175 [label="AST"];
177 -> 176 [label="AST"];
179 -> 178 [label="AST"];
181 -> 179 [label="AST"];
181 -> 180 [label="AST"];
182 -> 183 [label="AST"];
182 -> 177 [label="AST"];
182 -> 181 [label="AST"];
182 -> 258 [label="Control Dep"];
182 -> 202 [label="Control Dep"];
182 -> 200 [label="Control Dep"];
182 -> 195 [label="Control Dep"];
182 -> 191 [label="Control Dep"];
182 -> 190 [label="Control Dep"];
182 -> 199 [label="Control Dep"];
182 -> 237 [label="Control Dep"];
182 -> 210 [label="Control Dep"];
182 -> 207 [label="Control Dep"];
182 -> 209 [label="Control Dep"];
182 -> 256 [label="Control Dep"];
182 -> 247 [label="Control Dep"];
182 -> 240 [label="Control Dep"];
182 -> 251 [label="Control Dep"];
182 -> 255 [label="Control Dep"];
182 -> 134 [label="Control Dep"];
182 -> 99 [label="Control Dep"];
182 -> 97 [label="Control Dep"];
182 -> 87 [label="Control Dep"];
182 -> 93 [label="Control Dep"];
182 -> 91 [label="Control Dep"];
182 -> 95 [label="Control Dep"];
182 -> 121 [label="Control Dep"];
182 -> 104 [label="Control Dep"];
182 -> 100 [label="Control Dep"];
182 -> 102 [label="Control Dep"];
182 -> 133 [label="Control Dep"];
182 -> 122 [label="Control Dep"];
182 -> 127 [label="Control Dep"];
182 -> 129 [label="Control Dep"];
182 -> 131 [label="Control Dep"];
185 -> 184 [label="AST"];
187 -> 186 [label="AST"];
189 -> 188 [label="AST"];
190 -> 189 [label="AST"];
191 -> 187 [label="AST"];
191 -> 190 [label="AST"];
191 -> 203 [label="Data Dep"];
193 -> 192 [label="AST"];
195 -> 193 [label="AST"];
195 -> 194 [label="AST"];
197 -> 196 [label="AST"];
198 -> 197 [label="AST"];
199 -> 198 [label="AST"];
199 -> 203 [label="Data Dep"];
200 -> 201 [label="AST"];
200 -> 191 [label="AST"];
200 -> 195 [label="AST"];
200 -> 199 [label="AST"];
202 -> 203 [label="AST"];
202 -> 185 [label="AST"];
202 -> 200 [label="AST"];
203 -> 207 [label="Define-Use"];
203 -> 224 [label="Define-Use"];
203 -> 251 [label="Define-Use"];
203 -> 100 [label="Define-Use"];
203 -> 100 [label="Data Dep"];
203 -> 100 [label="Control Dep"];
203 -> 115 [label="Define-Use"];
203 -> 115 [label="Data Dep"];
203 -> 115 [label="Control Dep"];
203 -> 129 [label="Define-Use"];
203 -> 129 [label="Data Dep"];
203 -> 129 [label="Control Dep"];
205 -> 204 [label="AST"];
206 -> 205 [label="AST"];
207 -> 206 [label="AST"];
209 -> 208 [label="AST"];
210 -> 207 [label="AST"];
210 -> 209 [label="AST"];
210 -> 220 [label="Control Dep"];
210 -> 219 [label="Control Dep"];
210 -> 214 [label="Control Dep"];
210 -> 218 [label="Control Dep"];
210 -> 236 [label="Control Dep"];
210 -> 234 [label="Control Dep"];
210 -> 229 [label="Control Dep"];
210 -> 224 [label="Control Dep"];
210 -> 233 [label="Control Dep"];
210 -> 110 [label="Control Dep"];
210 -> 109 [label="Control Dep"];
210 -> 105 [label="Control Dep"];
210 -> 107 [label="Control Dep"];
210 -> 120 [label="Control Dep"];
210 -> 119 [label="Control Dep"];
210 -> 111 [label="Control Dep"];
210 -> 115 [label="Control Dep"];
210 -> 117 [label="Control Dep"];
212 -> 211 [label="AST"];
213 -> 224 [label="Define-Use"];
213 -> 251 [label="Define-Use"];
213 -> 212 [label="AST"];
213 -> 115 [label="Define-Use"];
213 -> 115 [label="Data Dep"];
213 -> 115 [label="Control Dep"];
213 -> 129 [label="Define-Use"];
213 -> 129 [label="Data Dep"];
213 -> 129 [label="Control Dep"];
214 -> 213 [label="AST"];
214 -> 224 [label="Define-Use"];
214 -> 251 [label="Define-Use"];
214 -> 115 [label="Define-Use"];
214 -> 115 [label="Data Dep"];
214 -> 115 [label="Control Dep"];
214 -> 129 [label="Define-Use"];
214 -> 129 [label="Data Dep"];
214 -> 129 [label="Control Dep"];
216 -> 215 [label="AST"];
217 -> 216 [label="AST"];
218 -> 217 [label="AST"];
218 -> 214 [label="Data Dep"];
218 -> 105 [label="Data Dep"];
218 -> 105 [label="Control Dep"];
219 -> 214 [label="AST"];
219 -> 218 [label="AST"];
220 -> 219 [label="AST"];
222 -> 221 [label="AST"];
223 -> 222 [label="AST"];
224 -> 223 [label="AST"];
226 -> 225 [label="AST"];
228 -> 227 [label="AST"];
229 -> 226 [label="AST"];
229 -> 228 [label="AST"];
231 -> 230 [label="AST"];
232 -> 231 [label="AST"];
233 -> 232 [label="AST"];
234 -> 235 [label="AST"];
234 -> 224 [label="AST"];
234 -> 229 [label="AST"];
234 -> 233 [label="AST"];
236 -> 234 [label="AST"];
237 -> 210 [label="AST"];
237 -> 220 [label="AST"];
237 -> 236 [label="AST"];
239 -> 238 [label="AST"];
240 -> 239 [label="AST"];
242 -> 241 [label="AST"];
244 -> 243 [label="AST"];
246 -> 245 [label="AST"];
247 -> 242 [label="AST"];
247 -> 244 [label="AST"];
247 -> 246 [label="AST"];
249 -> 248 [label="AST"];
250 -> 249 [label="AST"];
251 -> 250 [label="AST"];
253 -> 252 [label="AST"];
254 -> 253 [label="AST"];
255 -> 254 [label="AST"];
256 -> 257 [label="AST"];
256 -> 240 [label="AST"];
256 -> 247 [label="AST"];
256 -> 251 [label="AST"];
256 -> 255 [label="AST"];
258 -> 202 [label="AST"];
258 -> 237 [label="AST"];
258 -> 256 [label="AST"];
259 -> 182 [label="AST"];
259 -> 258 [label="AST"];
260 -> 259 [label="AST"];
262 -> 261 [label="AST"];
263 -> 262 [label="AST"];
264 -> 263 [label="AST"];
266 -> 265 [label="AST"];
267 -> 266 [label="AST"];
268 -> 269 [label="AST"];
268 -> 264 [label="AST"];
268 -> 267 [label="AST"];
270 -> 268 [label="AST"];
271 -> 260 [label="AST"];
271 -> 270 [label="AST"];
272 -> 172 [label="AST"];
272 -> 271 [label="AST"];
273 -> 158 [label="AST"];
273 -> 272 [label="AST"];
274 -> 273 [label="Action"];
275 -> 273 [label="Action"];
}