digraph "Pattern" {
0 [label="isValidSourceLineNumber#?,int#3:INSERT
hasBranch#?,int#3:INSERT" shape=ellipse]
1 [label="isValidSourceLineNumber#?,int#2:\{
    return children.containsKey(new Integer(lineNumber));
\}
hasBranch#?,int#2:\{
    return branches.containsKey(new Integer(lineNumber));
\}" shape=ellipse]
2 [label="isValidSourceLineNumber#?,int#2:public boolean isValidSourceLineNumber(int lineNumber) \{
    return children.containsKey(new Integer(lineNumber));
\}
hasBranch#?,int#2:public boolean hasBranch(int lineNumber) \{
    return branches.containsKey(new Integer(lineNumber));
\}" shape=ellipse]
3 [label="isValidSourceLineNumber#?,int#2:isValidSourceLineNumber
hasBranch#?,int#2:hasBranch" shape=ellipse]
4 [label="isValidSourceLineNumber#?,int#2:boolean
hasBranch#?,int#2:boolean" shape=ellipse]
5 [label="isValidSourceLineNumber#?,int#2:int lineNumber
hasBranch#?,int#2:int lineNumber" shape=ellipse]
6 [label="isValidSourceLineNumber#?,int#3:return children.containsKey(new Integer(lineNumber))
hasBranch#?,int#3:return branches.containsKey(new Integer(lineNumber))" shape=ellipse]
7 [label="isValidSourceLineNumber#?,int#3:children.containsKey(new Integer(lineNumber))
hasBranch#?,int#3:branches.containsKey(new Integer(lineNumber))" shape=ellipse]
8 [label="isValidSourceLineNumber#?,int#3:MOVE
hasBranch#?,int#3:MOVE" shape=ellipse]
9 [label="isValidSourceLineNumber#?,int#4:try \{

\} finally \{
    lock.unlock();
\}
hasBranch#?,int#4:try \{

\} finally \{
    lock.unlock();
\}" shape=ellipse]
10 [label="isValidSourceLineNumber#?,int#4:\{
    return children.containsKey(Integer.valueOf(lineNumber));
\}
hasBranch#?,int#4:\{
    return branches.containsKey(Integer.valueOf(lineNumber));
\}" shape=ellipse]
11 [label="isValidSourceLineNumber#?,int#5:return children.containsKey(Integer.valueOf(lineNumber))
hasBranch#?,int#5:return branches.containsKey(Integer.valueOf(lineNumber))" shape=ellipse]
12 [label="isValidSourceLineNumber#?,int#5:children.containsKey(Integer.valueOf(lineNumber))
hasBranch#?,int#5:branches.containsKey(Integer.valueOf(lineNumber))" shape=ellipse]
13 [label="isValidSourceLineNumber#?,int#5:containsKey
hasBranch#?,int#5:containsKey" shape=ellipse]
14 [label="isValidSourceLineNumber#?,int#5:children
hasBranch#?,int#5:branches" shape=ellipse]
15 [label="isValidSourceLineNumber#?,int#5:children
hasBranch#?,int#5:branches" shape=ellipse]
16 [label="isValidSourceLineNumber#?,int#5:PlaceHold
hasBranch#?,int#5:PlaceHold" shape=ellipse]
17 [label="isValidSourceLineNumber#?,int#5:
hasBranch#?,int#5:" shape=ellipse]
18 [label="isValidSourceLineNumber#?,int#5:containsKey(java.lang.Integer)
hasBranch#?,int#5:containsKey(java.lang.Integer)" shape=ellipse]
19 [label="isValidSourceLineNumber#?,int#5:children
hasBranch#?,int#5:branches" shape=ellipse]
20 [label="isValidSourceLineNumber#?,int#5:
hasBranch#?,int#5:" shape=ellipse]
21 [label="isValidSourceLineNumber#?,int#5:boolean
hasBranch#?,int#5:boolean" shape=ellipse]
22 [label="isValidSourceLineNumber#?,int#5:Integer
hasBranch#?,int#5:Integer" shape=ellipse]
23 [label="isValidSourceLineNumber#?,int#5:java.lang
hasBranch#?,int#5:java.lang" shape=ellipse]
24 [label="isValidSourceLineNumber#?,int#5:java.lang.Integer.valueOf()
hasBranch#?,int#5:java.lang.Integer.valueOf()" shape=ellipse]
25 [label="isValidSourceLineNumber#?,int#5:valueOf
hasBranch#?,int#5:valueOf" shape=ellipse]
26 [label="isValidSourceLineNumber#?,int#5:Integer
hasBranch#?,int#5:Integer" shape=ellipse]
27 [label="isValidSourceLineNumber#?,int#5:Integer
hasBranch#?,int#5:Integer" shape=ellipse]
28 [label="isValidSourceLineNumber#?,int#5:java.lang
hasBranch#?,int#5:java.lang" shape=ellipse]
29 [label="isValidSourceLineNumber#?,int#5:valueOf(int)
hasBranch#?,int#5:valueOf(int)" shape=ellipse]
30 [label="isValidSourceLineNumber#?,int#5:Integer
hasBranch#?,int#5:Integer" shape=ellipse]
31 [label="isValidSourceLineNumber#?,int#5:java.lang
hasBranch#?,int#5:java.lang" shape=ellipse]
32 [label="isValidSourceLineNumber#?,int#5:Integer
hasBranch#?,int#5:Integer" shape=ellipse]
33 [label="isValidSourceLineNumber#?,int#5:java.lang
hasBranch#?,int#5:java.lang" shape=ellipse]
34 [label="isValidSourceLineNumber#?,int#5:int
hasBranch#?,int#5:int" shape=ellipse]
35 [label="isValidSourceLineNumber#?,int#5:lineNumber
hasBranch#?,int#5:lineNumber" shape=ellipse]
36 [label="isValidSourceLineNumber#?,int#5:lineNumber
hasBranch#?,int#5:lineNumber" shape=ellipse]
37 [label="isValidSourceLineNumber#?,int#5:int
hasBranch#?,int#5:int" shape=ellipse]
38 [label="isValidSourceLineNumber#?,int#6:\{
    lock.unlock();
\}
hasBranch#?,int#6:\{
    lock.unlock();
\}" shape=ellipse]
39 [label="isValidSourceLineNumber#?,int#7:lock.unlock()
hasBranch#?,int#7:lock.unlock()" shape=ellipse]
40 [label="isValidSourceLineNumber#?,int#7:unlock
hasBranch#?,int#7:unlock" shape=ellipse]
41 [label="isValidSourceLineNumber#?,int#7:lock
hasBranch#?,int#7:lock" shape=ellipse]
42 [label="isValidSourceLineNumber#?,int#7:lock
hasBranch#?,int#7:lock" shape=ellipse]
43 [label="isValidSourceLineNumber#?,int#7:PlaceHold
hasBranch#?,int#7:PlaceHold" shape=ellipse]
44 [label="isValidSourceLineNumber#?,int#7:
hasBranch#?,int#7:" shape=ellipse]
45 [label="isValidSourceLineNumber#?,int#7:unlock()
hasBranch#?,int#7:unlock()" shape=ellipse]
46 [label="isValidSourceLineNumber#?,int#7:lock
hasBranch#?,int#7:lock" shape=ellipse]
47 [label="isValidSourceLineNumber#?,int#7:
hasBranch#?,int#7:" shape=ellipse]
48 [label="isValidSourceLineNumber#?,int#4:INSERT
hasBranch#?,int#4:INSERT" shape=ellipse]
49 [label="isValidSourceLineNumber#?,int#3:lock.lock()
hasBranch#?,int#3:lock.lock()" shape=ellipse]
50 [label="isValidSourceLineNumber#?,int#3:lock
hasBranch#?,int#3:lock" shape=ellipse]
51 [label="isValidSourceLineNumber#?,int#3:lock
hasBranch#?,int#3:lock" shape=ellipse]
52 [label="isValidSourceLineNumber#?,int#3:lock
hasBranch#?,int#3:lock" shape=ellipse]
53 [label="isValidSourceLineNumber#?,int#3:PlaceHold
hasBranch#?,int#3:PlaceHold" shape=ellipse]
54 [label="isValidSourceLineNumber#?,int#3:
hasBranch#?,int#3:" shape=ellipse]
55 [label="isValidSourceLineNumber#?,int#3:lock()
hasBranch#?,int#3:lock()" shape=ellipse]
56 [label="isValidSourceLineNumber#?,int#3:lock
hasBranch#?,int#3:lock" shape=ellipse]
57 [label="isValidSourceLineNumber#?,int#3:
hasBranch#?,int#3:" shape=ellipse]
0 -> 49 [label="Action:2"];
1 -> 0 [label="Action:2"];
1 -> 6 [label="AST:2"];
1 -> 48 [label="Action:2"];
2 -> 1 [label="AST:2"];
2 -> 3 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
6 -> 7 [label="AST:2"];
6 -> 8 [label="Action:2"];
8 -> 9 [label="Action:2"];
9 -> 10 [label="AST:2"];
9 -> 38 [label="AST:2"];
10 -> 11 [label="AST:2"];
11 -> 12 [label="AST:2"];
12 -> 13 [label="AST:2"];
12 -> 14 [label="AST:2"];
12 -> 18 [label="AST:2"];
12 -> 24 [label="AST:2"];
14 -> 15 [label="AST:2"];
15 -> 16 [label="AST:2"];
16 -> 17 [label="AST:2"];
18 -> 19 [label="AST:2"];
18 -> 21 [label="AST:2"];
18 -> 22 [label="AST:2"];
19 -> 20 [label="AST:2"];
22 -> 23 [label="AST:2"];
24 -> 25 [label="AST:2"];
24 -> 26 [label="AST:2"];
24 -> 29 [label="AST:2"];
24 -> 35 [label="AST:2"];
26 -> 27 [label="AST:2"];
27 -> 28 [label="AST:2"];
29 -> 30 [label="AST:2"];
29 -> 32 [label="AST:2"];
29 -> 34 [label="AST:2"];
30 -> 31 [label="AST:2"];
32 -> 33 [label="AST:2"];
35 -> 36 [label="AST:2"];
36 -> 37 [label="AST:2"];
38 -> 39 [label="AST:2"];
39 -> 40 [label="AST:2"];
39 -> 41 [label="AST:2"];
39 -> 45 [label="AST:2"];
41 -> 42 [label="AST:2"];
42 -> 43 [label="AST:2"];
43 -> 44 [label="AST:2"];
45 -> 46 [label="AST:2"];
46 -> 47 [label="AST:2"];
48 -> 9 [label="Action:2"];
49 -> 50 [label="AST:2"];
49 -> 51 [label="AST:2"];
49 -> 55 [label="AST:2"];
51 -> 52 [label="AST:2"];
52 -> 53 [label="AST:2"];
53 -> 54 [label="AST:2"];
55 -> 56 [label="AST:2"];
56 -> 57 [label="AST:2"];
}