digraph "Pattern" {
0 [label="generateTableRowForPackage#?,PackageData#12:DELETE
generateTableRowForClass#?,ClassData,String,double#9:DELETE" shape=ellipse]
1 [label="generateTableRowForPackage#?,PackageData#12:if (packageData.getNumberOfValidBranches() > 0) \{
    branchCoverage = packageData.getBranchCoverageRate();
\}
generateTableRowForClass#?,ClassData,String,double#9:if (classData.getNumberOfValidBranches() > 0) \{
    branchCoverage = classData.getBranchCoverageRate();
\}" shape=ellipse]
2 [label="generateTableRowForPackage#?,PackageData#2:\{
    StringBuffer ret = new StringBuffer();
    String url1 = (\"frame-summary-\" + packageData.getName()) + \".html\";
    String url2 = (\"frame-sourcefiles-\" + packageData.getName()) + \".html\";
    double lineCoverage = -1;
    double branchCoverage = -1;
    double ccn = complexity.getCCNForPackage(packageData);
    if (packageData.getNumberOfValidLines() > 0) \{
        lineCoverage = packageData.getLineCoverageRate();
    \}
    if (packageData.getNumberOfValidBranches() > 0) \{
        branchCoverage = packageData.getBranchCoverageRate();
    \}
    ret.append(\"  <tr>\");
    ret.append((((((\"<td class=\\"text\\"><a href=\\"\" + url1) + \"\\" onclick=\'parent.sourceFileList.location.href=\\"\") + url2) + \"\\"\'>\") + generatePackageName(packageData)) + \"</a></td>\");
    ret.append((\"<td class=\\"value\\">\" + packageData.getNumberOfChildren()) + \"</td>\");
    ret.append(generateTableColumnsFromData(lineCoverage, packageData.getNumberOfValidLines(), branchCoverage, packageData.getNumberOfValidBranches(), ccn));
    ret.append(\"</tr>\");
    return ret.toString();
\}
generateTableRowForClass#?,ClassData,String,double#2:\{
    StringBuffer ret = new StringBuffer();
    double lineCoverage = -1;
    double branchCoverage = -1;
    if (classData.getNumberOfValidLines() > 0) \{
        lineCoverage = classData.getLineCoverageRate();
    \}
    if (classData.getNumberOfValidBranches() > 0) \{
        branchCoverage = classData.getBranchCoverageRate();
    \}
    ret.append(\"  <tr>\");
    ret.append((((\"<td class=\\"text\\"><a href=\\"\" + sourceFileName) + \".html\\">\") + classData.getBaseName()) + \"</a></td>\");
    ret.append(generateTableColumnsFromData(lineCoverage, classData.getNumberOfValidLines(), branchCoverage, classData.getNumberOfValidBranches(), ccn));
    ret.append(\"</tr>\n\");
    return ret.toString();
\}" shape=ellipse]
3 [label="generateTableRowForPackage#?,PackageData#2:private String generateTableRowForPackage(PackageData packageData) \{
    StringBuffer ret = new StringBuffer();
    String url1 = (\"frame-summary-\" + packageData.getName()) + \".html\";
    String url2 = (\"frame-sourcefiles-\" + packageData.getName()) + \".html\";
    double lineCoverage = -1;
    double branchCoverage = -1;
    double ccn = complexity.getCCNForPackage(packageData);
    if (packageData.getNumberOfValidLines() > 0) \{
        lineCoverage = packageData.getLineCoverageRate();
    \}
    if (packageData.getNumberOfValidBranches() > 0) \{
        branchCoverage = packageData.getBranchCoverageRate();
    \}
    ret.append(\"  <tr>\");
    ret.append((((((\"<td class=\\"text\\"><a href=\\"\" + url1) + \"\\" onclick=\'parent.sourceFileList.location.href=\\"\") + url2) + \"\\"\'>\") + generatePackageName(packageData)) + \"</a></td>\");
    ret.append((\"<td class=\\"value\\">\" + packageData.getNumberOfChildren()) + \"</td>\");
    ret.append(generateTableColumnsFromData(lineCoverage, packageData.getNumberOfValidLines(), branchCoverage, packageData.getNumberOfValidBranches(), ccn));
    ret.append(\"</tr>\");
    return ret.toString();
\}
generateTableRowForClass#?,ClassData,String,double#2:private String generateTableRowForClass(ClassData classData, String sourceFileName, double ccn) \{
    StringBuffer ret = new StringBuffer();
    double lineCoverage = -1;
    double branchCoverage = -1;
    if (classData.getNumberOfValidLines() > 0) \{
        lineCoverage = classData.getLineCoverageRate();
    \}
    if (classData.getNumberOfValidBranches() > 0) \{
        branchCoverage = classData.getBranchCoverageRate();
    \}
    ret.append(\"  <tr>\");
    ret.append((((\"<td class=\\"text\\"><a href=\\"\" + sourceFileName) + \".html\\">\") + classData.getBaseName()) + \"</a></td>\");
    ret.append(generateTableColumnsFromData(lineCoverage, classData.getNumberOfValidLines(), branchCoverage, classData.getNumberOfValidBranches(), ccn));
    ret.append(\"</tr>\n\");
    return ret.toString();
\}" shape=ellipse]
4 [label="generateTableRowForPackage#?,PackageData#3:StringBuffer ret = new StringBuffer()
generateTableRowForClass#?,ClassData,String,double#3:StringBuffer ret = new StringBuffer()" shape=ellipse]
5 [label="generateTableRowForPackage#?,PackageData#4:String url1 = (\"frame-summary-\" + packageData.getName()) + \".html\"
generateTableRowForClass#?,ClassData,String,double#6:if (classData.getNumberOfValidLines() > 0) \{
    lineCoverage = classData.getLineCoverageRate();
\}" shape=ellipse]
6 [label="generateTableRowForPackage#?,PackageData#5:String url2 = (\"frame-sourcefiles-\" + packageData.getName()) + \".html\"
generateTableRowForClass#?,ClassData,String,double#25:return ret.toString()" shape=ellipse]
7 [label="generateTableRowForPackage#?,PackageData#6:double lineCoverage = -1
generateTableRowForClass#?,ClassData,String,double#4:double lineCoverage = -1" shape=ellipse]
8 [label="generateTableRowForPackage#?,PackageData#7:double branchCoverage = -1
generateTableRowForClass#?,ClassData,String,double#5:double branchCoverage = -1" shape=ellipse]
9 [label="generateTableRowForPackage#?,PackageData#8:double ccn = complexity.getCCNForPackage(packageData)" shape=ellipse]
10 [label="generateTableRowForPackage#?,PackageData#9:if (packageData.getNumberOfValidLines() > 0) \{
    lineCoverage = packageData.getLineCoverageRate();
\}" shape=ellipse]
11 [label="generateTableRowForPackage#?,PackageData#15:ret.append(\"  <tr>\")
generateTableRowForClass#?,ClassData,String,double#12:ret.append(\"  <tr>\")" shape=ellipse]
12 [label="generateTableRowForPackage#?,PackageData#16:ret.append((((((\"<td class=\\"text\\"><a href=\\"\" + url1) + \"\\" onclick=\'parent.sourceFileList.location.href=\\"\") + url2) + \"\\"\'>\") + generatePackageName(packageData)) + \"</a></td>\")
generateTableRowForClass#?,ClassData,String,double#13:ret.append((((\"<td class=\\"text\\"><a href=\\"\" + sourceFileName) + \".html\\">\") + classData.getBaseName()) + \"</a></td>\")" shape=ellipse]
13 [label="generateTableRowForPackage#?,PackageData#23:ret.append((\"<td class=\\"value\\">\" + packageData.getNumberOfChildren()) + \"</td>\")
generateTableRowForClass#?,ClassData,String,double#17:ret.append(generateTableColumnsFromData(lineCoverage, classData.getNumberOfValidLines(), branchCoverage, classData.getNumberOfValidBranches(), ccn))" shape=ellipse]
14 [label="generateTableRowForPackage#?,PackageData#24:ret.append(generateTableColumnsFromData(lineCoverage, packageData.getNumberOfValidLines(), branchCoverage, packageData.getNumberOfValidBranches(), ccn))
generateTableRowForClass#?,ClassData,String,double#24:ret.append(\"</tr>\n\")" shape=ellipse]
15 [label="generateTableRowForPackage#?,PackageData#25:generateTableColumnsFromData(lineCoverage, packageData.getNumberOfValidLines(), branchCoverage, packageData.getNumberOfValidBranches(), ccn)" shape=ellipse]
16 [label="generateTableRowForPackage#?,PackageData#25:generateTableColumnsFromData
generateTableRowForClass#?,ClassData,String,double#18:generateTableColumnsFromData" shape=ellipse]
17 [label="generateTableRowForPackage#?,PackageData#25:
generateTableRowForClass#?,ClassData,String,double#18:" shape=ellipse]
18 [label="generateTableRowForPackage#?,PackageData#25:PlaceHold
generateTableRowForClass#?,ClassData,String,double#18:PlaceHold" shape=ellipse]
19 [label="generateTableRowForPackage#?,PackageData#25:PlaceHold
generateTableRowForClass#?,ClassData,String,double#18:PlaceHold" shape=ellipse]
20 [label="generateTableRowForPackage#?,PackageData#25:PlaceHold
generateTableRowForClass#?,ClassData,String,double#18:PlaceHold" shape=ellipse]
21 [label="generateTableRowForPackage#?,PackageData#25:generateTableColumnsFromData(double,<unknown>,double,<unknown>,double)
generateTableRowForClass#?,ClassData,String,double#18:generateTableColumnsFromData(double,<unknown>,double,<unknown>,double)" shape=ellipse]
22 [label="generateTableRowForPackage#?,PackageData#25:double
generateTableRowForClass#?,ClassData,String,double#18:double" shape=ellipse]
23 [label="generateTableRowForPackage#?,PackageData#25:null
generateTableRowForClass#?,ClassData,String,double#18:null" shape=ellipse]
24 [label="generateTableRowForPackage#?,PackageData#25:double
generateTableRowForClass#?,ClassData,String,double#18:double" shape=ellipse]
25 [label="generateTableRowForPackage#?,PackageData#25:null
generateTableRowForClass#?,ClassData,String,double#18:null" shape=ellipse]
26 [label="generateTableRowForPackage#?,PackageData#25:double
generateTableRowForClass#?,ClassData,String,double#18:double" shape=ellipse]
27 [label="generateTableRowForPackage#?,PackageData#26:lineCoverage
generateTableRowForClass#?,ClassData,String,double#19:lineCoverage" shape=ellipse]
28 [label="generateTableRowForPackage#?,PackageData#26:lineCoverage
generateTableRowForClass#?,ClassData,String,double#19:lineCoverage" shape=ellipse]
29 [label="generateTableRowForPackage#?,PackageData#26:DELETE
generateTableRowForClass#?,ClassData,String,double#19:DELETE" shape=ellipse]
30 [label="generateTableRowForPackage#?,PackageData#27:packageData.getNumberOfValidLines()
generateTableRowForClass#?,ClassData,String,double#20:classData.getNumberOfValidLines()" shape=ellipse]
31 [label="generateTableRowForPackage#?,PackageData#27:getNumberOfValidLines
generateTableRowForClass#?,ClassData,String,double#20:getNumberOfValidLines" shape=ellipse]
32 [label="generateTableRowForPackage#?,PackageData#27:packageData
generateTableRowForClass#?,ClassData,String,double#20:classData" shape=ellipse]
33 [label="generateTableRowForPackage#?,PackageData#27:packageData
generateTableRowForClass#?,ClassData,String,double#20:classData" shape=ellipse]
34 [label="generateTableRowForPackage#?,PackageData#27:MOVE
generateTableRowForClass#?,ClassData,String,double#20:MOVE" shape=ellipse]
35 [label="generateTableRowForPackage#?,PackageData#27:getNumberOfValidLines()
generateTableRowForClass#?,ClassData,String,double#20:getNumberOfValidLines()" shape=ellipse]
36 [label="generateTableRowForPackage#?,PackageData#27:PackageData
generateTableRowForClass#?,ClassData,String,double#20:ClassData" shape=ellipse]
37 [label="generateTableRowForPackage#?,PackageData#27:DELETE
generateTableRowForClass#?,ClassData,String,double#20:DELETE" shape=ellipse]
38 [label="generateTableRowForPackage#?,PackageData#28:branchCoverage
generateTableRowForClass#?,ClassData,String,double#21:branchCoverage" shape=ellipse]
39 [label="generateTableRowForPackage#?,PackageData#28:branchCoverage
generateTableRowForClass#?,ClassData,String,double#21:branchCoverage" shape=ellipse]
40 [label="generateTableRowForPackage#?,PackageData#28:DELETE
generateTableRowForClass#?,ClassData,String,double#21:DELETE" shape=ellipse]
41 [label="generateTableRowForPackage#?,PackageData#29:packageData.getNumberOfValidBranches()
generateTableRowForClass#?,ClassData,String,double#22:classData.getNumberOfValidBranches()" shape=ellipse]
42 [label="generateTableRowForPackage#?,PackageData#29:getNumberOfValidBranches
generateTableRowForClass#?,ClassData,String,double#22:getNumberOfValidBranches" shape=ellipse]
43 [label="generateTableRowForPackage#?,PackageData#29:packageData
generateTableRowForClass#?,ClassData,String,double#22:classData" shape=ellipse]
44 [label="generateTableRowForPackage#?,PackageData#29:packageData
generateTableRowForClass#?,ClassData,String,double#22:classData" shape=ellipse]
45 [label="generateTableRowForPackage#?,PackageData#29:getNumberOfValidBranches()
generateTableRowForClass#?,ClassData,String,double#22:getNumberOfValidBranches()" shape=ellipse]
46 [label="generateTableRowForPackage#?,PackageData#29:PackageData
generateTableRowForClass#?,ClassData,String,double#22:ClassData" shape=ellipse]
47 [label="generateTableRowForPackage#?,PackageData#29:DELETE
generateTableRowForClass#?,ClassData,String,double#22:DELETE" shape=ellipse]
48 [label="generateTableRowForPackage#?,PackageData#30:ccn
generateTableRowForClass#?,ClassData,String,double#23:ccn" shape=ellipse]
49 [label="generateTableRowForPackage#?,PackageData#30:ccn
generateTableRowForClass#?,ClassData,String,double#23:ccn" shape=ellipse]
50 [label="generateTableRowForPackage#?,PackageData#31:ret.append(\"</tr>\")" shape=ellipse]
51 [label="generateTableRowForPackage#?,PackageData#32:return ret.toString()" shape=ellipse]
52 [label="generateTableRowForPackage#?,PackageData#12:packageData.getNumberOfValidBranches() > 0
generateTableRowForClass#?,ClassData,String,double#9:classData.getNumberOfValidBranches() > 0" shape=ellipse]
53 [label="generateTableRowForPackage#?,PackageData#12:packageData.getNumberOfValidBranches()
generateTableRowForClass#?,ClassData,String,double#9:classData.getNumberOfValidBranches()" shape=ellipse]
54 [label="generateTableRowForPackage#?,PackageData#12:0
generateTableRowForClass#?,ClassData,String,double#9:0" shape=ellipse]
55 [label="generateTableRowForPackage#?,PackageData#12:\{
    branchCoverage = packageData.getBranchCoverageRate();
\}
generateTableRowForClass#?,ClassData,String,double#9:\{
    branchCoverage = classData.getBranchCoverageRate();
\}" shape=ellipse]
56 [label="generateTableRowForPackage#?,PackageData#13:branchCoverage = packageData.getBranchCoverageRate()
generateTableRowForClass#?,ClassData,String,double#10:branchCoverage = classData.getBranchCoverageRate()" shape=ellipse]
57 [label="generateTableRowForPackage#?,PackageData#13:branchCoverage
generateTableRowForClass#?,ClassData,String,double#10:branchCoverage" shape=ellipse]
58 [label="generateTableRowForPackage#?,PackageData#13:packageData.getBranchCoverageRate()
generateTableRowForClass#?,ClassData,String,double#10:classData.getBranchCoverageRate()" shape=ellipse]
59 [label="generateTableRowForPackage#?,PackageData#13:getBranchCoverageRate()
generateTableRowForClass#?,ClassData,String,double#10:getBranchCoverageRate()" shape=ellipse]
60 [label="generateTableRowForPackage#?,PackageData#13:packageData
generateTableRowForClass#?,ClassData,String,double#10:classData" shape=ellipse]
61 [label="generateTableRowForClass#?,ClassData,String,double#18:generateTableColumnsFromData(lineCoverage, classData.getNumberOfValidLines(), branchCoverage, classData.getNumberOfValidBranches(), ccn)" shape=ellipse]
1 -> 0 [label="Action:2"];
1 -> 52 [label="AST:2"];
1 -> 55 [label="AST:2"];
2 -> 1 [label="AST:2"];
2 -> 4 [label="AST:2"];
2 -> 5 [label="AST:2"];
2 -> 6 [label="AST:2"];
2 -> 7 [label="AST:2"];
2 -> 8 [label="AST:2"];
2 -> 9 [label="AST:1"];
2 -> 10 [label="AST:1"];
2 -> 11 [label="AST:2"];
2 -> 12 [label="AST:2"];
2 -> 13 [label="AST:2"];
2 -> 14 [label="AST:2"];
2 -> 50 [label="AST:1"];
2 -> 51 [label="AST:1"];
3 -> 2 [label="AST:2"];
13 -> 61 [label="AST:1"];
14 -> 15 [label="AST:1"];
15 -> 16 [label="AST:1"];
15 -> 17 [label="AST:1"];
15 -> 21 [label="AST:1"];
15 -> 27 [label="AST:1"];
15 -> 30 [label="AST:1"];
15 -> 38 [label="AST:1"];
15 -> 41 [label="AST:1"];
15 -> 48 [label="AST:1"];
17 -> 18 [label="AST:2"];
17 -> 19 [label="AST:2"];
19 -> 20 [label="AST:2"];
21 -> 22 [label="AST:2"];
21 -> 23 [label="AST:2"];
21 -> 24 [label="AST:2"];
21 -> 25 [label="AST:2"];
21 -> 26 [label="AST:2"];
27 -> 28 [label="AST:2"];
27 -> 29 [label="Action:2"];
30 -> 31 [label="AST:2"];
30 -> 32 [label="AST:2"];
30 -> 35 [label="AST:2"];
30 -> 37 [label="Action:2"];
32 -> 33 [label="AST:2"];
32 -> 34 [label="Action:2"];
34 -> 15 [label="Action:1"];
34 -> 61 [label="Action:1"];
35 -> 36 [label="AST:2"];
38 -> 39 [label="AST:2"];
38 -> 40 [label="Action:2"];
41 -> 42 [label="AST:2"];
41 -> 43 [label="AST:2"];
41 -> 45 [label="AST:2"];
41 -> 47 [label="Action:2"];
43 -> 44 [label="AST:2"];
45 -> 46 [label="AST:2"];
48 -> 49 [label="AST:2"];
52 -> 53 [label="AST:2"];
52 -> 54 [label="AST:2"];
52 -> 55 [label="Control Dep:2"];
52 -> 56 [label="Control Dep:2"];
52 -> 57 [label="Control Dep:2"];
52 -> 58 [label="Control Dep:2"];
52 -> 59 [label="Control Dep:2"];
52 -> 60 [label="Control Dep:2"];
55 -> 56 [label="AST:2"];
56 -> 57 [label="AST:2"];
56 -> 58 [label="AST:2"];
57 -> 38 [label="Define Use:2"];
58 -> 60 [label="AST:2"];
58 -> 59 [label="AST:2"];
60 -> 57 [label="Data Dep:2"];
61 -> 16 [label="AST:1"];
61 -> 17 [label="AST:1"];
61 -> 21 [label="AST:1"];
61 -> 27 [label="AST:1"];
61 -> 30 [label="AST:1"];
61 -> 38 [label="AST:1"];
61 -> 41 [label="AST:1"];
61 -> 48 [label="AST:1"];
}