digraph "testBranch#?" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="2:CtVirtualElement@testBranch" shape=ellipse]
2 [label="3:CtExecutableReferenceImpl@assertFalse(<unknown>)" shape=ellipse]
3 [label="3:CtTypeReferenceImpl@null" shape=ellipse]
4 [label="3:CtVirtualElement@assertFalse" shape=ellipse]
5 [label="3:CtTypeAccessImpl@PlaceHold" shape=ellipse]
6 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
7 [label="3:CtThisAccessImpl@" shape=ellipse]
8 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
9 [label="3:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
10 [label="3:CtTypeReferenceImpl@a" shape=ellipse]
11 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
12 [label="3:CtVirtualElement@hasBranch" shape=ellipse]
13 [label="3:CtFieldReferenceImpl@a" shape=ellipse]
14 [label="3:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
15 [label="3:CtFieldReadImpl@a" shape=ellipse]
16 [label="3:CtLiteralImpl@2" shape=ellipse]
17 [label="3:CtTypeReferenceImpl@int" shape=ellipse]
18 [label="3:CtInvocationImpl@a.hasBranch(2)" shape=ellipse]
19 [label="3:CtInvocationImpl@assertFalse(a.hasBranch(2))" shape=ellipse]
20 [label="4:CtExecutableReferenceImpl@addLineJump(int,int)" shape=ellipse]
21 [label="4:CtTypeReferenceImpl@a" shape=ellipse]
22 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
23 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
24 [label="4:CtVirtualElement@addLineJump" shape=ellipse]
25 [label="4:CtFieldReferenceImpl@a" shape=ellipse]
26 [label="4:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
27 [label="4:CtFieldReadImpl@a" shape=ellipse]
28 [label="4:CtLiteralImpl@2" shape=ellipse]
29 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
30 [label="4:CtLiteralImpl@0" shape=ellipse]
31 [label="4:CtTypeReferenceImpl@int" shape=ellipse]
32 [label="4:CtInvocationImpl@a.addLineJump(2, 0)" shape=ellipse]
33 [label="5:CtExecutableReferenceImpl@assertFalse(<unknown>)" shape=ellipse]
34 [label="5:CtTypeReferenceImpl@null" shape=ellipse]
35 [label="5:CtVirtualElement@assertFalse" shape=ellipse]
36 [label="5:CtTypeAccessImpl@PlaceHold" shape=ellipse]
37 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
38 [label="5:CtThisAccessImpl@" shape=ellipse]
39 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
40 [label="5:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
41 [label="5:CtTypeReferenceImpl@a" shape=ellipse]
42 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
43 [label="5:CtVirtualElement@hasBranch" shape=ellipse]
44 [label="5:CtFieldReferenceImpl@a" shape=ellipse]
45 [label="5:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
46 [label="5:CtFieldReadImpl@a" shape=ellipse]
47 [label="5:CtLiteralImpl@2" shape=ellipse]
48 [label="5:CtTypeReferenceImpl@int" shape=ellipse]
49 [label="5:CtInvocationImpl@a.hasBranch(2)" shape=ellipse]
50 [label="5:CtInvocationImpl@assertFalse(a.hasBranch(2))" shape=ellipse]
51 [label="6:CtExecutableReferenceImpl@assertFalse(<unknown>)" shape=ellipse]
52 [label="6:CtTypeReferenceImpl@null" shape=ellipse]
53 [label="6:CtVirtualElement@assertFalse" shape=ellipse]
54 [label="6:CtTypeAccessImpl@PlaceHold" shape=ellipse]
55 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
56 [label="6:CtThisAccessImpl@" shape=ellipse]
57 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
58 [label="6:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
59 [label="6:CtTypeReferenceImpl@b" shape=ellipse]
60 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
61 [label="6:CtVirtualElement@hasBranch" shape=ellipse]
62 [label="6:CtFieldReferenceImpl@b" shape=ellipse]
63 [label="6:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
64 [label="6:CtFieldReadImpl@b" shape=ellipse]
65 [label="6:CtLiteralImpl@2" shape=ellipse]
66 [label="6:CtTypeReferenceImpl@int" shape=ellipse]
67 [label="6:CtInvocationImpl@b.hasBranch(2)" shape=ellipse]
68 [label="6:CtInvocationImpl@assertFalse(b.hasBranch(2))" shape=ellipse]
69 [label="7:CtExecutableReferenceImpl@addLineJump(int,int)" shape=ellipse]
70 [label="7:CtTypeReferenceImpl@b" shape=ellipse]
71 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
72 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
73 [label="7:CtVirtualElement@addLineJump" shape=ellipse]
74 [label="7:CtFieldReferenceImpl@b" shape=ellipse]
75 [label="7:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
76 [label="7:CtFieldReadImpl@b" shape=ellipse]
77 [label="7:CtLiteralImpl@2" shape=ellipse]
78 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
79 [label="7:CtLiteralImpl@0" shape=ellipse]
80 [label="7:CtTypeReferenceImpl@int" shape=ellipse]
81 [label="7:CtInvocationImpl@b.addLineJump(2, 0)" shape=ellipse]
82 [label="8:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
83 [label="8:CtTypeReferenceImpl@null" shape=ellipse]
84 [label="8:CtVirtualElement@assertTrue" shape=ellipse]
85 [label="8:CtTypeAccessImpl@PlaceHold" shape=ellipse]
86 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
87 [label="8:CtThisAccessImpl@" shape=ellipse]
88 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
89 [label="8:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
90 [label="8:CtTypeReferenceImpl@b" shape=ellipse]
91 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
92 [label="8:CtVirtualElement@hasBranch" shape=ellipse]
93 [label="8:CtFieldReferenceImpl@b" shape=ellipse]
94 [label="8:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
95 [label="8:CtFieldReadImpl@b" shape=ellipse]
96 [label="8:CtLiteralImpl@2" shape=ellipse]
97 [label="8:CtTypeReferenceImpl@int" shape=ellipse]
98 [label="8:CtInvocationImpl@b.hasBranch(2)" shape=ellipse]
99 [label="8:CtInvocationImpl@assertTrue(b.hasBranch(2))" shape=ellipse]
100 [label="9:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
101 [label="9:CtTypeReferenceImpl@null" shape=ellipse]
102 [label="9:CtVirtualElement@assertTrue" shape=ellipse]
103 [label="9:CtTypeAccessImpl@PlaceHold" shape=ellipse]
104 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
105 [label="9:CtThisAccessImpl@" shape=ellipse]
106 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
107 [label="9:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
108 [label="9:CtTypeReferenceImpl@b" shape=ellipse]
109 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
110 [label="9:CtVirtualElement@hasBranch" shape=ellipse]
111 [label="9:CtFieldReferenceImpl@b" shape=ellipse]
112 [label="9:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
113 [label="9:CtFieldReadImpl@b" shape=ellipse]
114 [label="9:CtLiteralImpl@2" shape=ellipse]
115 [label="9:CtTypeReferenceImpl@int" shape=ellipse]
116 [label="9:CtInvocationImpl@b.hasBranch(2)" shape=ellipse]
117 [label="9:CtInvocationImpl@assertTrue(b.hasBranch(2))" shape=ellipse]
118 [label="10:CtExecutableReferenceImpl@addLineJump(int,int)" shape=ellipse]
119 [label="10:CtTypeReferenceImpl@b" shape=ellipse]
120 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
121 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
122 [label="10:CtVirtualElement@addLineJump" shape=ellipse]
123 [label="10:CtFieldReferenceImpl@b" shape=ellipse]
124 [label="10:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
125 [label="10:CtFieldReadImpl@b" shape=ellipse]
126 [label="10:CtLiteralImpl@2" shape=ellipse]
127 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
128 [label="10:CtLiteralImpl@1" shape=ellipse]
129 [label="10:CtTypeReferenceImpl@int" shape=ellipse]
130 [label="10:CtInvocationImpl@b.addLineJump(2, 1)" shape=ellipse]
131 [label="11:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
132 [label="11:CtTypeReferenceImpl@null" shape=ellipse]
133 [label="11:CtVirtualElement@assertTrue" shape=ellipse]
134 [label="11:CtTypeAccessImpl@PlaceHold" shape=ellipse]
135 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
136 [label="11:CtThisAccessImpl@" shape=ellipse]
137 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
138 [label="11:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
139 [label="11:CtTypeReferenceImpl@b" shape=ellipse]
140 [label="11:CtTypeReferenceImpl@int" shape=ellipse]
141 [label="11:CtVirtualElement@hasBranch" shape=ellipse]
142 [label="11:CtFieldReferenceImpl@b" shape=ellipse]
143 [label="11:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
144 [label="11:CtFieldReadImpl@b" shape=ellipse]
145 [label="11:CtLiteralImpl@2" shape=ellipse]
146 [label="11:CtTypeReferenceImpl@int" shape=ellipse]
147 [label="11:CtInvocationImpl@b.hasBranch(2)" shape=ellipse]
148 [label="11:CtInvocationImpl@assertTrue(b.hasBranch(2))" shape=ellipse]
149 [label="12:CtExecutableReferenceImpl@assertFalse(<unknown>)" shape=ellipse]
150 [label="12:CtTypeReferenceImpl@null" shape=ellipse]
151 [label="12:CtVirtualElement@assertFalse" shape=ellipse]
152 [label="12:CtTypeAccessImpl@PlaceHold" shape=ellipse]
153 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
154 [label="12:CtThisAccessImpl@" shape=ellipse]
155 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
156 [label="12:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
157 [label="12:CtTypeReferenceImpl@b" shape=ellipse]
158 [label="12:CtTypeReferenceImpl@int" shape=ellipse]
159 [label="12:CtVirtualElement@hasBranch" shape=ellipse]
160 [label="12:CtFieldReferenceImpl@b" shape=ellipse]
161 [label="12:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
162 [label="12:CtFieldReadImpl@b" shape=ellipse]
163 [label="12:CtLiteralImpl@4" shape=ellipse]
164 [label="12:CtTypeReferenceImpl@int" shape=ellipse]
165 [label="12:CtInvocationImpl@b.hasBranch(4)" shape=ellipse]
166 [label="12:CtInvocationImpl@assertFalse(b.hasBranch(4))" shape=ellipse]
167 [label="13:CtExecutableReferenceImpl@addLineSwitch(int,int,int,int)" shape=ellipse]
168 [label="13:CtTypeReferenceImpl@b" shape=ellipse]
169 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
170 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
171 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
172 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
173 [label="13:CtVirtualElement@addLineSwitch" shape=ellipse]
174 [label="13:CtFieldReferenceImpl@b" shape=ellipse]
175 [label="13:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
176 [label="13:CtFieldReadImpl@b" shape=ellipse]
177 [label="13:CtLiteralImpl@4" shape=ellipse]
178 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
179 [label="13:CtLiteralImpl@0" shape=ellipse]
180 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
181 [label="13:CtLiteralImpl@1" shape=ellipse]
182 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
183 [label="13:CtLiteralImpl@9" shape=ellipse]
184 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
185 [label="13:CtInvocationImpl@b.addLineSwitch(4, 0, 1, 9)" shape=ellipse]
186 [label="14:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
187 [label="14:CtTypeReferenceImpl@null" shape=ellipse]
188 [label="14:CtVirtualElement@assertTrue" shape=ellipse]
189 [label="14:CtTypeAccessImpl@PlaceHold" shape=ellipse]
190 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
191 [label="14:CtThisAccessImpl@" shape=ellipse]
192 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
193 [label="14:CtExecutableReferenceImpl@hasBranch(int)" shape=ellipse]
194 [label="14:CtTypeReferenceImpl@b" shape=ellipse]
195 [label="14:CtTypeReferenceImpl@int" shape=ellipse]
196 [label="14:CtVirtualElement@hasBranch" shape=ellipse]
197 [label="14:CtFieldReferenceImpl@b" shape=ellipse]
198 [label="14:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
199 [label="14:CtFieldReadImpl@b" shape=ellipse]
200 [label="14:CtLiteralImpl@4" shape=ellipse]
201 [label="14:CtTypeReferenceImpl@int" shape=ellipse]
202 [label="14:CtInvocationImpl@b.hasBranch(4)" shape=ellipse]
203 [label="14:CtInvocationImpl@assertTrue(b.hasBranch(4))" shape=ellipse]
204 [label="15:CtTypeReferenceImpl@Collection" shape=ellipse]
205 [label="15:CtPackageReferenceImpl@" shape=ellipse]
206 [label="15:CtExecutableReferenceImpl@getBranches()" shape=ellipse]
207 [label="15:CtTypeReferenceImpl@b" shape=ellipse]
208 [label="15:CtTypeReferenceImpl@Collection" shape=ellipse]
209 [label="15:CtVirtualElement@getBranches" shape=ellipse]
210 [label="15:CtFieldReferenceImpl@b" shape=ellipse]
211 [label="15:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
212 [label="15:CtFieldReadImpl@b" shape=ellipse]
213 [label="15:CtInvocationImpl@b.getBranches()" shape=ellipse]
214 [label="15:CtVirtualElement@branches" shape=ellipse]
215 [label="15:CtLocalVariableImpl@Collection branches = b.getBranches()" shape=ellipse]
216 [label="16:CtExecutableReferenceImpl@assertEquals(int,<unknown>)" shape=ellipse]
217 [label="16:CtTypeReferenceImpl@int" shape=ellipse]
218 [label="16:CtTypeReferenceImpl@null" shape=ellipse]
219 [label="16:CtVirtualElement@assertEquals" shape=ellipse]
220 [label="16:CtTypeAccessImpl@PlaceHold" shape=ellipse]
221 [label="16:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
222 [label="16:CtThisAccessImpl@" shape=ellipse]
223 [label="16:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
224 [label="16:CtLiteralImpl@2" shape=ellipse]
225 [label="16:CtTypeReferenceImpl@int" shape=ellipse]
226 [label="16:CtExecutableReferenceImpl@size()" shape=ellipse]
227 [label="16:CtTypeReferenceImpl@Collection" shape=ellipse]
228 [label="16:CtVirtualElement@size" shape=ellipse]
229 [label="16:CtVariableReadImpl@branches" shape=ellipse]
230 [label="16:CtLocalVariableReferenceImpl@branches" shape=ellipse]
231 [label="16:CtInvocationImpl@branches.size()" shape=ellipse]
232 [label="16:CtInvocationImpl@assertEquals(2, branches.size())" shape=ellipse]
233 [label="17:CtExecutableReferenceImpl@assertEquals(int,<unknown>)" shape=ellipse]
234 [label="17:CtTypeReferenceImpl@int" shape=ellipse]
235 [label="17:CtTypeReferenceImpl@null" shape=ellipse]
236 [label="17:CtVirtualElement@assertEquals" shape=ellipse]
237 [label="17:CtTypeAccessImpl@PlaceHold" shape=ellipse]
238 [label="17:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
239 [label="17:CtThisAccessImpl@" shape=ellipse]
240 [label="17:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
241 [label="17:CtLiteralImpl@14" shape=ellipse]
242 [label="17:CtTypeReferenceImpl@int" shape=ellipse]
243 [label="17:CtExecutableReferenceImpl@getNumberOfValidBranches()" shape=ellipse]
244 [label="17:CtTypeReferenceImpl@b" shape=ellipse]
245 [label="17:CtVirtualElement@getNumberOfValidBranches" shape=ellipse]
246 [label="17:CtFieldReferenceImpl@b" shape=ellipse]
247 [label="17:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
248 [label="17:CtFieldReadImpl@b" shape=ellipse]
249 [label="17:CtInvocationImpl@b.getNumberOfValidBranches()" shape=ellipse]
250 [label="17:CtInvocationImpl@assertEquals(14, b.getNumberOfValidBranches())" shape=ellipse]
251 [label="18:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
252 [label="18:CtTypeReferenceImpl@null" shape=ellipse]
253 [label="18:CtVirtualElement@assertTrue" shape=ellipse]
254 [label="18:CtTypeAccessImpl@PlaceHold" shape=ellipse]
255 [label="18:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
256 [label="18:CtThisAccessImpl@" shape=ellipse]
257 [label="18:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
258 [label="18:CtExecutableReferenceImpl@contains(java.lang.Integer)" shape=ellipse]
259 [label="18:CtTypeReferenceImpl@Collection" shape=ellipse]
260 [label="18:CtTypeReferenceImpl@Integer" shape=ellipse]
261 [label="18:CtVirtualElement@contains" shape=ellipse]
262 [label="18:CtVariableReadImpl@branches" shape=ellipse]
263 [label="18:CtLocalVariableReferenceImpl@branches" shape=ellipse]
264 [label="18:CtExecutableReferenceImpl@java.lang.Integer(int)" shape=ellipse]
265 [label="18:CtTypeReferenceImpl@Integer" shape=ellipse]
266 [label="18:CtTypeReferenceImpl@Integer" shape=ellipse]
267 [label="18:CtTypeReferenceImpl@int" shape=ellipse]
268 [label="18:CtLiteralImpl@2" shape=ellipse]
269 [label="18:CtTypeReferenceImpl@int" shape=ellipse]
270 [label="18:CtConstructorCallImpl@new Integer(2)" shape=ellipse]
271 [label="18:CtInvocationImpl@branches.contains(new Integer(2))" shape=ellipse]
272 [label="18:CtInvocationImpl@assertTrue(branches.contains(new Integer(2)))" shape=ellipse]
273 [label="19:CtExecutableReferenceImpl@assertTrue(<unknown>)" shape=ellipse]
274 [label="19:CtTypeReferenceImpl@null" shape=ellipse]
275 [label="19:CtVirtualElement@assertTrue" shape=ellipse]
276 [label="19:CtTypeAccessImpl@PlaceHold" shape=ellipse]
277 [label="19:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
278 [label="19:CtThisAccessImpl@" shape=ellipse]
279 [label="19:CtTypeReferenceImpl@PlaceHold" shape=ellipse]
280 [label="19:CtExecutableReferenceImpl@contains(java.lang.Integer)" shape=ellipse]
281 [label="19:CtTypeReferenceImpl@Collection" shape=ellipse]
282 [label="19:CtTypeReferenceImpl@Integer" shape=ellipse]
283 [label="19:CtVirtualElement@contains" shape=ellipse]
284 [label="19:CtVariableReadImpl@branches" shape=ellipse]
285 [label="19:CtLocalVariableReferenceImpl@branches" shape=ellipse]
286 [label="19:CtExecutableReferenceImpl@java.lang.Integer(int)" shape=ellipse]
287 [label="19:CtTypeReferenceImpl@Integer" shape=ellipse]
288 [label="19:CtTypeReferenceImpl@Integer" shape=ellipse]
289 [label="19:CtTypeReferenceImpl@int" shape=ellipse]
290 [label="19:CtLiteralImpl@4" shape=ellipse]
291 [label="19:CtTypeReferenceImpl@int" shape=ellipse]
292 [label="19:CtConstructorCallImpl@new Integer(4)" shape=ellipse]
293 [label="19:CtInvocationImpl@branches.contains(new Integer(4))" shape=ellipse]
294 [label="19:CtInvocationImpl@assertTrue(branches.contains(new Integer(4)))" shape=ellipse]
295 [label="2:CtBlockImpl@\{
    assertFalse(a.hasBranch(2));
    a.addLineJump(2, 0);
    assertFalse(a.hasBranch(2));
    assertFalse(b.hasBranch(2));
    b.addLineJump(2, 0);
    assertTrue(b.hasBranch(2));
    assertTrue(b.hasBranch(2));
    b.addLineJump(2, 1);
    assertTrue(b.hasBranch(2));
    assertFalse(b.hasBranch(4));
    b.addLineSwitch(4, 0, 1, 9);
    assertTrue(b.hasBranch(4));
    Collection branches = b.getBranches();
    assertEquals(2, branches.size());
    assertEquals(14, b.getNumberOfValidBranches());
    assertTrue(branches.contains(new Integer(2)));
    assertTrue(branches.contains(new Integer(4)));
\}" shape=ellipse]
296 [label="2:CtMethodImpl@public void testBranch() \{
    assertFalse(a.hasBranch(2));
    a.addLineJump(2, 0);
    assertFalse(a.hasBranch(2));
    assertFalse(b.hasBranch(2));
    b.addLineJump(2, 0);
    assertTrue(b.hasBranch(2));
    assertTrue(b.hasBranch(2));
    b.addLineJump(2, 1);
    assertTrue(b.hasBranch(2));
    assertFalse(b.hasBranch(4));
    b.addLineSwitch(4, 0, 1, 9);
    assertTrue(b.hasBranch(4));
    Collection branches = b.getBranches();
    assertEquals(2, branches.size());
    assertEquals(14, b.getNumberOfValidBranches());
    assertTrue(branches.contains(new Integer(2)));
    assertTrue(branches.contains(new Integer(4)));
\}" shape=ellipse]
297 [label="13:Insert@INSERT" shape=ellipse]
298 [label="13:CtPackageReferenceImpl@java.lang" shape=ellipse]
299 [label="13:CtTypeReferenceImpl@Integer" shape=ellipse]
300 [label="13:CtTypeAccessImpl@Integer" shape=ellipse]
301 [label="13:CtPackageReferenceImpl@java.lang" shape=ellipse]
302 [label="13:CtTypeReferenceImpl@Integer" shape=ellipse]
303 [label="13:CtTypeReferenceImpl@int" shape=ellipse]
304 [label="13:CtFieldReferenceImpl@Integer.MAX_VALUE" shape=ellipse]
305 [label="13:CtFieldReadImpl@java.lang.Integer.MAX_VALUE" shape=ellipse]
2 -> 3 [label="AST"];
5 -> 6 [label="AST"];
7 -> 8 [label="AST"];
7 -> 5 [label="AST"];
9 -> 10 [label="AST"];
9 -> 11 [label="AST"];
13 -> 14 [label="AST"];
15 -> 13 [label="AST"];
16 -> 17 [label="AST"];
18 -> 12 [label="AST"];
18 -> 15 [label="AST"];
18 -> 9 [label="AST"];
18 -> 16 [label="AST"];
19 -> 4 [label="AST"];
19 -> 7 [label="AST"];
19 -> 2 [label="AST"];
19 -> 18 [label="AST"];
20 -> 21 [label="AST"];
20 -> 22 [label="AST"];
20 -> 23 [label="AST"];
25 -> 26 [label="AST"];
27 -> 25 [label="AST"];
28 -> 29 [label="AST"];
30 -> 31 [label="AST"];
32 -> 24 [label="AST"];
32 -> 27 [label="AST"];
32 -> 20 [label="AST"];
32 -> 28 [label="AST"];
32 -> 30 [label="AST"];
33 -> 34 [label="AST"];
36 -> 37 [label="AST"];
38 -> 39 [label="AST"];
38 -> 36 [label="AST"];
40 -> 41 [label="AST"];
40 -> 42 [label="AST"];
44 -> 45 [label="AST"];
46 -> 44 [label="AST"];
47 -> 48 [label="AST"];
49 -> 43 [label="AST"];
49 -> 46 [label="AST"];
49 -> 40 [label="AST"];
49 -> 47 [label="AST"];
50 -> 35 [label="AST"];
50 -> 38 [label="AST"];
50 -> 33 [label="AST"];
50 -> 49 [label="AST"];
51 -> 52 [label="AST"];
54 -> 55 [label="AST"];
56 -> 57 [label="AST"];
56 -> 54 [label="AST"];
58 -> 59 [label="AST"];
58 -> 60 [label="AST"];
62 -> 63 [label="AST"];
64 -> 62 [label="AST"];
65 -> 66 [label="AST"];
67 -> 61 [label="AST"];
67 -> 64 [label="AST"];
67 -> 58 [label="AST"];
67 -> 65 [label="AST"];
68 -> 53 [label="AST"];
68 -> 56 [label="AST"];
68 -> 51 [label="AST"];
68 -> 67 [label="AST"];
69 -> 70 [label="AST"];
69 -> 71 [label="AST"];
69 -> 72 [label="AST"];
74 -> 75 [label="AST"];
76 -> 74 [label="AST"];
77 -> 78 [label="AST"];
79 -> 80 [label="AST"];
81 -> 73 [label="AST"];
81 -> 76 [label="AST"];
81 -> 69 [label="AST"];
81 -> 77 [label="AST"];
81 -> 79 [label="AST"];
82 -> 83 [label="AST"];
85 -> 86 [label="AST"];
87 -> 88 [label="AST"];
87 -> 85 [label="AST"];
89 -> 90 [label="AST"];
89 -> 91 [label="AST"];
93 -> 94 [label="AST"];
95 -> 93 [label="AST"];
96 -> 97 [label="AST"];
98 -> 92 [label="AST"];
98 -> 95 [label="AST"];
98 -> 89 [label="AST"];
98 -> 96 [label="AST"];
99 -> 84 [label="AST"];
99 -> 87 [label="AST"];
99 -> 82 [label="AST"];
99 -> 98 [label="AST"];
100 -> 101 [label="AST"];
103 -> 104 [label="AST"];
105 -> 106 [label="AST"];
105 -> 103 [label="AST"];
107 -> 108 [label="AST"];
107 -> 109 [label="AST"];
111 -> 112 [label="AST"];
113 -> 111 [label="AST"];
114 -> 115 [label="AST"];
116 -> 110 [label="AST"];
116 -> 113 [label="AST"];
116 -> 107 [label="AST"];
116 -> 114 [label="AST"];
117 -> 102 [label="AST"];
117 -> 105 [label="AST"];
117 -> 100 [label="AST"];
117 -> 116 [label="AST"];
118 -> 119 [label="AST"];
118 -> 120 [label="AST"];
118 -> 121 [label="AST"];
123 -> 124 [label="AST"];
125 -> 123 [label="AST"];
126 -> 127 [label="AST"];
128 -> 129 [label="AST"];
130 -> 122 [label="AST"];
130 -> 125 [label="AST"];
130 -> 118 [label="AST"];
130 -> 126 [label="AST"];
130 -> 128 [label="AST"];
131 -> 132 [label="AST"];
134 -> 135 [label="AST"];
136 -> 137 [label="AST"];
136 -> 134 [label="AST"];
138 -> 139 [label="AST"];
138 -> 140 [label="AST"];
142 -> 143 [label="AST"];
144 -> 142 [label="AST"];
145 -> 146 [label="AST"];
147 -> 141 [label="AST"];
147 -> 144 [label="AST"];
147 -> 138 [label="AST"];
147 -> 145 [label="AST"];
148 -> 133 [label="AST"];
148 -> 136 [label="AST"];
148 -> 131 [label="AST"];
148 -> 147 [label="AST"];
149 -> 150 [label="AST"];
152 -> 153 [label="AST"];
154 -> 155 [label="AST"];
154 -> 152 [label="AST"];
156 -> 157 [label="AST"];
156 -> 158 [label="AST"];
160 -> 161 [label="AST"];
162 -> 160 [label="AST"];
163 -> 164 [label="AST"];
165 -> 159 [label="AST"];
165 -> 162 [label="AST"];
165 -> 156 [label="AST"];
165 -> 163 [label="AST"];
166 -> 151 [label="AST"];
166 -> 154 [label="AST"];
166 -> 149 [label="AST"];
166 -> 165 [label="AST"];
167 -> 168 [label="AST"];
167 -> 169 [label="AST"];
167 -> 170 [label="AST"];
167 -> 171 [label="AST"];
167 -> 172 [label="AST"];
174 -> 175 [label="AST"];
176 -> 174 [label="AST"];
177 -> 178 [label="AST"];
179 -> 180 [label="AST"];
181 -> 182 [label="AST"];
183 -> 184 [label="AST"];
185 -> 173 [label="AST"];
185 -> 176 [label="AST"];
185 -> 167 [label="AST"];
185 -> 177 [label="AST"];
185 -> 179 [label="AST"];
185 -> 181 [label="AST"];
185 -> 183 [label="AST"];
185 -> 297 [label="Action"];
186 -> 187 [label="AST"];
189 -> 190 [label="AST"];
191 -> 192 [label="AST"];
191 -> 189 [label="AST"];
193 -> 194 [label="AST"];
193 -> 195 [label="AST"];
197 -> 198 [label="AST"];
199 -> 197 [label="AST"];
200 -> 201 [label="AST"];
202 -> 196 [label="AST"];
202 -> 199 [label="AST"];
202 -> 193 [label="AST"];
202 -> 200 [label="AST"];
203 -> 188 [label="AST"];
203 -> 191 [label="AST"];
203 -> 186 [label="AST"];
203 -> 202 [label="AST"];
204 -> 205 [label="AST"];
206 -> 207 [label="AST"];
206 -> 208 [label="AST"];
210 -> 211 [label="AST"];
212 -> 210 [label="AST"];
212 -> 214 [label="Data Dep"];
213 -> 209 [label="AST"];
213 -> 212 [label="AST"];
213 -> 206 [label="AST"];
214 -> 229 [label="Define-Use"];
214 -> 262 [label="Define-Use"];
214 -> 284 [label="Define-Use"];
215 -> 214 [label="AST"];
215 -> 204 [label="AST"];
215 -> 213 [label="AST"];
216 -> 217 [label="AST"];
216 -> 218 [label="AST"];
220 -> 221 [label="AST"];
222 -> 223 [label="AST"];
222 -> 220 [label="AST"];
224 -> 225 [label="AST"];
226 -> 227 [label="AST"];
229 -> 230 [label="AST"];
231 -> 228 [label="AST"];
231 -> 229 [label="AST"];
231 -> 226 [label="AST"];
232 -> 219 [label="AST"];
232 -> 222 [label="AST"];
232 -> 216 [label="AST"];
232 -> 224 [label="AST"];
232 -> 231 [label="AST"];
233 -> 234 [label="AST"];
233 -> 235 [label="AST"];
237 -> 238 [label="AST"];
239 -> 240 [label="AST"];
239 -> 237 [label="AST"];
241 -> 242 [label="AST"];
243 -> 244 [label="AST"];
246 -> 247 [label="AST"];
248 -> 246 [label="AST"];
249 -> 245 [label="AST"];
249 -> 248 [label="AST"];
249 -> 243 [label="AST"];
250 -> 236 [label="AST"];
250 -> 239 [label="AST"];
250 -> 233 [label="AST"];
250 -> 241 [label="AST"];
250 -> 249 [label="AST"];
251 -> 252 [label="AST"];
254 -> 255 [label="AST"];
256 -> 257 [label="AST"];
256 -> 254 [label="AST"];
258 -> 259 [label="AST"];
258 -> 260 [label="AST"];
262 -> 263 [label="AST"];
264 -> 265 [label="AST"];
264 -> 266 [label="AST"];
264 -> 267 [label="AST"];
268 -> 269 [label="AST"];
270 -> 264 [label="AST"];
270 -> 268 [label="AST"];
271 -> 261 [label="AST"];
271 -> 262 [label="AST"];
271 -> 258 [label="AST"];
271 -> 270 [label="AST"];
272 -> 253 [label="AST"];
272 -> 256 [label="AST"];
272 -> 251 [label="AST"];
272 -> 271 [label="AST"];
273 -> 274 [label="AST"];
276 -> 277 [label="AST"];
278 -> 279 [label="AST"];
278 -> 276 [label="AST"];
280 -> 281 [label="AST"];
280 -> 282 [label="AST"];
284 -> 285 [label="AST"];
286 -> 287 [label="AST"];
286 -> 288 [label="AST"];
286 -> 289 [label="AST"];
290 -> 291 [label="AST"];
292 -> 286 [label="AST"];
292 -> 290 [label="AST"];
293 -> 283 [label="AST"];
293 -> 284 [label="AST"];
293 -> 280 [label="AST"];
293 -> 292 [label="AST"];
294 -> 275 [label="AST"];
294 -> 278 [label="AST"];
294 -> 273 [label="AST"];
294 -> 293 [label="AST"];
295 -> 19 [label="AST"];
295 -> 32 [label="AST"];
295 -> 50 [label="AST"];
295 -> 68 [label="AST"];
295 -> 81 [label="AST"];
295 -> 99 [label="AST"];
295 -> 117 [label="AST"];
295 -> 130 [label="AST"];
295 -> 148 [label="AST"];
295 -> 166 [label="AST"];
295 -> 185 [label="AST"];
295 -> 203 [label="AST"];
295 -> 215 [label="AST"];
295 -> 232 [label="AST"];
295 -> 250 [label="AST"];
295 -> 272 [label="AST"];
295 -> 294 [label="AST"];
296 -> 1 [label="AST"];
296 -> 0 [label="AST"];
296 -> 295 [label="AST"];
297 -> 305 [label="Action"];
299 -> 298 [label="AST"];
300 -> 299 [label="AST"];
302 -> 301 [label="AST"];
304 -> 302 [label="AST"];
304 -> 303 [label="AST"];
305 -> 300 [label="AST"];
305 -> 304 [label="AST"];
}