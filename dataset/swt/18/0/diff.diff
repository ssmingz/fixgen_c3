--- /Users/yumeng/PycharmProjects/c3/dataset/swt/18/0/before.java
+++ /Users/yumeng/PycharmProjects/c3/dataset/swt/18/0/after.java
@@ -4,1 +4,1 @@
-    if (x >= parent.getSize().x) {
+    if ((parent.items[parent.topTabIndex] != this) && ((x + width) > rightTabEdge)) {
@@ -7,59 +7,0 @@
-    if ((parent.items[parent.topTabIndex] != this) && ((x + width) >= rightTabEdge)) {
-      int x1 = x;
-      int y1 = y - 1;
-      int x2 = parent.getSize().x;
-      int y2 = y + height;
-      int[] shape = new int[] {x1, y1, x1, y2, x2, y2, x2, y1};
-      parent.drawBackground(gc, shape, false);
-      return;
-    }
-    int[] shape = null;
-    if (parent.indexOf(this) == parent.topTabIndex) {
-      if (this.parent.onBottom) {
-        int[] left = CTabFolder.BOTTOM_LEFT_CORNER;
-        shape = new int[left.length + 6];
-        int index = 0;
-        shape[index++] = x;
-        shape[index++] = y;
-        for (int i = 0; i < (left.length / 2); i++) {
-          shape[index++] = x + left[2 * i];
-          shape[index++] = (y + height) + left[(2 * i) + 1];
-        }
-        shape[index++] = x + width;
-        shape[index++] = y + height;
-        shape[index++] = x + width;
-        shape[index++] = y;
-      } else {
-        int[] left = CTabFolder.TOP_LEFT_CORNER;
-        shape = new int[left.length + 6];
-        int index = 0;
-        shape[index++] = x;
-        shape[index++] = y + height;
-        for (int i = 0; i < (left.length / 2); i++) {
-          shape[index++] = x + left[2 * i];
-          shape[index++] = y + left[(2 * i) + 1];
-        }
-        shape[index++] = x + width;
-        shape[index++] = y;
-        shape[index++] = x + width;
-        shape[index++] = y + height;
-      }
-      parent.drawBackground(gc, shape, false);
-      Region r = new Region();
-      r.add(new Rectangle(x, y, width, height));
-      r.subtract(shape);
-      gc.setBackground(parent.getParent().getBackground());
-      CTabFolder.fillRegion(gc, r);
-      r.dispose();
-    } else {
-      shape = new int[8];
-      shape[0] = x;
-      shape[1] = y;
-      shape[2] = x;
-      shape[3] = y + height;
-      shape[4] = x + width;
-      shape[5] = y + height;
-      shape[6] = x + width;
-      shape[7] = y;
-      parent.drawBackground(gc, shape, false);
-    }
