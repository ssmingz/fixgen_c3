--- /Users/yumeng/PycharmProjects/c3/dataset/swt/3371/1/before.java
+++ /Users/yumeng/PycharmProjects/c3/dataset/swt/3371/1/after.java
@@ -3,2 +3,2 @@
-    if ((object == null) || (!(object instanceof MyType[]))) {
-      return;
+    if ((!checkMyType(object)) || (!isSupportedType(transferData))) {
+      DND.error(ERROR_INVALID_DATA);
@@ -6,16 +6,10 @@
-    if (isSupportedType(transferData)) {
-      MyType[] myTypes = ((MyType[]) (object));
-      try {
-        ByteArrayOutputStream out = new ByteArrayOutputStream();
-        DataOutputStream writeOut = new DataOutputStream(out);
-        for (int i = 0, length = myTypes.length; i < length; i++) {
-          byte[] buffer = myTypes[i].fileName.getBytes();
-          writeOut.writeInt(buffer.length);
-          writeOut.write(buffer);
-          writeOut.writeLong(myTypes[i].fileLength);
-          writeOut.writeLong(myTypes[i].lastModified);
-        }
-        byte[] buffer = out.toByteArray();
-        writeOut.close();
-        super.javaToNative(buffer, transferData);
-      } catch (IOException e) {
+    MyType[] myTypes = ((MyType[]) (object));
+    try {
+      ByteArrayOutputStream out = new ByteArrayOutputStream();
+      DataOutputStream writeOut = new DataOutputStream(out);
+      for (int i = 0, length = myTypes.length; i < length; i++) {
+        byte[] buffer = myTypes[i].fileName.getBytes();
+        writeOut.writeInt(buffer.length);
+        writeOut.write(buffer);
+        writeOut.writeLong(myTypes[i].fileLength);
+        writeOut.writeLong(myTypes[i].lastModified);
@@ -23,0 +17,4 @@
+      byte[] buffer = out.toByteArray();
+      writeOut.close();
+      super.javaToNative(buffer, transferData);
+    } catch (IOException e) {
